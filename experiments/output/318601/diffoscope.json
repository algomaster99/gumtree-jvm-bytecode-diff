{"diffoscope-json-version": 1, "source1": "first/RExecClient.class", "source2": "second/RExecClient.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,186 +1,186 @@\n-  SHA-256 checksum adc23b1c4ce4bce8980477847a809434cdd1350c21654d8013c014b310a7324e\n+  SHA-256 checksum 5e166ba2039a405e72d95e0f00fa6ada4089b9e31d55a5d5298d7d4266175f92\n   Compiled from \"RExecClient.java\"\n public class org.apache.commons.net.bsd.RExecClient extends org.apache.commons.net.SocketClient\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/net/bsd/RExecClient\n-  super_class: #43                        // org/apache/commons/net/SocketClient\n+  this_class: #2                          // org/apache/commons/net/bsd/RExecClient\n+  super_class: #109                       // org/apache/commons/net/SocketClient\n   interfaces: 0, fields: 4, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #10.#79       // org/apache/commons/net/bsd/RExecClient._serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n-    #2 = Methodref          #10.#80       // org/apache/commons/net/bsd/RExecClient.getLocalAddress:()Ljava/net/InetAddress;\n-    #3 = Methodref          #81.#82       // javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n-    #4 = Fieldref           #10.#83       // org/apache/commons/net/bsd/RExecClient._output_:Ljava/io/OutputStream;\n-    #5 = Methodref          #60.#84       // java/net/ServerSocket.getLocalPort:()I\n-    #6 = Methodref          #85.#86       // java/lang/Integer.toString:(I)Ljava/lang/String;\n-    #7 = String             #87           // UTF-8\n-    #8 = Methodref          #88.#89       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-    #9 = Methodref          #90.#91       // java/io/OutputStream.write:([B)V\n-   #10 = Class              #92           // org/apache/commons/net/bsd/RExecClient\n-   #11 = Methodref          #90.#93       // java/io/OutputStream.write:(I)V\n-   #12 = Methodref          #90.#94       // java/io/OutputStream.flush:()V\n-   #13 = Methodref          #60.#95       // java/net/ServerSocket.accept:()Ljava/net/Socket;\n-   #14 = Methodref          #60.#96       // java/net/ServerSocket.close:()V\n-   #15 = Fieldref           #10.#97       // org/apache/commons/net/bsd/RExecClient.remoteVerificationEnabled:Z\n-   #16 = Methodref          #10.#98       // org/apache/commons/net/bsd/RExecClient.verifyRemote:(Ljava/net/Socket;)Z\n-   #17 = Methodref          #61.#96       // java/net/Socket.close:()V\n-   #18 = Class              #99           // java/io/IOException\n-   #19 = Class              #100          // java/lang/StringBuilder\n-   #20 = Methodref          #19.#101      // java/lang/StringBuilder.\"<init>\":()V\n-   #21 = String             #102          // Security violation: unexpected connection attempt by\n-   #22 = Methodref          #19.#103      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = Methodref          #61.#104      // java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n-   #24 = Methodref          #105.#106     // java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n-   #25 = Methodref          #19.#107      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #26 = Methodref          #18.#108      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Class              #109          // org/apache/commons/net/io/SocketInputStream\n-   #28 = Methodref          #61.#110      // java/net/Socket.getInputStream:()Ljava/io/InputStream;\n-   #29 = Methodref          #27.#111      // org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n-   #30 = Methodref          #43.#101      // org/apache/commons/net/SocketClient.\"<init>\":()V\n-   #31 = Fieldref           #10.#112      // org/apache/commons/net/bsd/RExecClient._errorStream_:Ljava/io/InputStream;\n-   #32 = Methodref          #10.#113      // org/apache/commons/net/bsd/RExecClient.setDefaultPort:(I)V\n-   #33 = Fieldref           #10.#114      // org/apache/commons/net/bsd/RExecClient._input_:Ljava/io/InputStream;\n-   #34 = Methodref          #10.#115      // org/apache/commons/net/bsd/RExecClient.createErrorStream:()Ljava/io/InputStream;\n-   #35 = Methodref          #10.#116      // org/apache/commons/net/bsd/RExecClient.getCharset:()Ljava/nio/charset/Charset;\n-   #36 = Methodref          #88.#117      // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #37 = Methodref          #118.#119     // java/io/InputStream.read:()I\n-   #38 = Methodref          #19.#120      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #39 = String             #121          // Server closed connection.\n-   #40 = Methodref          #10.#122      // org/apache/commons/net/bsd/RExecClient.rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n-   #41 = Methodref          #118.#96      // java/io/InputStream.close:()V\n-   #42 = Methodref          #43.#123      // org/apache/commons/net/SocketClient.disconnect:()V\n-   #43 = Class              #124          // org/apache/commons/net/SocketClient\n-   #44 = Utf8               NULL_CHAR\n-   #45 = Utf8               C\n-   #46 = Utf8               ConstantValue\n-   #47 = Integer            0\n-   #48 = Utf8               DEFAULT_PORT\n-   #49 = Utf8               I\n-   #50 = Integer            512\n-   #51 = Utf8               remoteVerificationEnabled\n-   #52 = Utf8               Z\n-   #53 = Utf8               _errorStream_\n-   #54 = Utf8               Ljava/io/InputStream;\n-   #55 = Utf8               createErrorStream\n-   #56 = Utf8               ()Ljava/io/InputStream;\n-   #57 = Utf8               Code\n-   #58 = Utf8               LineNumberTable\n-   #59 = Utf8               StackMapTable\n-   #60 = Class              #125          // java/net/ServerSocket\n-   #61 = Class              #126          // java/net/Socket\n-   #62 = Utf8               Exceptions\n-   #63 = Utf8               <init>\n-   #64 = Utf8               ()V\n-   #65 = Utf8               getInputStream\n-   #66 = Utf8               getOutputStream\n-   #67 = Utf8               ()Ljava/io/OutputStream;\n-   #68 = Utf8               getErrorStream\n-   #69 = Utf8               rexec\n-   #70 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n-   #71 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #72 = Utf8               disconnect\n-   #73 = Utf8               setRemoteVerificationEnabled\n-   #74 = Utf8               (Z)V\n-   #75 = Utf8               isRemoteVerificationEnabled\n-   #76 = Utf8               ()Z\n-   #77 = Utf8               SourceFile\n-   #78 = Utf8               RExecClient.java\n-   #79 = NameAndType        #127:#128     // _serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n-   #80 = NameAndType        #129:#130     // getLocalAddress:()Ljava/net/InetAddress;\n-   #81 = Class              #131          // javax/net/ServerSocketFactory\n-   #82 = NameAndType        #132:#133     // createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n-   #83 = NameAndType        #134:#135     // _output_:Ljava/io/OutputStream;\n-   #84 = NameAndType        #136:#137     // getLocalPort:()I\n-   #85 = Class              #138          // java/lang/Integer\n-   #86 = NameAndType        #139:#140     // toString:(I)Ljava/lang/String;\n-   #87 = Utf8               UTF-8\n-   #88 = Class              #141          // java/lang/String\n-   #89 = NameAndType        #142:#143     // getBytes:(Ljava/lang/String;)[B\n-   #90 = Class              #144          // java/io/OutputStream\n-   #91 = NameAndType        #145:#146     // write:([B)V\n-   #92 = Utf8               org/apache/commons/net/bsd/RExecClient\n-   #93 = NameAndType        #145:#147     // write:(I)V\n-   #94 = NameAndType        #148:#64      // flush:()V\n-   #95 = NameAndType        #149:#150     // accept:()Ljava/net/Socket;\n-   #96 = NameAndType        #151:#64      // close:()V\n-   #97 = NameAndType        #51:#52       // remoteVerificationEnabled:Z\n-   #98 = NameAndType        #152:#153     // verifyRemote:(Ljava/net/Socket;)Z\n-   #99 = Utf8               java/io/IOException\n-  #100 = Utf8               java/lang/StringBuilder\n-  #101 = NameAndType        #63:#64       // \"<init>\":()V\n-  #102 = Utf8               Security violation: unexpected connection attempt by\n-  #103 = NameAndType        #154:#155     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #104 = NameAndType        #156:#130     // getInetAddress:()Ljava/net/InetAddress;\n-  #105 = Class              #157          // java/net/InetAddress\n-  #106 = NameAndType        #158:#159     // getHostAddress:()Ljava/lang/String;\n-  #107 = NameAndType        #139:#159     // toString:()Ljava/lang/String;\n-  #108 = NameAndType        #63:#160      // \"<init>\":(Ljava/lang/String;)V\n-  #109 = Utf8               org/apache/commons/net/io/SocketInputStream\n-  #110 = NameAndType        #65:#56       // getInputStream:()Ljava/io/InputStream;\n-  #111 = NameAndType        #63:#161      // \"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n-  #112 = NameAndType        #53:#54       // _errorStream_:Ljava/io/InputStream;\n-  #113 = NameAndType        #162:#147     // setDefaultPort:(I)V\n-  #114 = NameAndType        #163:#54      // _input_:Ljava/io/InputStream;\n-  #115 = NameAndType        #55:#56       // createErrorStream:()Ljava/io/InputStream;\n-  #116 = NameAndType        #164:#165     // getCharset:()Ljava/nio/charset/Charset;\n-  #117 = NameAndType        #142:#166     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #118 = Class              #167          // java/io/InputStream\n-  #119 = NameAndType        #168:#137     // read:()I\n-  #120 = NameAndType        #154:#169     // append:(C)Ljava/lang/StringBuilder;\n-  #121 = Utf8               Server closed connection.\n-  #122 = NameAndType        #69:#70       // rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n-  #123 = NameAndType        #72:#64       // disconnect:()V\n-  #124 = Utf8               org/apache/commons/net/SocketClient\n-  #125 = Utf8               java/net/ServerSocket\n-  #126 = Utf8               java/net/Socket\n-  #127 = Utf8               _serverSocketFactory_\n-  #128 = Utf8               Ljavax/net/ServerSocketFactory;\n-  #129 = Utf8               getLocalAddress\n-  #130 = Utf8               ()Ljava/net/InetAddress;\n-  #131 = Utf8               javax/net/ServerSocketFactory\n-  #132 = Utf8               createServerSocket\n-  #133 = Utf8               (IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n-  #134 = Utf8               _output_\n-  #135 = Utf8               Ljava/io/OutputStream;\n-  #136 = Utf8               getLocalPort\n-  #137 = Utf8               ()I\n-  #138 = Utf8               java/lang/Integer\n-  #139 = Utf8               toString\n-  #140 = Utf8               (I)Ljava/lang/String;\n-  #141 = Utf8               java/lang/String\n-  #142 = Utf8               getBytes\n-  #143 = Utf8               (Ljava/lang/String;)[B\n-  #144 = Utf8               java/io/OutputStream\n-  #145 = Utf8               write\n-  #146 = Utf8               ([B)V\n-  #147 = Utf8               (I)V\n-  #148 = Utf8               flush\n-  #149 = Utf8               accept\n-  #150 = Utf8               ()Ljava/net/Socket;\n-  #151 = Utf8               close\n-  #152 = Utf8               verifyRemote\n-  #153 = Utf8               (Ljava/net/Socket;)Z\n-  #154 = Utf8               append\n-  #155 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #156 = Utf8               getInetAddress\n-  #157 = Utf8               java/net/InetAddress\n-  #158 = Utf8               getHostAddress\n-  #159 = Utf8               ()Ljava/lang/String;\n-  #160 = Utf8               (Ljava/lang/String;)V\n-  #161 = Utf8               (Ljava/net/Socket;Ljava/io/InputStream;)V\n-  #162 = Utf8               setDefaultPort\n-  #163 = Utf8               _input_\n-  #164 = Utf8               getCharset\n-  #165 = Utf8               ()Ljava/nio/charset/Charset;\n-  #166 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #167 = Utf8               java/io/InputStream\n-  #168 = Utf8               read\n-  #169 = Utf8               (C)Ljava/lang/StringBuilder;\n+    #1 = Fieldref           #2.#3         // org/apache/commons/net/bsd/RExecClient._serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n+    #2 = Class              #4            // org/apache/commons/net/bsd/RExecClient\n+    #3 = NameAndType        #5:#6         // _serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n+    #4 = Utf8               org/apache/commons/net/bsd/RExecClient\n+    #5 = Utf8               _serverSocketFactory_\n+    #6 = Utf8               Ljavax/net/ServerSocketFactory;\n+    #7 = Methodref          #2.#8         // org/apache/commons/net/bsd/RExecClient.getLocalAddress:()Ljava/net/InetAddress;\n+    #8 = NameAndType        #9:#10        // getLocalAddress:()Ljava/net/InetAddress;\n+    #9 = Utf8               getLocalAddress\n+   #10 = Utf8               ()Ljava/net/InetAddress;\n+   #11 = Methodref          #12.#13       // javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n+   #12 = Class              #14           // javax/net/ServerSocketFactory\n+   #13 = NameAndType        #15:#16       // createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n+   #14 = Utf8               javax/net/ServerSocketFactory\n+   #15 = Utf8               createServerSocket\n+   #16 = Utf8               (IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n+   #17 = Fieldref           #2.#18        // org/apache/commons/net/bsd/RExecClient._output_:Ljava/io/OutputStream;\n+   #18 = NameAndType        #19:#20       // _output_:Ljava/io/OutputStream;\n+   #19 = Utf8               _output_\n+   #20 = Utf8               Ljava/io/OutputStream;\n+   #21 = Methodref          #22.#23       // java/net/ServerSocket.getLocalPort:()I\n+   #22 = Class              #24           // java/net/ServerSocket\n+   #23 = NameAndType        #25:#26       // getLocalPort:()I\n+   #24 = Utf8               java/net/ServerSocket\n+   #25 = Utf8               getLocalPort\n+   #26 = Utf8               ()I\n+   #27 = Methodref          #28.#29       // java/lang/Integer.toString:(I)Ljava/lang/String;\n+   #28 = Class              #30           // java/lang/Integer\n+   #29 = NameAndType        #31:#32       // toString:(I)Ljava/lang/String;\n+   #30 = Utf8               java/lang/Integer\n+   #31 = Utf8               toString\n+   #32 = Utf8               (I)Ljava/lang/String;\n+   #33 = String             #34           // UTF-8\n+   #34 = Utf8               UTF-8\n+   #35 = Methodref          #36.#37       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #36 = Class              #38           // java/lang/String\n+   #37 = NameAndType        #39:#40       // getBytes:(Ljava/lang/String;)[B\n+   #38 = Utf8               java/lang/String\n+   #39 = Utf8               getBytes\n+   #40 = Utf8               (Ljava/lang/String;)[B\n+   #41 = Methodref          #42.#43       // java/io/OutputStream.write:([B)V\n+   #42 = Class              #44           // java/io/OutputStream\n+   #43 = NameAndType        #45:#46       // write:([B)V\n+   #44 = Utf8               java/io/OutputStream\n+   #45 = Utf8               write\n+   #46 = Utf8               ([B)V\n+   #47 = Methodref          #42.#48       // java/io/OutputStream.write:(I)V\n+   #48 = NameAndType        #45:#49       // write:(I)V\n+   #49 = Utf8               (I)V\n+   #50 = Methodref          #42.#51       // java/io/OutputStream.flush:()V\n+   #51 = NameAndType        #52:#53       // flush:()V\n+   #52 = Utf8               flush\n+   #53 = Utf8               ()V\n+   #54 = Methodref          #22.#55       // java/net/ServerSocket.accept:()Ljava/net/Socket;\n+   #55 = NameAndType        #56:#57       // accept:()Ljava/net/Socket;\n+   #56 = Utf8               accept\n+   #57 = Utf8               ()Ljava/net/Socket;\n+   #58 = Methodref          #22.#59       // java/net/ServerSocket.close:()V\n+   #59 = NameAndType        #60:#53       // close:()V\n+   #60 = Utf8               close\n+   #61 = Fieldref           #2.#62        // org/apache/commons/net/bsd/RExecClient.remoteVerificationEnabled:Z\n+   #62 = NameAndType        #63:#64       // remoteVerificationEnabled:Z\n+   #63 = Utf8               remoteVerificationEnabled\n+   #64 = Utf8               Z\n+   #65 = Methodref          #2.#66        // org/apache/commons/net/bsd/RExecClient.verifyRemote:(Ljava/net/Socket;)Z\n+   #66 = NameAndType        #67:#68       // verifyRemote:(Ljava/net/Socket;)Z\n+   #67 = Utf8               verifyRemote\n+   #68 = Utf8               (Ljava/net/Socket;)Z\n+   #69 = Methodref          #70.#59       // java/net/Socket.close:()V\n+   #70 = Class              #71           // java/net/Socket\n+   #71 = Utf8               java/net/Socket\n+   #72 = Class              #73           // java/io/IOException\n+   #73 = Utf8               java/io/IOException\n+   #74 = Class              #75           // java/lang/StringBuilder\n+   #75 = Utf8               java/lang/StringBuilder\n+   #76 = Methodref          #74.#77       // java/lang/StringBuilder.\"<init>\":()V\n+   #77 = NameAndType        #78:#53       // \"<init>\":()V\n+   #78 = Utf8               <init>\n+   #79 = String             #80           // Security violation: unexpected connection attempt by\n+   #80 = Utf8               Security violation: unexpected connection attempt by\n+   #81 = Methodref          #74.#82       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #82 = NameAndType        #83:#84       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #83 = Utf8               append\n+   #84 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #85 = Methodref          #70.#86       // java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n+   #86 = NameAndType        #87:#10       // getInetAddress:()Ljava/net/InetAddress;\n+   #87 = Utf8               getInetAddress\n+   #88 = Methodref          #89.#90       // java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n+   #89 = Class              #91           // java/net/InetAddress\n+   #90 = NameAndType        #92:#93       // getHostAddress:()Ljava/lang/String;\n+   #91 = Utf8               java/net/InetAddress\n+   #92 = Utf8               getHostAddress\n+   #93 = Utf8               ()Ljava/lang/String;\n+   #94 = Methodref          #74.#95       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #95 = NameAndType        #31:#93       // toString:()Ljava/lang/String;\n+   #96 = Methodref          #72.#97       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #97 = NameAndType        #78:#98       // \"<init>\":(Ljava/lang/String;)V\n+   #98 = Utf8               (Ljava/lang/String;)V\n+   #99 = Class              #100          // org/apache/commons/net/io/SocketInputStream\n+  #100 = Utf8               org/apache/commons/net/io/SocketInputStream\n+  #101 = Methodref          #70.#102      // java/net/Socket.getInputStream:()Ljava/io/InputStream;\n+  #102 = NameAndType        #103:#104     // getInputStream:()Ljava/io/InputStream;\n+  #103 = Utf8               getInputStream\n+  #104 = Utf8               ()Ljava/io/InputStream;\n+  #105 = Methodref          #99.#106      // org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n+  #106 = NameAndType        #78:#107      // \"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n+  #107 = Utf8               (Ljava/net/Socket;Ljava/io/InputStream;)V\n+  #108 = Methodref          #109.#77      // org/apache/commons/net/SocketClient.\"<init>\":()V\n+  #109 = Class              #110          // org/apache/commons/net/SocketClient\n+  #110 = Utf8               org/apache/commons/net/SocketClient\n+  #111 = Fieldref           #2.#112       // org/apache/commons/net/bsd/RExecClient._errorStream_:Ljava/io/InputStream;\n+  #112 = NameAndType        #113:#114     // _errorStream_:Ljava/io/InputStream;\n+  #113 = Utf8               _errorStream_\n+  #114 = Utf8               Ljava/io/InputStream;\n+  #115 = Methodref          #2.#116       // org/apache/commons/net/bsd/RExecClient.setDefaultPort:(I)V\n+  #116 = NameAndType        #117:#49      // setDefaultPort:(I)V\n+  #117 = Utf8               setDefaultPort\n+  #118 = Fieldref           #2.#119       // org/apache/commons/net/bsd/RExecClient._input_:Ljava/io/InputStream;\n+  #119 = NameAndType        #120:#114     // _input_:Ljava/io/InputStream;\n+  #120 = Utf8               _input_\n+  #121 = Methodref          #2.#122       // org/apache/commons/net/bsd/RExecClient.createErrorStream:()Ljava/io/InputStream;\n+  #122 = NameAndType        #123:#104     // createErrorStream:()Ljava/io/InputStream;\n+  #123 = Utf8               createErrorStream\n+  #124 = Methodref          #2.#125       // org/apache/commons/net/bsd/RExecClient.getCharset:()Ljava/nio/charset/Charset;\n+  #125 = NameAndType        #126:#127     // getCharset:()Ljava/nio/charset/Charset;\n+  #126 = Utf8               getCharset\n+  #127 = Utf8               ()Ljava/nio/charset/Charset;\n+  #128 = Methodref          #36.#129      // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+  #129 = NameAndType        #39:#130      // getBytes:(Ljava/nio/charset/Charset;)[B\n+  #130 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #131 = Methodref          #132.#133     // java/io/InputStream.read:()I\n+  #132 = Class              #134          // java/io/InputStream\n+  #133 = NameAndType        #135:#26      // read:()I\n+  #134 = Utf8               java/io/InputStream\n+  #135 = Utf8               read\n+  #136 = Methodref          #74.#137      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #137 = NameAndType        #83:#138      // append:(C)Ljava/lang/StringBuilder;\n+  #138 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #139 = String             #140          // Server closed connection.\n+  #140 = Utf8               Server closed connection.\n+  #141 = Methodref          #2.#142       // org/apache/commons/net/bsd/RExecClient.rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n+  #142 = NameAndType        #143:#144     // rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n+  #143 = Utf8               rexec\n+  #144 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n+  #145 = Methodref          #132.#59      // java/io/InputStream.close:()V\n+  #146 = Methodref          #109.#147     // org/apache/commons/net/SocketClient.disconnect:()V\n+  #147 = NameAndType        #148:#53      // disconnect:()V\n+  #148 = Utf8               disconnect\n+  #149 = Utf8               NULL_CHAR\n+  #150 = Utf8               C\n+  #151 = Utf8               ConstantValue\n+  #152 = Integer            0\n+  #153 = Utf8               DEFAULT_PORT\n+  #154 = Utf8               I\n+  #155 = Integer            512\n+  #156 = Utf8               Code\n+  #157 = Utf8               LineNumberTable\n+  #158 = Utf8               StackMapTable\n+  #159 = Utf8               Exceptions\n+  #160 = Utf8               getOutputStream\n+  #161 = Utf8               ()Ljava/io/OutputStream;\n+  #162 = Utf8               getErrorStream\n+  #163 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #164 = Utf8               setRemoteVerificationEnabled\n+  #165 = Utf8               (Z)V\n+  #166 = Utf8               isRemoteVerificationEnabled\n+  #167 = Utf8               ()Z\n+  #168 = Utf8               SourceFile\n+  #169 = Utf8               RExecClient.java\n {\n   protected static final char NULL_CHAR = '\\u0000';\n     descriptor: C\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 0\n \n   public static final int DEFAULT_PORT = 512;\n@@ -202,66 +202,66 @@\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n          1: getfield      #1                  // Field _serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n          4: iconst_0\n          5: iconst_1\n          6: aload_0\n-         7: invokevirtual #2                  // Method getLocalAddress:()Ljava/net/InetAddress;\n-        10: invokevirtual #3                  // Method javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n+         7: invokevirtual #7                  // Method getLocalAddress:()Ljava/net/InetAddress;\n+        10: invokevirtual #11                 // Method javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n         13: astore_1\n         14: aload_0\n-        15: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n+        15: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n         18: aload_1\n-        19: invokevirtual #5                  // Method java/net/ServerSocket.getLocalPort:()I\n-        22: invokestatic  #6                  // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n-        25: ldc           #7                  // String UTF-8\n-        27: invokevirtual #8                  // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n-        30: invokevirtual #9                  // Method java/io/OutputStream.write:([B)V\n+        19: invokevirtual #21                 // Method java/net/ServerSocket.getLocalPort:()I\n+        22: invokestatic  #27                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+        25: ldc           #33                 // String UTF-8\n+        27: invokevirtual #35                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n+        30: invokevirtual #41                 // Method java/io/OutputStream.write:([B)V\n         33: aload_0\n-        34: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n+        34: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n         37: iconst_0\n-        38: invokevirtual #11                 // Method java/io/OutputStream.write:(I)V\n+        38: invokevirtual #47                 // Method java/io/OutputStream.write:(I)V\n         41: aload_0\n-        42: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n-        45: invokevirtual #12                 // Method java/io/OutputStream.flush:()V\n+        42: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+        45: invokevirtual #50                 // Method java/io/OutputStream.flush:()V\n         48: aload_1\n-        49: invokevirtual #13                 // Method java/net/ServerSocket.accept:()Ljava/net/Socket;\n+        49: invokevirtual #54                 // Method java/net/ServerSocket.accept:()Ljava/net/Socket;\n         52: astore_2\n         53: aload_1\n-        54: invokevirtual #14                 // Method java/net/ServerSocket.close:()V\n+        54: invokevirtual #58                 // Method java/net/ServerSocket.close:()V\n         57: aload_0\n-        58: getfield      #15                 // Field remoteVerificationEnabled:Z\n+        58: getfield      #61                 // Field remoteVerificationEnabled:Z\n         61: ifeq          109\n         64: aload_0\n         65: aload_2\n-        66: invokevirtual #16                 // Method verifyRemote:(Ljava/net/Socket;)Z\n+        66: invokevirtual #65                 // Method verifyRemote:(Ljava/net/Socket;)Z\n         69: ifne          109\n         72: aload_2\n-        73: invokevirtual #17                 // Method java/net/Socket.close:()V\n-        76: new           #18                 // class java/io/IOException\n+        73: invokevirtual #69                 // Method java/net/Socket.close:()V\n+        76: new           #72                 // class java/io/IOException\n         79: dup\n-        80: new           #19                 // class java/lang/StringBuilder\n+        80: new           #74                 // class java/lang/StringBuilder\n         83: dup\n-        84: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        87: ldc           #21                 // String Security violation: unexpected connection attempt by\n-        89: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        84: invokespecial #76                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        87: ldc           #79                 // String Security violation: unexpected connection attempt by\n+        89: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         92: aload_2\n-        93: invokevirtual #23                 // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n-        96: invokevirtual #24                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n-        99: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       102: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       105: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        93: invokevirtual #85                 // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n+        96: invokevirtual #88                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n+        99: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       102: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       105: invokespecial #96                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        108: athrow\n-       109: new           #27                 // class org/apache/commons/net/io/SocketInputStream\n+       109: new           #99                 // class org/apache/commons/net/io/SocketInputStream\n        112: dup\n        113: aload_2\n        114: aload_2\n-       115: invokevirtual #28                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;\n-       118: invokespecial #29                 // Method org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n+       115: invokevirtual #101                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;\n+       118: invokespecial #105                // Method org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n        121: areturn\n       LineNumberTable:\n         line 94: 0\n         line 96: 14\n         line 97: 33\n         line 98: 41\n         line 100: 48\n@@ -280,151 +280,151 @@\n \n   public org.apache.commons.net.bsd.RExecClient();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #30                 // Method org/apache/commons/net/SocketClient.\"<init>\":()V\n+         1: invokespecial #108                // Method org/apache/commons/net/SocketClient.\"<init>\":()V\n          4: aload_0\n          5: aconst_null\n-         6: putfield      #31                 // Field _errorStream_:Ljava/io/InputStream;\n+         6: putfield      #111                // Field _errorStream_:Ljava/io/InputStream;\n          9: aload_0\n         10: sipush        512\n-        13: invokevirtual #32                 // Method setDefaultPort:(I)V\n+        13: invokevirtual #115                // Method setDefaultPort:(I)V\n         16: return\n       LineNumberTable:\n         line 120: 0\n         line 121: 4\n         line 122: 9\n         line 123: 16\n \n   public java.io.InputStream getInputStream();\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #33                 // Field _input_:Ljava/io/InputStream;\n+         1: getfield      #118                // Field _input_:Ljava/io/InputStream;\n          4: areturn\n       LineNumberTable:\n         line 136: 0\n \n   public java.io.OutputStream getOutputStream();\n     descriptor: ()Ljava/io/OutputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n+         1: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n          4: areturn\n       LineNumberTable:\n         line 150: 0\n \n   public java.io.InputStream getErrorStream();\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #31                 // Field _errorStream_:Ljava/io/InputStream;\n+         1: getfield      #111                // Field _errorStream_:Ljava/io/InputStream;\n          4: areturn\n       LineNumberTable:\n         line 166: 0\n \n   public void rexec(java.lang.String, java.lang.String, java.lang.String, boolean) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=7, args_size=5\n          0: iload         4\n          2: ifeq          16\n          5: aload_0\n          6: aload_0\n-         7: invokevirtual #34                 // Method createErrorStream:()Ljava/io/InputStream;\n-        10: putfield      #31                 // Field _errorStream_:Ljava/io/InputStream;\n+         7: invokevirtual #121                // Method createErrorStream:()Ljava/io/InputStream;\n+        10: putfield      #111                // Field _errorStream_:Ljava/io/InputStream;\n         13: goto          24\n         16: aload_0\n-        17: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n+        17: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n         20: iconst_0\n-        21: invokevirtual #11                 // Method java/io/OutputStream.write:(I)V\n+        21: invokevirtual #47                 // Method java/io/OutputStream.write:(I)V\n         24: aload_0\n-        25: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n+        25: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n         28: aload_1\n         29: aload_0\n-        30: invokevirtual #35                 // Method getCharset:()Ljava/nio/charset/Charset;\n-        33: invokevirtual #36                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        36: invokevirtual #9                  // Method java/io/OutputStream.write:([B)V\n+        30: invokevirtual #124                // Method getCharset:()Ljava/nio/charset/Charset;\n+        33: invokevirtual #128                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        36: invokevirtual #41                 // Method java/io/OutputStream.write:([B)V\n         39: aload_0\n-        40: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n+        40: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n         43: iconst_0\n-        44: invokevirtual #11                 // Method java/io/OutputStream.write:(I)V\n+        44: invokevirtual #47                 // Method java/io/OutputStream.write:(I)V\n         47: aload_0\n-        48: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n+        48: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n         51: aload_2\n         52: aload_0\n-        53: invokevirtual #35                 // Method getCharset:()Ljava/nio/charset/Charset;\n-        56: invokevirtual #36                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        59: invokevirtual #9                  // Method java/io/OutputStream.write:([B)V\n+        53: invokevirtual #124                // Method getCharset:()Ljava/nio/charset/Charset;\n+        56: invokevirtual #128                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        59: invokevirtual #41                 // Method java/io/OutputStream.write:([B)V\n         62: aload_0\n-        63: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n+        63: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n         66: iconst_0\n-        67: invokevirtual #11                 // Method java/io/OutputStream.write:(I)V\n+        67: invokevirtual #47                 // Method java/io/OutputStream.write:(I)V\n         70: aload_0\n-        71: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n+        71: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n         74: aload_3\n         75: aload_0\n-        76: invokevirtual #35                 // Method getCharset:()Ljava/nio/charset/Charset;\n-        79: invokevirtual #36                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        82: invokevirtual #9                  // Method java/io/OutputStream.write:([B)V\n+        76: invokevirtual #124                // Method getCharset:()Ljava/nio/charset/Charset;\n+        79: invokevirtual #128                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        82: invokevirtual #41                 // Method java/io/OutputStream.write:([B)V\n         85: aload_0\n-        86: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n+        86: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n         89: iconst_0\n-        90: invokevirtual #11                 // Method java/io/OutputStream.write:(I)V\n+        90: invokevirtual #47                 // Method java/io/OutputStream.write:(I)V\n         93: aload_0\n-        94: getfield      #4                  // Field _output_:Ljava/io/OutputStream;\n-        97: invokevirtual #12                 // Method java/io/OutputStream.flush:()V\n+        94: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+        97: invokevirtual #50                 // Method java/io/OutputStream.flush:()V\n        100: aload_0\n-       101: getfield      #33                 // Field _input_:Ljava/io/InputStream;\n-       104: invokevirtual #37                 // Method java/io/InputStream.read:()I\n+       101: getfield      #118                // Field _input_:Ljava/io/InputStream;\n+       104: invokevirtual #131                // Method java/io/InputStream.read:()I\n        107: istore        5\n        109: iload         5\n        111: ifle          169\n-       114: new           #19                 // class java/lang/StringBuilder\n+       114: new           #74                 // class java/lang/StringBuilder\n        117: dup\n-       118: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       118: invokespecial #76                 // Method java/lang/StringBuilder.\"<init>\":()V\n        121: astore        6\n        123: aload_0\n-       124: getfield      #33                 // Field _input_:Ljava/io/InputStream;\n-       127: invokevirtual #37                 // Method java/io/InputStream.read:()I\n+       124: getfield      #118                // Field _input_:Ljava/io/InputStream;\n+       127: invokevirtual #131                // Method java/io/InputStream.read:()I\n        130: dup\n        131: istore        5\n        133: iconst_m1\n        134: if_icmpeq     156\n        137: iload         5\n        139: bipush        10\n        141: if_icmpeq     156\n        144: aload         6\n        146: iload         5\n        148: i2c\n-       149: invokevirtual #38                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       149: invokevirtual #136                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        152: pop\n        153: goto          123\n-       156: new           #18                 // class java/io/IOException\n+       156: new           #72                 // class java/io/IOException\n        159: dup\n        160: aload         6\n-       162: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       165: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       162: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       165: invokespecial #96                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        168: athrow\n        169: iload         5\n        171: ifge          184\n-       174: new           #18                 // class java/io/IOException\n+       174: new           #72                 // class java/io/IOException\n        177: dup\n-       178: ldc           #39                 // String Server closed connection.\n-       180: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       178: ldc           #139                // String Server closed connection.\n+       180: invokespecial #96                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        183: athrow\n        184: return\n       LineNumberTable:\n         line 208: 0\n         line 210: 5\n         line 214: 16\n         line 217: 24\n@@ -462,38 +462,38 @@\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_3\n          4: iconst_0\n-         5: invokevirtual #40                 // Method rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n+         5: invokevirtual #141                // Method rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n          8: return\n       LineNumberTable:\n         line 251: 0\n         line 252: 8\n     Exceptions:\n       throws java.io.IOException\n \n   public void disconnect() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #31                 // Field _errorStream_:Ljava/io/InputStream;\n+         1: getfield      #111                // Field _errorStream_:Ljava/io/InputStream;\n          4: ifnull        14\n          7: aload_0\n-         8: getfield      #31                 // Field _errorStream_:Ljava/io/InputStream;\n-        11: invokevirtual #41                 // Method java/io/InputStream.close:()V\n+         8: getfield      #111                // Field _errorStream_:Ljava/io/InputStream;\n+        11: invokevirtual #145                // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #31                 // Field _errorStream_:Ljava/io/InputStream;\n+        16: putfield      #111                // Field _errorStream_:Ljava/io/InputStream;\n         19: aload_0\n-        20: invokespecial #42                 // Method org/apache/commons/net/SocketClient.disconnect:()V\n+        20: invokespecial #146                // Method org/apache/commons/net/SocketClient.disconnect:()V\n         23: return\n       LineNumberTable:\n         line 263: 0\n         line 264: 7\n         line 266: 14\n         line 267: 19\n         line 268: 23\n@@ -505,25 +505,25 @@\n   public final void setRemoteVerificationEnabled(boolean);\n     descriptor: (Z)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #15                 // Field remoteVerificationEnabled:Z\n+         2: putfield      #61                 // Field remoteVerificationEnabled:Z\n          5: return\n       LineNumberTable:\n         line 282: 0\n         line 283: 5\n \n   public final boolean isRemoteVerificationEnabled();\n     descriptor: ()Z\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field remoteVerificationEnabled:Z\n+         1: getfield      #61                 // Field remoteVerificationEnabled:Z\n          4: ireturn\n       LineNumberTable:\n         line 294: 0\n }\n SourceFile: \"RExecClient.java\"\n"}]}
