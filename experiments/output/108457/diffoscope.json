{"diffoscope-json-version": 1, "source1": "first/FailableBiFunction.class", "source2": "second/FailableBiFunction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,12 +10,12 @@\n     \n     default <T, U, R, E extends Throwable> FailableBiFunction<T, U, R, E> nop() {\n         return FailableBiFunction.NOP;\n     }\n     \n     default <V> FailableBiFunction<T, U, V, E> andThen(final FailableFunction<? super R, ? extends V, E> after) {\n         Objects.requireNonNull(after);\n-        return (FailableBiFunction<T, U, V, E>)((t, u) -> after.apply(this.apply(t, u)));\n+        return (FailableBiFunction<T, U, V, E>)((t, u) -> failableFunction.apply(this.apply(t, u)));\n     }\n     \n     R apply(final T p0, final U p1) throws E, Throwable;\n }\n"}]}
