{"diffoscope-json-version": 1, "source1": "first/CodeSelectorPresentation.class", "source2": "second/CodeSelectorPresentation.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,16 +9,16 @@\n public class CodeSelectorPresentation\n {\n     private final Object node;\n     private final List<Integer> lines2position;\n     private int selectionStart;\n     private int selectionEnd;\n     \n-    public CodeSelectorPresentation(final DetailAST ast, final List<Integer> lines2position) {\n-        this.node = ast;\n+    public CodeSelectorPresentation(final DetailAST node, final List<Integer> lines2position) {\n+        this.node = node;\n         this.lines2position = lines2position;\n     }\n     \n     public CodeSelectorPresentation(final DetailNode node, final List<Integer> lines2position) {\n         this.node = node;\n         this.lines2position = lines2position;\n     }\n@@ -36,45 +36,44 @@\n             this.findSelectionPositions((DetailAST)this.node);\n         }\n         else {\n             this.findSelectionPositions((DetailNode)this.node);\n         }\n     }\n     \n-    private void findSelectionPositions(final DetailAST ast) {\n-        this.selectionStart = Integer.valueOf(this.lines2position.get(ast.getLineNo())) + ast.getColumnNo();\n-        if (ast.hasChildren() || !TokenUtil.getTokenName(ast.getType()).equals(ast.getText())) {\n-            this.selectionEnd = this.findLastPosition(ast);\n+    private void findSelectionPositions(final DetailAST detailAST) {\n+        this.selectionStart = Integer.valueOf(this.lines2position.get(detailAST.getLineNo())) + detailAST.getColumnNo();\n+        if (detailAST.hasChildren() || !TokenUtil.getTokenName(detailAST.getType()).equals(detailAST.getText())) {\n+            this.selectionEnd = this.findLastPosition(detailAST);\n         }\n         else {\n             this.selectionEnd = this.selectionStart;\n         }\n     }\n     \n     private void findSelectionPositions(final DetailNode detailNode) {\n         this.selectionStart = Integer.valueOf(this.lines2position.get(detailNode.getLineNumber())) + detailNode.getColumnNumber();\n         this.selectionEnd = this.findLastPosition(detailNode);\n     }\n     \n-    private int findLastPosition(final DetailAST astNode) {\n+    private int findLastPosition(final DetailAST detailAST) {\n         int lastPosition;\n-        if (astNode.hasChildren()) {\n-            lastPosition = this.findLastPosition(astNode.getLastChild());\n+        if (detailAST.hasChildren()) {\n+            lastPosition = this.findLastPosition(detailAST.getLastChild());\n         }\n         else {\n-            lastPosition = Integer.valueOf(this.lines2position.get(astNode.getLineNo())) + astNode.getColumnNo() + astNode.getText().length();\n+            lastPosition = Integer.valueOf(this.lines2position.get(detailAST.getLineNo())) + detailAST.getColumnNo() + detailAST.getText().length();\n         }\n         return lastPosition;\n     }\n     \n     private int findLastPosition(final DetailNode detailNode) {\n         int lastPosition;\n         if (detailNode.getChildren().length == 0) {\n             lastPosition = Integer.valueOf(this.lines2position.get(detailNode.getLineNumber())) + detailNode.getColumnNumber() + detailNode.getText().length();\n         }\n         else {\n-            final DetailNode lastChild = detailNode.getChildren()[detailNode.getChildren().length - 1];\n-            lastPosition = this.findLastPosition(lastChild);\n+            lastPosition = this.findLastPosition(detailNode.getChildren()[detailNode.getChildren().length - 1]);\n         }\n         return lastPosition;\n     }\n }\n"}]}
