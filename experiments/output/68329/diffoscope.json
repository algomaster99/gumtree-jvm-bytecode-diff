{"diffoscope-json-version": 1, "source1": "first/ProxyWriter.class", "source2": "second/ProxyWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,702 +1,690 @@\n-  SHA-256 checksum 21b6f856d24ad313c10902ea4f562c34a5d6da26123fa2c9f2ae08130cd85d0b\n+  SHA-256 checksum 1bfb85b22b2e8958dbe6042f18ca434b27216421f997dd15fcc0c188c9bbefd2\n   Compiled from \"ProxyWriter.java\"\n public class org.apache.commons.io.output.ProxyWriter extends java.io.FilterWriter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #23                         // org/apache/commons/io/output/ProxyWriter\n-  super_class: #24                        // java/io/FilterWriter\n+  this_class: #1                          // org/apache/commons/io/output/ProxyWriter\n+  super_class: #3                         // java/io/FilterWriter\n   interfaces: 0, fields: 0, methods: 17, attributes: 3\n Constant pool:\n-    #1 = Methodref          #24.#74       // java/io/FilterWriter.\"<init>\":(Ljava/io/Writer;)V\n-    #2 = Methodref          #23.#75       // org/apache/commons/io/output/ProxyWriter.beforeWrite:(I)V\n-    #3 = Fieldref           #23.#76       // org/apache/commons/io/output/ProxyWriter.out:Ljava/io/Writer;\n-    #4 = Methodref          #77.#78       // java/io/Writer.append:(C)Ljava/io/Writer;\n-    #5 = Methodref          #23.#79       // org/apache/commons/io/output/ProxyWriter.afterWrite:(I)V\n-    #6 = Class              #80           // java/io/IOException\n-    #7 = Methodref          #23.#81       // org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n-    #8 = Methodref          #77.#82       // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-    #9 = Methodref          #83.#84       // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-   #10 = Methodref          #77.#85       // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #11 = Methodref          #77.#86       // java/io/Writer.write:(I)V\n-   #12 = Methodref          #83.#87       // org/apache/commons/io/IOUtils.length:([C)I\n-   #13 = Methodref          #77.#88       // java/io/Writer.write:([C)V\n-   #14 = Methodref          #77.#89       // java/io/Writer.write:([CII)V\n-   #15 = Methodref          #77.#90       // java/io/Writer.write:(Ljava/lang/String;)V\n-   #16 = Methodref          #77.#91       // java/io/Writer.write:(Ljava/lang/String;II)V\n-   #17 = Methodref          #77.#92       // java/io/Writer.flush:()V\n-   #18 = InvokeDynamic      #0:#98        // #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n-   #19 = Methodref          #83.#99       // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-   #20 = Methodref          #23.#78       // org/apache/commons/io/output/ProxyWriter.append:(C)Ljava/io/Writer;\n-   #21 = Methodref          #23.#82       // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #22 = Methodref          #23.#85       // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #23 = Class              #100          // org/apache/commons/io/output/ProxyWriter\n-   #24 = Class              #101          // java/io/FilterWriter\n-   #25 = Utf8               <init>\n-   #26 = Utf8               (Ljava/io/Writer;)V\n-   #27 = Utf8               Code\n-   #28 = Utf8               LineNumberTable\n-   #29 = Utf8               LocalVariableTable\n-   #30 = Utf8               this\n-   #31 = Utf8               Lorg/apache/commons/io/output/ProxyWriter;\n-   #32 = Utf8               proxy\n-   #33 = Utf8               Ljava/io/Writer;\n-   #34 = Utf8               append\n-   #35 = Utf8               (C)Ljava/io/Writer;\n-   #36 = Utf8               e\n-   #37 = Utf8               Ljava/io/IOException;\n-   #38 = Utf8               c\n-   #39 = Utf8               C\n-   #40 = Utf8               StackMapTable\n-   #41 = Utf8               Exceptions\n-   #42 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #43 = Utf8               csq\n-   #44 = Utf8               Ljava/lang/CharSequence;\n-   #45 = Utf8               start\n-   #46 = Utf8               I\n-   #47 = Utf8               end\n-   #48 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #49 = Utf8               len\n-   #50 = Utf8               write\n-   #51 = Utf8               (I)V\n-   #52 = Utf8               ([C)V\n-   #53 = Utf8               cbuf\n-   #54 = Utf8               [C\n-   #55 = Utf8               ([CII)V\n-   #56 = Utf8               off\n-   #57 = Utf8               (Ljava/lang/String;)V\n-   #58 = Utf8               str\n-   #59 = Utf8               Ljava/lang/String;\n-   #60 = Utf8               (Ljava/lang/String;II)V\n-   #61 = Utf8               flush\n-   #62 = Utf8               ()V\n-   #63 = Utf8               close\n-   #64 = Utf8               beforeWrite\n-   #65 = Utf8               n\n-   #66 = Utf8               afterWrite\n-   #67 = Utf8               handleIOException\n-   #68 = Utf8               (Ljava/io/IOException;)V\n-   #69 = Utf8               (C)Ljava/lang/Appendable;\n-   #70 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-   #71 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #72 = Utf8               SourceFile\n-   #73 = Utf8               ProxyWriter.java\n-   #74 = NameAndType        #25:#26       // \"<init>\":(Ljava/io/Writer;)V\n-   #75 = NameAndType        #64:#51       // beforeWrite:(I)V\n-   #76 = NameAndType        #102:#33      // out:Ljava/io/Writer;\n-   #77 = Class              #103          // java/io/Writer\n-   #78 = NameAndType        #34:#35       // append:(C)Ljava/io/Writer;\n-   #79 = NameAndType        #66:#51       // afterWrite:(I)V\n-   #80 = Utf8               java/io/IOException\n-   #81 = NameAndType        #67:#68       // handleIOException:(Ljava/io/IOException;)V\n-   #82 = NameAndType        #34:#42       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #83 = Class              #104          // org/apache/commons/io/IOUtils\n-   #84 = NameAndType        #105:#106     // length:(Ljava/lang/CharSequence;)I\n-   #85 = NameAndType        #34:#48       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #86 = NameAndType        #50:#51       // write:(I)V\n-   #87 = NameAndType        #105:#107     // length:([C)I\n-   #88 = NameAndType        #50:#52       // write:([C)V\n-   #89 = NameAndType        #50:#55       // write:([CII)V\n-   #90 = NameAndType        #50:#57       // write:(Ljava/lang/String;)V\n-   #91 = NameAndType        #50:#60       // write:(Ljava/lang/String;II)V\n-   #92 = NameAndType        #61:#62       // flush:()V\n-   #93 = Utf8               BootstrapMethods\n-   #94 = MethodHandle       6:#108        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #95 = MethodType         #109          //  (Ljava/lang/Object;)V\n-   #96 = MethodHandle       5:#7          // REF_invokeVirtual org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n-   #97 = MethodType         #68           //  (Ljava/io/IOException;)V\n-   #98 = NameAndType        #110:#111     // accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n-   #99 = NameAndType        #63:#112      // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #100 = Utf8               org/apache/commons/io/output/ProxyWriter\n-  #101 = Utf8               java/io/FilterWriter\n-  #102 = Utf8               out\n-  #103 = Utf8               java/io/Writer\n-  #104 = Utf8               org/apache/commons/io/IOUtils\n-  #105 = Utf8               length\n-  #106 = Utf8               (Ljava/lang/CharSequence;)I\n-  #107 = Utf8               ([C)I\n-  #108 = Methodref          #113.#114     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #109 = Utf8               (Ljava/lang/Object;)V\n-  #110 = Utf8               accept\n-  #111 = Utf8               (Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n-  #112 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #113 = Class              #115          // java/lang/invoke/LambdaMetafactory\n-  #114 = NameAndType        #116:#120     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #115 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #116 = Utf8               metafactory\n-  #117 = Class              #122          // java/lang/invoke/MethodHandles$Lookup\n-  #118 = Utf8               Lookup\n-  #119 = Utf8               InnerClasses\n-  #120 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #121 = Class              #123          // java/lang/invoke/MethodHandles\n-  #122 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #123 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Class              #2            // org/apache/commons/io/output/ProxyWriter\n+    #2 = Utf8               org/apache/commons/io/output/ProxyWriter\n+    #3 = Class              #4            // java/io/FilterWriter\n+    #4 = Utf8               java/io/FilterWriter\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/Writer;)V\n+    #7 = Utf8               Code\n+    #8 = Methodref          #3.#9         // java/io/FilterWriter.\"<init>\":(Ljava/io/Writer;)V\n+    #9 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/Writer;)V\n+   #10 = Utf8               LineNumberTable\n+   #11 = Utf8               LocalVariableTable\n+   #12 = Utf8               this\n+   #13 = Utf8               Lorg/apache/commons/io/output/ProxyWriter;\n+   #14 = Utf8               proxy\n+   #15 = Utf8               Ljava/io/Writer;\n+   #16 = Utf8               append\n+   #17 = Utf8               (C)Ljava/io/Writer;\n+   #18 = Utf8               Exceptions\n+   #19 = Class              #20           // java/io/IOException\n+   #20 = Utf8               java/io/IOException\n+   #21 = Methodref          #1.#22        // org/apache/commons/io/output/ProxyWriter.beforeWrite:(I)V\n+   #22 = NameAndType        #23:#24       // beforeWrite:(I)V\n+   #23 = Utf8               beforeWrite\n+   #24 = Utf8               (I)V\n+   #25 = Fieldref           #1.#26        // org/apache/commons/io/output/ProxyWriter.out:Ljava/io/Writer;\n+   #26 = NameAndType        #27:#15       // out:Ljava/io/Writer;\n+   #27 = Utf8               out\n+   #28 = Methodref          #29.#31       // java/io/Writer.append:(C)Ljava/io/Writer;\n+   #29 = Class              #30           // java/io/Writer\n+   #30 = Utf8               java/io/Writer\n+   #31 = NameAndType        #16:#17       // append:(C)Ljava/io/Writer;\n+   #32 = Methodref          #1.#33        // org/apache/commons/io/output/ProxyWriter.afterWrite:(I)V\n+   #33 = NameAndType        #34:#24       // afterWrite:(I)V\n+   #34 = Utf8               afterWrite\n+   #35 = Methodref          #1.#36        // org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n+   #36 = NameAndType        #37:#38       // handleIOException:(Ljava/io/IOException;)V\n+   #37 = Utf8               handleIOException\n+   #38 = Utf8               (Ljava/io/IOException;)V\n+   #39 = Utf8               c\n+   #40 = Utf8               C\n+   #41 = Utf8               e\n+   #42 = Utf8               Ljava/io/IOException;\n+   #43 = Utf8               StackMapTable\n+   #44 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #45 = Methodref          #29.#46       // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #46 = NameAndType        #16:#44       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #47 = Utf8               csq\n+   #48 = Utf8               Ljava/lang/CharSequence;\n+   #49 = Utf8               start\n+   #50 = Utf8               I\n+   #51 = Utf8               end\n+   #52 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #53 = Methodref          #54.#56       // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+   #54 = Class              #55           // org/apache/commons/io/IOUtils\n+   #55 = Utf8               org/apache/commons/io/IOUtils\n+   #56 = NameAndType        #57:#58       // length:(Ljava/lang/CharSequence;)I\n+   #57 = Utf8               length\n+   #58 = Utf8               (Ljava/lang/CharSequence;)I\n+   #59 = Methodref          #29.#60       // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #60 = NameAndType        #16:#52       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #61 = Utf8               len\n+   #62 = Utf8               write\n+   #63 = Methodref          #29.#64       // java/io/Writer.write:(I)V\n+   #64 = NameAndType        #62:#24       // write:(I)V\n+   #65 = Utf8               ([C)V\n+   #66 = Methodref          #54.#67       // org/apache/commons/io/IOUtils.length:([C)I\n+   #67 = NameAndType        #57:#68       // length:([C)I\n+   #68 = Utf8               ([C)I\n+   #69 = Methodref          #29.#70       // java/io/Writer.write:([C)V\n+   #70 = NameAndType        #62:#65       // write:([C)V\n+   #71 = Utf8               cbuf\n+   #72 = Utf8               [C\n+   #73 = Utf8               ([CII)V\n+   #74 = Methodref          #29.#75       // java/io/Writer.write:([CII)V\n+   #75 = NameAndType        #62:#73       // write:([CII)V\n+   #76 = Utf8               off\n+   #77 = Utf8               (Ljava/lang/String;)V\n+   #78 = Methodref          #29.#79       // java/io/Writer.write:(Ljava/lang/String;)V\n+   #79 = NameAndType        #62:#77       // write:(Ljava/lang/String;)V\n+   #80 = Utf8               str\n+   #81 = Utf8               Ljava/lang/String;\n+   #82 = Utf8               (Ljava/lang/String;II)V\n+   #83 = Methodref          #29.#84       // java/io/Writer.write:(Ljava/lang/String;II)V\n+   #84 = NameAndType        #62:#82       // write:(Ljava/lang/String;II)V\n+   #85 = Utf8               flush\n+   #86 = Utf8               ()V\n+   #87 = Methodref          #29.#88       // java/io/Writer.flush:()V\n+   #88 = NameAndType        #85:#86       // flush:()V\n+   #89 = Utf8               close\n+   #90 = InvokeDynamic      #0:#91        // #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+   #91 = NameAndType        #92:#93       // accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+   #92 = Utf8               accept\n+   #93 = Utf8               (Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+   #94 = Methodref          #54.#95       // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #95 = NameAndType        #89:#96       // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #96 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #97 = Utf8               n\n+   #98 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+   #99 = Methodref          #1.#46        // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #100 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #101 = Methodref          #1.#60        // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #102 = Utf8               (C)Ljava/lang/Appendable;\n+  #103 = Methodref          #1.#31        // org/apache/commons/io/output/ProxyWriter.append:(C)Ljava/io/Writer;\n+  #104 = Utf8               SourceFile\n+  #105 = Utf8               ProxyWriter.java\n+  #106 = Utf8               BootstrapMethods\n+  #107 = Methodref          #108.#110     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #108 = Class              #109          // java/lang/invoke/LambdaMetafactory\n+  #109 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #110 = NameAndType        #111:#112     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #111 = Utf8               metafactory\n+  #112 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #113 = MethodHandle       6:#107        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #114 = Utf8               (Ljava/lang/Object;)V\n+  #115 = MethodType         #114          //  (Ljava/lang/Object;)V\n+  #116 = MethodHandle       5:#35         // REF_invokeVirtual org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n+  #117 = MethodType         #38           //  (Ljava/io/IOException;)V\n+  #118 = Utf8               InnerClasses\n+  #119 = Class              #120          // java/lang/invoke/MethodHandles$Lookup\n+  #120 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #121 = Class              #122          // java/lang/invoke/MethodHandles\n+  #122 = Utf8               java/lang/invoke/MethodHandles\n+  #123 = Utf8               Lookup\n {\n   public org.apache.commons.io.output.ProxyWriter(java.io.Writer);\n     descriptor: (Ljava/io/Writer;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method java/io/FilterWriter.\"<init>\":(Ljava/io/Writer;)V\n+         2: invokespecial #8                  // Method java/io/FilterWriter.\"<init>\":(Ljava/io/Writer;)V\n          5: return\n       LineNumberTable:\n         line 39: 0\n         line 41: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0       6     1 proxy   Ljava/io/Writer;\n \n   public java.io.Writer append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #2                  // Method beforeWrite:(I)V\n+         2: invokevirtual #21                 // Method beforeWrite:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field out:Ljava/io/Writer;\n+         6: getfield      #25                 // Field out:Ljava/io/Writer;\n          9: iload_1\n-        10: invokevirtual #4                  // Method java/io/Writer.append:(C)Ljava/io/Writer;\n+        10: invokevirtual #28                 // Method java/io/Writer.append:(C)Ljava/io/Writer;\n         13: pop\n         14: aload_0\n         15: iconst_1\n-        16: invokevirtual #5                  // Method afterWrite:(I)V\n+        16: invokevirtual #32                 // Method afterWrite:(I)V\n         19: goto          28\n         22: astore_2\n         23: aload_0\n         24: aload_2\n-        25: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        25: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         28: aload_0\n         29: areturn\n       Exception table:\n          from    to  target type\n              0    19    22   Class java/io/IOException\n       LineNumberTable:\n         line 53: 0\n         line 54: 5\n         line 55: 14\n-        line 58: 19\n-        line 56: 22\n+        line 56: 19\n         line 57: 23\n         line 59: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           23       5     2     e   Ljava/io/IOException;\n             0      30     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0      30     1     c   C\n+           23       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 86 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n          2: iload_2\n          3: isub\n-         4: invokevirtual #2                  // Method beforeWrite:(I)V\n+         4: invokevirtual #21                 // Method beforeWrite:(I)V\n          7: aload_0\n-         8: getfield      #3                  // Field out:Ljava/io/Writer;\n+         8: getfield      #25                 // Field out:Ljava/io/Writer;\n         11: aload_1\n         12: iload_2\n         13: iload_3\n-        14: invokevirtual #8                  // Method java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+        14: invokevirtual #45                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n         17: pop\n         18: aload_0\n         19: iload_3\n         20: iload_2\n         21: isub\n-        22: invokevirtual #5                  // Method afterWrite:(I)V\n+        22: invokevirtual #32                 // Method afterWrite:(I)V\n         25: goto          36\n         28: astore        4\n         30: aload_0\n         31: aload         4\n-        33: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        33: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         36: aload_0\n         37: areturn\n       Exception table:\n          from    to  target type\n              0    25    28   Class java/io/IOException\n       LineNumberTable:\n         line 74: 0\n         line 75: 7\n         line 76: 18\n-        line 79: 25\n-        line 77: 28\n+        line 77: 25\n         line 78: 30\n         line 80: 36\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           30       6     4     e   Ljava/io/IOException;\n             0      38     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0      38     1   csq   Ljava/lang/CharSequence;\n             0      38     2 start   I\n             0      38     3   end   I\n+           30       6     4     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 92 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokestatic  #9                  // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+         1: invokestatic  #53                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n          4: istore_2\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #2                  // Method beforeWrite:(I)V\n+         7: invokevirtual #21                 // Method beforeWrite:(I)V\n         10: aload_0\n-        11: getfield      #3                  // Field out:Ljava/io/Writer;\n+        11: getfield      #25                 // Field out:Ljava/io/Writer;\n         14: aload_1\n-        15: invokevirtual #10                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+        15: invokevirtual #59                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n         18: pop\n         19: aload_0\n         20: iload_2\n-        21: invokevirtual #5                  // Method afterWrite:(I)V\n+        21: invokevirtual #32                 // Method afterWrite:(I)V\n         24: goto          33\n         27: astore_2\n         28: aload_0\n         29: aload_2\n-        30: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        30: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         33: aload_0\n         34: areturn\n       Exception table:\n          from    to  target type\n              0    24    27   Class java/io/IOException\n       LineNumberTable:\n         line 93: 0\n         line 94: 5\n         line 95: 10\n         line 96: 19\n-        line 99: 24\n-        line 97: 27\n+        line 97: 24\n         line 98: 28\n         line 100: 33\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            5      19     2   len   I\n-           28       5     2     e   Ljava/io/IOException;\n             0      35     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0      35     1   csq   Ljava/lang/CharSequence;\n+            5      19     2   len   I\n+           28       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 91 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #2                  // Method beforeWrite:(I)V\n+         2: invokevirtual #21                 // Method beforeWrite:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field out:Ljava/io/Writer;\n+         6: getfield      #25                 // Field out:Ljava/io/Writer;\n          9: iload_1\n-        10: invokevirtual #11                 // Method java/io/Writer.write:(I)V\n+        10: invokevirtual #63                 // Method java/io/Writer.write:(I)V\n         13: aload_0\n         14: iconst_1\n-        15: invokevirtual #5                  // Method afterWrite:(I)V\n+        15: invokevirtual #32                 // Method afterWrite:(I)V\n         18: goto          27\n         21: astore_2\n         22: aload_0\n         23: aload_2\n-        24: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        24: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         27: return\n       Exception table:\n          from    to  target type\n              0    18    21   Class java/io/IOException\n       LineNumberTable:\n         line 111: 0\n         line 112: 5\n         line 113: 13\n-        line 116: 18\n-        line 114: 21\n+        line 114: 18\n         line 115: 22\n         line 117: 27\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           22       5     2     e   Ljava/io/IOException;\n             0      28     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0      28     1     c   I\n+           22       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 85 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(char[]) throws java.io.IOException;\n     descriptor: ([C)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokestatic  #12                 // Method org/apache/commons/io/IOUtils.length:([C)I\n+         1: invokestatic  #66                 // Method org/apache/commons/io/IOUtils.length:([C)I\n          4: istore_2\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #2                  // Method beforeWrite:(I)V\n+         7: invokevirtual #21                 // Method beforeWrite:(I)V\n         10: aload_0\n-        11: getfield      #3                  // Field out:Ljava/io/Writer;\n+        11: getfield      #25                 // Field out:Ljava/io/Writer;\n         14: aload_1\n-        15: invokevirtual #13                 // Method java/io/Writer.write:([C)V\n+        15: invokevirtual #69                 // Method java/io/Writer.write:([C)V\n         18: aload_0\n         19: iload_2\n-        20: invokevirtual #5                  // Method afterWrite:(I)V\n+        20: invokevirtual #32                 // Method afterWrite:(I)V\n         23: goto          32\n         26: astore_2\n         27: aload_0\n         28: aload_2\n-        29: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        29: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         32: return\n       Exception table:\n          from    to  target type\n              0    23    26   Class java/io/IOException\n       LineNumberTable:\n         line 127: 0\n         line 128: 5\n         line 129: 10\n         line 130: 18\n-        line 133: 23\n-        line 131: 26\n+        line 131: 23\n         line 132: 27\n         line 134: 32\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            5      18     2   len   I\n-           27       5     2     e   Ljava/io/IOException;\n             0      33     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0      33     1  cbuf   [C\n+            5      18     2   len   I\n+           27       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 90 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #2                  // Method beforeWrite:(I)V\n+         2: invokevirtual #21                 // Method beforeWrite:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field out:Ljava/io/Writer;\n+         6: getfield      #25                 // Field out:Ljava/io/Writer;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #14                 // Method java/io/Writer.write:([CII)V\n+        12: invokevirtual #74                 // Method java/io/Writer.write:([CII)V\n         15: aload_0\n         16: iload_3\n-        17: invokevirtual #5                  // Method afterWrite:(I)V\n+        17: invokevirtual #32                 // Method afterWrite:(I)V\n         20: goto          31\n         23: astore        4\n         25: aload_0\n         26: aload         4\n-        28: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        28: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         31: return\n       Exception table:\n          from    to  target type\n              0    20    23   Class java/io/IOException\n       LineNumberTable:\n         line 146: 0\n         line 147: 5\n         line 148: 15\n-        line 151: 20\n-        line 149: 23\n+        line 149: 20\n         line 150: 25\n         line 152: 31\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           25       6     4     e   Ljava/io/IOException;\n             0      32     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0      32     1  cbuf   [C\n             0      32     2   off   I\n             0      32     3   len   I\n+           25       6     4     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 87 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokestatic  #9                  // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+         1: invokestatic  #53                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n          4: istore_2\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #2                  // Method beforeWrite:(I)V\n+         7: invokevirtual #21                 // Method beforeWrite:(I)V\n         10: aload_0\n-        11: getfield      #3                  // Field out:Ljava/io/Writer;\n+        11: getfield      #25                 // Field out:Ljava/io/Writer;\n         14: aload_1\n-        15: invokevirtual #15                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+        15: invokevirtual #78                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n         18: aload_0\n         19: iload_2\n-        20: invokevirtual #5                  // Method afterWrite:(I)V\n+        20: invokevirtual #32                 // Method afterWrite:(I)V\n         23: goto          32\n         26: astore_2\n         27: aload_0\n         28: aload_2\n-        29: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        29: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         32: return\n       Exception table:\n          from    to  target type\n              0    23    26   Class java/io/IOException\n       LineNumberTable:\n         line 162: 0\n         line 163: 5\n         line 164: 10\n         line 165: 18\n-        line 168: 23\n-        line 166: 26\n+        line 166: 23\n         line 167: 27\n         line 169: 32\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            5      18     2   len   I\n-           27       5     2     e   Ljava/io/IOException;\n             0      33     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0      33     1   str   Ljava/lang/String;\n+            5      18     2   len   I\n+           27       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 90 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #2                  // Method beforeWrite:(I)V\n+         2: invokevirtual #21                 // Method beforeWrite:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field out:Ljava/io/Writer;\n+         6: getfield      #25                 // Field out:Ljava/io/Writer;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #16                 // Method java/io/Writer.write:(Ljava/lang/String;II)V\n+        12: invokevirtual #83                 // Method java/io/Writer.write:(Ljava/lang/String;II)V\n         15: aload_0\n         16: iload_3\n-        17: invokevirtual #5                  // Method afterWrite:(I)V\n+        17: invokevirtual #32                 // Method afterWrite:(I)V\n         20: goto          31\n         23: astore        4\n         25: aload_0\n         26: aload         4\n-        28: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        28: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         31: return\n       Exception table:\n          from    to  target type\n              0    20    23   Class java/io/IOException\n       LineNumberTable:\n         line 181: 0\n         line 182: 5\n         line 183: 15\n-        line 186: 20\n-        line 184: 23\n+        line 184: 20\n         line 185: 25\n         line 187: 31\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           25       6     4     e   Ljava/io/IOException;\n             0      32     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0      32     1   str   Ljava/lang/String;\n             0      32     2   off   I\n             0      32     3   len   I\n+           25       6     4     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 87 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field out:Ljava/io/Writer;\n-         4: invokevirtual #17                 // Method java/io/Writer.flush:()V\n+         1: getfield      #25                 // Field out:Ljava/io/Writer;\n+         4: invokevirtual #87                 // Method java/io/Writer.flush:()V\n          7: goto          16\n         10: astore_1\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        13: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         16: return\n       Exception table:\n          from    to  target type\n              0     7    10   Class java/io/IOException\n       LineNumberTable:\n         line 196: 0\n-        line 199: 7\n-        line 197: 10\n+        line 197: 7\n         line 198: 11\n         line 200: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           11       5     1     e   Ljava/io/IOException;\n             0      17     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n+           11       5     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field out:Ljava/io/Writer;\n+         1: getfield      #25                 // Field out:Ljava/io/Writer;\n          4: aload_0\n-         5: invokedynamic #18,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n-        10: invokestatic  #19                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+         5: invokedynamic #90,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+        10: invokestatic  #94                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n         13: return\n       LineNumberTable:\n         line 208: 0\n         line 209: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void beforeWrite(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 227: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void afterWrite(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 246: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void handleIOException(java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/io/IOException;)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n          1: athrow\n       LineNumberTable:\n         line 260: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n             0       2     1     e   Ljava/io/IOException;\n-    Exceptions:\n-      throws java.io.IOException\n-\n-  public java.lang.Appendable append(char) throws java.io.IOException;\n-    descriptor: (C)Ljava/lang/Appendable;\n-    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n-    Code:\n-      stack=2, locals=2, args_size=2\n-         0: aload_0\n-         1: iload_1\n-         2: invokevirtual #20                 // Method append:(C)Ljava/io/Writer;\n-         5: areturn\n-      LineNumberTable:\n-        line 31: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #21                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+         4: invokevirtual #99                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n          7: areturn\n       LineNumberTable:\n-        line 31: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       8     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #22                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+         2: invokevirtual #101                // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n-        line 31: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n+\n+  public java.lang.Appendable append(char) throws java.io.IOException;\n+    descriptor: (C)Ljava/lang/Appendable;\n+    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Exceptions:\n       throws java.io.IOException\n+    Code:\n+      stack=2, locals=2, args_size=2\n+         0: aload_0\n+         1: iload_1\n+         2: invokevirtual #103                // Method append:(C)Ljava/io/Writer;\n+         5: areturn\n+      LineNumberTable:\n+        line 1: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n }\n SourceFile: \"ProxyWriter.java\"\n-InnerClasses:\n-  public static final #118= #117 of #121; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #94 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #113 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #95 (Ljava/lang/Object;)V\n-      #96 REF_invokeVirtual org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n-      #97 (Ljava/io/IOException;)V\n+      #115 (Ljava/lang/Object;)V\n+      #116 REF_invokeVirtual org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n+      #117 (Ljava/io/IOException;)V\n+InnerClasses:\n+  public static final #123= #119 of #121; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
