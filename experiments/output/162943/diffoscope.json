{"diffoscope-json-version": 1, "source1": "first/BCELifier.class", "source2": "second/BCELifier.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,214 +1,214 @@\n-  SHA-256 checksum deae915312fa28b3ebb6e8d503cd33d4dd980826e22cd70ad4d24db8243e600e\n+  SHA-256 checksum efa38fd838d7a8bd7bd68efbfe829d7e8aab5bc66e32ba6a54ab6ab263ce9a78\n   Compiled from \"BCELifier.java\"\n public class org.apache.bcel.util.BCELifier extends org.apache.bcel.classfile.EmptyVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #9                          // org/apache/bcel/util/BCELifier\n   super_class: #196                       // org/apache/bcel/classfile/EmptyVisitor\n   interfaces: 0, fields: 5, methods: 15, attributes: 2\n Constant pool:\n-    #1 = Methodref          #308.#309     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-    #2 = Class              #310          // org/apache/bcel/classfile/ClassParser\n-    #3 = Methodref          #2.#311       // org/apache/bcel/classfile/ClassParser.\"<init>\":(Ljava/lang/String;)V\n-    #4 = Methodref          #2.#312       // org/apache/bcel/classfile/ClassParser.parse:()Lorg/apache/bcel/classfile/JavaClass;\n-    #5 = Fieldref           #313.#314     // java/lang/System.out:Ljava/io/PrintStream;\n-    #6 = String             #315          // Usage: BCELifier className\n-    #7 = Methodref          #316.#317     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-    #8 = String             #318          // \\tThe class must exist on the classpath\n-    #9 = Class              #319          // org/apache/bcel/util/BCELifier\n-   #10 = Methodref          #9.#320       // org/apache/bcel/util/BCELifier.getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-   #11 = Methodref          #9.#321       // org/apache/bcel/util/BCELifier.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n-   #12 = Methodref          #9.#322       // org/apache/bcel/util/BCELifier.start:()V\n-   #13 = String             #323          // Type.NO_ARGS\n-   #14 = Class              #324          // java/lang/StringBuilder\n-   #15 = Methodref          #14.#325      // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = Methodref          #9.#326       // org/apache/bcel/util/BCELifier.printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-   #17 = Methodref          #14.#327      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #18 = String             #328          // ,\n-   #19 = String             #329          // new Type[] {\n-   #20 = Methodref          #14.#330      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #21 = String             #331          //  }\n-   #22 = Fieldref           #197.#332     // org/apache/bcel/util/BCELifier$FLAGS.UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-   #23 = Methodref          #9.#333       // org/apache/bcel/util/BCELifier.printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n-   #24 = String             #334          // 0\n-   #25 = Class              #335          // org/apache/bcel/Const\n+    #1 = Methodref          #304.#305     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+    #2 = Class              #306          // org/apache/bcel/classfile/ClassParser\n+    #3 = Methodref          #2.#307       // org/apache/bcel/classfile/ClassParser.\"<init>\":(Ljava/lang/String;)V\n+    #4 = Methodref          #2.#308       // org/apache/bcel/classfile/ClassParser.parse:()Lorg/apache/bcel/classfile/JavaClass;\n+    #5 = Fieldref           #309.#310     // java/lang/System.out:Ljava/io/PrintStream;\n+    #6 = String             #311          // Usage: BCELifier className\n+    #7 = Methodref          #312.#313     // java/io/PrintStream.println:(Ljava/lang/String;)V\n+    #8 = String             #314          // \\tThe class must exist on the classpath\n+    #9 = Class              #315          // org/apache/bcel/util/BCELifier\n+   #10 = Methodref          #9.#316       // org/apache/bcel/util/BCELifier.getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+   #11 = Methodref          #9.#317       // org/apache/bcel/util/BCELifier.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n+   #12 = Methodref          #9.#318       // org/apache/bcel/util/BCELifier.start:()V\n+   #13 = String             #319          // Type.NO_ARGS\n+   #14 = Class              #320          // java/lang/StringBuilder\n+   #15 = Methodref          #14.#321      // java/lang/StringBuilder.\"<init>\":()V\n+   #16 = Methodref          #9.#322       // org/apache/bcel/util/BCELifier.printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+   #17 = Methodref          #14.#323      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #18 = String             #324          // ,\n+   #19 = String             #325          // new Type[] {\n+   #20 = Methodref          #14.#326      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #21 = String             #327          //  }\n+   #22 = Fieldref           #197.#328     // org/apache/bcel/util/BCELifier$FLAGS.UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+   #23 = Methodref          #9.#329       // org/apache/bcel/util/BCELifier.printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n+   #24 = String             #330          // 0\n+   #25 = Class              #331          // org/apache/bcel/Const\n    #26 = Integer            32768\n-   #27 = Fieldref           #197.#336     // org/apache/bcel/util/BCELifier$FLAGS.CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-   #28 = Fieldref           #9.#337       // org/apache/bcel/util/BCELifier.CONSTANT_PREFIX:Ljava/lang/String;\n-   #29 = String             #338          // ACC_SUPER |\n-   #30 = Fieldref           #197.#339     // org/apache/bcel/util/BCELifier$FLAGS.METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-   #31 = String             #340          // ACC_BRIDGE |\n-   #32 = String             #341          // ACC_VARARGS |\n-   #33 = Fieldref           #25.#342      // org/apache/bcel/Const.ACCESS_NAMES_LENGTH:I\n-   #34 = String             #343          // ACC_\n-   #35 = Methodref          #25.#344      // org/apache/bcel/Const.getAccessName:(I)Ljava/lang/String;\n-   #36 = Fieldref           #345.#346     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n-   #37 = Methodref          #347.#348     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #38 = String             #349          //  |\n-   #39 = String             #350          // ACC_BIT %x |\n-   #40 = Class              #351          // java/lang/Object\n-   #41 = Methodref          #352.#353     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #42 = Methodref          #347.#354     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #43 = Methodref          #347.#355     // java/lang/String.length:()I\n-   #44 = Methodref          #347.#356     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #45 = Methodref          #357.#358     // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-   #46 = Methodref          #357.#359     // org/apache/bcel/generic/Type.getType:()B\n-   #47 = String             #360          // Type.\n-   #48 = Methodref          #25.#361      // org/apache/bcel/Const.getTypeName:(I)Ljava/lang/String;\n-   #49 = Methodref          #357.#330     // org/apache/bcel/generic/Type.toString:()Ljava/lang/String;\n-   #50 = String             #362          // java.lang.String\n-   #51 = Methodref          #347.#363     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #52 = String             #364          // Type.STRING\n-   #53 = String             #365          // java.lang.Object\n-   #54 = String             #366          // Type.OBJECT\n-   #55 = String             #367          // java.lang.StringBuffer\n-   #56 = String             #368          // Type.STRINGBUFFER\n-   #57 = Class              #369          // org/apache/bcel/generic/ArrayType\n-   #58 = String             #370          // new ArrayType(\n-   #59 = Methodref          #57.#371      // org/apache/bcel/generic/ArrayType.getBasicType:()Lorg/apache/bcel/generic/Type;\n-   #60 = Methodref          #57.#372      // org/apache/bcel/generic/ArrayType.getDimensions:()I\n-   #61 = Methodref          #14.#373      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #62 = String             #374          // )\n-   #63 = String             #375          // new ObjectType(\\\"\n-   #64 = Methodref          #376.#377     // org/apache/bcel/classfile/Utility.signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #65 = String             #378          // \\\")\n-   #66 = Methodref          #357.#379     // org/apache/bcel/generic/Type.getSignature:()Ljava/lang/String;\n-   #67 = Methodref          #9.#380       // org/apache/bcel/util/BCELifier.printType:(Ljava/lang/String;)Ljava/lang/String;\n-   #68 = Methodref          #196.#325     // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n-   #69 = Fieldref           #9.#381       // org/apache/bcel/util/BCELifier.clazz:Lorg/apache/bcel/classfile/JavaClass;\n-   #70 = Class              #382          // java/io/PrintWriter\n-   #71 = Class              #383          // java/io/OutputStreamWriter\n-   #72 = Fieldref           #384.#385     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #73 = Methodref          #71.#386      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #74 = Methodref          #70.#387      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n-   #75 = Fieldref           #9.#388       // org/apache/bcel/util/BCELifier.printWriter:Ljava/io/PrintWriter;\n-   #76 = Class              #389          // org/apache/bcel/generic/ConstantPoolGen\n-   #77 = Methodref          #390.#391     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #78 = Methodref          #76.#392      // org/apache/bcel/generic/ConstantPoolGen.\"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #79 = Fieldref           #9.#393       // org/apache/bcel/util/BCELifier.constantPoolGen:Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #80 = String             #394          //   public void create(OutputStream out) throws IOException {\n-   #81 = Methodref          #70.#317      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n-   #82 = Methodref          #390.#395     // org/apache/bcel/classfile/JavaClass.getFields:()[Lorg/apache/bcel/classfile/Field;\n-   #83 = String             #396          //     createFields();\n-   #84 = Methodref          #390.#397     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n-   #85 = String             #398          //     createMethod_\n-   #86 = String             #399          // ();\n-   #87 = String             #400          //     _cg.getJavaClass().dump(out);\n-   #88 = String             #401          //   }\n-   #89 = Methodref          #70.#402      // java/io/PrintWriter.println:()V\n-   #90 = Methodref          #390.#403     // org/apache/bcel/classfile/JavaClass.getClassName:()Ljava/lang/String;\n-   #91 = String             #404          //   public static void main(String[] args) throws Exception {\n-   #92 = String             #405          //\n-   #93 = String             #406          // Creator creator = new\n-   #94 = String             #407          // Creator();\n-   #95 = String             #408          //     creator.create(new FileOutputStream(\\\"\n-   #96 = String             #409          // .class\\\"));\n-   #97 = Methodref          #9.#410       // org/apache/bcel/util/BCELifier.visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n-   #98 = Methodref          #70.#411      // java/io/PrintWriter.flush:()V\n-   #99 = String             #412          //     field = new FieldGen(\n-  #100 = Methodref          #413.#414     // org/apache/bcel/classfile/Field.getAccessFlags:()I\n-  #101 = Methodref          #9.#415       // org/apache/bcel/util/BCELifier.printFlags:(I)Ljava/lang/String;\n-  #102 = Methodref          #413.#379     // org/apache/bcel/classfile/Field.getSignature:()Ljava/lang/String;\n-  #103 = String             #416          // , \\\"\n-  #104 = Methodref          #413.#417     // org/apache/bcel/classfile/Field.getName:()Ljava/lang/String;\n-  #105 = String             #418          // \\\", _cp);\n-  #106 = Methodref          #413.#419     // org/apache/bcel/classfile/Field.getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n-  #107 = String             #420          //     field.setInitValue(\n-  #108 = Methodref          #70.#421      // java/io/PrintWriter.print:(Ljava/lang/String;)V\n-  #109 = Methodref          #413.#422     // org/apache/bcel/classfile/Field.getType:()Lorg/apache/bcel/generic/Type;\n-  #110 = Fieldref           #357.#423     // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n-  #111 = String             #424          // (char)\n-  #112 = Fieldref           #357.#425     // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n-  #113 = String             #426          // (short)\n-  #114 = Fieldref           #357.#427     // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n-  #115 = String             #428          // (byte)\n-  #116 = Methodref          #70.#429      // java/io/PrintWriter.print:(Ljava/lang/Object;)V\n-  #117 = Fieldref           #357.#430     // org/apache/bcel/generic/Type.LONG:Lorg/apache/bcel/generic/BasicType;\n-  #118 = String             #431          // L\n-  #119 = Fieldref           #357.#432     // org/apache/bcel/generic/Type.FLOAT:Lorg/apache/bcel/generic/BasicType;\n-  #120 = String             #433          // F\n-  #121 = Fieldref           #357.#434     // org/apache/bcel/generic/Type.DOUBLE:Lorg/apache/bcel/generic/BasicType;\n-  #122 = String             #435          // D\n-  #123 = String             #436          // );\n-  #124 = String             #437          //     _cg.addField(field.getField());\n-  #125 = Methodref          #390.#438     // org/apache/bcel/classfile/JavaClass.getSuperclassName:()Ljava/lang/String;\n-  #126 = Methodref          #390.#439     // org/apache/bcel/classfile/JavaClass.getPackageName:()Ljava/lang/String;\n-  #127 = Methodref          #390.#440     // org/apache/bcel/classfile/JavaClass.getInterfaceNames:()[Ljava/lang/String;\n-  #128 = Methodref          #376.#441     // org/apache/bcel/classfile/Utility.printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n-  #129 = Methodref          #442.#443     // org/apache/commons/lang3/StringUtils.isNotEmpty:(Ljava/lang/CharSequence;)Z\n-  #130 = Methodref          #347.#444     // java/lang/String.substring:(I)Ljava/lang/String;\n-  #131 = String             #445          // package\n-  #132 = String             #446          // ;\n-  #133 = String             #447          // import\n-  #134 = Fieldref           #9.#448       // org/apache/bcel/util/BCELifier.BASE_PACKAGE:Ljava/lang/String;\n-  #135 = String             #449          // .generic.*;\n-  #136 = String             #450          // .classfile.*;\n-  #137 = String             #451          // .*;\n-  #138 = String             #452          // import java.io.*;\n-  #139 = String             #453          // public class\n-  #140 = String             #454          // Creator {\n-  #141 = String             #455          //   private InstructionFactory _factory;\n-  #142 = String             #456          //   private ConstantPoolGen    _cp;\n-  #143 = String             #457          //   private ClassGen           _cg;\n-  #144 = String             #458          //   public\n-  #145 = String             #459          // Creator() {\n-  #146 = String             #460          //     _cg = new ClassGen(\\\"\n-  #147 = Methodref          #347.#461     // java/lang/String.isEmpty:()Z\n-  #148 = String             #462          // .\n-  #149 = String             #463          // \\\", \\\"\n-  #150 = Methodref          #390.#464     // org/apache/bcel/classfile/JavaClass.getSourceFileName:()Ljava/lang/String;\n-  #151 = String             #465          // \\\",\n-  #152 = Methodref          #390.#414     // org/apache/bcel/classfile/JavaClass.getAccessFlags:()I\n-  #153 = String             #466          // , new String[] {\n-  #154 = String             #467          //  });\n-  #155 = String             #468          //     _cg.setMajor(\n-  #156 = Methodref          #390.#469     // org/apache/bcel/classfile/JavaClass.getMajor:()I\n-  #157 = String             #470          //     _cg.setMinor(\n-  #158 = Methodref          #390.#471     // org/apache/bcel/classfile/JavaClass.getMinor:()I\n-  #159 = String             #472          //     _cp = _cg.getConstantPool();\n-  #160 = String             #473          //     _factory = new InstructionFactory(_cg, _cp);\n-  #161 = Methodref          #9.#474       // org/apache/bcel/util/BCELifier.printCreate:()V\n-  #162 = String             #475          //   private void createFields() {\n-  #163 = String             #476          //     FieldGen field;\n-  #164 = Methodref          #413.#477     // org/apache/bcel/classfile/Field.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n-  #165 = String             #478          //   private void createMethod_\n-  #166 = String             #479          // () {\n-  #167 = Methodref          #480.#477     // org/apache/bcel/classfile/Method.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n-  #168 = Methodref          #9.#481       // org/apache/bcel/util/BCELifier.printMain:()V\n-  #169 = String             #482          // }\n-  #170 = Class              #483          // org/apache/bcel/generic/MethodGen\n-  #171 = Methodref          #170.#484     // org/apache/bcel/generic/MethodGen.\"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #172 = String             #485          //     InstructionList il = new InstructionList();\n-  #173 = String             #486          //     MethodGen method = new MethodGen(\n-  #174 = Methodref          #480.#414     // org/apache/bcel/classfile/Method.getAccessFlags:()I\n-  #175 = Methodref          #170.#487     // org/apache/bcel/generic/MethodGen.getReturnType:()Lorg/apache/bcel/generic/Type;\n-  #176 = Methodref          #170.#488     // org/apache/bcel/generic/MethodGen.getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n-  #177 = Methodref          #9.#489       // org/apache/bcel/util/BCELifier.printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #178 = Methodref          #170.#490     // org/apache/bcel/generic/MethodGen.getArgumentNames:()[Ljava/lang/String;\n-  #179 = String             #491          //  }, \\\"\n-  #180 = Methodref          #480.#417     // org/apache/bcel/classfile/Method.getName:()Ljava/lang/String;\n-  #181 = String             #492          // \\\", il, _cp);\n-  #182 = Methodref          #480.#493     // org/apache/bcel/classfile/Method.getExceptionTable:()Lorg/apache/bcel/classfile/ExceptionTable;\n-  #183 = Methodref          #494.#495     // org/apache/bcel/classfile/ExceptionTable.getExceptionNames:()[Ljava/lang/String;\n-  #184 = String             #496          //     method.addException(\\\"\n-  #185 = String             #497          // \\\");\n-  #186 = Class              #498          // org/apache/bcel/util/BCELFactory\n-  #187 = Methodref          #186.#499     // org/apache/bcel/util/BCELFactory.\"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n-  #188 = Methodref          #186.#322     // org/apache/bcel/util/BCELFactory.start:()V\n-  #189 = String             #500          //     method.setMaxStack();\n-  #190 = String             #501          //     method.setMaxLocals();\n-  #191 = String             #502          //     _cg.addMethod(method.getMethod());\n-  #192 = String             #503          //     il.dispose();\n-  #193 = Methodref          #504.#505     // java/lang/Class.getPackage:()Ljava/lang/Package;\n-  #194 = Methodref          #506.#417     // java/lang/Package.getName:()Ljava/lang/String;\n-  #195 = Methodref          #504.#507     // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-  #196 = Class              #508          // org/apache/bcel/classfile/EmptyVisitor\n-  #197 = Class              #509          // org/apache/bcel/util/BCELifier$FLAGS\n+   #27 = Fieldref           #197.#332     // org/apache/bcel/util/BCELifier$FLAGS.CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+   #28 = Fieldref           #9.#333       // org/apache/bcel/util/BCELifier.CONSTANT_PREFIX:Ljava/lang/String;\n+   #29 = String             #334          // ACC_SUPER |\n+   #30 = Fieldref           #197.#335     // org/apache/bcel/util/BCELifier$FLAGS.METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+   #31 = String             #336          // ACC_BRIDGE |\n+   #32 = String             #337          // ACC_VARARGS |\n+   #33 = Fieldref           #25.#338      // org/apache/bcel/Const.ACCESS_NAMES_LENGTH:I\n+   #34 = String             #339          // ACC_\n+   #35 = Methodref          #25.#340      // org/apache/bcel/Const.getAccessName:(I)Ljava/lang/String;\n+   #36 = Fieldref           #341.#342     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n+   #37 = Methodref          #285.#343     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #38 = String             #344          //  |\n+   #39 = String             #345          // ACC_BIT %x |\n+   #40 = Class              #346          // java/lang/Object\n+   #41 = Methodref          #347.#348     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #42 = Methodref          #285.#349     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #43 = Methodref          #285.#350     // java/lang/String.length:()I\n+   #44 = Methodref          #285.#351     // java/lang/String.substring:(II)Ljava/lang/String;\n+   #45 = Methodref          #255.#352     // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+   #46 = Methodref          #255.#353     // org/apache/bcel/generic/Type.getType:()B\n+   #47 = String             #354          // Type.\n+   #48 = Methodref          #25.#355      // org/apache/bcel/Const.getTypeName:(I)Ljava/lang/String;\n+   #49 = Methodref          #255.#326     // org/apache/bcel/generic/Type.toString:()Ljava/lang/String;\n+   #50 = String             #356          // java.lang.String\n+   #51 = Methodref          #285.#357     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #52 = String             #358          // Type.STRING\n+   #53 = String             #359          // java.lang.Object\n+   #54 = String             #360          // Type.OBJECT\n+   #55 = String             #361          // java.lang.StringBuffer\n+   #56 = String             #362          // Type.STRINGBUFFER\n+   #57 = Class              #363          // org/apache/bcel/generic/ArrayType\n+   #58 = String             #364          // new ArrayType(\n+   #59 = Methodref          #57.#365      // org/apache/bcel/generic/ArrayType.getBasicType:()Lorg/apache/bcel/generic/Type;\n+   #60 = Methodref          #57.#366      // org/apache/bcel/generic/ArrayType.getDimensions:()I\n+   #61 = Methodref          #14.#367      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #62 = String             #368          // )\n+   #63 = String             #369          // new ObjectType(\\\"\n+   #64 = Methodref          #370.#371     // org/apache/bcel/classfile/Utility.signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #65 = String             #372          // \\\")\n+   #66 = Methodref          #255.#373     // org/apache/bcel/generic/Type.getSignature:()Ljava/lang/String;\n+   #67 = Methodref          #9.#374       // org/apache/bcel/util/BCELifier.printType:(Ljava/lang/String;)Ljava/lang/String;\n+   #68 = Methodref          #196.#321     // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n+   #69 = Fieldref           #9.#375       // org/apache/bcel/util/BCELifier.clazz:Lorg/apache/bcel/classfile/JavaClass;\n+   #70 = Class              #376          // java/io/PrintWriter\n+   #71 = Class              #377          // java/io/OutputStreamWriter\n+   #72 = Fieldref           #378.#379     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #73 = Methodref          #71.#380      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #74 = Methodref          #70.#381      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n+   #75 = Fieldref           #9.#382       // org/apache/bcel/util/BCELifier.printWriter:Ljava/io/PrintWriter;\n+   #76 = Class              #383          // org/apache/bcel/generic/ConstantPoolGen\n+   #77 = Methodref          #217.#384     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #78 = Methodref          #76.#385      // org/apache/bcel/generic/ConstantPoolGen.\"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #79 = Fieldref           #9.#386       // org/apache/bcel/util/BCELifier.constantPoolGen:Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #80 = String             #387          //   public void create(OutputStream out) throws IOException {\n+   #81 = Methodref          #70.#313      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n+   #82 = Methodref          #217.#388     // org/apache/bcel/classfile/JavaClass.getFields:()[Lorg/apache/bcel/classfile/Field;\n+   #83 = String             #389          //     createFields();\n+   #84 = Methodref          #217.#390     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n+   #85 = String             #391          //     createMethod_\n+   #86 = String             #392          // ();\n+   #87 = String             #393          //     _cg.getJavaClass().dump(out);\n+   #88 = String             #394          //   }\n+   #89 = Methodref          #70.#395      // java/io/PrintWriter.println:()V\n+   #90 = Methodref          #217.#396     // org/apache/bcel/classfile/JavaClass.getClassName:()Ljava/lang/String;\n+   #91 = String             #397          //   public static void main(String[] args) throws Exception {\n+   #92 = String             #398          //\n+   #93 = String             #399          // Creator creator = new\n+   #94 = String             #400          // Creator();\n+   #95 = String             #401          //     creator.create(new FileOutputStream(\\\"\n+   #96 = String             #402          // .class\\\"));\n+   #97 = Methodref          #9.#403       // org/apache/bcel/util/BCELifier.visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n+   #98 = Methodref          #70.#404      // java/io/PrintWriter.flush:()V\n+   #99 = String             #405          //     field = new FieldGen(\n+  #100 = Methodref          #406.#407     // org/apache/bcel/classfile/Field.getAccessFlags:()I\n+  #101 = Methodref          #9.#408       // org/apache/bcel/util/BCELifier.printFlags:(I)Ljava/lang/String;\n+  #102 = Methodref          #406.#373     // org/apache/bcel/classfile/Field.getSignature:()Ljava/lang/String;\n+  #103 = String             #409          // , \\\"\n+  #104 = Methodref          #406.#410     // org/apache/bcel/classfile/Field.getName:()Ljava/lang/String;\n+  #105 = String             #411          // \\\", _cp);\n+  #106 = Methodref          #406.#412     // org/apache/bcel/classfile/Field.getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n+  #107 = String             #413          //     field.setInitValue(\n+  #108 = Methodref          #70.#414      // java/io/PrintWriter.print:(Ljava/lang/String;)V\n+  #109 = Methodref          #406.#415     // org/apache/bcel/classfile/Field.getType:()Lorg/apache/bcel/generic/Type;\n+  #110 = Fieldref           #255.#416     // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n+  #111 = String             #417          // (char)\n+  #112 = Fieldref           #255.#418     // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n+  #113 = String             #419          // (short)\n+  #114 = Fieldref           #255.#420     // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n+  #115 = String             #421          // (byte)\n+  #116 = Methodref          #70.#422      // java/io/PrintWriter.print:(Ljava/lang/Object;)V\n+  #117 = Fieldref           #255.#423     // org/apache/bcel/generic/Type.LONG:Lorg/apache/bcel/generic/BasicType;\n+  #118 = String             #424          // L\n+  #119 = Fieldref           #255.#425     // org/apache/bcel/generic/Type.FLOAT:Lorg/apache/bcel/generic/BasicType;\n+  #120 = String             #426          // F\n+  #121 = Fieldref           #255.#427     // org/apache/bcel/generic/Type.DOUBLE:Lorg/apache/bcel/generic/BasicType;\n+  #122 = String             #428          // D\n+  #123 = String             #429          // );\n+  #124 = String             #430          //     _cg.addField(field.getField());\n+  #125 = Methodref          #217.#431     // org/apache/bcel/classfile/JavaClass.getSuperclassName:()Ljava/lang/String;\n+  #126 = Methodref          #217.#432     // org/apache/bcel/classfile/JavaClass.getPackageName:()Ljava/lang/String;\n+  #127 = Methodref          #217.#433     // org/apache/bcel/classfile/JavaClass.getInterfaceNames:()[Ljava/lang/String;\n+  #128 = Methodref          #370.#434     // org/apache/bcel/classfile/Utility.printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n+  #129 = Methodref          #435.#436     // org/apache/commons/lang3/StringUtils.isNotEmpty:(Ljava/lang/CharSequence;)Z\n+  #130 = Methodref          #285.#437     // java/lang/String.substring:(I)Ljava/lang/String;\n+  #131 = String             #438          // package\n+  #132 = String             #439          // ;\n+  #133 = String             #440          // import\n+  #134 = Fieldref           #9.#441       // org/apache/bcel/util/BCELifier.BASE_PACKAGE:Ljava/lang/String;\n+  #135 = String             #442          // .generic.*;\n+  #136 = String             #443          // .classfile.*;\n+  #137 = String             #444          // .*;\n+  #138 = String             #445          // import java.io.*;\n+  #139 = String             #446          // public class\n+  #140 = String             #447          // Creator {\n+  #141 = String             #448          //   private InstructionFactory _factory;\n+  #142 = String             #449          //   private ConstantPoolGen    _cp;\n+  #143 = String             #450          //   private ClassGen           _cg;\n+  #144 = String             #451          //   public\n+  #145 = String             #452          // Creator() {\n+  #146 = String             #453          //     _cg = new ClassGen(\\\"\n+  #147 = Methodref          #285.#454     // java/lang/String.isEmpty:()Z\n+  #148 = String             #455          // .\n+  #149 = String             #456          // \\\", \\\"\n+  #150 = Methodref          #217.#457     // org/apache/bcel/classfile/JavaClass.getSourceFileName:()Ljava/lang/String;\n+  #151 = String             #458          // \\\",\n+  #152 = Methodref          #217.#407     // org/apache/bcel/classfile/JavaClass.getAccessFlags:()I\n+  #153 = String             #459          // , new String[] {\n+  #154 = String             #460          //  });\n+  #155 = String             #461          //     _cg.setMajor(\n+  #156 = Methodref          #217.#462     // org/apache/bcel/classfile/JavaClass.getMajor:()I\n+  #157 = String             #463          //     _cg.setMinor(\n+  #158 = Methodref          #217.#464     // org/apache/bcel/classfile/JavaClass.getMinor:()I\n+  #159 = String             #465          //     _cp = _cg.getConstantPool();\n+  #160 = String             #466          //     _factory = new InstructionFactory(_cg, _cp);\n+  #161 = Methodref          #9.#467       // org/apache/bcel/util/BCELifier.printCreate:()V\n+  #162 = String             #468          //   private void createFields() {\n+  #163 = String             #469          //     FieldGen field;\n+  #164 = Methodref          #406.#470     // org/apache/bcel/classfile/Field.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n+  #165 = String             #471          //   private void createMethod_\n+  #166 = String             #472          // () {\n+  #167 = Methodref          #298.#470     // org/apache/bcel/classfile/Method.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n+  #168 = Methodref          #9.#473       // org/apache/bcel/util/BCELifier.printMain:()V\n+  #169 = String             #474          // }\n+  #170 = Class              #475          // org/apache/bcel/generic/MethodGen\n+  #171 = Methodref          #170.#476     // org/apache/bcel/generic/MethodGen.\"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #172 = String             #477          //     InstructionList il = new InstructionList();\n+  #173 = String             #478          //     MethodGen method = new MethodGen(\n+  #174 = Methodref          #298.#407     // org/apache/bcel/classfile/Method.getAccessFlags:()I\n+  #175 = Methodref          #170.#479     // org/apache/bcel/generic/MethodGen.getReturnType:()Lorg/apache/bcel/generic/Type;\n+  #176 = Methodref          #170.#480     // org/apache/bcel/generic/MethodGen.getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n+  #177 = Methodref          #9.#481       // org/apache/bcel/util/BCELifier.printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #178 = Methodref          #170.#482     // org/apache/bcel/generic/MethodGen.getArgumentNames:()[Ljava/lang/String;\n+  #179 = String             #483          //  }, \\\"\n+  #180 = Methodref          #298.#410     // org/apache/bcel/classfile/Method.getName:()Ljava/lang/String;\n+  #181 = String             #484          // \\\", il, _cp);\n+  #182 = Methodref          #298.#485     // org/apache/bcel/classfile/Method.getExceptionTable:()Lorg/apache/bcel/classfile/ExceptionTable;\n+  #183 = Methodref          #299.#486     // org/apache/bcel/classfile/ExceptionTable.getExceptionNames:()[Ljava/lang/String;\n+  #184 = String             #487          //     method.addException(\\\"\n+  #185 = String             #488          // \\\");\n+  #186 = Class              #489          // org/apache/bcel/util/BCELFactory\n+  #187 = Methodref          #186.#490     // org/apache/bcel/util/BCELFactory.\"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n+  #188 = Methodref          #186.#318     // org/apache/bcel/util/BCELFactory.start:()V\n+  #189 = String             #491          //     method.setMaxStack();\n+  #190 = String             #492          //     method.setMaxLocals();\n+  #191 = String             #493          //     _cg.addMethod(method.getMethod());\n+  #192 = String             #494          //     il.dispose();\n+  #193 = Methodref          #495.#496     // java/lang/Class.getPackage:()Ljava/lang/Package;\n+  #194 = Methodref          #497.#410     // java/lang/Package.getName:()Ljava/lang/String;\n+  #195 = Methodref          #495.#498     // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+  #196 = Class              #499          // org/apache/bcel/classfile/EmptyVisitor\n+  #197 = Class              #500          // org/apache/bcel/util/BCELifier$FLAGS\n   #198 = Utf8               FLAGS\n   #199 = Utf8               InnerClasses\n   #200 = Utf8               BASE_PACKAGE\n   #201 = Utf8               Ljava/lang/String;\n   #202 = Utf8               CONSTANT_PREFIX\n   #203 = Utf8               clazz\n   #204 = Utf8               Lorg/apache/bcel/classfile/JavaClass;\n@@ -220,420 +220,411 @@\n   #210 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n   #211 = Utf8               Code\n   #212 = Utf8               LineNumberTable\n   #213 = Utf8               LocalVariableTable\n   #214 = Utf8               name\n   #215 = Utf8               javaClass\n   #216 = Utf8               StackMapTable\n-  #217 = Class              #510          // org/apache/bcel/classfile/JavaClass\n+  #217 = Class              #501          // org/apache/bcel/classfile/JavaClass\n   #218 = Utf8               Exceptions\n-  #219 = Class              #511          // java/lang/ClassNotFoundException\n-  #220 = Class              #512          // java/io/IOException\n+  #219 = Class              #502          // java/lang/ClassNotFoundException\n+  #220 = Class              #503          // java/io/IOException\n   #221 = Utf8               MethodParameters\n   #222 = Utf8               main\n   #223 = Utf8               ([Ljava/lang/String;)V\n   #224 = Utf8               argv\n   #225 = Utf8               [Ljava/lang/String;\n   #226 = Utf8               bcelifier\n   #227 = Utf8               Lorg/apache/bcel/util/BCELifier;\n-  #228 = Class              #513          // java/lang/Exception\n+  #228 = Class              #504          // java/lang/Exception\n   #229 = Utf8               printArgumentTypes\n   #230 = Utf8               ([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n   #231 = Utf8               i\n   #232 = Utf8               I\n   #233 = Utf8               argTypes\n   #234 = Utf8               [Lorg/apache/bcel/generic/Type;\n   #235 = Utf8               args\n   #236 = Utf8               Ljava/lang/StringBuilder;\n-  #237 = Class              #324          // java/lang/StringBuilder\n-  #238 = Utf8               printFlags\n-  #239 = Utf8               (I)Ljava/lang/String;\n-  #240 = Utf8               flags\n-  #241 = Utf8               (ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n-  #242 = Utf8               pow\n-  #243 = Utf8               location\n-  #244 = Utf8               Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #245 = Utf8               buf\n-  #246 = Utf8               str\n-  #247 = Utf8               printType\n-  #248 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #249 = Utf8               at\n-  #250 = Utf8               Lorg/apache/bcel/generic/ArrayType;\n-  #251 = Utf8               signature\n-  #252 = Utf8               type\n-  #253 = Utf8               Lorg/apache/bcel/generic/Type;\n-  #254 = Utf8               t\n-  #255 = Utf8               B\n-  #256 = Class              #514          // org/apache/bcel/generic/Type\n-  #257 = Utf8               (Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #258 = Utf8               <init>\n-  #259 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n-  #260 = Utf8               this\n-  #261 = Utf8               out\n-  #262 = Utf8               Ljava/io/OutputStream;\n-  #263 = Utf8               printCreate\n-  #264 = Utf8               ()V\n-  #265 = Utf8               fields\n-  #266 = Utf8               [Lorg/apache/bcel/classfile/Field;\n-  #267 = Utf8               methods\n-  #268 = Utf8               [Lorg/apache/bcel/classfile/Method;\n-  #269 = Class              #266          // \"[Lorg/apache/bcel/classfile/Field;\"\n-  #270 = Class              #268          // \"[Lorg/apache/bcel/classfile/Method;\"\n-  #271 = Utf8               printMain\n-  #272 = Utf8               className\n-  #273 = Utf8               start\n-  #274 = Utf8               visitField\n-  #275 = Utf8               (Lorg/apache/bcel/classfile/Field;)V\n-  #276 = Utf8               field\n-  #277 = Utf8               Lorg/apache/bcel/classfile/Field;\n-  #278 = Utf8               cv\n-  #279 = Utf8               Lorg/apache/bcel/classfile/ConstantValue;\n-  #280 = Class              #515          // org/apache/bcel/classfile/ConstantValue\n-  #281 = Utf8               visitJavaClass\n-  #282 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;)V\n-  #283 = Utf8               superName\n-  #284 = Utf8               packageName\n-  #285 = Utf8               inter\n-  #286 = Class              #319          // org/apache/bcel/util/BCELifier\n-  #287 = Class              #516          // java/lang/String\n-  #288 = Class              #382          // java/io/PrintWriter\n-  #289 = Utf8               visitMethod\n-  #290 = Utf8               (Lorg/apache/bcel/classfile/Method;)V\n-  #291 = Utf8               exceptionName\n-  #292 = Utf8               exceptionNames\n-  #293 = Utf8               method\n-  #294 = Utf8               Lorg/apache/bcel/classfile/Method;\n-  #295 = Utf8               mg\n-  #296 = Utf8               Lorg/apache/bcel/generic/MethodGen;\n-  #297 = Utf8               exceptionTable\n-  #298 = Utf8               Lorg/apache/bcel/classfile/ExceptionTable;\n-  #299 = Utf8               factory\n-  #300 = Utf8               Lorg/apache/bcel/util/BCELFactory;\n-  #301 = Class              #517          // org/apache/bcel/classfile/Method\n-  #302 = Class              #483          // org/apache/bcel/generic/MethodGen\n-  #303 = Class              #518          // org/apache/bcel/classfile/ExceptionTable\n-  #304 = Class              #225          // \"[Ljava/lang/String;\"\n-  #305 = Utf8               <clinit>\n-  #306 = Utf8               SourceFile\n-  #307 = Utf8               BCELifier.java\n-  #308 = Class              #519          // org/apache/bcel/Repository\n-  #309 = NameAndType        #520:#210     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #310 = Utf8               org/apache/bcel/classfile/ClassParser\n-  #311 = NameAndType        #258:#521     // \"<init>\":(Ljava/lang/String;)V\n-  #312 = NameAndType        #522:#523     // parse:()Lorg/apache/bcel/classfile/JavaClass;\n-  #313 = Class              #524          // java/lang/System\n-  #314 = NameAndType        #261:#525     // out:Ljava/io/PrintStream;\n-  #315 = Utf8               Usage: BCELifier className\n-  #316 = Class              #526          // java/io/PrintStream\n-  #317 = NameAndType        #527:#521     // println:(Ljava/lang/String;)V\n-  #318 = Utf8               \\tThe class must exist on the classpath\n-  #319 = Utf8               org/apache/bcel/util/BCELifier\n-  #320 = NameAndType        #209:#210     // getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #321 = NameAndType        #258:#259     // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n-  #322 = NameAndType        #273:#264     // start:()V\n-  #323 = Utf8               Type.NO_ARGS\n-  #324 = Utf8               java/lang/StringBuilder\n-  #325 = NameAndType        #258:#264     // \"<init>\":()V\n-  #326 = NameAndType        #247:#257     // printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #327 = NameAndType        #528:#529     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #328 = Utf8               ,\n-  #329 = Utf8               new Type[] {\n-  #330 = NameAndType        #530:#531     // toString:()Ljava/lang/String;\n-  #331 = Utf8                }\n-  #332 = NameAndType        #532:#244     // UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #333 = NameAndType        #238:#241     // printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n-  #334 = Utf8               0\n-  #335 = Utf8               org/apache/bcel/Const\n-  #336 = NameAndType        #533:#244     // CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #337 = NameAndType        #202:#201     // CONSTANT_PREFIX:Ljava/lang/String;\n-  #338 = Utf8               ACC_SUPER |\n-  #339 = NameAndType        #534:#244     // METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #340 = Utf8               ACC_BRIDGE |\n-  #341 = Utf8               ACC_VARARGS |\n-  #342 = NameAndType        #535:#232     // ACCESS_NAMES_LENGTH:I\n-  #343 = Utf8               ACC_\n-  #344 = NameAndType        #536:#239     // getAccessName:(I)Ljava/lang/String;\n-  #345 = Class              #537          // java/util/Locale\n-  #346 = NameAndType        #538:#539     // ENGLISH:Ljava/util/Locale;\n-  #347 = Class              #516          // java/lang/String\n-  #348 = NameAndType        #540:#541     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #349 = Utf8                |\n-  #350 = Utf8               ACC_BIT %x |\n-  #351 = Utf8               java/lang/Object\n-  #352 = Class              #542          // java/lang/Integer\n-  #353 = NameAndType        #543:#544     // valueOf:(I)Ljava/lang/Integer;\n-  #354 = NameAndType        #545:#546     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #355 = NameAndType        #547:#548     // length:()I\n-  #356 = NameAndType        #549:#550     // substring:(II)Ljava/lang/String;\n-  #357 = Class              #514          // org/apache/bcel/generic/Type\n-  #358 = NameAndType        #551:#552     // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #359 = NameAndType        #551:#553     // getType:()B\n-  #360 = Utf8               Type.\n-  #361 = NameAndType        #554:#239     // getTypeName:(I)Ljava/lang/String;\n-  #362 = Utf8               java.lang.String\n-  #363 = NameAndType        #555:#556     // equals:(Ljava/lang/Object;)Z\n-  #364 = Utf8               Type.STRING\n-  #365 = Utf8               java.lang.Object\n-  #366 = Utf8               Type.OBJECT\n-  #367 = Utf8               java.lang.StringBuffer\n-  #368 = Utf8               Type.STRINGBUFFER\n-  #369 = Utf8               org/apache/bcel/generic/ArrayType\n-  #370 = Utf8               new ArrayType(\n-  #371 = NameAndType        #557:#558     // getBasicType:()Lorg/apache/bcel/generic/Type;\n-  #372 = NameAndType        #559:#548     // getDimensions:()I\n-  #373 = NameAndType        #528:#560     // append:(I)Ljava/lang/StringBuilder;\n-  #374 = Utf8               )\n-  #375 = Utf8               new ObjectType(\\\"\n-  #376 = Class              #561          // org/apache/bcel/classfile/Utility\n-  #377 = NameAndType        #562:#563     // signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #378 = Utf8               \\\")\n-  #379 = NameAndType        #564:#531     // getSignature:()Ljava/lang/String;\n-  #380 = NameAndType        #247:#248     // printType:(Ljava/lang/String;)Ljava/lang/String;\n-  #381 = NameAndType        #203:#204     // clazz:Lorg/apache/bcel/classfile/JavaClass;\n-  #382 = Utf8               java/io/PrintWriter\n-  #383 = Utf8               java/io/OutputStreamWriter\n-  #384 = Class              #565          // java/nio/charset/StandardCharsets\n-  #385 = NameAndType        #566:#567     // UTF_8:Ljava/nio/charset/Charset;\n-  #386 = NameAndType        #258:#568     // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #387 = NameAndType        #258:#569     // \"<init>\":(Ljava/io/Writer;Z)V\n-  #388 = NameAndType        #205:#206     // printWriter:Ljava/io/PrintWriter;\n-  #389 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #390 = Class              #510          // org/apache/bcel/classfile/JavaClass\n-  #391 = NameAndType        #570:#571     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #392 = NameAndType        #258:#572     // \"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #393 = NameAndType        #207:#208     // constantPoolGen:Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #394 = Utf8                 public void create(OutputStream out) throws IOException {\n-  #395 = NameAndType        #573:#574     // getFields:()[Lorg/apache/bcel/classfile/Field;\n-  #396 = Utf8                   createFields();\n-  #397 = NameAndType        #575:#576     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n-  #398 = Utf8                   createMethod_\n-  #399 = Utf8               ();\n-  #400 = Utf8                   _cg.getJavaClass().dump(out);\n-  #401 = Utf8                 }\n-  #402 = NameAndType        #527:#264     // println:()V\n-  #403 = NameAndType        #577:#531     // getClassName:()Ljava/lang/String;\n-  #404 = Utf8                 public static void main(String[] args) throws Exception {\n-  #405 = Utf8\n-  #406 = Utf8               Creator creator = new\n-  #407 = Utf8               Creator();\n-  #408 = Utf8                   creator.create(new FileOutputStream(\\\"\n-  #409 = Utf8               .class\\\"));\n-  #410 = NameAndType        #281:#282     // visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n-  #411 = NameAndType        #578:#264     // flush:()V\n-  #412 = Utf8                   field = new FieldGen(\n-  #413 = Class              #579          // org/apache/bcel/classfile/Field\n-  #414 = NameAndType        #580:#548     // getAccessFlags:()I\n-  #415 = NameAndType        #238:#239     // printFlags:(I)Ljava/lang/String;\n-  #416 = Utf8               , \\\"\n-  #417 = NameAndType        #581:#531     // getName:()Ljava/lang/String;\n-  #418 = Utf8               \\\", _cp);\n-  #419 = NameAndType        #582:#583     // getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n-  #420 = Utf8                   field.setInitValue(\n-  #421 = NameAndType        #584:#521     // print:(Ljava/lang/String;)V\n-  #422 = NameAndType        #551:#558     // getType:()Lorg/apache/bcel/generic/Type;\n-  #423 = NameAndType        #585:#586     // CHAR:Lorg/apache/bcel/generic/BasicType;\n-  #424 = Utf8               (char)\n-  #425 = NameAndType        #587:#586     // SHORT:Lorg/apache/bcel/generic/BasicType;\n-  #426 = Utf8               (short)\n-  #427 = NameAndType        #588:#586     // BYTE:Lorg/apache/bcel/generic/BasicType;\n-  #428 = Utf8               (byte)\n-  #429 = NameAndType        #584:#589     // print:(Ljava/lang/Object;)V\n-  #430 = NameAndType        #590:#586     // LONG:Lorg/apache/bcel/generic/BasicType;\n-  #431 = Utf8               L\n-  #432 = NameAndType        #591:#586     // FLOAT:Lorg/apache/bcel/generic/BasicType;\n-  #433 = Utf8               F\n-  #434 = NameAndType        #592:#586     // DOUBLE:Lorg/apache/bcel/generic/BasicType;\n-  #435 = Utf8               D\n-  #436 = Utf8               );\n-  #437 = Utf8                   _cg.addField(field.getField());\n-  #438 = NameAndType        #593:#531     // getSuperclassName:()Ljava/lang/String;\n-  #439 = NameAndType        #594:#531     // getPackageName:()Ljava/lang/String;\n-  #440 = NameAndType        #595:#596     // getInterfaceNames:()[Ljava/lang/String;\n-  #441 = NameAndType        #597:#598     // printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n-  #442 = Class              #599          // org/apache/commons/lang3/StringUtils\n-  #443 = NameAndType        #600:#601     // isNotEmpty:(Ljava/lang/CharSequence;)Z\n-  #444 = NameAndType        #549:#239     // substring:(I)Ljava/lang/String;\n-  #445 = Utf8               package\n-  #446 = Utf8               ;\n-  #447 = Utf8               import\n-  #448 = NameAndType        #200:#201     // BASE_PACKAGE:Ljava/lang/String;\n-  #449 = Utf8               .generic.*;\n-  #450 = Utf8               .classfile.*;\n-  #451 = Utf8               .*;\n-  #452 = Utf8               import java.io.*;\n-  #453 = Utf8               public class\n-  #454 = Utf8               Creator {\n-  #455 = Utf8                 private InstructionFactory _factory;\n-  #456 = Utf8                 private ConstantPoolGen    _cp;\n-  #457 = Utf8                 private ClassGen           _cg;\n-  #458 = Utf8                 public\n-  #459 = Utf8               Creator() {\n-  #460 = Utf8                   _cg = new ClassGen(\\\"\n-  #461 = NameAndType        #602:#603     // isEmpty:()Z\n-  #462 = Utf8               .\n-  #463 = Utf8               \\\", \\\"\n-  #464 = NameAndType        #604:#531     // getSourceFileName:()Ljava/lang/String;\n-  #465 = Utf8               \\\",\n-  #466 = Utf8               , new String[] {\n-  #467 = Utf8                });\n-  #468 = Utf8                   _cg.setMajor(\n-  #469 = NameAndType        #605:#548     // getMajor:()I\n-  #470 = Utf8                   _cg.setMinor(\n-  #471 = NameAndType        #606:#548     // getMinor:()I\n-  #472 = Utf8                   _cp = _cg.getConstantPool();\n-  #473 = Utf8                   _factory = new InstructionFactory(_cg, _cp);\n-  #474 = NameAndType        #263:#264     // printCreate:()V\n-  #475 = Utf8                 private void createFields() {\n-  #476 = Utf8                   FieldGen field;\n-  #477 = NameAndType        #607:#608     // accept:(Lorg/apache/bcel/classfile/Visitor;)V\n-  #478 = Utf8                 private void createMethod_\n-  #479 = Utf8               () {\n-  #480 = Class              #517          // org/apache/bcel/classfile/Method\n-  #481 = NameAndType        #271:#264     // printMain:()V\n-  #482 = Utf8               }\n-  #483 = Utf8               org/apache/bcel/generic/MethodGen\n-  #484 = NameAndType        #258:#609     // \"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #485 = Utf8                   InstructionList il = new InstructionList();\n-  #486 = Utf8                   MethodGen method = new MethodGen(\n-  #487 = NameAndType        #610:#558     // getReturnType:()Lorg/apache/bcel/generic/Type;\n-  #488 = NameAndType        #611:#612     // getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n-  #489 = NameAndType        #229:#230     // printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #490 = NameAndType        #613:#596     // getArgumentNames:()[Ljava/lang/String;\n-  #491 = Utf8                }, \\\"\n-  #492 = Utf8               \\\", il, _cp);\n-  #493 = NameAndType        #614:#615     // getExceptionTable:()Lorg/apache/bcel/classfile/ExceptionTable;\n-  #494 = Class              #518          // org/apache/bcel/classfile/ExceptionTable\n-  #495 = NameAndType        #616:#596     // getExceptionNames:()[Ljava/lang/String;\n-  #496 = Utf8                   method.addException(\\\"\n-  #497 = Utf8               \\\");\n-  #498 = Utf8               org/apache/bcel/util/BCELFactory\n-  #499 = NameAndType        #258:#617     // \"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n-  #500 = Utf8                   method.setMaxStack();\n-  #501 = Utf8                   method.setMaxLocals();\n-  #502 = Utf8                   _cg.addMethod(method.getMethod());\n-  #503 = Utf8                   il.dispose();\n-  #504 = Class              #618          // java/lang/Class\n-  #505 = NameAndType        #619:#620     // getPackage:()Ljava/lang/Package;\n-  #506 = Class              #621          // java/lang/Package\n-  #507 = NameAndType        #622:#531     // getSimpleName:()Ljava/lang/String;\n-  #508 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n-  #509 = Utf8               org/apache/bcel/util/BCELifier$FLAGS\n-  #510 = Utf8               org/apache/bcel/classfile/JavaClass\n-  #511 = Utf8               java/lang/ClassNotFoundException\n-  #512 = Utf8               java/io/IOException\n-  #513 = Utf8               java/lang/Exception\n-  #514 = Utf8               org/apache/bcel/generic/Type\n-  #515 = Utf8               org/apache/bcel/classfile/ConstantValue\n-  #516 = Utf8               java/lang/String\n-  #517 = Utf8               org/apache/bcel/classfile/Method\n-  #518 = Utf8               org/apache/bcel/classfile/ExceptionTable\n-  #519 = Utf8               org/apache/bcel/Repository\n-  #520 = Utf8               lookupClass\n-  #521 = Utf8               (Ljava/lang/String;)V\n-  #522 = Utf8               parse\n-  #523 = Utf8               ()Lorg/apache/bcel/classfile/JavaClass;\n-  #524 = Utf8               java/lang/System\n-  #525 = Utf8               Ljava/io/PrintStream;\n-  #526 = Utf8               java/io/PrintStream\n-  #527 = Utf8               println\n-  #528 = Utf8               append\n-  #529 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #530 = Utf8               toString\n-  #531 = Utf8               ()Ljava/lang/String;\n-  #532 = Utf8               UNKNOWN\n-  #533 = Utf8               CLASS\n-  #534 = Utf8               METHOD\n-  #535 = Utf8               ACCESS_NAMES_LENGTH\n-  #536 = Utf8               getAccessName\n-  #537 = Utf8               java/util/Locale\n-  #538 = Utf8               ENGLISH\n-  #539 = Utf8               Ljava/util/Locale;\n-  #540 = Utf8               toUpperCase\n-  #541 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #542 = Utf8               java/lang/Integer\n-  #543 = Utf8               valueOf\n-  #544 = Utf8               (I)Ljava/lang/Integer;\n-  #545 = Utf8               format\n-  #546 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #547 = Utf8               length\n-  #548 = Utf8               ()I\n-  #549 = Utf8               substring\n-  #550 = Utf8               (II)Ljava/lang/String;\n-  #551 = Utf8               getType\n-  #552 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #553 = Utf8               ()B\n-  #554 = Utf8               getTypeName\n-  #555 = Utf8               equals\n-  #556 = Utf8               (Ljava/lang/Object;)Z\n-  #557 = Utf8               getBasicType\n-  #558 = Utf8               ()Lorg/apache/bcel/generic/Type;\n-  #559 = Utf8               getDimensions\n-  #560 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #561 = Utf8               org/apache/bcel/classfile/Utility\n-  #562 = Utf8               signatureToString\n-  #563 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #564 = Utf8               getSignature\n-  #565 = Utf8               java/nio/charset/StandardCharsets\n-  #566 = Utf8               UTF_8\n-  #567 = Utf8               Ljava/nio/charset/Charset;\n-  #568 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #569 = Utf8               (Ljava/io/Writer;Z)V\n-  #570 = Utf8               getConstantPool\n-  #571 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #572 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #573 = Utf8               getFields\n-  #574 = Utf8               ()[Lorg/apache/bcel/classfile/Field;\n-  #575 = Utf8               getMethods\n-  #576 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n-  #577 = Utf8               getClassName\n-  #578 = Utf8               flush\n-  #579 = Utf8               org/apache/bcel/classfile/Field\n-  #580 = Utf8               getAccessFlags\n-  #581 = Utf8               getName\n-  #582 = Utf8               getConstantValue\n-  #583 = Utf8               ()Lorg/apache/bcel/classfile/ConstantValue;\n-  #584 = Utf8               print\n-  #585 = Utf8               CHAR\n-  #586 = Utf8               Lorg/apache/bcel/generic/BasicType;\n-  #587 = Utf8               SHORT\n-  #588 = Utf8               BYTE\n-  #589 = Utf8               (Ljava/lang/Object;)V\n-  #590 = Utf8               LONG\n-  #591 = Utf8               FLOAT\n-  #592 = Utf8               DOUBLE\n-  #593 = Utf8               getSuperclassName\n-  #594 = Utf8               getPackageName\n-  #595 = Utf8               getInterfaceNames\n-  #596 = Utf8               ()[Ljava/lang/String;\n-  #597 = Utf8               printArray\n-  #598 = Utf8               ([Ljava/lang/Object;ZZ)Ljava/lang/String;\n-  #599 = Utf8               org/apache/commons/lang3/StringUtils\n-  #600 = Utf8               isNotEmpty\n-  #601 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #602 = Utf8               isEmpty\n-  #603 = Utf8               ()Z\n-  #604 = Utf8               getSourceFileName\n-  #605 = Utf8               getMajor\n-  #606 = Utf8               getMinor\n-  #607 = Utf8               accept\n-  #608 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-  #609 = Utf8               (Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #610 = Utf8               getReturnType\n-  #611 = Utf8               getArgumentTypes\n-  #612 = Utf8               ()[Lorg/apache/bcel/generic/Type;\n-  #613 = Utf8               getArgumentNames\n-  #614 = Utf8               getExceptionTable\n-  #615 = Utf8               ()Lorg/apache/bcel/classfile/ExceptionTable;\n-  #616 = Utf8               getExceptionNames\n-  #617 = Utf8               (Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n-  #618 = Utf8               java/lang/Class\n-  #619 = Utf8               getPackage\n-  #620 = Utf8               ()Ljava/lang/Package;\n-  #621 = Utf8               java/lang/Package\n-  #622 = Utf8               getSimpleName\n+  #237 = Utf8               printFlags\n+  #238 = Utf8               (I)Ljava/lang/String;\n+  #239 = Utf8               flags\n+  #240 = Utf8               (ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n+  #241 = Utf8               pow\n+  #242 = Utf8               location\n+  #243 = Utf8               Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #244 = Utf8               buf\n+  #245 = Utf8               str\n+  #246 = Utf8               printType\n+  #247 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #248 = Utf8               at\n+  #249 = Utf8               Lorg/apache/bcel/generic/ArrayType;\n+  #250 = Utf8               signature\n+  #251 = Utf8               type\n+  #252 = Utf8               Lorg/apache/bcel/generic/Type;\n+  #253 = Utf8               t\n+  #254 = Utf8               B\n+  #255 = Class              #505          // org/apache/bcel/generic/Type\n+  #256 = Utf8               (Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #257 = Utf8               <init>\n+  #258 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n+  #259 = Utf8               this\n+  #260 = Utf8               out\n+  #261 = Utf8               Ljava/io/OutputStream;\n+  #262 = Utf8               printCreate\n+  #263 = Utf8               ()V\n+  #264 = Utf8               fields\n+  #265 = Utf8               [Lorg/apache/bcel/classfile/Field;\n+  #266 = Utf8               methods\n+  #267 = Utf8               [Lorg/apache/bcel/classfile/Method;\n+  #268 = Class              #265          // \"[Lorg/apache/bcel/classfile/Field;\"\n+  #269 = Class              #267          // \"[Lorg/apache/bcel/classfile/Method;\"\n+  #270 = Utf8               printMain\n+  #271 = Utf8               className\n+  #272 = Utf8               start\n+  #273 = Utf8               visitField\n+  #274 = Utf8               (Lorg/apache/bcel/classfile/Field;)V\n+  #275 = Utf8               field\n+  #276 = Utf8               Lorg/apache/bcel/classfile/Field;\n+  #277 = Utf8               cv\n+  #278 = Utf8               Lorg/apache/bcel/classfile/ConstantValue;\n+  #279 = Class              #506          // org/apache/bcel/classfile/ConstantValue\n+  #280 = Utf8               visitJavaClass\n+  #281 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;)V\n+  #282 = Utf8               superName\n+  #283 = Utf8               packageName\n+  #284 = Utf8               inter\n+  #285 = Class              #507          // java/lang/String\n+  #286 = Utf8               visitMethod\n+  #287 = Utf8               (Lorg/apache/bcel/classfile/Method;)V\n+  #288 = Utf8               exceptionName\n+  #289 = Utf8               exceptionNames\n+  #290 = Utf8               method\n+  #291 = Utf8               Lorg/apache/bcel/classfile/Method;\n+  #292 = Utf8               mg\n+  #293 = Utf8               Lorg/apache/bcel/generic/MethodGen;\n+  #294 = Utf8               exceptionTable\n+  #295 = Utf8               Lorg/apache/bcel/classfile/ExceptionTable;\n+  #296 = Utf8               factory\n+  #297 = Utf8               Lorg/apache/bcel/util/BCELFactory;\n+  #298 = Class              #508          // org/apache/bcel/classfile/Method\n+  #299 = Class              #509          // org/apache/bcel/classfile/ExceptionTable\n+  #300 = Class              #225          // \"[Ljava/lang/String;\"\n+  #301 = Utf8               <clinit>\n+  #302 = Utf8               SourceFile\n+  #303 = Utf8               BCELifier.java\n+  #304 = Class              #510          // org/apache/bcel/Repository\n+  #305 = NameAndType        #511:#210     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #306 = Utf8               org/apache/bcel/classfile/ClassParser\n+  #307 = NameAndType        #257:#512     // \"<init>\":(Ljava/lang/String;)V\n+  #308 = NameAndType        #513:#514     // parse:()Lorg/apache/bcel/classfile/JavaClass;\n+  #309 = Class              #515          // java/lang/System\n+  #310 = NameAndType        #260:#516     // out:Ljava/io/PrintStream;\n+  #311 = Utf8               Usage: BCELifier className\n+  #312 = Class              #517          // java/io/PrintStream\n+  #313 = NameAndType        #518:#512     // println:(Ljava/lang/String;)V\n+  #314 = Utf8               \\tThe class must exist on the classpath\n+  #315 = Utf8               org/apache/bcel/util/BCELifier\n+  #316 = NameAndType        #209:#210     // getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #317 = NameAndType        #257:#258     // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n+  #318 = NameAndType        #272:#263     // start:()V\n+  #319 = Utf8               Type.NO_ARGS\n+  #320 = Utf8               java/lang/StringBuilder\n+  #321 = NameAndType        #257:#263     // \"<init>\":()V\n+  #322 = NameAndType        #246:#256     // printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #323 = NameAndType        #519:#520     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #324 = Utf8               ,\n+  #325 = Utf8               new Type[] {\n+  #326 = NameAndType        #521:#522     // toString:()Ljava/lang/String;\n+  #327 = Utf8                }\n+  #328 = NameAndType        #523:#243     // UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #329 = NameAndType        #237:#240     // printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n+  #330 = Utf8               0\n+  #331 = Utf8               org/apache/bcel/Const\n+  #332 = NameAndType        #524:#243     // CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #333 = NameAndType        #202:#201     // CONSTANT_PREFIX:Ljava/lang/String;\n+  #334 = Utf8               ACC_SUPER |\n+  #335 = NameAndType        #525:#243     // METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #336 = Utf8               ACC_BRIDGE |\n+  #337 = Utf8               ACC_VARARGS |\n+  #338 = NameAndType        #526:#232     // ACCESS_NAMES_LENGTH:I\n+  #339 = Utf8               ACC_\n+  #340 = NameAndType        #527:#238     // getAccessName:(I)Ljava/lang/String;\n+  #341 = Class              #528          // java/util/Locale\n+  #342 = NameAndType        #529:#530     // ENGLISH:Ljava/util/Locale;\n+  #343 = NameAndType        #531:#532     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #344 = Utf8                |\n+  #345 = Utf8               ACC_BIT %x |\n+  #346 = Utf8               java/lang/Object\n+  #347 = Class              #533          // java/lang/Integer\n+  #348 = NameAndType        #534:#535     // valueOf:(I)Ljava/lang/Integer;\n+  #349 = NameAndType        #536:#537     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #350 = NameAndType        #538:#539     // length:()I\n+  #351 = NameAndType        #540:#541     // substring:(II)Ljava/lang/String;\n+  #352 = NameAndType        #542:#543     // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #353 = NameAndType        #542:#544     // getType:()B\n+  #354 = Utf8               Type.\n+  #355 = NameAndType        #545:#238     // getTypeName:(I)Ljava/lang/String;\n+  #356 = Utf8               java.lang.String\n+  #357 = NameAndType        #546:#547     // equals:(Ljava/lang/Object;)Z\n+  #358 = Utf8               Type.STRING\n+  #359 = Utf8               java.lang.Object\n+  #360 = Utf8               Type.OBJECT\n+  #361 = Utf8               java.lang.StringBuffer\n+  #362 = Utf8               Type.STRINGBUFFER\n+  #363 = Utf8               org/apache/bcel/generic/ArrayType\n+  #364 = Utf8               new ArrayType(\n+  #365 = NameAndType        #548:#549     // getBasicType:()Lorg/apache/bcel/generic/Type;\n+  #366 = NameAndType        #550:#539     // getDimensions:()I\n+  #367 = NameAndType        #519:#551     // append:(I)Ljava/lang/StringBuilder;\n+  #368 = Utf8               )\n+  #369 = Utf8               new ObjectType(\\\"\n+  #370 = Class              #552          // org/apache/bcel/classfile/Utility\n+  #371 = NameAndType        #553:#554     // signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #372 = Utf8               \\\")\n+  #373 = NameAndType        #555:#522     // getSignature:()Ljava/lang/String;\n+  #374 = NameAndType        #246:#247     // printType:(Ljava/lang/String;)Ljava/lang/String;\n+  #375 = NameAndType        #203:#204     // clazz:Lorg/apache/bcel/classfile/JavaClass;\n+  #376 = Utf8               java/io/PrintWriter\n+  #377 = Utf8               java/io/OutputStreamWriter\n+  #378 = Class              #556          // java/nio/charset/StandardCharsets\n+  #379 = NameAndType        #557:#558     // UTF_8:Ljava/nio/charset/Charset;\n+  #380 = NameAndType        #257:#559     // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #381 = NameAndType        #257:#560     // \"<init>\":(Ljava/io/Writer;Z)V\n+  #382 = NameAndType        #205:#206     // printWriter:Ljava/io/PrintWriter;\n+  #383 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+  #384 = NameAndType        #561:#562     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #385 = NameAndType        #257:#563     // \"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #386 = NameAndType        #207:#208     // constantPoolGen:Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #387 = Utf8                 public void create(OutputStream out) throws IOException {\n+  #388 = NameAndType        #564:#565     // getFields:()[Lorg/apache/bcel/classfile/Field;\n+  #389 = Utf8                   createFields();\n+  #390 = NameAndType        #566:#567     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n+  #391 = Utf8                   createMethod_\n+  #392 = Utf8               ();\n+  #393 = Utf8                   _cg.getJavaClass().dump(out);\n+  #394 = Utf8                 }\n+  #395 = NameAndType        #518:#263     // println:()V\n+  #396 = NameAndType        #568:#522     // getClassName:()Ljava/lang/String;\n+  #397 = Utf8                 public static void main(String[] args) throws Exception {\n+  #398 = Utf8\n+  #399 = Utf8               Creator creator = new\n+  #400 = Utf8               Creator();\n+  #401 = Utf8                   creator.create(new FileOutputStream(\\\"\n+  #402 = Utf8               .class\\\"));\n+  #403 = NameAndType        #280:#281     // visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n+  #404 = NameAndType        #569:#263     // flush:()V\n+  #405 = Utf8                   field = new FieldGen(\n+  #406 = Class              #570          // org/apache/bcel/classfile/Field\n+  #407 = NameAndType        #571:#539     // getAccessFlags:()I\n+  #408 = NameAndType        #237:#238     // printFlags:(I)Ljava/lang/String;\n+  #409 = Utf8               , \\\"\n+  #410 = NameAndType        #572:#522     // getName:()Ljava/lang/String;\n+  #411 = Utf8               \\\", _cp);\n+  #412 = NameAndType        #573:#574     // getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n+  #413 = Utf8                   field.setInitValue(\n+  #414 = NameAndType        #575:#512     // print:(Ljava/lang/String;)V\n+  #415 = NameAndType        #542:#549     // getType:()Lorg/apache/bcel/generic/Type;\n+  #416 = NameAndType        #576:#577     // CHAR:Lorg/apache/bcel/generic/BasicType;\n+  #417 = Utf8               (char)\n+  #418 = NameAndType        #578:#577     // SHORT:Lorg/apache/bcel/generic/BasicType;\n+  #419 = Utf8               (short)\n+  #420 = NameAndType        #579:#577     // BYTE:Lorg/apache/bcel/generic/BasicType;\n+  #421 = Utf8               (byte)\n+  #422 = NameAndType        #575:#580     // print:(Ljava/lang/Object;)V\n+  #423 = NameAndType        #581:#577     // LONG:Lorg/apache/bcel/generic/BasicType;\n+  #424 = Utf8               L\n+  #425 = NameAndType        #582:#577     // FLOAT:Lorg/apache/bcel/generic/BasicType;\n+  #426 = Utf8               F\n+  #427 = NameAndType        #583:#577     // DOUBLE:Lorg/apache/bcel/generic/BasicType;\n+  #428 = Utf8               D\n+  #429 = Utf8               );\n+  #430 = Utf8                   _cg.addField(field.getField());\n+  #431 = NameAndType        #584:#522     // getSuperclassName:()Ljava/lang/String;\n+  #432 = NameAndType        #585:#522     // getPackageName:()Ljava/lang/String;\n+  #433 = NameAndType        #586:#587     // getInterfaceNames:()[Ljava/lang/String;\n+  #434 = NameAndType        #588:#589     // printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n+  #435 = Class              #590          // org/apache/commons/lang3/StringUtils\n+  #436 = NameAndType        #591:#592     // isNotEmpty:(Ljava/lang/CharSequence;)Z\n+  #437 = NameAndType        #540:#238     // substring:(I)Ljava/lang/String;\n+  #438 = Utf8               package\n+  #439 = Utf8               ;\n+  #440 = Utf8               import\n+  #441 = NameAndType        #200:#201     // BASE_PACKAGE:Ljava/lang/String;\n+  #442 = Utf8               .generic.*;\n+  #443 = Utf8               .classfile.*;\n+  #444 = Utf8               .*;\n+  #445 = Utf8               import java.io.*;\n+  #446 = Utf8               public class\n+  #447 = Utf8               Creator {\n+  #448 = Utf8                 private InstructionFactory _factory;\n+  #449 = Utf8                 private ConstantPoolGen    _cp;\n+  #450 = Utf8                 private ClassGen           _cg;\n+  #451 = Utf8                 public\n+  #452 = Utf8               Creator() {\n+  #453 = Utf8                   _cg = new ClassGen(\\\"\n+  #454 = NameAndType        #593:#594     // isEmpty:()Z\n+  #455 = Utf8               .\n+  #456 = Utf8               \\\", \\\"\n+  #457 = NameAndType        #595:#522     // getSourceFileName:()Ljava/lang/String;\n+  #458 = Utf8               \\\",\n+  #459 = Utf8               , new String[] {\n+  #460 = Utf8                });\n+  #461 = Utf8                   _cg.setMajor(\n+  #462 = NameAndType        #596:#539     // getMajor:()I\n+  #463 = Utf8                   _cg.setMinor(\n+  #464 = NameAndType        #597:#539     // getMinor:()I\n+  #465 = Utf8                   _cp = _cg.getConstantPool();\n+  #466 = Utf8                   _factory = new InstructionFactory(_cg, _cp);\n+  #467 = NameAndType        #262:#263     // printCreate:()V\n+  #468 = Utf8                 private void createFields() {\n+  #469 = Utf8                   FieldGen field;\n+  #470 = NameAndType        #598:#599     // accept:(Lorg/apache/bcel/classfile/Visitor;)V\n+  #471 = Utf8                 private void createMethod_\n+  #472 = Utf8               () {\n+  #473 = NameAndType        #270:#263     // printMain:()V\n+  #474 = Utf8               }\n+  #475 = Utf8               org/apache/bcel/generic/MethodGen\n+  #476 = NameAndType        #257:#600     // \"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #477 = Utf8                   InstructionList il = new InstructionList();\n+  #478 = Utf8                   MethodGen method = new MethodGen(\n+  #479 = NameAndType        #601:#549     // getReturnType:()Lorg/apache/bcel/generic/Type;\n+  #480 = NameAndType        #602:#603     // getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n+  #481 = NameAndType        #229:#230     // printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #482 = NameAndType        #604:#587     // getArgumentNames:()[Ljava/lang/String;\n+  #483 = Utf8                }, \\\"\n+  #484 = Utf8               \\\", il, _cp);\n+  #485 = NameAndType        #605:#606     // getExceptionTable:()Lorg/apache/bcel/classfile/ExceptionTable;\n+  #486 = NameAndType        #607:#587     // getExceptionNames:()[Ljava/lang/String;\n+  #487 = Utf8                   method.addException(\\\"\n+  #488 = Utf8               \\\");\n+  #489 = Utf8               org/apache/bcel/util/BCELFactory\n+  #490 = NameAndType        #257:#608     // \"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n+  #491 = Utf8                   method.setMaxStack();\n+  #492 = Utf8                   method.setMaxLocals();\n+  #493 = Utf8                   _cg.addMethod(method.getMethod());\n+  #494 = Utf8                   il.dispose();\n+  #495 = Class              #609          // java/lang/Class\n+  #496 = NameAndType        #610:#611     // getPackage:()Ljava/lang/Package;\n+  #497 = Class              #612          // java/lang/Package\n+  #498 = NameAndType        #613:#522     // getSimpleName:()Ljava/lang/String;\n+  #499 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n+  #500 = Utf8               org/apache/bcel/util/BCELifier$FLAGS\n+  #501 = Utf8               org/apache/bcel/classfile/JavaClass\n+  #502 = Utf8               java/lang/ClassNotFoundException\n+  #503 = Utf8               java/io/IOException\n+  #504 = Utf8               java/lang/Exception\n+  #505 = Utf8               org/apache/bcel/generic/Type\n+  #506 = Utf8               org/apache/bcel/classfile/ConstantValue\n+  #507 = Utf8               java/lang/String\n+  #508 = Utf8               org/apache/bcel/classfile/Method\n+  #509 = Utf8               org/apache/bcel/classfile/ExceptionTable\n+  #510 = Utf8               org/apache/bcel/Repository\n+  #511 = Utf8               lookupClass\n+  #512 = Utf8               (Ljava/lang/String;)V\n+  #513 = Utf8               parse\n+  #514 = Utf8               ()Lorg/apache/bcel/classfile/JavaClass;\n+  #515 = Utf8               java/lang/System\n+  #516 = Utf8               Ljava/io/PrintStream;\n+  #517 = Utf8               java/io/PrintStream\n+  #518 = Utf8               println\n+  #519 = Utf8               append\n+  #520 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #521 = Utf8               toString\n+  #522 = Utf8               ()Ljava/lang/String;\n+  #523 = Utf8               UNKNOWN\n+  #524 = Utf8               CLASS\n+  #525 = Utf8               METHOD\n+  #526 = Utf8               ACCESS_NAMES_LENGTH\n+  #527 = Utf8               getAccessName\n+  #528 = Utf8               java/util/Locale\n+  #529 = Utf8               ENGLISH\n+  #530 = Utf8               Ljava/util/Locale;\n+  #531 = Utf8               toUpperCase\n+  #532 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #533 = Utf8               java/lang/Integer\n+  #534 = Utf8               valueOf\n+  #535 = Utf8               (I)Ljava/lang/Integer;\n+  #536 = Utf8               format\n+  #537 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #538 = Utf8               length\n+  #539 = Utf8               ()I\n+  #540 = Utf8               substring\n+  #541 = Utf8               (II)Ljava/lang/String;\n+  #542 = Utf8               getType\n+  #543 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #544 = Utf8               ()B\n+  #545 = Utf8               getTypeName\n+  #546 = Utf8               equals\n+  #547 = Utf8               (Ljava/lang/Object;)Z\n+  #548 = Utf8               getBasicType\n+  #549 = Utf8               ()Lorg/apache/bcel/generic/Type;\n+  #550 = Utf8               getDimensions\n+  #551 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #552 = Utf8               org/apache/bcel/classfile/Utility\n+  #553 = Utf8               signatureToString\n+  #554 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+  #555 = Utf8               getSignature\n+  #556 = Utf8               java/nio/charset/StandardCharsets\n+  #557 = Utf8               UTF_8\n+  #558 = Utf8               Ljava/nio/charset/Charset;\n+  #559 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #560 = Utf8               (Ljava/io/Writer;Z)V\n+  #561 = Utf8               getConstantPool\n+  #562 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #563 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #564 = Utf8               getFields\n+  #565 = Utf8               ()[Lorg/apache/bcel/classfile/Field;\n+  #566 = Utf8               getMethods\n+  #567 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n+  #568 = Utf8               getClassName\n+  #569 = Utf8               flush\n+  #570 = Utf8               org/apache/bcel/classfile/Field\n+  #571 = Utf8               getAccessFlags\n+  #572 = Utf8               getName\n+  #573 = Utf8               getConstantValue\n+  #574 = Utf8               ()Lorg/apache/bcel/classfile/ConstantValue;\n+  #575 = Utf8               print\n+  #576 = Utf8               CHAR\n+  #577 = Utf8               Lorg/apache/bcel/generic/BasicType;\n+  #578 = Utf8               SHORT\n+  #579 = Utf8               BYTE\n+  #580 = Utf8               (Ljava/lang/Object;)V\n+  #581 = Utf8               LONG\n+  #582 = Utf8               FLOAT\n+  #583 = Utf8               DOUBLE\n+  #584 = Utf8               getSuperclassName\n+  #585 = Utf8               getPackageName\n+  #586 = Utf8               getInterfaceNames\n+  #587 = Utf8               ()[Ljava/lang/String;\n+  #588 = Utf8               printArray\n+  #589 = Utf8               ([Ljava/lang/Object;ZZ)Ljava/lang/String;\n+  #590 = Utf8               org/apache/commons/lang3/StringUtils\n+  #591 = Utf8               isNotEmpty\n+  #592 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #593 = Utf8               isEmpty\n+  #594 = Utf8               ()Z\n+  #595 = Utf8               getSourceFileName\n+  #596 = Utf8               getMajor\n+  #597 = Utf8               getMinor\n+  #598 = Utf8               accept\n+  #599 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #600 = Utf8               (Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #601 = Utf8               getReturnType\n+  #602 = Utf8               getArgumentTypes\n+  #603 = Utf8               ()[Lorg/apache/bcel/generic/Type;\n+  #604 = Utf8               getArgumentNames\n+  #605 = Utf8               getExceptionTable\n+  #606 = Utf8               ()Lorg/apache/bcel/classfile/ExceptionTable;\n+  #607 = Utf8               getExceptionNames\n+  #608 = Utf8               (Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n+  #609 = Utf8               java/lang/Class\n+  #610 = Utf8               getPackage\n+  #611 = Utf8               ()Ljava/lang/Package;\n+  #612 = Utf8               java/lang/Package\n+  #613 = Utf8               getSimpleName\n {\n   private static final java.lang.String BASE_PACKAGE;\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final java.lang.String CONSTANT_PREFIX;\n     descriptor: Ljava/lang/String;\n"}]}
