{"diffoscope-json-version": 1, "source1": "first/XMLPropertyListConfiguration.class", "source2": "second/XMLPropertyListConfiguration.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -65,27 +65,27 @@\n     }\n     \n     protected void setPropertyInternal(final String key, final Object value) {\n         if (value instanceof byte[] || value instanceof List) {\n             this.setPropertyDirect(key, value);\n         }\n         else if (value instanceof Object[]) {\n-            this.setPropertyDirect(key, Arrays.asList((Object[])(Object[])value));\n+            this.setPropertyDirect(key, Arrays.asList((Object[])value));\n         }\n         else {\n             super.setPropertyInternal(key, value);\n         }\n     }\n     \n     protected void addPropertyInternal(final String key, final Object value) {\n         if (value instanceof byte[] || value instanceof List) {\n             this.addPropertyDirect(key, value);\n         }\n         else if (value instanceof Object[]) {\n-            this.addPropertyDirect(key, (Object)Arrays.asList((Object[])(Object[])value));\n+            this.addPropertyDirect(key, (Object)Arrays.asList((Object[])value));\n         }\n         else {\n             super.addPropertyInternal(key, value);\n         }\n     }\n     \n     public void initFileLocator(final FileLocator locator) {\n@@ -208,15 +208,15 @@\n         else if (value instanceof Map) {\n             final Map<String, Object> map = transformMap((Map<?, ?>)value);\n             this.printValue(out, indentLevel, new MapConfiguration((Map)map));\n         }\n         else if (value instanceof byte[]) {\n             String base64;\n             try {\n-                base64 = new String(Base64.encodeBase64((byte[])(byte[])value), \"UTF-8\");\n+                base64 = new String(Base64.encodeBase64((byte[])value), \"UTF-8\");\n             }\n             catch (final UnsupportedEncodingException e) {\n                 throw new AssertionError((Object)e);\n             }\n             out.println(padding + \"<data>\" + StringEscapeUtils.escapeXml10(base64) + \"</data>\");\n         }\n         else if (value != null) {\n"}]}
