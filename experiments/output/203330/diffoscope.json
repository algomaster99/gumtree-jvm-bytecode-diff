{"diffoscope-json-version": 1, "source1": "first/ChecksumCalculatingInputStream.class", "source2": "second/ChecksumCalculatingInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -16,36 +16,36 @@\n         Objects.requireNonNull(inputStream, \"in\");\n         this.checksum = checksum;\n         this.in = inputStream;\n     }\n     \n     @Override\n     public int read() throws IOException {\n-        final int ret = this.in.read();\n-        if (ret >= 0) {\n-            this.checksum.update(ret);\n+        final int read = this.in.read();\n+        if (read >= 0) {\n+            this.checksum.update(read);\n         }\n-        return ret;\n+        return read;\n     }\n     \n     @Override\n-    public int read(final byte[] b) throws IOException {\n-        return this.read(b, 0, b.length);\n+    public int read(final byte[] array) throws IOException {\n+        return this.read(array, 0, array.length);\n     }\n     \n     @Override\n     public int read(final byte[] b, final int off, final int len) throws IOException {\n         if (len == 0) {\n             return 0;\n         }\n-        final int ret = this.in.read(b, off, len);\n-        if (ret >= 0) {\n-            this.checksum.update(b, off, ret);\n+        final int read = this.in.read(b, off, len);\n+        if (read >= 0) {\n+            this.checksum.update(b, off, read);\n         }\n-        return ret;\n+        return read;\n     }\n     \n     @Override\n     public long skip(final long n) throws IOException {\n         if (this.read() >= 0) {\n             return 1L;\n         }\n"}]}
