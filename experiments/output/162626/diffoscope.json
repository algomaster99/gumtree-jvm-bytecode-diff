{"diffoscope-json-version": 1, "source1": "first/OperandStack.class", "source2": "second/OperandStack.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,80 +1,80 @@\n-  SHA-256 checksum 32aad01198d76dc181b2fcaae9d0028e44526ef4769f598a6c47cf89128a9f31\n+  SHA-256 checksum 806d49d7bc176dd6f3ba1a93c736c82cfafcad9c9e1a625dd6e718fb3cf7a960\n   Compiled from \"OperandStack.java\"\n public class org.apache.bcel.verifier.structurals.OperandStack implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #7                          // org/apache/bcel/verifier/structurals/OperandStack\n   super_class: #62                        // java/lang/Object\n   interfaces: 1, fields: 2, methods: 19, attributes: 1\n Constant pool:\n-    #1 = Methodref          #62.#128      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #129          // java/util/ArrayList\n-    #3 = Methodref          #2.#128       // java/util/ArrayList.\"<init>\":()V\n-    #4 = Fieldref           #7.#130       // org/apache/bcel/verifier/structurals/OperandStack.stack:Ljava/util/ArrayList;\n-    #5 = Fieldref           #7.#131       // org/apache/bcel/verifier/structurals/OperandStack.maxStack:I\n-    #6 = Methodref          #7.#132       // org/apache/bcel/verifier/structurals/OperandStack.push:(Lorg/apache/bcel/generic/Type;)V\n-    #7 = Class              #133          // org/apache/bcel/verifier/structurals/OperandStack\n-    #8 = Methodref          #7.#134       // org/apache/bcel/verifier/structurals/OperandStack.\"<init>\":(I)V\n-    #9 = Methodref          #2.#135       // java/util/ArrayList.clone:()Ljava/lang/Object;\n-   #10 = Methodref          #2.#136       // java/util/ArrayList.equals:(Ljava/lang/Object;)Z\n-   #11 = Methodref          #7.#135       // org/apache/bcel/verifier/structurals/OperandStack.clone:()Ljava/lang/Object;\n-   #12 = Methodref          #2.#137       // java/util/ArrayList.hashCode:()I\n-   #13 = Methodref          #2.#138       // java/util/ArrayList.size:()I\n-   #14 = Methodref          #2.#139       // java/util/ArrayList.get:(I)Ljava/lang/Object;\n-   #15 = Methodref          #29.#140      // org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n-   #16 = Methodref          #2.#141       // java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n-   #17 = Methodref          #2.#142       // java/util/ArrayList.isEmpty:()Z\n-   #18 = Methodref          #7.#143       // org/apache/bcel/verifier/structurals/OperandStack.slotsUsed:()I\n-   #19 = Methodref          #7.#138       // org/apache/bcel/verifier/structurals/OperandStack.size:()I\n-   #20 = Class              #144          // org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n-   #21 = Class              #145          // java/lang/StringBuilder\n-   #22 = Methodref          #21.#128      // java/lang/StringBuilder.\"<init>\":()V\n-   #23 = String             #146          // Cannot merge stacks of different size:\\nOperandStack A:\\n\n-   #24 = Methodref          #21.#147      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #21.#148      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #26 = String             #149          // \\nOperandStack B:\\n\n-   #27 = Methodref          #21.#150      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #28 = Methodref          #20.#151      // org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n-   #29 = Class              #152          // org/apache/bcel/verifier/structurals/UninitializedObjectType\n-   #30 = String             #153          // Backwards branch with an uninitialized object on the stack detected.\n-   #31 = Class              #154          // org/apache/bcel/generic/Type\n-   #32 = Methodref          #31.#136      // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n-   #33 = Class              #155          // org/apache/bcel/generic/ReferenceType\n-   #34 = String             #156          // Cannot merge stacks of different types:\\nStack A:\\n\n-   #35 = String             #157          // \\nStack B:\\n\n-   #36 = Methodref          #33.#158      // org/apache/bcel/generic/ReferenceType.getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n-   #37 = Class              #159          // java/lang/ClassNotFoundException\n-   #38 = Class              #160          // org/apache/bcel/verifier/exc/AssertionViolatedException\n-   #39 = String             #161          // Missing class:\n-   #40 = Methodref          #38.#162      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #41 = Methodref          #7.#163       // org/apache/bcel/verifier/structurals/OperandStack.peek:(I)Lorg/apache/bcel/generic/Type;\n-   #42 = Methodref          #2.#164       // java/util/ArrayList.remove:(I)Ljava/lang/Object;\n-   #43 = Methodref          #7.#165       // org/apache/bcel/verifier/structurals/OperandStack.pop:()Lorg/apache/bcel/generic/Type;\n-   #44 = String             #166          // Cannot push NULL onto OperandStack.\n-   #45 = Methodref          #38.#151      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n-   #46 = Fieldref           #31.#167      // org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n-   #47 = Fieldref           #31.#168      // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n-   #48 = Fieldref           #31.#169      // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n-   #49 = Fieldref           #31.#170      // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n-   #50 = String             #171          // The OperandStack does not know about \\'\n-   #51 = String             #172          // \\'; use Type.INT instead.\n-   #52 = String             #173          // OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n-   #53 = Methodref          #2.#174       // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-   #54 = Methodref          #31.#175      // org/apache/bcel/generic/Type.getSize:()I\n-   #55 = String             #176          // Slots used:\n-   #56 = Methodref          #21.#177      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #57 = String             #178          //  MaxStack:\n-   #58 = String             #179          // .\\n\n-   #59 = String             #180          //  (Size:\n-   #60 = Methodref          #181.#182     // java/lang/String.valueOf:(I)Ljava/lang/String;\n-   #61 = String             #183          // )\\n\n-   #62 = Class              #184          // java/lang/Object\n-   #63 = Class              #185          // java/lang/Cloneable\n+    #1 = Methodref          #62.#126      // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #127          // java/util/ArrayList\n+    #3 = Methodref          #2.#126       // java/util/ArrayList.\"<init>\":()V\n+    #4 = Fieldref           #7.#128       // org/apache/bcel/verifier/structurals/OperandStack.stack:Ljava/util/ArrayList;\n+    #5 = Fieldref           #7.#129       // org/apache/bcel/verifier/structurals/OperandStack.maxStack:I\n+    #6 = Methodref          #7.#130       // org/apache/bcel/verifier/structurals/OperandStack.push:(Lorg/apache/bcel/generic/Type;)V\n+    #7 = Class              #131          // org/apache/bcel/verifier/structurals/OperandStack\n+    #8 = Methodref          #7.#132       // org/apache/bcel/verifier/structurals/OperandStack.\"<init>\":(I)V\n+    #9 = Methodref          #2.#133       // java/util/ArrayList.clone:()Ljava/lang/Object;\n+   #10 = Methodref          #2.#134       // java/util/ArrayList.equals:(Ljava/lang/Object;)Z\n+   #11 = Methodref          #7.#133       // org/apache/bcel/verifier/structurals/OperandStack.clone:()Ljava/lang/Object;\n+   #12 = Methodref          #2.#135       // java/util/ArrayList.hashCode:()I\n+   #13 = Methodref          #2.#136       // java/util/ArrayList.size:()I\n+   #14 = Methodref          #2.#137       // java/util/ArrayList.get:(I)Ljava/lang/Object;\n+   #15 = Methodref          #29.#138      // org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n+   #16 = Methodref          #2.#139       // java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n+   #17 = Methodref          #2.#140       // java/util/ArrayList.isEmpty:()Z\n+   #18 = Methodref          #7.#141       // org/apache/bcel/verifier/structurals/OperandStack.slotsUsed:()I\n+   #19 = Methodref          #7.#136       // org/apache/bcel/verifier/structurals/OperandStack.size:()I\n+   #20 = Class              #142          // org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+   #21 = Class              #143          // java/lang/StringBuilder\n+   #22 = Methodref          #21.#126      // java/lang/StringBuilder.\"<init>\":()V\n+   #23 = String             #144          // Cannot merge stacks of different size:\\nOperandStack A:\\n\n+   #24 = Methodref          #21.#145      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #25 = Methodref          #21.#146      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #26 = String             #147          // \\nOperandStack B:\\n\n+   #27 = Methodref          #21.#148      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #28 = Methodref          #20.#149      // org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n+   #29 = Class              #150          // org/apache/bcel/verifier/structurals/UninitializedObjectType\n+   #30 = String             #151          // Backwards branch with an uninitialized object on the stack detected.\n+   #31 = Class              #152          // org/apache/bcel/generic/Type\n+   #32 = Methodref          #31.#134      // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n+   #33 = Class              #153          // org/apache/bcel/generic/ReferenceType\n+   #34 = String             #154          // Cannot merge stacks of different types:\\nStack A:\\n\n+   #35 = String             #155          // \\nStack B:\\n\n+   #36 = Methodref          #33.#156      // org/apache/bcel/generic/ReferenceType.getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n+   #37 = Class              #157          // java/lang/ClassNotFoundException\n+   #38 = Class              #158          // org/apache/bcel/verifier/exc/AssertionViolatedException\n+   #39 = String             #159          // Missing class:\n+   #40 = Methodref          #38.#160      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #41 = Methodref          #7.#161       // org/apache/bcel/verifier/structurals/OperandStack.peek:(I)Lorg/apache/bcel/generic/Type;\n+   #42 = Methodref          #2.#162       // java/util/ArrayList.remove:(I)Ljava/lang/Object;\n+   #43 = Methodref          #7.#163       // org/apache/bcel/verifier/structurals/OperandStack.pop:()Lorg/apache/bcel/generic/Type;\n+   #44 = String             #164          // Cannot push NULL onto OperandStack.\n+   #45 = Methodref          #38.#149      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n+   #46 = Fieldref           #31.#165      // org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+   #47 = Fieldref           #31.#166      // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n+   #48 = Fieldref           #31.#167      // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n+   #49 = Fieldref           #31.#168      // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n+   #50 = String             #169          // The OperandStack does not know about \\'\n+   #51 = String             #170          // \\'; use Type.INT instead.\n+   #52 = String             #171          // OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n+   #53 = Methodref          #2.#172       // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+   #54 = Methodref          #31.#173      // org/apache/bcel/generic/Type.getSize:()I\n+   #55 = String             #174          // Slots used:\n+   #56 = Methodref          #21.#175      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #57 = String             #176          //  MaxStack:\n+   #58 = String             #177          // .\\n\n+   #59 = String             #178          //  (Size:\n+   #60 = Methodref          #179.#180     // java/lang/String.valueOf:(I)Ljava/lang/String;\n+   #61 = String             #181          // )\\n\n+   #62 = Class              #182          // java/lang/Object\n+   #63 = Class              #183          // java/lang/Cloneable\n    #64 = Utf8               stack\n    #65 = Utf8               Ljava/util/ArrayList;\n    #66 = Utf8               Signature\n    #67 = Utf8               Ljava/util/ArrayList<Lorg/apache/bcel/generic/Type;>;\n    #68 = Utf8               maxStack\n    #69 = Utf8               I\n    #70 = Utf8               <init>\n@@ -110,118 +110,116 @@\n   #100 = Utf8               Lorg/apache/bcel/verifier/structurals/UninitializedObjectType;\n   #101 = Utf8               isEmpty\n   #102 = Utf8               ()Z\n   #103 = Utf8               merge\n   #104 = Utf8               (Lorg/apache/bcel/verifier/structurals/OperandStack;)V\n   #105 = Utf8               e\n   #106 = Utf8               Ljava/lang/ClassNotFoundException;\n-  #107 = Class              #159          // java/lang/ClassNotFoundException\n-  #108 = Utf8               peek\n-  #109 = Utf8               ()Lorg/apache/bcel/generic/Type;\n-  #110 = Utf8               (I)Lorg/apache/bcel/generic/Type;\n-  #111 = Utf8               pop\n-  #112 = Utf8               j\n-  #113 = Utf8               count\n-  #114 = Utf8               push\n-  #115 = Utf8               (Lorg/apache/bcel/generic/Type;)V\n-  #116 = Utf8               type\n-  #117 = Utf8               Lorg/apache/bcel/generic/Type;\n-  #118 = Utf8               size\n-  #119 = Utf8               slotsUsed\n-  #120 = Utf8               slots\n-  #121 = Utf8               toString\n-  #122 = Utf8               ()Ljava/lang/String;\n-  #123 = Utf8               sb\n-  #124 = Utf8               Ljava/lang/StringBuilder;\n-  #125 = Class              #145          // java/lang/StringBuilder\n-  #126 = Utf8               SourceFile\n-  #127 = Utf8               OperandStack.java\n-  #128 = NameAndType        #70:#81       // \"<init>\":()V\n-  #129 = Utf8               java/util/ArrayList\n-  #130 = NameAndType        #64:#65       // stack:Ljava/util/ArrayList;\n-  #131 = NameAndType        #68:#69       // maxStack:I\n-  #132 = NameAndType        #114:#115     // push:(Lorg/apache/bcel/generic/Type;)V\n-  #133 = Utf8               org/apache/bcel/verifier/structurals/OperandStack\n-  #134 = NameAndType        #70:#71       // \"<init>\":(I)V\n-  #135 = NameAndType        #82:#83       // clone:()Ljava/lang/Object;\n-  #136 = NameAndType        #86:#87       // equals:(Ljava/lang/Object;)Z\n-  #137 = NameAndType        #94:#95       // hashCode:()I\n-  #138 = NameAndType        #118:#95      // size:()I\n-  #139 = NameAndType        #186:#187     // get:(I)Ljava/lang/Object;\n-  #140 = NameAndType        #188:#189     // getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n-  #141 = NameAndType        #190:#191     // set:(ILjava/lang/Object;)Ljava/lang/Object;\n-  #142 = NameAndType        #101:#102     // isEmpty:()Z\n-  #143 = NameAndType        #119:#95      // slotsUsed:()I\n-  #144 = Utf8               org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n-  #145 = Utf8               java/lang/StringBuilder\n-  #146 = Utf8               Cannot merge stacks of different size:\\nOperandStack A:\\n\n-  #147 = NameAndType        #192:#193     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #148 = NameAndType        #192:#194     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #149 = Utf8               \\nOperandStack B:\\n\n-  #150 = NameAndType        #121:#122     // toString:()Ljava/lang/String;\n-  #151 = NameAndType        #70:#195      // \"<init>\":(Ljava/lang/String;)V\n-  #152 = Utf8               org/apache/bcel/verifier/structurals/UninitializedObjectType\n-  #153 = Utf8               Backwards branch with an uninitialized object on the stack detected.\n-  #154 = Utf8               org/apache/bcel/generic/Type\n-  #155 = Utf8               org/apache/bcel/generic/ReferenceType\n-  #156 = Utf8               Cannot merge stacks of different types:\\nStack A:\\n\n-  #157 = Utf8               \\nStack B:\\n\n-  #158 = NameAndType        #196:#197     // getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n-  #159 = Utf8               java/lang/ClassNotFoundException\n-  #160 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n-  #161 = Utf8               Missing class:\n-  #162 = NameAndType        #70:#198      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #163 = NameAndType        #108:#110     // peek:(I)Lorg/apache/bcel/generic/Type;\n-  #164 = NameAndType        #199:#187     // remove:(I)Ljava/lang/Object;\n-  #165 = NameAndType        #111:#109     // pop:()Lorg/apache/bcel/generic/Type;\n-  #166 = Utf8               Cannot push NULL onto OperandStack.\n-  #167 = NameAndType        #200:#201     // BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n-  #168 = NameAndType        #202:#201     // CHAR:Lorg/apache/bcel/generic/BasicType;\n-  #169 = NameAndType        #203:#201     // BYTE:Lorg/apache/bcel/generic/BasicType;\n-  #170 = NameAndType        #204:#201     // SHORT:Lorg/apache/bcel/generic/BasicType;\n-  #171 = Utf8               The OperandStack does not know about \\'\n-  #172 = Utf8               \\'; use Type.INT instead.\n-  #173 = Utf8               OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n-  #174 = NameAndType        #205:#87      // add:(Ljava/lang/Object;)Z\n-  #175 = NameAndType        #206:#95      // getSize:()I\n-  #176 = Utf8               Slots used:\n-  #177 = NameAndType        #192:#207     // append:(I)Ljava/lang/StringBuilder;\n-  #178 = Utf8                MaxStack:\n-  #179 = Utf8               .\\n\n-  #180 = Utf8                (Size:\n-  #181 = Class              #208          // java/lang/String\n-  #182 = NameAndType        #209:#210     // valueOf:(I)Ljava/lang/String;\n-  #183 = Utf8               )\\n\n-  #184 = Utf8               java/lang/Object\n-  #185 = Utf8               java/lang/Cloneable\n-  #186 = Utf8               get\n-  #187 = Utf8               (I)Ljava/lang/Object;\n-  #188 = Utf8               getInitialized\n-  #189 = Utf8               ()Lorg/apache/bcel/generic/ObjectType;\n-  #190 = Utf8               set\n-  #191 = Utf8               (ILjava/lang/Object;)Ljava/lang/Object;\n-  #192 = Utf8               append\n-  #193 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #194 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #195 = Utf8               (Ljava/lang/String;)V\n-  #196 = Utf8               getFirstCommonSuperclass\n-  #197 = Utf8               (Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n-  #198 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #199 = Utf8               remove\n-  #200 = Utf8               BOOLEAN\n-  #201 = Utf8               Lorg/apache/bcel/generic/BasicType;\n-  #202 = Utf8               CHAR\n-  #203 = Utf8               BYTE\n-  #204 = Utf8               SHORT\n-  #205 = Utf8               add\n-  #206 = Utf8               getSize\n-  #207 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #208 = Utf8               java/lang/String\n-  #209 = Utf8               valueOf\n-  #210 = Utf8               (I)Ljava/lang/String;\n+  #107 = Utf8               peek\n+  #108 = Utf8               ()Lorg/apache/bcel/generic/Type;\n+  #109 = Utf8               (I)Lorg/apache/bcel/generic/Type;\n+  #110 = Utf8               pop\n+  #111 = Utf8               j\n+  #112 = Utf8               count\n+  #113 = Utf8               push\n+  #114 = Utf8               (Lorg/apache/bcel/generic/Type;)V\n+  #115 = Utf8               type\n+  #116 = Utf8               Lorg/apache/bcel/generic/Type;\n+  #117 = Utf8               size\n+  #118 = Utf8               slotsUsed\n+  #119 = Utf8               slots\n+  #120 = Utf8               toString\n+  #121 = Utf8               ()Ljava/lang/String;\n+  #122 = Utf8               sb\n+  #123 = Utf8               Ljava/lang/StringBuilder;\n+  #124 = Utf8               SourceFile\n+  #125 = Utf8               OperandStack.java\n+  #126 = NameAndType        #70:#81       // \"<init>\":()V\n+  #127 = Utf8               java/util/ArrayList\n+  #128 = NameAndType        #64:#65       // stack:Ljava/util/ArrayList;\n+  #129 = NameAndType        #68:#69       // maxStack:I\n+  #130 = NameAndType        #113:#114     // push:(Lorg/apache/bcel/generic/Type;)V\n+  #131 = Utf8               org/apache/bcel/verifier/structurals/OperandStack\n+  #132 = NameAndType        #70:#71       // \"<init>\":(I)V\n+  #133 = NameAndType        #82:#83       // clone:()Ljava/lang/Object;\n+  #134 = NameAndType        #86:#87       // equals:(Ljava/lang/Object;)Z\n+  #135 = NameAndType        #94:#95       // hashCode:()I\n+  #136 = NameAndType        #117:#95      // size:()I\n+  #137 = NameAndType        #184:#185     // get:(I)Ljava/lang/Object;\n+  #138 = NameAndType        #186:#187     // getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n+  #139 = NameAndType        #188:#189     // set:(ILjava/lang/Object;)Ljava/lang/Object;\n+  #140 = NameAndType        #101:#102     // isEmpty:()Z\n+  #141 = NameAndType        #118:#95      // slotsUsed:()I\n+  #142 = Utf8               org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+  #143 = Utf8               java/lang/StringBuilder\n+  #144 = Utf8               Cannot merge stacks of different size:\\nOperandStack A:\\n\n+  #145 = NameAndType        #190:#191     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #146 = NameAndType        #190:#192     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #147 = Utf8               \\nOperandStack B:\\n\n+  #148 = NameAndType        #120:#121     // toString:()Ljava/lang/String;\n+  #149 = NameAndType        #70:#193      // \"<init>\":(Ljava/lang/String;)V\n+  #150 = Utf8               org/apache/bcel/verifier/structurals/UninitializedObjectType\n+  #151 = Utf8               Backwards branch with an uninitialized object on the stack detected.\n+  #152 = Utf8               org/apache/bcel/generic/Type\n+  #153 = Utf8               org/apache/bcel/generic/ReferenceType\n+  #154 = Utf8               Cannot merge stacks of different types:\\nStack A:\\n\n+  #155 = Utf8               \\nStack B:\\n\n+  #156 = NameAndType        #194:#195     // getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n+  #157 = Utf8               java/lang/ClassNotFoundException\n+  #158 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n+  #159 = Utf8               Missing class:\n+  #160 = NameAndType        #70:#196      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #161 = NameAndType        #107:#109     // peek:(I)Lorg/apache/bcel/generic/Type;\n+  #162 = NameAndType        #197:#185     // remove:(I)Ljava/lang/Object;\n+  #163 = NameAndType        #110:#108     // pop:()Lorg/apache/bcel/generic/Type;\n+  #164 = Utf8               Cannot push NULL onto OperandStack.\n+  #165 = NameAndType        #198:#199     // BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+  #166 = NameAndType        #200:#199     // CHAR:Lorg/apache/bcel/generic/BasicType;\n+  #167 = NameAndType        #201:#199     // BYTE:Lorg/apache/bcel/generic/BasicType;\n+  #168 = NameAndType        #202:#199     // SHORT:Lorg/apache/bcel/generic/BasicType;\n+  #169 = Utf8               The OperandStack does not know about \\'\n+  #170 = Utf8               \\'; use Type.INT instead.\n+  #171 = Utf8               OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n+  #172 = NameAndType        #203:#87      // add:(Ljava/lang/Object;)Z\n+  #173 = NameAndType        #204:#95      // getSize:()I\n+  #174 = Utf8               Slots used:\n+  #175 = NameAndType        #190:#205     // append:(I)Ljava/lang/StringBuilder;\n+  #176 = Utf8                MaxStack:\n+  #177 = Utf8               .\\n\n+  #178 = Utf8                (Size:\n+  #179 = Class              #206          // java/lang/String\n+  #180 = NameAndType        #207:#208     // valueOf:(I)Ljava/lang/String;\n+  #181 = Utf8               )\\n\n+  #182 = Utf8               java/lang/Object\n+  #183 = Utf8               java/lang/Cloneable\n+  #184 = Utf8               get\n+  #185 = Utf8               (I)Ljava/lang/Object;\n+  #186 = Utf8               getInitialized\n+  #187 = Utf8               ()Lorg/apache/bcel/generic/ObjectType;\n+  #188 = Utf8               set\n+  #189 = Utf8               (ILjava/lang/Object;)Ljava/lang/Object;\n+  #190 = Utf8               append\n+  #191 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #192 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #193 = Utf8               (Ljava/lang/String;)V\n+  #194 = Utf8               getFirstCommonSuperclass\n+  #195 = Utf8               (Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n+  #196 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #197 = Utf8               remove\n+  #198 = Utf8               BOOLEAN\n+  #199 = Utf8               Lorg/apache/bcel/generic/BasicType;\n+  #200 = Utf8               CHAR\n+  #201 = Utf8               BYTE\n+  #202 = Utf8               SHORT\n+  #203 = Utf8               add\n+  #204 = Utf8               getSize\n+  #205 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #206 = Utf8               java/lang/String\n+  #207 = Utf8               valueOf\n+  #208 = Utf8               (I)Ljava/lang/String;\n {\n   private java.util.ArrayList<org.apache.bcel.generic.Type> stack;\n     descriptor: Ljava/util/ArrayList;\n     flags: (0x0002) ACC_PRIVATE\n     Signature: #67                          // Ljava/util/ArrayList<Lorg/apache/bcel/generic/Type;>;\n \n   private final int maxStack;\n"}]}
