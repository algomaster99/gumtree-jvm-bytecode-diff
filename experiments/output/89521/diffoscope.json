{"diffoscope-json-version": 1, "source1": "first/ParserMinimalBase.class", "source2": "second/ParserMinimalBase.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -64,14 +64,27 @@\n     protected static final double MAX_LONG_D = 9.223372036854776E18;\n     protected static final double MIN_INT_D = -2.147483648E9;\n     protected static final double MAX_INT_D = 2.147483647E9;\n     protected static final int MAX_ERROR_TOKEN_LENGTH = 256;\n     protected JsonToken _currToken;\n     protected JsonToken _lastClearedToken;\n     \n+    static {\n+        NO_BYTES = new byte[0];\n+        NO_INTS = new int[0];\n+        BI_MIN_INT = BigInteger.valueOf(-2147483648L);\n+        BI_MAX_INT = BigInteger.valueOf(2147483647L);\n+        BI_MIN_LONG = BigInteger.valueOf(Long.MIN_VALUE);\n+        BI_MAX_LONG = BigInteger.valueOf(Long.MAX_VALUE);\n+        BD_MIN_LONG = new BigDecimal(ParserMinimalBase.BI_MIN_LONG);\n+        BD_MAX_LONG = new BigDecimal(ParserMinimalBase.BI_MAX_LONG);\n+        BD_MIN_INT = new BigDecimal(ParserMinimalBase.BI_MIN_INT);\n+        BD_MAX_INT = new BigDecimal(ParserMinimalBase.BI_MAX_INT);\n+    }\n+    \n     protected ParserMinimalBase() {\n     }\n     \n     protected ParserMinimalBase(final int features) {\n         super(features);\n     }\n     \n@@ -99,15 +112,15 @@\n     public boolean hasCurrentToken() {\n         return this._currToken != null;\n     }\n     \n     public boolean hasTokenId(final int id) {\n         final JsonToken t = this._currToken;\n         if (t == null) {\n-            return 0 == id;\n+            return id == 0;\n         }\n         return t.id() == id;\n     }\n     \n     public boolean hasToken(final JsonToken t) {\n         return this._currToken == t;\n     }\n@@ -382,15 +395,15 @@\n     protected boolean _hasTextualNull(final String value) {\n         return \"null\".equals(value);\n     }\n     \n     protected <T> T _reportUnexpectedNumberChar(final int ch, final String comment) throws JsonParseException {\n         String msg = String.format(\"Unexpected character (%s) in numeric value\", _getCharDesc(ch));\n         if (comment != null) {\n-            msg = msg + \": \" + comment;\n+            msg = String.valueOf(msg) + \": \" + comment;\n         }\n         this._reportError(msg);\n         return null;\n     }\n     \n     @Deprecated\n     protected void reportUnexpectedNumberChar(final int ch, final String comment) throws JsonParseException {\n@@ -453,15 +466,15 @@\n     \n     protected void _reportUnexpectedChar(final int ch, final String comment) throws JsonParseException {\n         if (ch < 0) {\n             this._reportInvalidEOF();\n         }\n         String msg = String.format(\"Unexpected character (%s)\", _getCharDesc(ch));\n         if (comment != null) {\n-            msg = msg + \": \" + comment;\n+            msg = String.valueOf(msg) + \": \" + comment;\n         }\n         this._reportError(msg);\n     }\n     \n     protected void _reportInvalidEOF() throws JsonParseException {\n         this._reportInvalidEOF(\" in \" + this._currToken, this._currToken);\n     }\n@@ -553,21 +566,8 @@\n         try {\n             return new String(b, \"US-ASCII\");\n         }\n         catch (final IOException e) {\n             throw new RuntimeException(e);\n         }\n     }\n-    \n-    static {\n-        NO_BYTES = new byte[0];\n-        NO_INTS = new int[0];\n-        BI_MIN_INT = BigInteger.valueOf(-2147483648L);\n-        BI_MAX_INT = BigInteger.valueOf(2147483647L);\n-        BI_MIN_LONG = BigInteger.valueOf(Long.MIN_VALUE);\n-        BI_MAX_LONG = BigInteger.valueOf(Long.MAX_VALUE);\n-        BD_MIN_LONG = new BigDecimal(ParserMinimalBase.BI_MIN_LONG);\n-        BD_MAX_LONG = new BigDecimal(ParserMinimalBase.BI_MAX_LONG);\n-        BD_MIN_INT = new BigDecimal(ParserMinimalBase.BI_MIN_INT);\n-        BD_MAX_INT = new BigDecimal(ParserMinimalBase.BI_MAX_INT);\n-    }\n }\n"}]}
