{"diffoscope-json-version": 1, "source1": "first/AbstractItModuleTestSupport.class", "source2": "second/AbstractItModuleTestSupport.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -70,20 +70,20 @@\n                 throw new IllegalStateException(\"multiple instances of the same Module are detected\");\n             }\n             configuration2 = (Configuration)moduleConfigs.stream().filter(configuration3 -> isSameModuleId(configuration3, s3)).findFirst().orElseThrow(() -> new IllegalStateException(\"problem with module config\"));\n         }\n         return configuration2;\n     }\n     \n-    private static boolean isSameModuleId(final Configuration configuration, final String anObject) {\n+    private static boolean isSameModuleId(final Configuration obj, final String anObject) {\n         try {\n-            return configuration.getProperty(\"id\").equals(anObject);\n+            return obj.getProperty(\"id\").equals(anObject);\n         }\n         catch (final CheckstyleException cause) {\n-            throw new IllegalStateException(\"problem to get ID attribute from \" + configuration, (Throwable)cause);\n+            throw new IllegalStateException(\"problem to get ID attribute from \" + String.valueOf((Object)obj), (Throwable)cause);\n         }\n     }\n     \n     protected static List<Configuration> getModuleConfigsByIds(final Configuration configuration, final String... array) throws CheckstyleException {\n         final ArrayList list = new ArrayList();\n         for (final Configuration configuration2 : configuration.getChildren()) {\n             if (\"TreeWalker\".equals(configuration2.getName())) {\n"}]}
