{"diffoscope-json-version": 1, "source1": "first/UnsynchronizedByteArrayInputStream.class", "source2": "second/UnsynchronizedByteArrayInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,35 +1,35 @@\n-  SHA-256 checksum 8ab556a8e4fcca85efb9fc7e71730511fa94b2ee390e2f4e3800b75350ab17a1\n+  SHA-256 checksum 205bc308ce43255693e7ba41d9628b4a450af9a04a1f10525b0d5ca4ce211792\n   Compiled from \"UnsynchronizedByteArrayInputStream.java\"\n public class org.apache.commons.io.input.UnsynchronizedByteArrayInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #12                         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n   super_class: #18                        // java/io/InputStream\n   interfaces: 0, fields: 5, methods: 11, attributes: 1\n Constant pool:\n-   #1 = Methodref          #18.#64        // java/io/InputStream.\"<init>\":()V\n-   #2 = Methodref          #65.#66        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #3 = Fieldref           #12.#67        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.data:[B\n-   #4 = Fieldref           #12.#68        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.offset:I\n-   #5 = Fieldref           #12.#69        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.eod:I\n-   #6 = Fieldref           #12.#70        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.markedOffset:I\n-   #7 = Class              #71            // java/lang/IllegalArgumentException\n-   #8 = String             #72            // offset cannot be negative\n-   #9 = Methodref          #7.#73         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #10 = Methodref          #74.#75        // java/lang/Math.min:(II)I\n-  #11 = String             #76            // length cannot be negative\n-  #12 = Class              #77            // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-  #13 = Methodref          #12.#78        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.read:([BII)I\n-  #14 = Class              #79            // java/lang/IndexOutOfBoundsException\n-  #15 = Methodref          #14.#64        // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-  #16 = Methodref          #80.#81        // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #17 = String             #82            // Skipping backward is not supported\n-  #18 = Class              #83            // java/io/InputStream\n+   #1 = Methodref          #18.#63        // java/io/InputStream.\"<init>\":()V\n+   #2 = Methodref          #64.#65        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #3 = Fieldref           #12.#66        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.data:[B\n+   #4 = Fieldref           #12.#67        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.offset:I\n+   #5 = Fieldref           #12.#68        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.eod:I\n+   #6 = Fieldref           #12.#69        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.markedOffset:I\n+   #7 = Class              #70            // java/lang/IllegalArgumentException\n+   #8 = String             #71            // offset cannot be negative\n+   #9 = Methodref          #7.#72         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #10 = Methodref          #73.#74        // java/lang/Math.min:(II)I\n+  #11 = String             #75            // length cannot be negative\n+  #12 = Class              #76            // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+  #13 = Methodref          #12.#77        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.read:([BII)I\n+  #14 = Class              #78            // java/lang/IndexOutOfBoundsException\n+  #15 = Methodref          #14.#63        // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+  #16 = Methodref          #79.#80        // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #17 = String             #81            // Skipping backward is not supported\n+  #18 = Class              #82            // java/io/InputStream\n   #19 = Utf8               END_OF_STREAM\n   #20 = Utf8               I\n   #21 = Utf8               ConstantValue\n   #22 = Integer            -1\n   #23 = Utf8               data\n   #24 = Utf8               [B\n   #25 = Utf8               eod\n@@ -40,71 +40,70 @@\n   #30 = Utf8               Code\n   #31 = Utf8               LineNumberTable\n   #32 = Utf8               LocalVariableTable\n   #33 = Utf8               this\n   #34 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n   #35 = Utf8               ([BI)V\n   #36 = Utf8               StackMapTable\n-  #37 = Class              #77            // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-  #38 = Class              #24            // \"[B\"\n-  #39 = Utf8               ([BII)V\n-  #40 = Utf8               length\n-  #41 = Utf8               available\n-  #42 = Utf8               ()I\n-  #43 = Utf8               read\n-  #44 = Utf8               ([B)I\n-  #45 = Utf8               b\n-  #46 = Utf8               ([BII)I\n-  #47 = Utf8               off\n-  #48 = Utf8               len\n-  #49 = Utf8               actualLen\n-  #50 = Utf8               skip\n-  #51 = Utf8               (J)J\n-  #52 = Utf8               n\n-  #53 = Utf8               J\n-  #54 = Utf8               actualSkip\n-  #55 = Utf8               markSupported\n-  #56 = Utf8               ()Z\n-  #57 = Utf8               mark\n-  #58 = Utf8               (I)V\n-  #59 = Utf8               readlimit\n-  #60 = Utf8               reset\n-  #61 = Utf8               ()V\n-  #62 = Utf8               SourceFile\n-  #63 = Utf8               UnsynchronizedByteArrayInputStream.java\n-  #64 = NameAndType        #28:#61        // \"<init>\":()V\n-  #65 = Class              #84            // java/util/Objects\n-  #66 = NameAndType        #85:#86        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #67 = NameAndType        #23:#24        // data:[B\n-  #68 = NameAndType        #26:#20        // offset:I\n-  #69 = NameAndType        #25:#20        // eod:I\n-  #70 = NameAndType        #27:#20        // markedOffset:I\n-  #71 = Utf8               java/lang/IllegalArgumentException\n-  #72 = Utf8               offset cannot be negative\n-  #73 = NameAndType        #28:#87        // \"<init>\":(Ljava/lang/String;)V\n-  #74 = Class              #88            // java/lang/Math\n-  #75 = NameAndType        #89:#90        // min:(II)I\n-  #76 = Utf8               length cannot be negative\n-  #77 = Utf8               org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-  #78 = NameAndType        #43:#46        // read:([BII)I\n-  #79 = Utf8               java/lang/IndexOutOfBoundsException\n-  #80 = Class              #91            // java/lang/System\n-  #81 = NameAndType        #92:#93        // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #82 = Utf8               Skipping backward is not supported\n-  #83 = Utf8               java/io/InputStream\n-  #84 = Utf8               java/util/Objects\n-  #85 = Utf8               requireNonNull\n-  #86 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #87 = Utf8               (Ljava/lang/String;)V\n-  #88 = Utf8               java/lang/Math\n-  #89 = Utf8               min\n-  #90 = Utf8               (II)I\n-  #91 = Utf8               java/lang/System\n-  #92 = Utf8               arraycopy\n-  #93 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #37 = Class              #24            // \"[B\"\n+  #38 = Utf8               ([BII)V\n+  #39 = Utf8               length\n+  #40 = Utf8               available\n+  #41 = Utf8               ()I\n+  #42 = Utf8               read\n+  #43 = Utf8               ([B)I\n+  #44 = Utf8               b\n+  #45 = Utf8               ([BII)I\n+  #46 = Utf8               off\n+  #47 = Utf8               len\n+  #48 = Utf8               actualLen\n+  #49 = Utf8               skip\n+  #50 = Utf8               (J)J\n+  #51 = Utf8               n\n+  #52 = Utf8               J\n+  #53 = Utf8               actualSkip\n+  #54 = Utf8               markSupported\n+  #55 = Utf8               ()Z\n+  #56 = Utf8               mark\n+  #57 = Utf8               (I)V\n+  #58 = Utf8               readlimit\n+  #59 = Utf8               reset\n+  #60 = Utf8               ()V\n+  #61 = Utf8               SourceFile\n+  #62 = Utf8               UnsynchronizedByteArrayInputStream.java\n+  #63 = NameAndType        #28:#60        // \"<init>\":()V\n+  #64 = Class              #83            // java/util/Objects\n+  #65 = NameAndType        #84:#85        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #66 = NameAndType        #23:#24        // data:[B\n+  #67 = NameAndType        #26:#20        // offset:I\n+  #68 = NameAndType        #25:#20        // eod:I\n+  #69 = NameAndType        #27:#20        // markedOffset:I\n+  #70 = Utf8               java/lang/IllegalArgumentException\n+  #71 = Utf8               offset cannot be negative\n+  #72 = NameAndType        #28:#86        // \"<init>\":(Ljava/lang/String;)V\n+  #73 = Class              #87            // java/lang/Math\n+  #74 = NameAndType        #88:#89        // min:(II)I\n+  #75 = Utf8               length cannot be negative\n+  #76 = Utf8               org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+  #77 = NameAndType        #42:#45        // read:([BII)I\n+  #78 = Utf8               java/lang/IndexOutOfBoundsException\n+  #79 = Class              #90            // java/lang/System\n+  #80 = NameAndType        #91:#92        // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #81 = Utf8               Skipping backward is not supported\n+  #82 = Utf8               java/io/InputStream\n+  #83 = Utf8               java/util/Objects\n+  #84 = Utf8               requireNonNull\n+  #85 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #86 = Utf8               (Ljava/lang/String;)V\n+  #87 = Utf8               java/lang/Math\n+  #88 = Utf8               min\n+  #89 = Utf8               (II)I\n+  #90 = Utf8               java/lang/System\n+  #91 = Utf8               arraycopy\n+  #92 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n {\n   public static final int END_OF_STREAM = -1;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   private final byte[] data;\n"}]}
