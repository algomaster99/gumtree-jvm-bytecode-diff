{"diffoscope-json-version": 1, "source1": "first/ZipArchiveEntry$ExtraFieldParsingMode.class", "source2": "second/ZipArchiveEntry$ExtraFieldParsingMode.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,16 +9,21 @@\n     public static final enum ExtraFieldParsingMode BEST_EFFORT;\n     public static final enum ExtraFieldParsingMode STRICT_FOR_KNOW_EXTRA_FIELDS;\n     public static final enum ExtraFieldParsingMode ONLY_PARSEABLE_LENIENT;\n     public static final enum ExtraFieldParsingMode ONLY_PARSEABLE_STRICT;\n     public static final enum ExtraFieldParsingMode DRACONIC;\n     private final ExtraFieldUtils.UnparseableExtraField onUnparseableData;\n     \n-    public static ExtraFieldParsingMode valueOf(final String name) {\n-        return Enum.valueOf(ExtraFieldParsingMode.class, name);\n+    static {\n+        ExtraFieldParsingMode.BEST_EFFORT = (ExtraFieldParsingMode)new ExtraFieldParsingMode.ZipArchiveEntry$ExtraFieldParsingMode$1(\"BEST_EFFORT\", 0, ExtraFieldUtils.UnparseableExtraField.READ);\n+        ExtraFieldParsingMode.STRICT_FOR_KNOW_EXTRA_FIELDS = new ExtraFieldParsingMode(\"STRICT_FOR_KNOW_EXTRA_FIELDS\", 1, ExtraFieldUtils.UnparseableExtraField.READ);\n+        ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT = (ExtraFieldParsingMode)new ExtraFieldParsingMode.ZipArchiveEntry$ExtraFieldParsingMode$2(\"ONLY_PARSEABLE_LENIENT\", 2, ExtraFieldUtils.UnparseableExtraField.SKIP);\n+        ExtraFieldParsingMode.ONLY_PARSEABLE_STRICT = new ExtraFieldParsingMode(\"ONLY_PARSEABLE_STRICT\", 3, ExtraFieldUtils.UnparseableExtraField.SKIP);\n+        ExtraFieldParsingMode.DRACONIC = new ExtraFieldParsingMode(\"DRACONIC\", 4, ExtraFieldUtils.UnparseableExtraField.THROW);\n+        ExtraFieldParsingMode.ENUM$VALUES = new ExtraFieldParsingMode[] { ExtraFieldParsingMode.BEST_EFFORT, ExtraFieldParsingMode.STRICT_FOR_KNOW_EXTRA_FIELDS, ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT, ExtraFieldParsingMode.ONLY_PARSEABLE_STRICT, ExtraFieldParsingMode.DRACONIC };\n     }\n     \n     private static ZipExtraField fillAndMakeUnrecognizedOnError(final ZipExtraField field, final byte[] data, final int off, final int len, final boolean local) {\n         try {\n             return ExtraFieldUtils.fillExtraField(field, data, off, len, local);\n         }\n         catch (final ZipException ex) {\n@@ -30,15 +35,15 @@\n             else {\n                 u.setCentralDirectoryData(Arrays.copyOfRange(data, off, off + len));\n             }\n             return (ZipExtraField)u;\n         }\n     }\n     \n-    private ExtraFieldParsingMode(final ExtraFieldUtils.UnparseableExtraField onUnparseableData) {\n+    private ExtraFieldParsingMode(final String name, final int ordinal, final ExtraFieldUtils.UnparseableExtraField onUnparseableData) {\n         this.onUnparseableData = onUnparseableData;\n     }\n     \n     public ZipExtraField createExtraField(final ZipShort headerId) throws ZipException, InstantiationException, IllegalAccessException {\n         return ExtraFieldUtils.createExtraField(headerId);\n     }\n     \n@@ -46,16 +51,11 @@\n         return ExtraFieldUtils.fillExtraField(field, data, off, len, local);\n     }\n     \n     public ZipExtraField onUnparseableExtraField(final byte[] data, final int off, final int len, final boolean local, final int claimedLength) throws ZipException {\n         return this.onUnparseableData.onUnparseableExtraField(data, off, len, local, claimedLength);\n     }\n     \n-    static {\n-        ExtraFieldParsingMode.BEST_EFFORT = (ExtraFieldParsingMode)new ExtraFieldParsingMode.ZipArchiveEntry$ExtraFieldParsingMode$1(\"BEST_EFFORT\", 0, ExtraFieldUtils.UnparseableExtraField.READ);\n-        ExtraFieldParsingMode.STRICT_FOR_KNOW_EXTRA_FIELDS = new ExtraFieldParsingMode(\"STRICT_FOR_KNOW_EXTRA_FIELDS\", 1, ExtraFieldUtils.UnparseableExtraField.READ);\n-        ExtraFieldParsingMode.ONLY_PARSEABLE_LENIENT = (ExtraFieldParsingMode)new ExtraFieldParsingMode.ZipArchiveEntry$ExtraFieldParsingMode$2(\"ONLY_PARSEABLE_LENIENT\", 2, ExtraFieldUtils.UnparseableExtraField.SKIP);\n-        ExtraFieldParsingMode.ONLY_PARSEABLE_STRICT = new ExtraFieldParsingMode(\"ONLY_PARSEABLE_STRICT\", 3, ExtraFieldUtils.UnparseableExtraField.SKIP);\n-        ExtraFieldParsingMode.DRACONIC = new ExtraFieldParsingMode(\"DRACONIC\", 4, ExtraFieldUtils.UnparseableExtraField.THROW);\n-        ExtraFieldParsingMode.$VALUES = $values();\n+    public static ExtraFieldParsingMode valueOf(final String name) {\n+        return Enum.valueOf(ExtraFieldParsingMode.class, name);\n     }\n }\n"}]}
