{"diffoscope-json-version": 1, "source1": "first/EnclosingMethodAttribute.class", "source2": "second/EnclosingMethodAttribute.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,88 +1,88 @@\n-  SHA-256 checksum 35c7f84b0373aec8a32c5753a4072390d839d2dbc1121bfa0d048665205e2ff1\n+  SHA-256 checksum b03720b11be1b5e91488d4ef55f3b1cee11415b35f5f183a7038dff8b6347191\n   Compiled from \"EnclosingMethodAttribute.java\"\n public class org.apache.commons.compress.harmony.unpack200.bytecode.EnclosingMethodAttribute extends org.apache.commons.compress.harmony.unpack200.bytecode.Attribute\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute\n-  super_class: #15                        // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+  this_class: #2                          // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute\n+  super_class: #8                         // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n   interfaces: 0, fields: 5, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Fieldref           #14.#46        // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute.attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #2 = Methodref          #15.#47        // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-   #3 = Fieldref           #14.#48        // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute.cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-   #4 = Fieldref           #14.#49        // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute.method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n-   #5 = Class              #50            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-   #6 = Methodref          #15.#51        // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #7 = Methodref          #52.#51        // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #8 = Methodref          #53.#54        // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-   #9 = Fieldref           #14.#55        // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute.classIndex:I\n-  #10 = Methodref          #56.#51        // org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #11 = Fieldref           #14.#57        // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute.methodIndex:I\n-  #12 = String             #58            // EnclosingMethod\n-  #13 = Methodref          #59.#60        // java/io/DataOutputStream.writeShort:(I)V\n-  #14 = Class              #61            // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute\n-  #15 = Class              #62            // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n-  #16 = Utf8               attributeName\n-  #17 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-  #18 = Utf8               classIndex\n-  #19 = Utf8               I\n-  #20 = Utf8               methodIndex\n-  #21 = Utf8               cpClass\n-  #22 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-  #23 = Utf8               method\n-  #24 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n-  #25 = Utf8               setAttributeName\n-  #26 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-  #27 = Utf8               Code\n-  #28 = Utf8               LineNumberTable\n-  #29 = Utf8               <init>\n-  #30 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;)V\n-  #31 = Utf8               getLength\n-  #32 = Utf8               ()I\n-  #33 = Utf8               getNestedClassFileEntries\n-  #34 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #35 = Utf8               StackMapTable\n-  #36 = Utf8               resolve\n-  #37 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #38 = Utf8               toString\n-  #39 = Utf8               ()Ljava/lang/String;\n-  #40 = Utf8               writeBody\n-  #41 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #42 = Utf8               Exceptions\n-  #43 = Class              #63            // java/io/IOException\n-  #44 = Utf8               SourceFile\n-  #45 = Utf8               EnclosingMethodAttribute.java\n-  #46 = NameAndType        #16:#17        // attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-  #47 = NameAndType        #29:#26        // \"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-  #48 = NameAndType        #21:#22        // cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-  #49 = NameAndType        #23:#24        // method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n-  #50 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-  #51 = NameAndType        #36:#37        // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #52 = Class              #64            // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n-  #53 = Class              #65            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-  #54 = NameAndType        #66:#67        // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-  #55 = NameAndType        #18:#19        // classIndex:I\n-  #56 = Class              #68            // org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType\n-  #57 = NameAndType        #20:#19        // methodIndex:I\n-  #58 = Utf8               EnclosingMethod\n-  #59 = Class              #69            // java/io/DataOutputStream\n-  #60 = NameAndType        #70:#71        // writeShort:(I)V\n-  #61 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute\n-  #62 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n-  #63 = Utf8               java/io/IOException\n-  #64 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n-  #65 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-  #66 = Utf8               indexOf\n-  #67 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-  #68 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType\n-  #69 = Utf8               java/io/DataOutputStream\n-  #70 = Utf8               writeShort\n-  #71 = Utf8               (I)V\n+   #1 = Fieldref           #2.#3          // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute.attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #2 = Class              #4             // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute\n+   #3 = NameAndType        #5:#6          // attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #4 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute\n+   #5 = Utf8               attributeName\n+   #6 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #7 = Methodref          #8.#9          // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+   #8 = Class              #10            // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+   #9 = NameAndType        #11:#12        // \"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+  #10 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+  #11 = Utf8               <init>\n+  #12 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+  #13 = Fieldref           #2.#14         // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute.cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+  #14 = NameAndType        #15:#16        // cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+  #15 = Utf8               cpClass\n+  #16 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+  #17 = Fieldref           #2.#18         // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute.method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+  #18 = NameAndType        #19:#20        // method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+  #19 = Utf8               method\n+  #20 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+  #21 = Class              #22            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+  #22 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+  #23 = Methodref          #8.#24         // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #24 = NameAndType        #25:#26        // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #25 = Utf8               resolve\n+  #26 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #27 = Methodref          #28.#24        // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #28 = Class              #29            // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n+  #29 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n+  #30 = Methodref          #31.#32        // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+  #31 = Class              #33            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+  #32 = NameAndType        #34:#35        // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+  #33 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+  #34 = Utf8               indexOf\n+  #35 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+  #36 = Fieldref           #2.#37         // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute.classIndex:I\n+  #37 = NameAndType        #38:#39        // classIndex:I\n+  #38 = Utf8               classIndex\n+  #39 = Utf8               I\n+  #40 = Methodref          #41.#24        // org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #41 = Class              #42            // org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType\n+  #42 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType\n+  #43 = Fieldref           #2.#44         // org/apache/commons/compress/harmony/unpack200/bytecode/EnclosingMethodAttribute.methodIndex:I\n+  #44 = NameAndType        #45:#39        // methodIndex:I\n+  #45 = Utf8               methodIndex\n+  #46 = String             #47            // EnclosingMethod\n+  #47 = Utf8               EnclosingMethod\n+  #48 = Methodref          #49.#50        // java/io/DataOutputStream.writeShort:(I)V\n+  #49 = Class              #51            // java/io/DataOutputStream\n+  #50 = NameAndType        #52:#53        // writeShort:(I)V\n+  #51 = Utf8               java/io/DataOutputStream\n+  #52 = Utf8               writeShort\n+  #53 = Utf8               (I)V\n+  #54 = Utf8               setAttributeName\n+  #55 = Utf8               Code\n+  #56 = Utf8               LineNumberTable\n+  #57 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;)V\n+  #58 = Utf8               getLength\n+  #59 = Utf8               ()I\n+  #60 = Utf8               getNestedClassFileEntries\n+  #61 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #62 = Utf8               StackMapTable\n+  #63 = Utf8               toString\n+  #64 = Utf8               ()Ljava/lang/String;\n+  #65 = Utf8               writeBody\n+  #66 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #67 = Utf8               Exceptions\n+  #68 = Class              #69            // java/io/IOException\n+  #69 = Utf8               java/io/IOException\n+  #70 = Utf8               SourceFile\n+  #71 = Utf8               EnclosingMethodAttribute.java\n {\n   private static org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 attributeName;\n     descriptor: Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n \n   private int classIndex;\n     descriptor: I\n@@ -115,21 +115,21 @@\n   public org.apache.commons.compress.harmony.unpack200.bytecode.EnclosingMethodAttribute(org.apache.commons.compress.harmony.unpack200.bytecode.CPClass, org.apache.commons.compress.harmony.unpack200.bytecode.CPNameAndType);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: getstatic     #1                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-         4: invokespecial #2                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+         4: invokespecial #7                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n          7: aload_0\n          8: aload_1\n-         9: putfield      #3                  // Field cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         9: putfield      #13                 // Field cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         12: aload_0\n         13: aload_2\n-        14: putfield      #4                  // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+        14: putfield      #17                 // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n         17: return\n       LineNumberTable:\n         line 38: 0\n         line 39: 7\n         line 40: 12\n         line 41: 17\n \n@@ -145,43 +145,43 @@\n \n   protected org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry[] getNestedClassFileEntries();\n     descriptor: ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+         1: getfield      #17                 // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n          4: ifnull        32\n          7: iconst_3\n-         8: anewarray     #5                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+         8: anewarray     #21                 // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n         11: dup\n         12: iconst_0\n         13: getstatic     #1                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n         16: aastore\n         17: dup\n         18: iconst_1\n         19: aload_0\n-        20: getfield      #3                  // Field cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        20: getfield      #13                 // Field cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         23: aastore\n         24: dup\n         25: iconst_2\n         26: aload_0\n-        27: getfield      #4                  // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+        27: getfield      #17                 // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n         30: aastore\n         31: areturn\n         32: iconst_2\n-        33: anewarray     #5                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+        33: anewarray     #21                 // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n         36: dup\n         37: iconst_0\n         38: getstatic     #1                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n         41: aastore\n         42: dup\n         43: iconst_1\n         44: aload_0\n-        45: getfield      #3                  // Field cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        45: getfield      #13                 // Field cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         48: aastore\n         49: areturn\n       LineNumberTable:\n         line 55: 0\n         line 56: 7\n         line 58: 32\n       StackMapTable: number_of_entries = 1\n@@ -190,42 +190,42 @@\n   protected void resolve(org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #6                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+         2: invokespecial #23                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n          5: aload_0\n-         6: getfield      #3                  // Field cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         6: getfield      #13                 // Field cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n          9: aload_1\n-        10: invokevirtual #7                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+        10: invokevirtual #27                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n         13: aload_0\n         14: aload_1\n         15: aload_0\n-        16: getfield      #3                  // Field cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-        19: invokevirtual #8                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-        22: putfield      #9                  // Field classIndex:I\n+        16: getfield      #13                 // Field cpClass:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        19: invokevirtual #30                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+        22: putfield      #36                 // Field classIndex:I\n         25: aload_0\n-        26: getfield      #4                  // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+        26: getfield      #17                 // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n         29: ifnull        55\n         32: aload_0\n-        33: getfield      #4                  // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+        33: getfield      #17                 // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n         36: aload_1\n-        37: invokevirtual #10                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+        37: invokevirtual #40                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n         40: aload_0\n         41: aload_1\n         42: aload_0\n-        43: getfield      #4                  // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n-        46: invokevirtual #8                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-        49: putfield      #11                 // Field methodIndex:I\n+        43: getfield      #17                 // Field method:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPNameAndType;\n+        46: invokevirtual #30                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+        49: putfield      #43                 // Field methodIndex:I\n         52: goto          60\n         55: aload_0\n         56: iconst_0\n-        57: putfield      #11                 // Field methodIndex:I\n+        57: putfield      #43                 // Field methodIndex:I\n         60: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 5\n         line 65: 13\n         line 66: 25\n         line 67: 32\n@@ -237,32 +237,32 @@\n         frame_type = 4 /* same */\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: ldc           #12                 // String EnclosingMethod\n+         0: ldc           #46                 // String EnclosingMethod\n          2: areturn\n       LineNumberTable:\n         line 81: 0\n \n   protected void writeBody(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #9                  // Field classIndex:I\n-         5: invokevirtual #13                 // Method java/io/DataOutputStream.writeShort:(I)V\n+         2: getfield      #36                 // Field classIndex:I\n+         5: invokevirtual #48                 // Method java/io/DataOutputStream.writeShort:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #11                 // Field methodIndex:I\n-        13: invokevirtual #13                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        10: getfield      #43                 // Field methodIndex:I\n+        13: invokevirtual #48                 // Method java/io/DataOutputStream.writeShort:(I)V\n         16: return\n       LineNumberTable:\n         line 91: 0\n         line 92: 8\n         line 93: 16\n     Exceptions:\n       throws java.io.IOException\n"}]}
