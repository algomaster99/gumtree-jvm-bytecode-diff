{"diffoscope-json-version": 1, "source1": "first/ToStringStyle.class", "source2": "second/ToStringStyle.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -41,35 +41,34 @@\n     private String summaryObjectStartText;\n     private String summaryObjectEndText;\n     \n     static Map<Object, Object> getRegistry() {\n         return ToStringStyle.REGISTRY.get();\n     }\n     \n-    static boolean isRegistered(final Object value) {\n-        final Map<Object, Object> m = getRegistry();\n-        return m != null && m.containsKey(value);\n+    static boolean isRegistered(final Object o) {\n+        final Map<Object, Object> registry = getRegistry();\n+        return registry != null && registry.containsKey(o);\n     }\n     \n-    static void register(final Object value) {\n-        if (value != null) {\n-            final Map<Object, Object> m = getRegistry();\n-            if (m == null) {\n+    static void register(final Object o) {\n+        if (o != null) {\n+            if (getRegistry() == null) {\n                 ToStringStyle.REGISTRY.set(new WeakHashMap<Object, Object>());\n             }\n-            getRegistry().put(value, null);\n+            getRegistry().put(o, null);\n         }\n     }\n     \n-    static void unregister(final Object value) {\n-        if (value != null) {\n-            final Map<Object, Object> m = getRegistry();\n-            if (m != null) {\n-                m.remove(value);\n-                if (m.isEmpty()) {\n+    static void unregister(final Object o) {\n+        if (o != null) {\n+            final Map<Object, Object> registry = getRegistry();\n+            if (registry != null) {\n+                registry.remove(o);\n+                if (registry.isEmpty()) {\n                     ToStringStyle.REGISTRY.remove();\n                 }\n             }\n         }\n     }\n     \n     protected ToStringStyle() {\n@@ -91,634 +90,634 @@\n         this.nullText = \"<null>\";\n         this.sizeStartText = \"<size=\";\n         this.sizeEndText = \">\";\n         this.summaryObjectStartText = \"<\";\n         this.summaryObjectEndText = \">\";\n     }\n     \n-    public void appendSuper(final StringBuffer buffer, final String superToString) {\n-        this.appendToString(buffer, superToString);\n+    public void appendSuper(final StringBuffer sb, final String s) {\n+        this.appendToString(sb, s);\n     }\n     \n-    public void appendToString(final StringBuffer buffer, final String toString) {\n-        if (toString != null) {\n-            final int pos1 = toString.indexOf(this.contentStart) + this.contentStart.length();\n-            final int pos2 = toString.lastIndexOf(this.contentEnd);\n-            if (pos1 != pos2 && pos1 >= 0 && pos2 >= 0) {\n+    public void appendToString(final StringBuffer sb, final String s) {\n+        if (s != null) {\n+            final int start = s.indexOf(this.contentStart) + this.contentStart.length();\n+            final int lastIndex = s.lastIndexOf(this.contentEnd);\n+            if (start != lastIndex && start >= 0 && lastIndex >= 0) {\n                 if (this.fieldSeparatorAtStart) {\n-                    this.removeLastFieldSeparator(buffer);\n+                    this.removeLastFieldSeparator(sb);\n                 }\n-                buffer.append(toString, pos1, pos2);\n-                this.appendFieldSeparator(buffer);\n+                sb.append(s, start, lastIndex);\n+                this.appendFieldSeparator(sb);\n             }\n         }\n     }\n     \n-    public void appendStart(final StringBuffer buffer, final Object object) {\n-        if (object != null) {\n-            this.appendClassName(buffer, object);\n-            this.appendIdentityHashCode(buffer, object);\n-            this.appendContentStart(buffer);\n+    public void appendStart(final StringBuffer sb, final Object o) {\n+        if (o != null) {\n+            this.appendClassName(sb, o);\n+            this.appendIdentityHashCode(sb, o);\n+            this.appendContentStart(sb);\n             if (this.fieldSeparatorAtStart) {\n-                this.appendFieldSeparator(buffer);\n+                this.appendFieldSeparator(sb);\n             }\n         }\n     }\n     \n-    public void appendEnd(final StringBuffer buffer, final Object object) {\n+    public void appendEnd(final StringBuffer sb, final Object o) {\n         if (!this.fieldSeparatorAtEnd) {\n-            this.removeLastFieldSeparator(buffer);\n+            this.removeLastFieldSeparator(sb);\n         }\n-        this.appendContentEnd(buffer);\n-        unregister(object);\n+        this.appendContentEnd(sb);\n+        unregister(o);\n     }\n     \n-    protected void removeLastFieldSeparator(final StringBuffer buffer) {\n-        final int len = buffer.length();\n-        final int sepLen = this.fieldSeparator.length();\n-        if (len > 0 && sepLen > 0 && len >= sepLen) {\n-            boolean match = true;\n-            for (int i = 0; i < sepLen; ++i) {\n-                if (buffer.charAt(len - 1 - i) != this.fieldSeparator.charAt(sepLen - 1 - i)) {\n-                    match = false;\n+    protected void removeLastFieldSeparator(final StringBuffer sb) {\n+        final int length = sb.length();\n+        final int length2 = this.fieldSeparator.length();\n+        if (length > 0 && length2 > 0 && length >= length2) {\n+            boolean b = true;\n+            for (int i = 0; i < length2; ++i) {\n+                if (sb.charAt(length - 1 - i) != this.fieldSeparator.charAt(length2 - 1 - i)) {\n+                    b = false;\n                     break;\n                 }\n             }\n-            if (match) {\n-                buffer.setLength(len - sepLen);\n+            if (b) {\n+                sb.setLength(length - length2);\n             }\n         }\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final Object value, final Boolean fullDetail) {\n-        this.appendFieldStart(buffer, fieldName);\n-        if (value == null) {\n-            this.appendNullText(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final Object o, final Boolean b) {\n+        this.appendFieldStart(sb, s);\n+        if (o == null) {\n+            this.appendNullText(sb, s);\n         }\n         else {\n-            this.appendInternal(buffer, fieldName, value, this.isFullDetail(fullDetail));\n+            this.appendInternal(sb, s, o, this.isFullDetail(b));\n         }\n-        this.appendFieldEnd(buffer, fieldName);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendInternal(final StringBuffer buffer, final String fieldName, final Object value, final boolean detail) {\n-        if (isRegistered(value) && !(value instanceof Number) && !(value instanceof Boolean) && !(value instanceof Character)) {\n-            this.appendCyclicObject(buffer, fieldName, value);\n+    protected void appendInternal(final StringBuffer sb, final String s, final Object o, final boolean b) {\n+        if (isRegistered(o) && !(o instanceof Number) && !(o instanceof Boolean) && !(o instanceof Character)) {\n+            this.appendCyclicObject(sb, s, o);\n             return;\n         }\n-        register(value);\n+        register(o);\n         try {\n-            if (value instanceof Collection) {\n-                if (detail) {\n-                    this.appendDetail(buffer, fieldName, (Collection<?>)value);\n+            if (o instanceof Collection) {\n+                if (b) {\n+                    this.appendDetail(sb, s, (Collection<?>)o);\n                 }\n                 else {\n-                    this.appendSummarySize(buffer, fieldName, ((Collection)value).size());\n+                    this.appendSummarySize(sb, s, ((Collection)o).size());\n                 }\n             }\n-            else if (value instanceof Map) {\n-                if (detail) {\n-                    this.appendDetail(buffer, fieldName, (Map<?, ?>)value);\n+            else if (o instanceof Map) {\n+                if (b) {\n+                    this.appendDetail(sb, s, (Map<?, ?>)o);\n                 }\n                 else {\n-                    this.appendSummarySize(buffer, fieldName, ((Map)value).size());\n+                    this.appendSummarySize(sb, s, ((Map)o).size());\n                 }\n             }\n-            else if (value instanceof long[]) {\n-                if (detail) {\n-                    this.appendDetail(buffer, fieldName, (long[])value);\n+            else if (o instanceof long[]) {\n+                if (b) {\n+                    this.appendDetail(sb, s, (long[])o);\n                 }\n                 else {\n-                    this.appendSummary(buffer, fieldName, (long[])value);\n+                    this.appendSummary(sb, s, (long[])o);\n                 }\n             }\n-            else if (value instanceof int[]) {\n-                if (detail) {\n-                    this.appendDetail(buffer, fieldName, (int[])value);\n+            else if (o instanceof int[]) {\n+                if (b) {\n+                    this.appendDetail(sb, s, (int[])o);\n                 }\n                 else {\n-                    this.appendSummary(buffer, fieldName, (int[])value);\n+                    this.appendSummary(sb, s, (int[])o);\n                 }\n             }\n-            else if (value instanceof short[]) {\n-                if (detail) {\n-                    this.appendDetail(buffer, fieldName, (short[])value);\n+            else if (o instanceof short[]) {\n+                if (b) {\n+                    this.appendDetail(sb, s, (short[])o);\n                 }\n                 else {\n-                    this.appendSummary(buffer, fieldName, (short[])value);\n+                    this.appendSummary(sb, s, (short[])o);\n                 }\n             }\n-            else if (value instanceof byte[]) {\n-                if (detail) {\n-                    this.appendDetail(buffer, fieldName, (byte[])value);\n+            else if (o instanceof byte[]) {\n+                if (b) {\n+                    this.appendDetail(sb, s, (byte[])o);\n                 }\n                 else {\n-                    this.appendSummary(buffer, fieldName, (byte[])value);\n+                    this.appendSummary(sb, s, (byte[])o);\n                 }\n             }\n-            else if (value instanceof char[]) {\n-                if (detail) {\n-                    this.appendDetail(buffer, fieldName, (char[])value);\n+            else if (o instanceof char[]) {\n+                if (b) {\n+                    this.appendDetail(sb, s, (char[])o);\n                 }\n                 else {\n-                    this.appendSummary(buffer, fieldName, (char[])value);\n+                    this.appendSummary(sb, s, (char[])o);\n                 }\n             }\n-            else if (value instanceof double[]) {\n-                if (detail) {\n-                    this.appendDetail(buffer, fieldName, (double[])value);\n+            else if (o instanceof double[]) {\n+                if (b) {\n+                    this.appendDetail(sb, s, (double[])o);\n                 }\n                 else {\n-                    this.appendSummary(buffer, fieldName, (double[])value);\n+                    this.appendSummary(sb, s, (double[])o);\n                 }\n             }\n-            else if (value instanceof float[]) {\n-                if (detail) {\n-                    this.appendDetail(buffer, fieldName, (float[])value);\n+            else if (o instanceof float[]) {\n+                if (b) {\n+                    this.appendDetail(sb, s, (float[])o);\n                 }\n                 else {\n-                    this.appendSummary(buffer, fieldName, (float[])value);\n+                    this.appendSummary(sb, s, (float[])o);\n                 }\n             }\n-            else if (value instanceof boolean[]) {\n-                if (detail) {\n-                    this.appendDetail(buffer, fieldName, (boolean[])value);\n+            else if (o instanceof boolean[]) {\n+                if (b) {\n+                    this.appendDetail(sb, s, (boolean[])o);\n                 }\n                 else {\n-                    this.appendSummary(buffer, fieldName, (boolean[])value);\n+                    this.appendSummary(sb, s, (boolean[])o);\n                 }\n             }\n-            else if (value.getClass().isArray()) {\n-                if (detail) {\n-                    this.appendDetail(buffer, fieldName, (Object[])value);\n+            else if (o.getClass().isArray()) {\n+                if (b) {\n+                    this.appendDetail(sb, s, (Object[])o);\n                 }\n                 else {\n-                    this.appendSummary(buffer, fieldName, (Object[])value);\n+                    this.appendSummary(sb, s, (Object[])o);\n                 }\n             }\n-            else if (detail) {\n-                this.appendDetail(buffer, fieldName, value);\n+            else if (b) {\n+                this.appendDetail(sb, s, o);\n             }\n             else {\n-                this.appendSummary(buffer, fieldName, value);\n+                this.appendSummary(sb, s, o);\n             }\n         }\n         finally {\n-            unregister(value);\n+            unregister(o);\n         }\n     }\n     \n-    protected void appendCyclicObject(final StringBuffer buffer, final String fieldName, final Object value) {\n-        ObjectUtils.identityToString(buffer, value);\n+    protected void appendCyclicObject(final StringBuffer sb, final String s, final Object o) {\n+        ObjectUtils.identityToString(sb, o);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final Object value) {\n-        buffer.append(value);\n+    protected void appendDetail(final StringBuffer sb, final String s, final Object obj) {\n+        sb.append(obj);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final Collection<?> coll) {\n-        buffer.append(coll);\n+    protected void appendDetail(final StringBuffer sb, final String s, final Collection<?> obj) {\n+        sb.append(obj);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final Map<?, ?> map) {\n-        buffer.append(map);\n+    protected void appendDetail(final StringBuffer sb, final String s, final Map<?, ?> obj) {\n+        sb.append(obj);\n     }\n     \n-    protected void appendSummary(final StringBuffer buffer, final String fieldName, final Object value) {\n-        buffer.append(this.summaryObjectStartText);\n-        buffer.append(this.getShortClassName(value.getClass()));\n-        buffer.append(this.summaryObjectEndText);\n+    protected void appendSummary(final StringBuffer sb, final String s, final Object o) {\n+        sb.append(this.summaryObjectStartText);\n+        sb.append(this.getShortClassName(o.getClass()));\n+        sb.append(this.summaryObjectEndText);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final long value) {\n-        this.appendFieldStart(buffer, fieldName);\n-        this.appendDetail(buffer, fieldName, value);\n-        this.appendFieldEnd(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final long n) {\n+        this.appendFieldStart(sb, s);\n+        this.appendDetail(sb, s, n);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final long value) {\n-        buffer.append(value);\n+    protected void appendDetail(final StringBuffer sb, final String s, final long lng) {\n+        sb.append(lng);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final int value) {\n-        this.appendFieldStart(buffer, fieldName);\n-        this.appendDetail(buffer, fieldName, value);\n-        this.appendFieldEnd(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final int n) {\n+        this.appendFieldStart(sb, s);\n+        this.appendDetail(sb, s, n);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final int value) {\n-        buffer.append(value);\n+    protected void appendDetail(final StringBuffer sb, final String s, final int i) {\n+        sb.append(i);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final short value) {\n-        this.appendFieldStart(buffer, fieldName);\n-        this.appendDetail(buffer, fieldName, value);\n-        this.appendFieldEnd(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final short n) {\n+        this.appendFieldStart(sb, s);\n+        this.appendDetail(sb, s, n);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final short value) {\n-        buffer.append(value);\n+    protected void appendDetail(final StringBuffer sb, final String s, final short i) {\n+        sb.append(i);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final byte value) {\n-        this.appendFieldStart(buffer, fieldName);\n-        this.appendDetail(buffer, fieldName, value);\n-        this.appendFieldEnd(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final byte b) {\n+        this.appendFieldStart(sb, s);\n+        this.appendDetail(sb, s, b);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final byte value) {\n-        buffer.append(value);\n+    protected void appendDetail(final StringBuffer sb, final String s, final byte i) {\n+        sb.append(i);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final char value) {\n-        this.appendFieldStart(buffer, fieldName);\n-        this.appendDetail(buffer, fieldName, value);\n-        this.appendFieldEnd(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final char c) {\n+        this.appendFieldStart(sb, s);\n+        this.appendDetail(sb, s, c);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final char value) {\n-        buffer.append(value);\n+    protected void appendDetail(final StringBuffer sb, final String s, final char c) {\n+        sb.append(c);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final double value) {\n-        this.appendFieldStart(buffer, fieldName);\n-        this.appendDetail(buffer, fieldName, value);\n-        this.appendFieldEnd(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final double n) {\n+        this.appendFieldStart(sb, s);\n+        this.appendDetail(sb, s, n);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final double value) {\n-        buffer.append(value);\n+    protected void appendDetail(final StringBuffer sb, final String s, final double d) {\n+        sb.append(d);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final float value) {\n-        this.appendFieldStart(buffer, fieldName);\n-        this.appendDetail(buffer, fieldName, value);\n-        this.appendFieldEnd(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final float n) {\n+        this.appendFieldStart(sb, s);\n+        this.appendDetail(sb, s, n);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final float value) {\n-        buffer.append(value);\n+    protected void appendDetail(final StringBuffer sb, final String s, final float f) {\n+        sb.append(f);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final boolean value) {\n-        this.appendFieldStart(buffer, fieldName);\n-        this.appendDetail(buffer, fieldName, value);\n-        this.appendFieldEnd(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final boolean b) {\n+        this.appendFieldStart(sb, s);\n+        this.appendDetail(sb, s, b);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final boolean value) {\n-        buffer.append(value);\n+    protected void appendDetail(final StringBuffer sb, final String s, final boolean b) {\n+        sb.append(b);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final Object[] array, final Boolean fullDetail) {\n-        this.appendFieldStart(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final Object[] array, final Boolean b) {\n+        this.appendFieldStart(sb, s);\n         if (array == null) {\n-            this.appendNullText(buffer, fieldName);\n+            this.appendNullText(sb, s);\n         }\n-        else if (this.isFullDetail(fullDetail)) {\n-            this.appendDetail(buffer, fieldName, array);\n+        else if (this.isFullDetail(b)) {\n+            this.appendDetail(sb, s, array);\n         }\n         else {\n-            this.appendSummary(buffer, fieldName, array);\n+            this.appendSummary(sb, s, array);\n         }\n-        this.appendFieldEnd(buffer, fieldName);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final Object[] array) {\n-        buffer.append(this.arrayStart);\n+    protected void appendDetail(final StringBuffer sb, final String s, final Object[] array) {\n+        sb.append(this.arrayStart);\n         for (int i = 0; i < array.length; ++i) {\n-            final Object item = array[i];\n+            final Object o = array[i];\n             if (i > 0) {\n-                buffer.append(this.arraySeparator);\n+                sb.append(this.arraySeparator);\n             }\n-            if (item == null) {\n-                this.appendNullText(buffer, fieldName);\n+            if (o == null) {\n+                this.appendNullText(sb, s);\n             }\n             else {\n-                this.appendInternal(buffer, fieldName, item, this.arrayContentDetail);\n+                this.appendInternal(sb, s, o, this.arrayContentDetail);\n             }\n         }\n-        buffer.append(this.arrayEnd);\n+        sb.append(this.arrayEnd);\n     }\n     \n-    protected void reflectionAppendArrayDetail(final StringBuffer buffer, final String fieldName, final Object array) {\n-        buffer.append(this.arrayStart);\n-        for (int length = Array.getLength(array), i = 0; i < length; ++i) {\n-            final Object item = Array.get(array, i);\n+    protected void reflectionAppendArrayDetail(final StringBuffer sb, final String s, final Object o) {\n+        sb.append(this.arrayStart);\n+        for (int length = Array.getLength(o), i = 0; i < length; ++i) {\n+            final Object value = Array.get(o, i);\n             if (i > 0) {\n-                buffer.append(this.arraySeparator);\n+                sb.append(this.arraySeparator);\n             }\n-            if (item == null) {\n-                this.appendNullText(buffer, fieldName);\n+            if (value == null) {\n+                this.appendNullText(sb, s);\n             }\n             else {\n-                this.appendInternal(buffer, fieldName, item, this.arrayContentDetail);\n+                this.appendInternal(sb, s, value, this.arrayContentDetail);\n             }\n         }\n-        buffer.append(this.arrayEnd);\n+        sb.append(this.arrayEnd);\n     }\n     \n-    protected void appendSummary(final StringBuffer buffer, final String fieldName, final Object[] array) {\n-        this.appendSummarySize(buffer, fieldName, array.length);\n+    protected void appendSummary(final StringBuffer sb, final String s, final Object[] array) {\n+        this.appendSummarySize(sb, s, array.length);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final long[] array, final Boolean fullDetail) {\n-        this.appendFieldStart(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final long[] array, final Boolean b) {\n+        this.appendFieldStart(sb, s);\n         if (array == null) {\n-            this.appendNullText(buffer, fieldName);\n+            this.appendNullText(sb, s);\n         }\n-        else if (this.isFullDetail(fullDetail)) {\n-            this.appendDetail(buffer, fieldName, array);\n+        else if (this.isFullDetail(b)) {\n+            this.appendDetail(sb, s, array);\n         }\n         else {\n-            this.appendSummary(buffer, fieldName, array);\n+            this.appendSummary(sb, s, array);\n         }\n-        this.appendFieldEnd(buffer, fieldName);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final long[] array) {\n-        buffer.append(this.arrayStart);\n+    protected void appendDetail(final StringBuffer sb, final String s, final long[] array) {\n+        sb.append(this.arrayStart);\n         for (int i = 0; i < array.length; ++i) {\n             if (i > 0) {\n-                buffer.append(this.arraySeparator);\n+                sb.append(this.arraySeparator);\n             }\n-            this.appendDetail(buffer, fieldName, array[i]);\n+            this.appendDetail(sb, s, array[i]);\n         }\n-        buffer.append(this.arrayEnd);\n+        sb.append(this.arrayEnd);\n     }\n     \n-    protected void appendSummary(final StringBuffer buffer, final String fieldName, final long[] array) {\n-        this.appendSummarySize(buffer, fieldName, array.length);\n+    protected void appendSummary(final StringBuffer sb, final String s, final long[] array) {\n+        this.appendSummarySize(sb, s, array.length);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final int[] array, final Boolean fullDetail) {\n-        this.appendFieldStart(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final int[] array, final Boolean b) {\n+        this.appendFieldStart(sb, s);\n         if (array == null) {\n-            this.appendNullText(buffer, fieldName);\n+            this.appendNullText(sb, s);\n         }\n-        else if (this.isFullDetail(fullDetail)) {\n-            this.appendDetail(buffer, fieldName, array);\n+        else if (this.isFullDetail(b)) {\n+            this.appendDetail(sb, s, array);\n         }\n         else {\n-            this.appendSummary(buffer, fieldName, array);\n+            this.appendSummary(sb, s, array);\n         }\n-        this.appendFieldEnd(buffer, fieldName);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final int[] array) {\n-        buffer.append(this.arrayStart);\n+    protected void appendDetail(final StringBuffer sb, final String s, final int[] array) {\n+        sb.append(this.arrayStart);\n         for (int i = 0; i < array.length; ++i) {\n             if (i > 0) {\n-                buffer.append(this.arraySeparator);\n+                sb.append(this.arraySeparator);\n             }\n-            this.appendDetail(buffer, fieldName, array[i]);\n+            this.appendDetail(sb, s, array[i]);\n         }\n-        buffer.append(this.arrayEnd);\n+        sb.append(this.arrayEnd);\n     }\n     \n-    protected void appendSummary(final StringBuffer buffer, final String fieldName, final int[] array) {\n-        this.appendSummarySize(buffer, fieldName, array.length);\n+    protected void appendSummary(final StringBuffer sb, final String s, final int[] array) {\n+        this.appendSummarySize(sb, s, array.length);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final short[] array, final Boolean fullDetail) {\n-        this.appendFieldStart(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final short[] array, final Boolean b) {\n+        this.appendFieldStart(sb, s);\n         if (array == null) {\n-            this.appendNullText(buffer, fieldName);\n+            this.appendNullText(sb, s);\n         }\n-        else if (this.isFullDetail(fullDetail)) {\n-            this.appendDetail(buffer, fieldName, array);\n+        else if (this.isFullDetail(b)) {\n+            this.appendDetail(sb, s, array);\n         }\n         else {\n-            this.appendSummary(buffer, fieldName, array);\n+            this.appendSummary(sb, s, array);\n         }\n-        this.appendFieldEnd(buffer, fieldName);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final short[] array) {\n-        buffer.append(this.arrayStart);\n+    protected void appendDetail(final StringBuffer sb, final String s, final short[] array) {\n+        sb.append(this.arrayStart);\n         for (int i = 0; i < array.length; ++i) {\n             if (i > 0) {\n-                buffer.append(this.arraySeparator);\n+                sb.append(this.arraySeparator);\n             }\n-            this.appendDetail(buffer, fieldName, array[i]);\n+            this.appendDetail(sb, s, array[i]);\n         }\n-        buffer.append(this.arrayEnd);\n+        sb.append(this.arrayEnd);\n     }\n     \n-    protected void appendSummary(final StringBuffer buffer, final String fieldName, final short[] array) {\n-        this.appendSummarySize(buffer, fieldName, array.length);\n+    protected void appendSummary(final StringBuffer sb, final String s, final short[] array) {\n+        this.appendSummarySize(sb, s, array.length);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final byte[] array, final Boolean fullDetail) {\n-        this.appendFieldStart(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final byte[] array, final Boolean b) {\n+        this.appendFieldStart(sb, s);\n         if (array == null) {\n-            this.appendNullText(buffer, fieldName);\n+            this.appendNullText(sb, s);\n         }\n-        else if (this.isFullDetail(fullDetail)) {\n-            this.appendDetail(buffer, fieldName, array);\n+        else if (this.isFullDetail(b)) {\n+            this.appendDetail(sb, s, array);\n         }\n         else {\n-            this.appendSummary(buffer, fieldName, array);\n+            this.appendSummary(sb, s, array);\n         }\n-        this.appendFieldEnd(buffer, fieldName);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final byte[] array) {\n-        buffer.append(this.arrayStart);\n+    protected void appendDetail(final StringBuffer sb, final String s, final byte[] array) {\n+        sb.append(this.arrayStart);\n         for (int i = 0; i < array.length; ++i) {\n             if (i > 0) {\n-                buffer.append(this.arraySeparator);\n+                sb.append(this.arraySeparator);\n             }\n-            this.appendDetail(buffer, fieldName, array[i]);\n+            this.appendDetail(sb, s, array[i]);\n         }\n-        buffer.append(this.arrayEnd);\n+        sb.append(this.arrayEnd);\n     }\n     \n-    protected void appendSummary(final StringBuffer buffer, final String fieldName, final byte[] array) {\n-        this.appendSummarySize(buffer, fieldName, array.length);\n+    protected void appendSummary(final StringBuffer sb, final String s, final byte[] array) {\n+        this.appendSummarySize(sb, s, array.length);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final char[] array, final Boolean fullDetail) {\n-        this.appendFieldStart(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final char[] array, final Boolean b) {\n+        this.appendFieldStart(sb, s);\n         if (array == null) {\n-            this.appendNullText(buffer, fieldName);\n+            this.appendNullText(sb, s);\n         }\n-        else if (this.isFullDetail(fullDetail)) {\n-            this.appendDetail(buffer, fieldName, array);\n+        else if (this.isFullDetail(b)) {\n+            this.appendDetail(sb, s, array);\n         }\n         else {\n-            this.appendSummary(buffer, fieldName, array);\n+            this.appendSummary(sb, s, array);\n         }\n-        this.appendFieldEnd(buffer, fieldName);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final char[] array) {\n-        buffer.append(this.arrayStart);\n+    protected void appendDetail(final StringBuffer sb, final String s, final char[] array) {\n+        sb.append(this.arrayStart);\n         for (int i = 0; i < array.length; ++i) {\n             if (i > 0) {\n-                buffer.append(this.arraySeparator);\n+                sb.append(this.arraySeparator);\n             }\n-            this.appendDetail(buffer, fieldName, array[i]);\n+            this.appendDetail(sb, s, array[i]);\n         }\n-        buffer.append(this.arrayEnd);\n+        sb.append(this.arrayEnd);\n     }\n     \n-    protected void appendSummary(final StringBuffer buffer, final String fieldName, final char[] array) {\n-        this.appendSummarySize(buffer, fieldName, array.length);\n+    protected void appendSummary(final StringBuffer sb, final String s, final char[] array) {\n+        this.appendSummarySize(sb, s, array.length);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final double[] array, final Boolean fullDetail) {\n-        this.appendFieldStart(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final double[] array, final Boolean b) {\n+        this.appendFieldStart(sb, s);\n         if (array == null) {\n-            this.appendNullText(buffer, fieldName);\n+            this.appendNullText(sb, s);\n         }\n-        else if (this.isFullDetail(fullDetail)) {\n-            this.appendDetail(buffer, fieldName, array);\n+        else if (this.isFullDetail(b)) {\n+            this.appendDetail(sb, s, array);\n         }\n         else {\n-            this.appendSummary(buffer, fieldName, array);\n+            this.appendSummary(sb, s, array);\n         }\n-        this.appendFieldEnd(buffer, fieldName);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final double[] array) {\n-        buffer.append(this.arrayStart);\n+    protected void appendDetail(final StringBuffer sb, final String s, final double[] array) {\n+        sb.append(this.arrayStart);\n         for (int i = 0; i < array.length; ++i) {\n             if (i > 0) {\n-                buffer.append(this.arraySeparator);\n+                sb.append(this.arraySeparator);\n             }\n-            this.appendDetail(buffer, fieldName, array[i]);\n+            this.appendDetail(sb, s, array[i]);\n         }\n-        buffer.append(this.arrayEnd);\n+        sb.append(this.arrayEnd);\n     }\n     \n-    protected void appendSummary(final StringBuffer buffer, final String fieldName, final double[] array) {\n-        this.appendSummarySize(buffer, fieldName, array.length);\n+    protected void appendSummary(final StringBuffer sb, final String s, final double[] array) {\n+        this.appendSummarySize(sb, s, array.length);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final float[] array, final Boolean fullDetail) {\n-        this.appendFieldStart(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final float[] array, final Boolean b) {\n+        this.appendFieldStart(sb, s);\n         if (array == null) {\n-            this.appendNullText(buffer, fieldName);\n+            this.appendNullText(sb, s);\n         }\n-        else if (this.isFullDetail(fullDetail)) {\n-            this.appendDetail(buffer, fieldName, array);\n+        else if (this.isFullDetail(b)) {\n+            this.appendDetail(sb, s, array);\n         }\n         else {\n-            this.appendSummary(buffer, fieldName, array);\n+            this.appendSummary(sb, s, array);\n         }\n-        this.appendFieldEnd(buffer, fieldName);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final float[] array) {\n-        buffer.append(this.arrayStart);\n+    protected void appendDetail(final StringBuffer sb, final String s, final float[] array) {\n+        sb.append(this.arrayStart);\n         for (int i = 0; i < array.length; ++i) {\n             if (i > 0) {\n-                buffer.append(this.arraySeparator);\n+                sb.append(this.arraySeparator);\n             }\n-            this.appendDetail(buffer, fieldName, array[i]);\n+            this.appendDetail(sb, s, array[i]);\n         }\n-        buffer.append(this.arrayEnd);\n+        sb.append(this.arrayEnd);\n     }\n     \n-    protected void appendSummary(final StringBuffer buffer, final String fieldName, final float[] array) {\n-        this.appendSummarySize(buffer, fieldName, array.length);\n+    protected void appendSummary(final StringBuffer sb, final String s, final float[] array) {\n+        this.appendSummarySize(sb, s, array.length);\n     }\n     \n-    public void append(final StringBuffer buffer, final String fieldName, final boolean[] array, final Boolean fullDetail) {\n-        this.appendFieldStart(buffer, fieldName);\n+    public void append(final StringBuffer sb, final String s, final boolean[] array, final Boolean b) {\n+        this.appendFieldStart(sb, s);\n         if (array == null) {\n-            this.appendNullText(buffer, fieldName);\n+            this.appendNullText(sb, s);\n         }\n-        else if (this.isFullDetail(fullDetail)) {\n-            this.appendDetail(buffer, fieldName, array);\n+        else if (this.isFullDetail(b)) {\n+            this.appendDetail(sb, s, array);\n         }\n         else {\n-            this.appendSummary(buffer, fieldName, array);\n+            this.appendSummary(sb, s, array);\n         }\n-        this.appendFieldEnd(buffer, fieldName);\n+        this.appendFieldEnd(sb, s);\n     }\n     \n-    protected void appendDetail(final StringBuffer buffer, final String fieldName, final boolean[] array) {\n-        buffer.append(this.arrayStart);\n+    protected void appendDetail(final StringBuffer sb, final String s, final boolean[] array) {\n+        sb.append(this.arrayStart);\n         for (int i = 0; i < array.length; ++i) {\n             if (i > 0) {\n-                buffer.append(this.arraySeparator);\n+                sb.append(this.arraySeparator);\n             }\n-            this.appendDetail(buffer, fieldName, array[i]);\n+            this.appendDetail(sb, s, array[i]);\n         }\n-        buffer.append(this.arrayEnd);\n+        sb.append(this.arrayEnd);\n     }\n     \n-    protected void appendSummary(final StringBuffer buffer, final String fieldName, final boolean[] array) {\n-        this.appendSummarySize(buffer, fieldName, array.length);\n+    protected void appendSummary(final StringBuffer sb, final String s, final boolean[] array) {\n+        this.appendSummarySize(sb, s, array.length);\n     }\n     \n-    protected void appendClassName(final StringBuffer buffer, final Object object) {\n-        if (this.useClassName && object != null) {\n-            register(object);\n+    protected void appendClassName(final StringBuffer sb, final Object o) {\n+        if (this.useClassName && o != null) {\n+            register(o);\n             if (this.useShortClassName) {\n-                buffer.append(this.getShortClassName(object.getClass()));\n+                sb.append(this.getShortClassName(o.getClass()));\n             }\n             else {\n-                buffer.append(object.getClass().getName());\n+                sb.append(o.getClass().getName());\n             }\n         }\n     }\n     \n-    protected void appendIdentityHashCode(final StringBuffer buffer, final Object object) {\n-        if (this.isUseIdentityHashCode() && object != null) {\n-            register(object);\n-            buffer.append('@');\n-            buffer.append(Integer.toHexString(System.identityHashCode(object)));\n+    protected void appendIdentityHashCode(final StringBuffer sb, final Object o) {\n+        if (this.isUseIdentityHashCode() && o != null) {\n+            register(o);\n+            sb.append('@');\n+            sb.append(Integer.toHexString(System.identityHashCode(o)));\n         }\n     }\n     \n-    protected void appendContentStart(final StringBuffer buffer) {\n-        buffer.append(this.contentStart);\n+    protected void appendContentStart(final StringBuffer sb) {\n+        sb.append(this.contentStart);\n     }\n     \n-    protected void appendContentEnd(final StringBuffer buffer) {\n-        buffer.append(this.contentEnd);\n+    protected void appendContentEnd(final StringBuffer sb) {\n+        sb.append(this.contentEnd);\n     }\n     \n-    protected void appendNullText(final StringBuffer buffer, final String fieldName) {\n-        buffer.append(this.nullText);\n+    protected void appendNullText(final StringBuffer sb, final String s) {\n+        sb.append(this.nullText);\n     }\n     \n-    protected void appendFieldSeparator(final StringBuffer buffer) {\n-        buffer.append(this.fieldSeparator);\n+    protected void appendFieldSeparator(final StringBuffer sb) {\n+        sb.append(this.fieldSeparator);\n     }\n     \n-    protected void appendFieldStart(final StringBuffer buffer, final String fieldName) {\n-        if (this.useFieldNames && fieldName != null) {\n-            buffer.append(fieldName);\n-            buffer.append(this.fieldNameValueSeparator);\n+    protected void appendFieldStart(final StringBuffer sb, final String str) {\n+        if (this.useFieldNames && str != null) {\n+            sb.append(str);\n+            sb.append(this.fieldNameValueSeparator);\n         }\n     }\n     \n-    protected void appendFieldEnd(final StringBuffer buffer, final String fieldName) {\n-        this.appendFieldSeparator(buffer);\n+    protected void appendFieldEnd(final StringBuffer sb, final String s) {\n+        this.appendFieldSeparator(sb);\n     }\n     \n-    protected void appendSummarySize(final StringBuffer buffer, final String fieldName, final int size) {\n-        buffer.append(this.sizeStartText);\n-        buffer.append(size);\n-        buffer.append(this.sizeEndText);\n+    protected void appendSummarySize(final StringBuffer sb, final String s, final int i) {\n+        sb.append(this.sizeStartText);\n+        sb.append(i);\n+        sb.append(this.sizeEndText);\n     }\n     \n-    protected boolean isFullDetail(final Boolean fullDetailRequest) {\n-        if (fullDetailRequest == null) {\n+    protected boolean isFullDetail(final Boolean b) {\n+        if (b == null) {\n             return this.defaultFullDetail;\n         }\n-        return fullDetailRequest;\n+        return b;\n     }\n     \n-    protected String getShortClassName(final Class<?> cls) {\n-        return ClassUtils.getShortClassName((Class)cls);\n+    protected String getShortClassName(final Class<?> clazz) {\n+        return ClassUtils.getShortClassName((Class)clazz);\n     }\n     \n     protected boolean isUseClassName() {\n         return this.useClassName;\n     }\n     \n     protected void setUseClassName(final boolean useClassName) {\n"}]}
