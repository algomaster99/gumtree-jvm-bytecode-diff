{"diffoscope-json-version": 1, "source1": "first/IOExceptionList.class", "source2": "second/IOExceptionList.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,179 +1,179 @@\n-  SHA-256 checksum 118e1340dfd81438ae650c9a23164b798c58a5dc8126493d6abd91fdfd550fb0\n+  SHA-256 checksum 721dc60c96cb097033143aa316ebb8510b5c0bdc963a07b31afbfa042ae8f5a8\n   Compiled from \"IOExceptionList.java\"\n public class org.apache.commons.io.IOExceptionList extends java.io.IOException\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/io/IOExceptionList\n-  super_class: #15                        // java/io/IOException\n+  this_class: #24                         // org/apache/commons/io/IOExceptionList\n+  super_class: #40                        // java/io/IOException\n   interfaces: 0, fields: 2, methods: 6, attributes: 1\n Constant pool:\n-   #1 = String             #48            // %,d exceptions: %s\n-   #2 = Class              #49            // java/lang/Object\n-   #3 = InterfaceMethodref #30.#50        // java/util/List.size:()I\n-   #4 = Methodref          #51.#52        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #5 = Methodref          #31.#53        // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #6 = Methodref          #14.#54        // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-   #7 = InterfaceMethodref #30.#55        // java/util/List.isEmpty:()Z\n-   #8 = InterfaceMethodref #30.#56        // java/util/List.get:(I)Ljava/lang/Object;\n-   #9 = Class              #57            // java/lang/Throwable\n-  #10 = Methodref          #15.#58        // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #11 = Methodref          #59.#60        // java/util/Collections.emptyList:()Ljava/util/List;\n-  #12 = Fieldref           #14.#61        // org/apache/commons/io/IOExceptionList.causeList:Ljava/util/List;\n-  #13 = Methodref          #62.#63        // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #14 = Class              #64            // org/apache/commons/io/IOExceptionList\n-  #15 = Class              #65            // java/io/IOException\n-  #16 = Utf8               serialVersionUID\n-  #17 = Utf8               J\n-  #18 = Utf8               ConstantValue\n-  #19 = Long               1l\n-  #21 = Utf8               causeList\n-  #22 = Utf8               Ljava/util/List;\n-  #23 = Utf8               Signature\n-  #24 = Utf8               Ljava/util/List<+Ljava/lang/Throwable;>;\n-  #25 = Utf8               <init>\n-  #26 = Utf8               (Ljava/util/List;)V\n-  #27 = Utf8               Code\n-  #28 = Utf8               LineNumberTable\n-  #29 = Utf8               StackMapTable\n-  #30 = Class              #66            // java/util/List\n-  #31 = Class              #67            // java/lang/String\n-  #32 = Class              #68            // \"[Ljava/lang/Object;\"\n-  #33 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n-  #34 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n-  #35 = Utf8               (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n-  #36 = Utf8               getCause\n-  #37 = Utf8               (I)Ljava/lang/Throwable;\n-  #38 = Utf8               <T:Ljava/lang/Throwable;>(I)TT;\n-  #39 = Utf8               (ILjava/lang/Class;)Ljava/lang/Throwable;\n-  #40 = Utf8               <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n-  #41 = Utf8               getCauseList\n-  #42 = Utf8               ()Ljava/util/List;\n-  #43 = Utf8               <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n-  #44 = Utf8               (Ljava/lang/Class;)Ljava/util/List;\n-  #45 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n-  #46 = Utf8               SourceFile\n-  #47 = Utf8               IOExceptionList.java\n-  #48 = Utf8               %,d exceptions: %s\n-  #49 = Utf8               java/lang/Object\n-  #50 = NameAndType        #69:#70        // size:()I\n-  #51 = Class              #71            // java/lang/Integer\n-  #52 = NameAndType        #72:#73        // valueOf:(I)Ljava/lang/Integer;\n-  #53 = NameAndType        #74:#75        // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #54 = NameAndType        #25:#34        // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-  #55 = NameAndType        #76:#77        // isEmpty:()Z\n-  #56 = NameAndType        #78:#79        // get:(I)Ljava/lang/Object;\n-  #57 = Utf8               java/lang/Throwable\n-  #58 = NameAndType        #25:#80        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #59 = Class              #81            // java/util/Collections\n-  #60 = NameAndType        #82:#42        // emptyList:()Ljava/util/List;\n-  #61 = NameAndType        #21:#22        // causeList:Ljava/util/List;\n-  #62 = Class              #83            // java/lang/Class\n-  #63 = NameAndType        #84:#85        // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #64 = Utf8               org/apache/commons/io/IOExceptionList\n-  #65 = Utf8               java/io/IOException\n-  #66 = Utf8               java/util/List\n-  #67 = Utf8               java/lang/String\n-  #68 = Utf8               [Ljava/lang/Object;\n-  #69 = Utf8               size\n-  #70 = Utf8               ()I\n-  #71 = Utf8               java/lang/Integer\n-  #72 = Utf8               valueOf\n-  #73 = Utf8               (I)Ljava/lang/Integer;\n-  #74 = Utf8               format\n-  #75 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #76 = Utf8               isEmpty\n-  #77 = Utf8               ()Z\n-  #78 = Utf8               get\n-  #79 = Utf8               (I)Ljava/lang/Object;\n-  #80 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #81 = Utf8               java/util/Collections\n-  #82 = Utf8               emptyList\n-  #83 = Utf8               java/lang/Class\n-  #84 = Utf8               cast\n-  #85 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #1 = String             #2             // %,d exceptions: %s\n+   #2 = Utf8               %,d exceptions: %s\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = InterfaceMethodref #6.#7          // java/util/List.size:()I\n+   #6 = Class              #8             // java/util/List\n+   #7 = NameAndType        #9:#10         // size:()I\n+   #8 = Utf8               java/util/List\n+   #9 = Utf8               size\n+  #10 = Utf8               ()I\n+  #11 = Methodref          #12.#13        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #12 = Class              #14            // java/lang/Integer\n+  #13 = NameAndType        #15:#16        // valueOf:(I)Ljava/lang/Integer;\n+  #14 = Utf8               java/lang/Integer\n+  #15 = Utf8               valueOf\n+  #16 = Utf8               (I)Ljava/lang/Integer;\n+  #17 = Methodref          #18.#19        // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #18 = Class              #20            // java/lang/String\n+  #19 = NameAndType        #21:#22        // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #20 = Utf8               java/lang/String\n+  #21 = Utf8               format\n+  #22 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #23 = Methodref          #24.#25        // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+  #24 = Class              #26            // org/apache/commons/io/IOExceptionList\n+  #25 = NameAndType        #27:#28        // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+  #26 = Utf8               org/apache/commons/io/IOExceptionList\n+  #27 = Utf8               <init>\n+  #28 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n+  #29 = InterfaceMethodref #6.#30         // java/util/List.isEmpty:()Z\n+  #30 = NameAndType        #31:#32        // isEmpty:()Z\n+  #31 = Utf8               isEmpty\n+  #32 = Utf8               ()Z\n+  #33 = InterfaceMethodref #6.#34         // java/util/List.get:(I)Ljava/lang/Object;\n+  #34 = NameAndType        #35:#36        // get:(I)Ljava/lang/Object;\n+  #35 = Utf8               get\n+  #36 = Utf8               (I)Ljava/lang/Object;\n+  #37 = Class              #38            // java/lang/Throwable\n+  #38 = Utf8               java/lang/Throwable\n+  #39 = Methodref          #40.#41        // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #40 = Class              #42            // java/io/IOException\n+  #41 = NameAndType        #27:#43        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #42 = Utf8               java/io/IOException\n+  #43 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #44 = Methodref          #45.#46        // java/util/Collections.emptyList:()Ljava/util/List;\n+  #45 = Class              #47            // java/util/Collections\n+  #46 = NameAndType        #48:#49        // emptyList:()Ljava/util/List;\n+  #47 = Utf8               java/util/Collections\n+  #48 = Utf8               emptyList\n+  #49 = Utf8               ()Ljava/util/List;\n+  #50 = Fieldref           #24.#51        // org/apache/commons/io/IOExceptionList.causeList:Ljava/util/List;\n+  #51 = NameAndType        #52:#53        // causeList:Ljava/util/List;\n+  #52 = Utf8               causeList\n+  #53 = Utf8               Ljava/util/List;\n+  #54 = Methodref          #55.#56        // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #55 = Class              #57            // java/lang/Class\n+  #56 = NameAndType        #58:#59        // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #57 = Utf8               java/lang/Class\n+  #58 = Utf8               cast\n+  #59 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #60 = Utf8               serialVersionUID\n+  #61 = Utf8               J\n+  #62 = Utf8               ConstantValue\n+  #63 = Long               1l\n+  #65 = Utf8               Signature\n+  #66 = Utf8               Ljava/util/List<+Ljava/lang/Throwable;>;\n+  #67 = Utf8               (Ljava/util/List;)V\n+  #68 = Utf8               Code\n+  #69 = Utf8               LineNumberTable\n+  #70 = Utf8               StackMapTable\n+  #71 = Class              #72            // \"[Ljava/lang/Object;\"\n+  #72 = Utf8               [Ljava/lang/Object;\n+  #73 = Utf8               (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n+  #74 = Utf8               (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n+  #75 = Utf8               getCause\n+  #76 = Utf8               (I)Ljava/lang/Throwable;\n+  #77 = Utf8               <T:Ljava/lang/Throwable;>(I)TT;\n+  #78 = Utf8               (ILjava/lang/Class;)Ljava/lang/Throwable;\n+  #79 = Utf8               <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n+  #80 = Utf8               getCauseList\n+  #81 = Utf8               <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n+  #82 = Utf8               (Ljava/lang/Class;)Ljava/util/List;\n+  #83 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n+  #84 = Utf8               SourceFile\n+  #85 = Utf8               IOExceptionList.java\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   private final java.util.List<? extends java.lang.Throwable> causeList;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #24                          // Ljava/util/List<+Ljava/lang/Throwable;>;\n+    Signature: #66                          // Ljava/util/List<+Ljava/lang/Throwable;>;\n \n   public org.apache.commons.io.IOExceptionList(java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=2, args_size=2\n          0: aload_0\n          1: ldc           #1                  // String %,d exceptions: %s\n          3: iconst_2\n-         4: anewarray     #2                  // class java/lang/Object\n+         4: anewarray     #3                  // class java/lang/Object\n          7: dup\n          8: iconst_0\n          9: aload_1\n         10: ifnonnull     17\n         13: iconst_0\n         14: goto          23\n         17: aload_1\n-        18: invokeinterface #3,  1            // InterfaceMethod java/util/List.size:()I\n-        23: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        18: invokeinterface #5,  1            // InterfaceMethod java/util/List.size:()I\n+        23: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         26: aastore\n         27: dup\n         28: iconst_1\n         29: aload_1\n         30: aastore\n-        31: invokestatic  #5                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        31: invokestatic  #17                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n         34: aload_1\n-        35: invokespecial #6                  // Method \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        35: invokespecial #23                 // Method \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         38: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 38\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 17\n           locals = [ this, class java/util/List ]\n           stack = [ this, class java/lang/String, class \"[Ljava/lang/Object;\", class \"[Ljava/lang/Object;\", int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 5\n           locals = [ this, class java/util/List ]\n           stack = [ this, class java/lang/String, class \"[Ljava/lang/Object;\", class \"[Ljava/lang/Object;\", int, int ]\n-    Signature: #33                          // (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n+    Signature: #73                          // (Ljava/util/List<+Ljava/lang/Throwable;>;)V\n \n   public org.apache.commons.io.IOExceptionList(java.lang.String, java.util.List<? extends java.lang.Throwable>);\n     descriptor: (Ljava/lang/String;Ljava/util/List;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: ifnull        15\n          6: aload_2\n-         7: invokeinterface #7,  1            // InterfaceMethod java/util/List.isEmpty:()Z\n+         7: invokeinterface #29,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         12: ifeq          19\n         15: aconst_null\n         16: goto          29\n         19: aload_2\n         20: iconst_0\n-        21: invokeinterface #8,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        26: checkcast     #9                  // class java/lang/Throwable\n-        29: invokespecial #10                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        21: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        26: checkcast     #37                 // class java/lang/Throwable\n+        29: invokespecial #39                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         32: aload_0\n         33: aload_2\n         34: ifnonnull     43\n-        37: invokestatic  #11                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n+        37: invokestatic  #44                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n         40: goto          44\n         43: aload_2\n-        44: putfield      #12                 // Field causeList:Ljava/util/List;\n+        44: putfield      #50                 // Field causeList:Ljava/util/List;\n         47: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 32\n         line 57: 47\n       StackMapTable: number_of_entries = 5\n         frame_type = 255 /* full_frame */\n@@ -192,66 +192,66 @@\n           offset_delta = 13\n           locals = [ class org/apache/commons/io/IOExceptionList, class java/lang/String, class java/util/List ]\n           stack = [ class org/apache/commons/io/IOExceptionList ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/IOExceptionList, class java/lang/String, class java/util/List ]\n           stack = [ class org/apache/commons/io/IOExceptionList, class java/util/List ]\n-    Signature: #35                          // (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n+    Signature: #74                          // (Ljava/lang/String;Ljava/util/List<+Ljava/lang/Throwable;>;)V\n \n   public <T extends java.lang.Throwable> T getCause(int);\n     descriptor: (I)Ljava/lang/Throwable;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #12                 // Field causeList:Ljava/util/List;\n+         1: getfield      #50                 // Field causeList:Ljava/util/List;\n          4: iload_1\n-         5: invokeinterface #8,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        10: checkcast     #9                  // class java/lang/Throwable\n+         5: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        10: checkcast     #37                 // class java/lang/Throwable\n         13: areturn\n       LineNumberTable:\n         line 67: 0\n-    Signature: #38                          // <T:Ljava/lang/Throwable;>(I)TT;\n+    Signature: #77                          // <T:Ljava/lang/Throwable;>(I)TT;\n \n   public <T extends java.lang.Throwable> T getCause(int, java.lang.Class<T>);\n     descriptor: (ILjava/lang/Class;)Ljava/lang/Throwable;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_2\n          1: aload_0\n-         2: getfield      #12                 // Field causeList:Ljava/util/List;\n+         2: getfield      #50                 // Field causeList:Ljava/util/List;\n          5: iload_1\n-         6: invokeinterface #8,  2            // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        11: invokevirtual #13                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-        14: checkcast     #9                  // class java/lang/Throwable\n+         6: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        11: invokevirtual #54                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+        14: checkcast     #37                 // class java/lang/Throwable\n         17: areturn\n       LineNumberTable:\n         line 79: 0\n-    Signature: #40                          // <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n+    Signature: #79                          // <T:Ljava/lang/Throwable;>(ILjava/lang/Class<TT;>;)TT;\n \n   public <T extends java.lang.Throwable> java.util.List<T> getCauseList();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field causeList:Ljava/util/List;\n+         1: getfield      #50                 // Field causeList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 89: 0\n-    Signature: #43                          // <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n+    Signature: #81                          // <T:Ljava/lang/Throwable;>()Ljava/util/List<TT;>;\n \n   public <T extends java.lang.Throwable> java.util.List<T> getCauseList(java.lang.Class<T>);\n     descriptor: (Ljava/lang/Class;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #12                 // Field causeList:Ljava/util/List;\n+         1: getfield      #50                 // Field causeList:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 100: 0\n-    Signature: #45                          // <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n+    Signature: #83                          // <T:Ljava/lang/Throwable;>(Ljava/lang/Class<TT;>;)Ljava/util/List<TT;>;\n }\n SourceFile: \"IOExceptionList.java\"\n"}]}
