{"diffoscope-json-version": 1, "source1": "first/PathUtils.class", "source2": "second/PathUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,761 +1,761 @@\n-  SHA-256 checksum 00bc2d8ea9d53beba799ed98a2eff7a2bf864a5acb73dee74c7627a7e548c40a\n+  SHA-256 checksum aa91e342dca23798838e4167d7c67eba18b35f79a050f724b3b551cab259022a\n   Compiled from \"PathUtils.java\"\n public final class org.apache.commons.io.file.PathUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #172                        // org/apache/commons/io/file/PathUtils\n-  super_class: #152                       // java/lang/Object\n+  this_class: #2                          // org/apache/commons/io/file/PathUtils\n+  super_class: #505                       // java/lang/Object\n   interfaces: 0, fields: 7, methods: 51, attributes: 3\n Constant pool:\n-    #1 = Methodref          #172.#393     // org/apache/commons/io/file/PathUtils.accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-    #2 = Methodref          #5.#394       // org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-    #3 = Methodref          #172.#395     // org/apache/commons/io/file/PathUtils.toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n-    #4 = Methodref          #172.#396     // org/apache/commons/io/file/PathUtils.visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n-    #5 = Class              #397          // org/apache/commons/io/file/AccumulatorPathVisitor\n-    #6 = Fieldref           #172.#398     // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-    #7 = Methodref          #172.#399     // org/apache/commons/io/file/PathUtils.cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #8 = Class              #400          // org/apache/commons/io/file/CleaningPathVisitor\n-    #9 = Methodref          #401.#402     // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #10 = Class              #403          // java/lang/String\n-   #11 = Methodref          #8.#404       // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-   #12 = Methodref          #172.#405     // org/apache/commons/io/file/PathUtils.visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-   #13 = Methodref          #8.#406       // org/apache/commons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #14 = InterfaceMethodref #75.#407      // java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;\n-   #15 = Class              #408          // org/apache/commons/io/file/CopyDirectoryVisitor\n-   #16 = Methodref          #15.#409      // org/apache/commons/io/file/CopyDirectoryVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n-   #17 = Methodref          #15.#406      // org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #18 = Methodref          #221.#410     // java/net/URL.openStream:()Ljava/io/InputStream;\n-   #19 = Methodref          #411.#412     // java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n-   #20 = Methodref          #220.#413     // java/io/InputStream.close:()V\n-   #21 = Class              #414          // java/lang/Throwable\n-   #22 = Methodref          #21.#415      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #23 = InterfaceMethodref #75.#416      // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #24 = InterfaceMethodref #75.#417      // java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-   #25 = Methodref          #411.#418     // java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n-   #26 = Methodref          #221.#419     // java/net/URL.getFile:()Ljava/lang/String;\n-   #27 = InterfaceMethodref #75.#420      // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-   #28 = Class              #421          // org/apache/commons/io/file/CountingPathVisitor\n-   #29 = Methodref          #28.#422      // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #30 = Methodref          #28.#406      // org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #31 = InterfaceMethodref #75.#423      // java/nio/file/Path.getParent:()Ljava/nio/file/Path;\n-   #32 = Methodref          #411.#424     // java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-   #33 = String             #425          //\n-   #34 = Methodref          #426.#427     // java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-   #35 = Methodref          #172.#428     // org/apache/commons/io/file/PathUtils.delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #36 = Class              #429          // java/nio/file/LinkOption\n-   #37 = Fieldref           #36.#430      // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n-   #38 = Methodref          #411.#431     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #39 = Methodref          #172.#432     // org/apache/commons/io/file/PathUtils.deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #40 = Methodref          #172.#433     // org/apache/commons/io/file/PathUtils.deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #41 = Methodref          #172.#434     // org/apache/commons/io/file/PathUtils.deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #42 = Methodref          #172.#435     // org/apache/commons/io/file/PathUtils.deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #43 = Class              #436          // org/apache/commons/io/file/DeletingPathVisitor\n-   #44 = Fieldref           #172.#437     // org/apache/commons/io/file/PathUtils.NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-   #45 = Methodref          #43.#438      // org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-   #46 = Methodref          #43.#406      // org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #47 = Class              #439          // java/nio/file/NoSuchFileException\n-   #48 = InterfaceMethodref #75.#440      // java/nio/file/Path.toString:()Ljava/lang/String;\n-   #49 = Methodref          #47.#441      // java/nio/file/NoSuchFileException.\"<init>\":(Ljava/lang/String;)V\n-   #50 = Methodref          #411.#442     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #51 = Methodref          #411.#443     // java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n-   #52 = Methodref          #411.#444     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-   #53 = Methodref          #172.#445     // org/apache/commons/io/file/PathUtils.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n-   #54 = Methodref          #172.#446     // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-   #55 = Methodref          #411.#447     // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n-   #56 = InterfaceMethodref #201.#448     // org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-   #57 = InterfaceMethodref #449.#450     // org/apache/commons/io/file/Counters$Counter.increment:()V\n-   #58 = InterfaceMethodref #201.#451     // org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-   #59 = InterfaceMethodref #449.#452     // org/apache/commons/io/file/Counters$Counter.add:(J)V\n-   #60 = Fieldref           #172.#453     // org/apache/commons/io/file/PathUtils.EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-   #61 = Fieldref           #172.#454     // org/apache/commons/io/file/PathUtils.EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n-   #62 = Fieldref           #172.#455     // org/apache/commons/io/file/PathUtils.EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n-   #63 = Methodref          #172.#456     // org/apache/commons/io/file/PathUtils.directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n-   #64 = Methodref          #411.#457     // java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #65 = Class              #458          // org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n-   #66 = Class              #459          // java/lang/Integer\n-   #67 = Integer            2147483647\n-   #68 = Methodref          #65.#460      // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n-   #69 = Fieldref           #65.#461      // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n-   #70 = Fieldref           #65.#462      // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;\n-   #71 = Fieldref           #65.#463      // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;\n-   #72 = InterfaceMethodref #100.#464     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #73 = InterfaceMethodref #264.#465     // java/util/Iterator.hasNext:()Z\n-   #74 = InterfaceMethodref #264.#466     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #75 = Class              #467          // java/nio/file/Path\n-   #76 = Methodref          #468.#469     // java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n-   #77 = Class              #470          // java/lang/IllegalStateException\n-   #78 = String             #471          // Unexpected mismatch.\n-   #79 = Methodref          #77.#441      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #80 = Methodref          #172.#472     // org/apache/commons/io/file/PathUtils.fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n-   #81 = Methodref          #172.#473     // org/apache/commons/io/file/PathUtils.directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n-   #82 = InterfaceMethodref #75.#474      // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n-   #83 = Class              #475          // java/io/IOException\n-   #84 = Class              #476          // java/lang/StringBuilder\n-   #85 = Methodref          #84.#477      // java/lang/StringBuilder.\"<init>\":()V\n-   #86 = String             #478          // Can\\'t compare directories, only files:\n-   #87 = Methodref          #84.#479      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #88 = Methodref          #84.#480      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #89 = Methodref          #84.#440      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #90 = Methodref          #83.#441      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #91 = InterfaceMethodref #75.#481      // java/nio/file/Path.equals:(Ljava/lang/Object;)Z\n-   #92 = Methodref          #411.#482     // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-   #93 = Methodref          #483.#484     // org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n-   #94 = String             #276          // filter\n-   #95 = Methodref          #485.#486     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #96 = Fieldref           #172.#487     // org/apache/commons/io/file/PathUtils.EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n-   #97 = Methodref          #488.#489     // java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-   #98 = Methodref          #490.#491     // java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n-   #99 = Methodref          #172.#492     // org/apache/commons/io/file/PathUtils.filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n-  #100 = Class              #493          // java/util/List\n-  #101 = InterfaceMethodref #100.#494     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #102 = Class              #188          // \"[Ljava/nio/file/Path;\"\n-  #103 = String             #284          // collector\n-  #104 = InterfaceMethodref #334.#495     // java/util/stream/Stream.empty:()Ljava/util/stream/Stream;\n-  #105 = InterfaceMethodref #334.#496     // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-  #106 = InvokeDynamic      #0:#502       // #0:test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n-  #107 = InterfaceMethodref #334.#503     // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #108 = Class              #504          // java/nio/file/attribute/AclFileAttributeView\n-  #109 = Methodref          #411.#505     // java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-  #110 = InterfaceMethodref #108.#506     // java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;\n-  #111 = Methodref          #172.#507     // org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z\n-  #112 = Methodref          #172.#508     // org/apache/commons/io/file/PathUtils.isEmptyFile:(Ljava/nio/file/Path;)Z\n-  #113 = Methodref          #411.#509     // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-  #114 = InterfaceMethodref #304.#464     // java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n-  #115 = InterfaceMethodref #304.#413     // java/nio/file/DirectoryStream.close:()V\n-  #116 = String             #243          // file\n-  #117 = Methodref          #411.#510     // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #118 = Methodref          #511.#512     // java/nio/file/attribute/FileTime.toMillis:()J\n-  #119 = Methodref          #411.#513     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #120 = Class              #514          // org/apache/commons/io/file/DirectoryStreamFilter\n-  #121 = Methodref          #120.#515     // org/apache/commons/io/file/DirectoryStreamFilter.\"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n-  #122 = Methodref          #411.#516     // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n-  #123 = Fieldref           #517.#518     // org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n-  #124 = Class              #519          // java/nio/file/attribute/BasicFileAttributes\n-  #125 = Methodref          #411.#520     // java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #126 = Methodref          #172.#521     // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #127 = Class              #522          // java/io/UncheckedIOException\n-  #128 = Methodref          #127.#523     // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n-  #129 = InterfaceMethodref #524.#525     // java/util/Collection.stream:()Ljava/util/stream/Stream;\n-  #130 = Methodref          #485.#526     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #131 = InvokeDynamic      #1:#530       // #1:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n-  #132 = InterfaceMethodref #334.#531     // java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-  #133 = InterfaceMethodref #334.#532     // java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;\n-  #134 = InterfaceMethodref #334.#533     // java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n-  #135 = Class              #534          // java/util/ArrayList\n-  #136 = Methodref          #135.#535     // java/util/ArrayList.\"<init>\":(I)V\n-  #137 = Class              #536          // java/nio/file/attribute/DosFileAttributeView\n-  #138 = InterfaceMethodref #137.#537     // java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V\n-  #139 = InterfaceMethodref #100.#538     // java/util/List.add:(Ljava/lang/Object;)Z\n-  #140 = Class              #539          // java/nio/file/attribute/PosixFileAttributeView\n-  #141 = InterfaceMethodref #140.#540     // java/nio/file/attribute/PosixFileAttributeView.readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;\n-  #142 = InterfaceMethodref #349.#541     // java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n-  #143 = Fieldref           #542.#543     // java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n-  #144 = InterfaceMethodref #158.#544     // java/util/Set.remove:(Ljava/lang/Object;)Z\n-  #145 = Fieldref           #542.#545     // java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n-  #146 = Fieldref           #542.#546     // java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n-  #147 = Methodref          #411.#547     // java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n-  #148 = InterfaceMethodref #100.#548     // java/util/List.isEmpty:()Z\n-  #149 = Class              #549          // org/apache/commons/io/IOExceptionList\n-  #150 = Methodref          #149.#550     // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-  #151 = String             #551          // No DosFileAttributeView or PosixFileAttributeView for \\'%s\\' (linkOptions=%s)\n-  #152 = Class              #552          // java/lang/Object\n-  #153 = Methodref          #488.#553     // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-  #154 = Methodref          #10.#554      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #155 = Class              #555          // java/nio/file/FileVisitOption\n-  #156 = Methodref          #556.#557     // java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n-  #157 = Methodref          #490.#558     // java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;\n-  #158 = Class              #559          // java/util/Set\n-  #159 = Methodref          #411.#560     // java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-  #160 = Methodref          #411.#561     // java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-  #161 = Methodref          #426.#562     // java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;\n-  #162 = Methodref          #411.#563     // java/nio/file/Files.walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n-  #163 = InvokeDynamic      #2:#565       // #2:test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n-  #164 = Methodref          #152.#477     // java/lang/Object.\"<init>\":()V\n-  #165 = Methodref          #172.#566     // org/apache/commons/io/file/PathUtils.readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #166 = InterfaceMethodref #382.#567     // org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #167 = Fieldref           #568.#569     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #168 = Class              #570          // java/nio/file/CopyOption\n-  #169 = Fieldref           #172.#571     // org/apache/commons/io/file/PathUtils.EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n-  #170 = Class              #572          // org/apache/commons/io/file/DeleteOption\n-  #171 = Class              #573          // java/nio/file/OpenOption\n-  #172 = Class              #574          // org/apache/commons/io/file/PathUtils\n-  #173 = Class              #575          // org/apache/commons/io/file/PathUtils$1\n-  #174 = Utf8               InnerClasses\n-  #175 = Utf8               RelativeSortedPaths\n-  #176 = Utf8               EMPTY_COPY_OPTIONS\n-  #177 = Utf8               [Ljava/nio/file/CopyOption;\n-  #178 = Utf8               EMPTY_DELETE_OPTION_ARRAY\n-  #179 = Utf8               [Lorg/apache/commons/io/file/DeleteOption;\n-  #180 = Utf8               EMPTY_FILE_VISIT_OPTION_ARRAY\n-  #181 = Utf8               [Ljava/nio/file/FileVisitOption;\n-  #182 = Utf8               EMPTY_LINK_OPTION_ARRAY\n-  #183 = Utf8               [Ljava/nio/file/LinkOption;\n-  #184 = Utf8               NOFOLLOW_LINK_OPTION_ARRAY\n-  #185 = Utf8               EMPTY_OPEN_OPTION_ARRAY\n-  #186 = Utf8               [Ljava/nio/file/OpenOption;\n-  #187 = Utf8               EMPTY_PATH_ARRAY\n-  #188 = Utf8               [Ljava/nio/file/Path;\n-  #189 = Utf8               accumulate\n-  #190 = Utf8               (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-  #191 = Utf8               Code\n-  #192 = Utf8               LineNumberTable\n-  #193 = Utf8               LocalVariableTable\n-  #194 = Utf8               directory\n-  #195 = Utf8               Ljava/nio/file/Path;\n-  #196 = Utf8               maxDepth\n-  #197 = Utf8               I\n-  #198 = Utf8               fileVisitOptions\n-  #199 = Utf8               Exceptions\n-  #200 = Utf8               cleanDirectory\n-  #201 = Class              #576          // org/apache/commons/io/file/Counters$PathCounters\n-  #202 = Utf8               PathCounters\n-  #203 = Utf8               (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #204 = Utf8               (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #205 = Utf8               deleteOptions\n-  #206 = Utf8               copyDirectory\n-  #207 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #208 = Utf8               sourceDirectory\n-  #209 = Utf8               targetDirectory\n-  #210 = Utf8               copyOptions\n-  #211 = Utf8               absoluteSource\n-  #212 = Utf8               copyFile\n-  #213 = Utf8               (Ljava/net/URL;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n-  #214 = Utf8               inputStream\n-  #215 = Utf8               Ljava/io/InputStream;\n-  #216 = Utf8               sourceFile\n-  #217 = Utf8               Ljava/net/URL;\n-  #218 = Utf8               targetFile\n-  #219 = Utf8               StackMapTable\n-  #220 = Class              #577          // java/io/InputStream\n-  #221 = Class              #578          // java/net/URL\n-  #222 = Class              #177          // \"[Ljava/nio/file/CopyOption;\"\n-  #223 = Utf8               copyFileToDirectory\n-  #224 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n-  #225 = Utf8               countDirectory\n-  #226 = Utf8               createParentDirectories\n-  #227 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #228 = Utf8               path\n-  #229 = Utf8               attrs\n-  #230 = Utf8               [Ljava/nio/file/attribute/FileAttribute;\n-  #231 = Utf8               parent\n-  #232 = Utf8               LocalVariableTypeTable\n-  #233 = Utf8               [Ljava/nio/file/attribute/FileAttribute<*>;\n-  #234 = Utf8               Signature\n-  #235 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n-  #236 = Utf8               current\n-  #237 = Utf8               ()Ljava/nio/file/Path;\n-  #238 = Utf8               delete\n-  #239 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #240 = Utf8               linkOptions\n-  #241 = Utf8               deleteDirectory\n-  #242 = Utf8               deleteFile\n-  #243 = Utf8               file\n-  #244 = Utf8               pathCounts\n-  #245 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #246 = Utf8               exists\n-  #247 = Utf8               Z\n-  #248 = Utf8               size\n-  #249 = Utf8               J\n-  #250 = Utf8               directoryAndFileContentEquals\n-  #251 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n-  #252 = Utf8               path1\n-  #253 = Utf8               path2\n-  #254 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n-  #255 = Utf8               binarySearch\n-  #256 = Utf8               openOptions\n-  #257 = Utf8               fileVisitOption\n-  #258 = Utf8               relativeSortedPaths\n-  #259 = Utf8               Lorg/apache/commons/io/file/PathUtils$RelativeSortedPaths;\n-  #260 = Utf8               fileList1\n-  #261 = Utf8               Ljava/util/List;\n-  #262 = Utf8               fileList2\n-  #263 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n-  #264 = Class              #579          // java/util/Iterator\n-  #265 = Utf8               directoryContentEquals\n-  #266 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n-  #267 = Utf8               fileContentEquals\n-  #268 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n-  #269 = Utf8               inputStream2\n-  #270 = Utf8               inputStream1\n-  #271 = Utf8               nPath1\n-  #272 = Utf8               nPath2\n-  #273 = Utf8               path1Exists\n-  #274 = Class              #183          // \"[Ljava/nio/file/LinkOption;\"\n-  #275 = Class              #186          // \"[Ljava/nio/file/OpenOption;\"\n-  #276 = Utf8               filter\n-  #277 = Utf8               (Lorg/apache/commons/io/file/PathFilter;[Ljava/nio/file/Path;)[Ljava/nio/file/Path;\n-  #278 = Utf8               Lorg/apache/commons/io/file/PathFilter;\n-  #279 = Utf8               paths\n-  #280 = Utf8               filterPaths\n-  #281 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n-  #282 = Utf8               stream\n-  #283 = Utf8               Ljava/util/stream/Stream;\n-  #284 = Utf8               collector\n-  #285 = Utf8               Ljava/util/stream/Collector;\n-  #286 = Utf8               Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n-  #287 = Utf8               Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;\n-  #288 = Utf8               <R:Ljava/lang/Object;A:Ljava/lang/Object;>(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream<Ljava/nio/file/Path;>;Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;)TR;\n-  #289 = Utf8               getAclEntryList\n-  #290 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List;\n-  #291 = Utf8               sourcePath\n-  #292 = Utf8               fileAttributeView\n-  #293 = Utf8               Ljava/nio/file/attribute/AclFileAttributeView;\n-  #294 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/attribute/AclEntry;>;\n-  #295 = Utf8               isDirectory\n-  #296 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #297 = Utf8               options\n-  #298 = Utf8               isEmpty\n-  #299 = Utf8               (Ljava/nio/file/Path;)Z\n-  #300 = Utf8               isEmptyDirectory\n-  #301 = Utf8               directoryStream\n-  #302 = Utf8               Ljava/nio/file/DirectoryStream;\n-  #303 = Utf8               Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n-  #304 = Class              #580          // java/nio/file/DirectoryStream\n-  #305 = Utf8               isEmptyFile\n-  #306 = Utf8               isNewer\n-  #307 = Utf8               (Ljava/nio/file/Path;J[Ljava/nio/file/LinkOption;)Z\n-  #308 = Utf8               timeMillis\n-  #309 = Utf8               isRegularFile\n-  #310 = Utf8               newDirectoryStream\n-  #311 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream;\n-  #312 = Utf8               dir\n-  #313 = Utf8               pathFilter\n-  #314 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n-  #315 = Utf8               overrideReadOnly\n-  #316 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z\n-  #317 = Utf8               deleteOption\n-  #318 = Utf8               Lorg/apache/commons/io/file/DeleteOption;\n-  #319 = Class              #179          // \"[Lorg/apache/commons/io/file/DeleteOption;\"\n-  #320 = Utf8               readBasicFileAttributes\n-  #321 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #322 = Utf8               readBasicFileAttributesUnchecked\n-  #323 = Utf8               e\n-  #324 = Utf8               Ljava/io/IOException;\n-  #325 = Utf8               relativize\n-  #326 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-  #327 = Utf8               collection\n-  #328 = Utf8               Ljava/util/Collection;\n-  #329 = Utf8               sort\n-  #330 = Utf8               comparator\n-  #331 = Utf8               Ljava/util/Comparator;\n-  #332 = Utf8               Ljava/util/Collection<Ljava/nio/file/Path;>;\n-  #333 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-  #334 = Class              #581          // java/util/stream/Stream\n-  #335 = Utf8               (Ljava/util/Collection<Ljava/nio/file/Path;>;Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n-  #336 = Utf8               setReadOnly\n-  #337 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-  #338 = Utf8               readAttributes\n-  #339 = Utf8               Ljava/nio/file/attribute/PosixFileAttributes;\n-  #340 = Utf8               permissions\n-  #341 = Utf8               Ljava/util/Set;\n-  #342 = Utf8               readOnly\n-  #343 = Utf8               causeList\n-  #344 = Utf8               Ljava/nio/file/attribute/DosFileAttributeView;\n-  #345 = Utf8               posixFileAttributeView\n-  #346 = Utf8               Ljava/nio/file/attribute/PosixFileAttributeView;\n-  #347 = Utf8               Ljava/util/Set<Ljava/nio/file/attribute/PosixFilePermission;>;\n-  #348 = Utf8               Ljava/util/List<Ljava/lang/Exception;>;\n-  #349 = Class              #582          // java/nio/file/attribute/PosixFileAttributes\n-  #350 = Utf8               toFileVisitOptionSet\n-  #351 = Utf8               ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n-  #352 = Utf8               ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n-  #353 = Utf8               visitFileTree\n-  #354 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-  #355 = Utf8               visitor\n-  #356 = Utf8               Ljava/nio/file/FileVisitor;\n-  #357 = Utf8               TT;\n-  #358 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;)TT;\n-  #359 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n-  #360 = Utf8               start\n-  #361 = Utf8               Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n-  #362 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;I)TT;\n-  #363 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/FileVisitor;\n-  #364 = Utf8               first\n-  #365 = Utf8               Ljava/lang/String;\n-  #366 = Utf8               more\n-  #367 = Utf8               [Ljava/lang/String;\n-  #368 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/lang/String;[Ljava/lang/String;)TT;\n-  #369 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/net/URI;)Ljava/nio/file/FileVisitor;\n-  #370 = Utf8               uri\n-  #371 = Utf8               Ljava/net/URI;\n-  #372 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/net/URI;)TT;\n-  #373 = Utf8               walk\n-  #374 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n-  #375 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n-  #376 = Utf8               <init>\n-  #377 = Utf8               ()V\n-  #378 = Utf8               this\n-  #379 = Utf8               Lorg/apache/commons/io/file/PathUtils;\n-  #380 = Utf8               lambda$walk$1\n-  #381 = Utf8               (Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n-  #382 = Class              #583          // org/apache/commons/io/file/PathFilter\n-  #383 = Utf8               lambda$filterPaths$0\n-  #384 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n-  #385 = Utf8               p\n-  #386 = Utf8               access$000\n-  #387 = Utf8               x0\n-  #388 = Utf8               x1\n-  #389 = Utf8               x2\n-  #390 = Utf8               <clinit>\n-  #391 = Utf8               SourceFile\n-  #392 = Utf8               PathUtils.java\n-  #393 = NameAndType        #189:#190     // accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-  #394 = NameAndType        #584:#585     // withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-  #395 = NameAndType        #350:#351     // toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n-  #396 = NameAndType        #353:#359     // visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n-  #397 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n-  #398 = NameAndType        #178:#179     // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-  #399 = NameAndType        #200:#204     // cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #400 = Utf8               org/apache/commons/io/file/CleaningPathVisitor\n-  #401 = Class              #586          // org/apache/commons/io/file/Counters\n-  #402 = NameAndType        #587:#588     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #403 = Utf8               java/lang/String\n-  #404 = NameAndType        #376:#589     // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-  #405 = NameAndType        #353:#354     // visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-  #406 = NameAndType        #590:#588     // getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #407 = NameAndType        #591:#237     // toAbsolutePath:()Ljava/nio/file/Path;\n-  #408 = Utf8               org/apache/commons/io/file/CopyDirectoryVisitor\n-  #409 = NameAndType        #376:#592     // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n-  #410 = NameAndType        #593:#594     // openStream:()Ljava/io/InputStream;\n-  #411 = Class              #595          // java/nio/file/Files\n-  #412 = NameAndType        #596:#597     // copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n-  #413 = NameAndType        #598:#377     // close:()V\n-  #414 = Utf8               java/lang/Throwable\n-  #415 = NameAndType        #599:#600     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #416 = NameAndType        #601:#237     // getFileName:()Ljava/nio/file/Path;\n-  #417 = NameAndType        #602:#603     // resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-  #418 = NameAndType        #596:#224     // copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n-  #419 = NameAndType        #604:#605     // getFile:()Ljava/lang/String;\n-  #420 = NameAndType        #602:#606     // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-  #421 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-  #422 = NameAndType        #376:#607     // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-  #423 = NameAndType        #608:#237     // getParent:()Ljava/nio/file/Path;\n-  #424 = NameAndType        #609:#227     // createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #425 = Utf8\n-  #426 = Class              #610          // java/nio/file/Paths\n-  #427 = NameAndType        #611:#612     // get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-  #428 = NameAndType        #238:#204     // delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #429 = Utf8               java/nio/file/LinkOption\n-  #430 = NameAndType        #613:#614     // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n-  #431 = NameAndType        #295:#296     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #432 = NameAndType        #241:#204     // deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #433 = NameAndType        #242:#204     // deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #434 = NameAndType        #241:#239     // deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #435 = NameAndType        #242:#239     // deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #436 = Utf8               org/apache/commons/io/file/DeletingPathVisitor\n-  #437 = NameAndType        #184:#183     // NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-  #438 = NameAndType        #376:#615     // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-  #439 = Utf8               java/nio/file/NoSuchFileException\n-  #440 = NameAndType        #616:#605     // toString:()Ljava/lang/String;\n-  #441 = NameAndType        #376:#617     // \"<init>\":(Ljava/lang/String;)V\n-  #442 = NameAndType        #246:#296     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #443 = NameAndType        #618:#299     // isSymbolicLink:(Ljava/nio/file/Path;)Z\n-  #444 = NameAndType        #248:#619     // size:(Ljava/nio/file/Path;)J\n-  #445 = NameAndType        #315:#316     // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n-  #446 = NameAndType        #336:#337     // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-  #447 = NameAndType        #620:#299     // deleteIfExists:(Ljava/nio/file/Path;)Z\n-  #448 = NameAndType        #621:#623     // getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-  #449 = Class              #624          // org/apache/commons/io/file/Counters$Counter\n-  #450 = NameAndType        #625:#377     // increment:()V\n-  #451 = NameAndType        #626:#623     // getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-  #452 = NameAndType        #627:#628     // add:(J)V\n-  #453 = NameAndType        #182:#183     // EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-  #454 = NameAndType        #185:#186     // EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n-  #455 = NameAndType        #180:#181     // EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n-  #456 = NameAndType        #250:#254     // directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n-  #457 = NameAndType        #629:#296     // notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #458 = Utf8               org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n-  #459 = Utf8               java/lang/Integer\n-  #460 = NameAndType        #376:#630     // \"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n-  #461 = NameAndType        #631:#247     // equals:Z\n-  #462 = NameAndType        #632:#261     // relativeFileList1:Ljava/util/List;\n-  #463 = NameAndType        #633:#261     // relativeFileList2:Ljava/util/List;\n-  #464 = NameAndType        #634:#635     // iterator:()Ljava/util/Iterator;\n-  #465 = NameAndType        #636:#637     // hasNext:()Z\n-  #466 = NameAndType        #638:#639     // next:()Ljava/lang/Object;\n-  #467 = Utf8               java/nio/file/Path\n-  #468 = Class              #640          // java/util/Collections\n-  #469 = NameAndType        #255:#641     // binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n-  #470 = Utf8               java/lang/IllegalStateException\n-  #471 = Utf8               Unexpected mismatch.\n-  #472 = NameAndType        #267:#268     // fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n-  #473 = NameAndType        #265:#266     // directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n-  #474 = NameAndType        #642:#237     // normalize:()Ljava/nio/file/Path;\n-  #475 = Utf8               java/io/IOException\n-  #476 = Utf8               java/lang/StringBuilder\n-  #477 = NameAndType        #376:#377     // \"<init>\":()V\n-  #478 = Utf8               Can\\'t compare directories, only files:\n-  #479 = NameAndType        #643:#644     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #480 = NameAndType        #643:#645     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #481 = NameAndType        #631:#646     // equals:(Ljava/lang/Object;)Z\n-  #482 = NameAndType        #647:#648     // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #483 = Class              #649          // org/apache/commons/io/IOUtils\n-  #484 = NameAndType        #650:#651     // contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n-  #485 = Class              #652          // java/util/Objects\n-  #486 = NameAndType        #653:#654     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #487 = NameAndType        #187:#188     // EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n-  #488 = Class              #655          // java/util/Arrays\n-  #489 = NameAndType        #282:#656     // stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-  #490 = Class              #657          // java/util/stream/Collectors\n-  #491 = NameAndType        #658:#659     // toList:()Ljava/util/stream/Collector;\n-  #492 = NameAndType        #280:#281     // filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n-  #493 = Utf8               java/util/List\n-  #494 = NameAndType        #660:#661     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #495 = NameAndType        #662:#663     // empty:()Ljava/util/stream/Stream;\n-  #496 = NameAndType        #664:#665     // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-  #497 = Utf8               BootstrapMethods\n-  #498 = MethodHandle       6:#666        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #499 = MethodType         #646          //  (Ljava/lang/Object;)Z\n-  #500 = MethodHandle       6:#667        // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$filterPaths$0:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n-  #501 = MethodType         #299          //  (Ljava/nio/file/Path;)Z\n-  #502 = NameAndType        #668:#669     // test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n-  #503 = NameAndType        #276:#670     // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #504 = Utf8               java/nio/file/attribute/AclFileAttributeView\n-  #505 = NameAndType        #671:#672     // getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-  #506 = NameAndType        #673:#674     // getAcl:()Ljava/util/List;\n-  #507 = NameAndType        #300:#299     // isEmptyDirectory:(Ljava/nio/file/Path;)Z\n-  #508 = NameAndType        #305:#299     // isEmptyFile:(Ljava/nio/file/Path;)Z\n-  #509 = NameAndType        #310:#675     // newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-  #510 = NameAndType        #676:#677     // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #511 = Class              #678          // java/nio/file/attribute/FileTime\n-  #512 = NameAndType        #679:#680     // toMillis:()J\n-  #513 = NameAndType        #309:#296     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #514 = Utf8               org/apache/commons/io/file/DirectoryStreamFilter\n-  #515 = NameAndType        #376:#681     // \"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n-  #516 = NameAndType        #310:#684     // newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n-  #517 = Class              #685          // org/apache/commons/io/file/StandardDeleteOption\n-  #518 = NameAndType        #686:#687     // OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n-  #519 = Utf8               java/nio/file/attribute/BasicFileAttributes\n-  #520 = NameAndType        #338:#688     // readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #521 = NameAndType        #320:#321     // readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #522 = Utf8               java/io/UncheckedIOException\n-  #523 = NameAndType        #376:#689     // \"<init>\":(Ljava/io/IOException;)V\n-  #524 = Class              #690          // java/util/Collection\n-  #525 = NameAndType        #282:#663     // stream:()Ljava/util/stream/Stream;\n-  #526 = NameAndType        #653:#691     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #527 = MethodType         #691          //  (Ljava/lang/Object;)Ljava/lang/Object;\n-  #528 = MethodHandle       9:#692        // REF_invokeInterface java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-  #529 = MethodType         #603          //  (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-  #530 = NameAndType        #693:#694     // apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n-  #531 = NameAndType        #695:#696     // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-  #532 = NameAndType        #697:#663     // sorted:()Ljava/util/stream/Stream;\n-  #533 = NameAndType        #697:#698     // sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n-  #534 = Utf8               java/util/ArrayList\n-  #535 = NameAndType        #376:#699     // \"<init>\":(I)V\n-  #536 = Utf8               java/nio/file/attribute/DosFileAttributeView\n-  #537 = NameAndType        #336:#700     // setReadOnly:(Z)V\n-  #538 = NameAndType        #627:#646     // add:(Ljava/lang/Object;)Z\n-  #539 = Utf8               java/nio/file/attribute/PosixFileAttributeView\n-  #540 = NameAndType        #338:#701     // readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;\n-  #541 = NameAndType        #340:#702     // permissions:()Ljava/util/Set;\n-  #542 = Class              #703          // java/nio/file/attribute/PosixFilePermission\n-  #543 = NameAndType        #704:#705     // OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n-  #544 = NameAndType        #706:#646     // remove:(Ljava/lang/Object;)Z\n-  #545 = NameAndType        #707:#705     // GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n-  #546 = NameAndType        #708:#705     // OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n-  #547 = NameAndType        #709:#710     // setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n-  #548 = NameAndType        #298:#637     // isEmpty:()Z\n-  #549 = Utf8               org/apache/commons/io/IOExceptionList\n-  #550 = NameAndType        #376:#711     // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-  #551 = Utf8               No DosFileAttributeView or PosixFileAttributeView for \\'%s\\' (linkOptions=%s)\n-  #552 = Utf8               java/lang/Object\n-  #553 = NameAndType        #616:#712     // toString:([Ljava/lang/Object;)Ljava/lang/String;\n-  #554 = NameAndType        #713:#714     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #555 = Utf8               java/nio/file/FileVisitOption\n-  #556 = Class              #715          // java/util/EnumSet\n-  #557 = NameAndType        #716:#717     // noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n-  #558 = NameAndType        #718:#659     // toSet:()Ljava/util/stream/Collector;\n-  #559 = Utf8               java/util/Set\n-  #560 = NameAndType        #719:#720     // walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-  #561 = NameAndType        #719:#721     // walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-  #562 = NameAndType        #611:#722     // get:(Ljava/net/URI;)Ljava/nio/file/Path;\n-  #563 = NameAndType        #373:#723     // walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n-  #564 = MethodHandle       6:#724        // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$walk$1:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n-  #565 = NameAndType        #668:#725     // test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n-  #566 = NameAndType        #322:#321     // readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #567 = NameAndType        #726:#727     // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #568 = Class              #728          // java/nio/file/FileVisitResult\n-  #569 = NameAndType        #729:#730     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #570 = Utf8               java/nio/file/CopyOption\n-  #571 = NameAndType        #176:#177     // EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n-  #572 = Utf8               org/apache/commons/io/file/DeleteOption\n-  #573 = Utf8               java/nio/file/OpenOption\n-  #574 = Utf8               org/apache/commons/io/file/PathUtils\n-  #575 = Utf8               org/apache/commons/io/file/PathUtils$1\n-  #576 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-  #577 = Utf8               java/io/InputStream\n-  #578 = Utf8               java/net/URL\n-  #579 = Utf8               java/util/Iterator\n-  #580 = Utf8               java/nio/file/DirectoryStream\n-  #581 = Utf8               java/util/stream/Stream\n-  #582 = Utf8               java/nio/file/attribute/PosixFileAttributes\n-  #583 = Utf8               org/apache/commons/io/file/PathFilter\n-  #584 = Utf8               withLongCounters\n-  #585 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-  #586 = Utf8               org/apache/commons/io/file/Counters\n-  #587 = Utf8               longPathCounters\n-  #588 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #589 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-  #590 = Utf8               getPathCounters\n-  #591 = Utf8               toAbsolutePath\n-  #592 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n-  #593 = Utf8               openStream\n-  #594 = Utf8               ()Ljava/io/InputStream;\n-  #595 = Utf8               java/nio/file/Files\n-  #596 = Utf8               copy\n-  #597 = Utf8               (Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n-  #598 = Utf8               close\n-  #599 = Utf8               addSuppressed\n-  #600 = Utf8               (Ljava/lang/Throwable;)V\n-  #601 = Utf8               getFileName\n-  #602 = Utf8               resolve\n-  #603 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-  #604 = Utf8               getFile\n-  #605 = Utf8               ()Ljava/lang/String;\n-  #606 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n-  #607 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-  #608 = Utf8               getParent\n-  #609 = Utf8               createDirectories\n-  #610 = Utf8               java/nio/file/Paths\n-  #611 = Utf8               get\n-  #612 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-  #613 = Utf8               NOFOLLOW_LINKS\n-  #614 = Utf8               Ljava/nio/file/LinkOption;\n-  #615 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-  #616 = Utf8               toString\n-  #617 = Utf8               (Ljava/lang/String;)V\n-  #618 = Utf8               isSymbolicLink\n-  #619 = Utf8               (Ljava/nio/file/Path;)J\n-  #620 = Utf8               deleteIfExists\n-  #621 = Utf8               getFileCounter\n-  #622 = Utf8               Counter\n-  #623 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;\n-  #624 = Utf8               org/apache/commons/io/file/Counters$Counter\n-  #625 = Utf8               increment\n-  #626 = Utf8               getByteCounter\n-  #627 = Utf8               add\n-  #628 = Utf8               (J)V\n-  #629 = Utf8               notExists\n-  #630 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n-  #631 = Utf8               equals\n-  #632 = Utf8               relativeFileList1\n-  #633 = Utf8               relativeFileList2\n-  #634 = Utf8               iterator\n-  #635 = Utf8               ()Ljava/util/Iterator;\n-  #636 = Utf8               hasNext\n-  #637 = Utf8               ()Z\n-  #638 = Utf8               next\n-  #639 = Utf8               ()Ljava/lang/Object;\n-  #640 = Utf8               java/util/Collections\n-  #641 = Utf8               (Ljava/util/List;Ljava/lang/Object;)I\n-  #642 = Utf8               normalize\n-  #643 = Utf8               append\n-  #644 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #645 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #646 = Utf8               (Ljava/lang/Object;)Z\n-  #647 = Utf8               newInputStream\n-  #648 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #649 = Utf8               org/apache/commons/io/IOUtils\n-  #650 = Utf8               contentEquals\n-  #651 = Utf8               (Ljava/io/InputStream;Ljava/io/InputStream;)Z\n-  #652 = Utf8               java/util/Objects\n-  #653 = Utf8               requireNonNull\n-  #654 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #655 = Utf8               java/util/Arrays\n-  #656 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-  #657 = Utf8               java/util/stream/Collectors\n-  #658 = Utf8               toList\n-  #659 = Utf8               ()Ljava/util/stream/Collector;\n-  #660 = Utf8               toArray\n-  #661 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #662 = Utf8               empty\n-  #663 = Utf8               ()Ljava/util/stream/Stream;\n-  #664 = Utf8               collect\n-  #665 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;\n-  #666 = Methodref          #731.#732     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #667 = Methodref          #172.#733     // org/apache/commons/io/file/PathUtils.lambda$filterPaths$0:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n-  #668 = Utf8               test\n-  #669 = Utf8               (Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n-  #670 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #671 = Utf8               getFileAttributeView\n-  #672 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-  #673 = Utf8               getAcl\n-  #674 = Utf8               ()Ljava/util/List;\n-  #675 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-  #676 = Utf8               getLastModifiedTime\n-  #677 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #678 = Utf8               java/nio/file/attribute/FileTime\n-  #679 = Utf8               toMillis\n-  #680 = Utf8               ()J\n-  #681 = Utf8               (Lorg/apache/commons/io/file/PathFilter;)V\n-  #682 = Class              #734          // java/nio/file/DirectoryStream$Filter\n-  #683 = Utf8               Filter\n-  #684 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n-  #685 = Utf8               org/apache/commons/io/file/StandardDeleteOption\n-  #686 = Utf8               OVERRIDE_READ_ONLY\n-  #687 = Utf8               Lorg/apache/commons/io/file/StandardDeleteOption;\n-  #688 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #689 = Utf8               (Ljava/io/IOException;)V\n-  #690 = Utf8               java/util/Collection\n-  #691 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #692 = InterfaceMethodref #75.#735      // java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-  #693 = Utf8               apply\n-  #694 = Utf8               (Ljava/nio/file/Path;)Ljava/util/function/Function;\n-  #695 = Utf8               map\n-  #696 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-  #697 = Utf8               sorted\n-  #698 = Utf8               (Ljava/util/Comparator;)Ljava/util/stream/Stream;\n-  #699 = Utf8               (I)V\n-  #700 = Utf8               (Z)V\n-  #701 = Utf8               ()Ljava/nio/file/attribute/PosixFileAttributes;\n-  #702 = Utf8               ()Ljava/util/Set;\n-  #703 = Utf8               java/nio/file/attribute/PosixFilePermission\n-  #704 = Utf8               OWNER_WRITE\n-  #705 = Utf8               Ljava/nio/file/attribute/PosixFilePermission;\n-  #706 = Utf8               remove\n-  #707 = Utf8               GROUP_WRITE\n-  #708 = Utf8               OTHERS_WRITE\n-  #709 = Utf8               setPosixFilePermissions\n-  #710 = Utf8               (Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n-  #711 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n-  #712 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n-  #713 = Utf8               format\n-  #714 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #715 = Utf8               java/util/EnumSet\n-  #716 = Utf8               noneOf\n-  #717 = Utf8               (Ljava/lang/Class;)Ljava/util/EnumSet;\n-  #718 = Utf8               toSet\n-  #719 = Utf8               walkFileTree\n-  #720 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-  #721 = Utf8               (Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-  #722 = Utf8               (Ljava/net/URI;)Ljava/nio/file/Path;\n-  #723 = Utf8               (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n-  #724 = Methodref          #172.#736     // org/apache/commons/io/file/PathUtils.lambda$walk$1:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n-  #725 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n-  #726 = Utf8               accept\n-  #727 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #728 = Utf8               java/nio/file/FileVisitResult\n-  #729 = Utf8               CONTINUE\n-  #730 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #731 = Class              #737          // java/lang/invoke/LambdaMetafactory\n-  #732 = NameAndType        #738:#741     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #733 = NameAndType        #383:#384     // lambda$filterPaths$0:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n-  #734 = Utf8               java/nio/file/DirectoryStream$Filter\n-  #735 = NameAndType        #325:#603     // relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-  #736 = NameAndType        #380:#381     // lambda$walk$1:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n-  #737 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #738 = Utf8               metafactory\n-  #739 = Class              #743          // java/lang/invoke/MethodHandles$Lookup\n-  #740 = Utf8               Lookup\n-  #741 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #742 = Class              #744          // java/lang/invoke/MethodHandles\n-  #743 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #744 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/file/PathUtils.accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+    #2 = Class              #4            // org/apache/commons/io/file/PathUtils\n+    #3 = NameAndType        #5:#6         // accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+    #4 = Utf8               org/apache/commons/io/file/PathUtils\n+    #5 = Utf8               accumulate\n+    #6 = Utf8               (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+    #7 = Methodref          #8.#9         // org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+    #8 = Class              #10           // org/apache/commons/io/file/AccumulatorPathVisitor\n+    #9 = NameAndType        #11:#12       // withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+   #10 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n+   #11 = Utf8               withLongCounters\n+   #12 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+   #13 = Methodref          #2.#14        // org/apache/commons/io/file/PathUtils.toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n+   #14 = NameAndType        #15:#16       // toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n+   #15 = Utf8               toFileVisitOptionSet\n+   #16 = Utf8               ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n+   #17 = Methodref          #2.#18        // org/apache/commons/io/file/PathUtils.visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n+   #18 = NameAndType        #19:#20       // visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n+   #19 = Utf8               visitFileTree\n+   #20 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n+   #21 = Fieldref           #2.#22        // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+   #22 = NameAndType        #23:#24       // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+   #23 = Utf8               EMPTY_DELETE_OPTION_ARRAY\n+   #24 = Utf8               [Lorg/apache/commons/io/file/DeleteOption;\n+   #25 = Methodref          #2.#26        // org/apache/commons/io/file/PathUtils.cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #26 = NameAndType        #27:#28       // cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #27 = Utf8               cleanDirectory\n+   #28 = Utf8               (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #29 = Class              #30           // org/apache/commons/io/file/CleaningPathVisitor\n+   #30 = Utf8               org/apache/commons/io/file/CleaningPathVisitor\n+   #31 = Methodref          #32.#33       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #32 = Class              #34           // org/apache/commons/io/file/Counters\n+   #33 = NameAndType        #35:#36       // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #34 = Utf8               org/apache/commons/io/file/Counters\n+   #35 = Utf8               longPathCounters\n+   #36 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #37 = Class              #38           // java/lang/String\n+   #38 = Utf8               java/lang/String\n+   #39 = Methodref          #29.#40       // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #40 = NameAndType        #41:#42       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #41 = Utf8               <init>\n+   #42 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #43 = Methodref          #2.#44        // org/apache/commons/io/file/PathUtils.visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+   #44 = NameAndType        #19:#45       // visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+   #45 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+   #46 = Methodref          #29.#47       // org/apache/commons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #47 = NameAndType        #48:#36       // getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #48 = Utf8               getPathCounters\n+   #49 = InterfaceMethodref #50.#51       // java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;\n+   #50 = Class              #52           // java/nio/file/Path\n+   #51 = NameAndType        #53:#54       // toAbsolutePath:()Ljava/nio/file/Path;\n+   #52 = Utf8               java/nio/file/Path\n+   #53 = Utf8               toAbsolutePath\n+   #54 = Utf8               ()Ljava/nio/file/Path;\n+   #55 = Class              #56           // org/apache/commons/io/file/CopyDirectoryVisitor\n+   #56 = Utf8               org/apache/commons/io/file/CopyDirectoryVisitor\n+   #57 = Methodref          #55.#58       // org/apache/commons/io/file/CopyDirectoryVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n+   #58 = NameAndType        #41:#59       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n+   #59 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n+   #60 = Methodref          #55.#47       // org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #61 = Methodref          #62.#63       // java/net/URL.openStream:()Ljava/io/InputStream;\n+   #62 = Class              #64           // java/net/URL\n+   #63 = NameAndType        #65:#66       // openStream:()Ljava/io/InputStream;\n+   #64 = Utf8               java/net/URL\n+   #65 = Utf8               openStream\n+   #66 = Utf8               ()Ljava/io/InputStream;\n+   #67 = Methodref          #68.#69       // java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+   #68 = Class              #70           // java/nio/file/Files\n+   #69 = NameAndType        #71:#72       // copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+   #70 = Utf8               java/nio/file/Files\n+   #71 = Utf8               copy\n+   #72 = Utf8               (Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+   #73 = Methodref          #74.#75       // java/io/InputStream.close:()V\n+   #74 = Class              #76           // java/io/InputStream\n+   #75 = NameAndType        #77:#78       // close:()V\n+   #76 = Utf8               java/io/InputStream\n+   #77 = Utf8               close\n+   #78 = Utf8               ()V\n+   #79 = Class              #80           // java/lang/Throwable\n+   #80 = Utf8               java/lang/Throwable\n+   #81 = Methodref          #79.#82       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #82 = NameAndType        #83:#84       // addSuppressed:(Ljava/lang/Throwable;)V\n+   #83 = Utf8               addSuppressed\n+   #84 = Utf8               (Ljava/lang/Throwable;)V\n+   #85 = InterfaceMethodref #50.#86       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #86 = NameAndType        #87:#54       // getFileName:()Ljava/nio/file/Path;\n+   #87 = Utf8               getFileName\n+   #88 = InterfaceMethodref #50.#89       // java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #89 = NameAndType        #90:#91       // resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #90 = Utf8               resolve\n+   #91 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #92 = Methodref          #68.#93       // java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n+   #93 = NameAndType        #71:#94       // copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n+   #94 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n+   #95 = Methodref          #62.#96       // java/net/URL.getFile:()Ljava/lang/String;\n+   #96 = NameAndType        #97:#98       // getFile:()Ljava/lang/String;\n+   #97 = Utf8               getFile\n+   #98 = Utf8               ()Ljava/lang/String;\n+   #99 = InterfaceMethodref #50.#100      // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+  #100 = NameAndType        #90:#101      // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+  #101 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n+  #102 = Class              #103          // org/apache/commons/io/file/CountingPathVisitor\n+  #103 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+  #104 = Methodref          #102.#105     // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+  #105 = NameAndType        #41:#106      // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+  #106 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+  #107 = Methodref          #102.#47      // org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #108 = InterfaceMethodref #50.#109      // java/nio/file/Path.getParent:()Ljava/nio/file/Path;\n+  #109 = NameAndType        #110:#54      // getParent:()Ljava/nio/file/Path;\n+  #110 = Utf8               getParent\n+  #111 = Methodref          #68.#112      // java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #112 = NameAndType        #113:#114     // createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #113 = Utf8               createDirectories\n+  #114 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #115 = String             #116          //\n+  #116 = Utf8\n+  #117 = Methodref          #118.#119     // java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+  #118 = Class              #120          // java/nio/file/Paths\n+  #119 = NameAndType        #121:#122     // get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+  #120 = Utf8               java/nio/file/Paths\n+  #121 = Utf8               get\n+  #122 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+  #123 = Methodref          #2.#124       // org/apache/commons/io/file/PathUtils.delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #124 = NameAndType        #125:#28      // delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #125 = Utf8               delete\n+  #126 = Class              #127          // java/nio/file/LinkOption\n+  #127 = Utf8               java/nio/file/LinkOption\n+  #128 = Fieldref           #126.#129     // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+  #129 = NameAndType        #130:#131     // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+  #130 = Utf8               NOFOLLOW_LINKS\n+  #131 = Utf8               Ljava/nio/file/LinkOption;\n+  #132 = Methodref          #68.#133      // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #133 = NameAndType        #134:#135     // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #134 = Utf8               isDirectory\n+  #135 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #136 = Methodref          #2.#137       // org/apache/commons/io/file/PathUtils.deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #137 = NameAndType        #138:#28      // deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #138 = Utf8               deleteDirectory\n+  #139 = Methodref          #2.#140       // org/apache/commons/io/file/PathUtils.deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #140 = NameAndType        #141:#28      // deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #141 = Utf8               deleteFile\n+  #142 = Methodref          #2.#143       // org/apache/commons/io/file/PathUtils.deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #143 = NameAndType        #138:#144     // deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #144 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #145 = Methodref          #2.#146       // org/apache/commons/io/file/PathUtils.deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #146 = NameAndType        #141:#144     // deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #147 = Class              #148          // org/apache/commons/io/file/DeletingPathVisitor\n+  #148 = Utf8               org/apache/commons/io/file/DeletingPathVisitor\n+  #149 = Fieldref           #2.#150       // org/apache/commons/io/file/PathUtils.NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+  #150 = NameAndType        #151:#152     // NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+  #151 = Utf8               NOFOLLOW_LINK_OPTION_ARRAY\n+  #152 = Utf8               [Ljava/nio/file/LinkOption;\n+  #153 = Methodref          #147.#154     // org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+  #154 = NameAndType        #41:#155      // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+  #155 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+  #156 = Methodref          #147.#47      // org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #157 = Class              #158          // java/nio/file/NoSuchFileException\n+  #158 = Utf8               java/nio/file/NoSuchFileException\n+  #159 = InterfaceMethodref #50.#160      // java/nio/file/Path.toString:()Ljava/lang/String;\n+  #160 = NameAndType        #161:#98      // toString:()Ljava/lang/String;\n+  #161 = Utf8               toString\n+  #162 = Methodref          #157.#163     // java/nio/file/NoSuchFileException.\"<init>\":(Ljava/lang/String;)V\n+  #163 = NameAndType        #41:#164      // \"<init>\":(Ljava/lang/String;)V\n+  #164 = Utf8               (Ljava/lang/String;)V\n+  #165 = Methodref          #68.#166      // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #166 = NameAndType        #167:#135     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #167 = Utf8               exists\n+  #168 = Methodref          #68.#169      // java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n+  #169 = NameAndType        #170:#171     // isSymbolicLink:(Ljava/nio/file/Path;)Z\n+  #170 = Utf8               isSymbolicLink\n+  #171 = Utf8               (Ljava/nio/file/Path;)Z\n+  #172 = Methodref          #68.#173      // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+  #173 = NameAndType        #174:#175     // size:(Ljava/nio/file/Path;)J\n+  #174 = Utf8               size\n+  #175 = Utf8               (Ljava/nio/file/Path;)J\n+  #176 = Methodref          #2.#177       // org/apache/commons/io/file/PathUtils.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+  #177 = NameAndType        #178:#179     // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+  #178 = Utf8               overrideReadOnly\n+  #179 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z\n+  #180 = Methodref          #2.#181       // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+  #181 = NameAndType        #182:#183     // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+  #182 = Utf8               setReadOnly\n+  #183 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+  #184 = Methodref          #68.#185      // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+  #185 = NameAndType        #186:#171     // deleteIfExists:(Ljava/nio/file/Path;)Z\n+  #186 = Utf8               deleteIfExists\n+  #187 = InterfaceMethodref #188.#189     // org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+  #188 = Class              #190          // org/apache/commons/io/file/Counters$PathCounters\n+  #189 = NameAndType        #191:#192     // getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+  #190 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+  #191 = Utf8               getFileCounter\n+  #192 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;\n+  #193 = InterfaceMethodref #194.#195     // org/apache/commons/io/file/Counters$Counter.increment:()V\n+  #194 = Class              #196          // org/apache/commons/io/file/Counters$Counter\n+  #195 = NameAndType        #197:#78      // increment:()V\n+  #196 = Utf8               org/apache/commons/io/file/Counters$Counter\n+  #197 = Utf8               increment\n+  #198 = InterfaceMethodref #188.#199     // org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+  #199 = NameAndType        #200:#192     // getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+  #200 = Utf8               getByteCounter\n+  #201 = InterfaceMethodref #194.#202     // org/apache/commons/io/file/Counters$Counter.add:(J)V\n+  #202 = NameAndType        #203:#204     // add:(J)V\n+  #203 = Utf8               add\n+  #204 = Utf8               (J)V\n+  #205 = Fieldref           #2.#206       // org/apache/commons/io/file/PathUtils.EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+  #206 = NameAndType        #207:#152     // EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+  #207 = Utf8               EMPTY_LINK_OPTION_ARRAY\n+  #208 = Fieldref           #2.#209       // org/apache/commons/io/file/PathUtils.EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+  #209 = NameAndType        #210:#211     // EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+  #210 = Utf8               EMPTY_OPEN_OPTION_ARRAY\n+  #211 = Utf8               [Ljava/nio/file/OpenOption;\n+  #212 = Fieldref           #2.#213       // org/apache/commons/io/file/PathUtils.EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n+  #213 = NameAndType        #214:#215     // EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n+  #214 = Utf8               EMPTY_FILE_VISIT_OPTION_ARRAY\n+  #215 = Utf8               [Ljava/nio/file/FileVisitOption;\n+  #216 = Methodref          #2.#217       // org/apache/commons/io/file/PathUtils.directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n+  #217 = NameAndType        #218:#219     // directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n+  #218 = Utf8               directoryAndFileContentEquals\n+  #219 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n+  #220 = Methodref          #68.#221      // java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #221 = NameAndType        #222:#135     // notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #222 = Utf8               notExists\n+  #223 = Class              #224          // org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n+  #224 = Utf8               org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n+  #225 = Class              #226          // java/lang/Integer\n+  #226 = Utf8               java/lang/Integer\n+  #227 = Integer            2147483647\n+  #228 = Methodref          #223.#229     // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n+  #229 = NameAndType        #41:#230      // \"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n+  #230 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n+  #231 = Fieldref           #223.#232     // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n+  #232 = NameAndType        #233:#234     // equals:Z\n+  #233 = Utf8               equals\n+  #234 = Utf8               Z\n+  #235 = Fieldref           #223.#236     // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;\n+  #236 = NameAndType        #237:#238     // relativeFileList1:Ljava/util/List;\n+  #237 = Utf8               relativeFileList1\n+  #238 = Utf8               Ljava/util/List;\n+  #239 = Fieldref           #223.#240     // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;\n+  #240 = NameAndType        #241:#238     // relativeFileList2:Ljava/util/List;\n+  #241 = Utf8               relativeFileList2\n+  #242 = InterfaceMethodref #243.#244     // java/util/List.iterator:()Ljava/util/Iterator;\n+  #243 = Class              #245          // java/util/List\n+  #244 = NameAndType        #246:#247     // iterator:()Ljava/util/Iterator;\n+  #245 = Utf8               java/util/List\n+  #246 = Utf8               iterator\n+  #247 = Utf8               ()Ljava/util/Iterator;\n+  #248 = InterfaceMethodref #249.#250     // java/util/Iterator.hasNext:()Z\n+  #249 = Class              #251          // java/util/Iterator\n+  #250 = NameAndType        #252:#253     // hasNext:()Z\n+  #251 = Utf8               java/util/Iterator\n+  #252 = Utf8               hasNext\n+  #253 = Utf8               ()Z\n+  #254 = InterfaceMethodref #249.#255     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #255 = NameAndType        #256:#257     // next:()Ljava/lang/Object;\n+  #256 = Utf8               next\n+  #257 = Utf8               ()Ljava/lang/Object;\n+  #258 = Methodref          #259.#260     // java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n+  #259 = Class              #261          // java/util/Collections\n+  #260 = NameAndType        #262:#263     // binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n+  #261 = Utf8               java/util/Collections\n+  #262 = Utf8               binarySearch\n+  #263 = Utf8               (Ljava/util/List;Ljava/lang/Object;)I\n+  #264 = Class              #265          // java/lang/IllegalStateException\n+  #265 = Utf8               java/lang/IllegalStateException\n+  #266 = String             #267          // Unexpected mismatch.\n+  #267 = Utf8               Unexpected mismatch.\n+  #268 = Methodref          #264.#163     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #269 = Methodref          #2.#270       // org/apache/commons/io/file/PathUtils.fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n+  #270 = NameAndType        #271:#272     // fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n+  #271 = Utf8               fileContentEquals\n+  #272 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n+  #273 = Methodref          #2.#274       // org/apache/commons/io/file/PathUtils.directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n+  #274 = NameAndType        #275:#276     // directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n+  #275 = Utf8               directoryContentEquals\n+  #276 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n+  #277 = InterfaceMethodref #50.#278      // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+  #278 = NameAndType        #279:#54      // normalize:()Ljava/nio/file/Path;\n+  #279 = Utf8               normalize\n+  #280 = Class              #281          // java/io/IOException\n+  #281 = Utf8               java/io/IOException\n+  #282 = Class              #283          // java/lang/StringBuilder\n+  #283 = Utf8               java/lang/StringBuilder\n+  #284 = Methodref          #282.#285     // java/lang/StringBuilder.\"<init>\":()V\n+  #285 = NameAndType        #41:#78       // \"<init>\":()V\n+  #286 = String             #287          // Can\\'t compare directories, only files:\n+  #287 = Utf8               Can\\'t compare directories, only files:\n+  #288 = Methodref          #282.#289     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #289 = NameAndType        #290:#291     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #290 = Utf8               append\n+  #291 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #292 = Methodref          #282.#293     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #293 = NameAndType        #290:#294     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #294 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #295 = Methodref          #282.#160     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #296 = Methodref          #280.#163     // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #297 = InterfaceMethodref #50.#298      // java/nio/file/Path.equals:(Ljava/lang/Object;)Z\n+  #298 = NameAndType        #233:#299     // equals:(Ljava/lang/Object;)Z\n+  #299 = Utf8               (Ljava/lang/Object;)Z\n+  #300 = Methodref          #68.#301      // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #301 = NameAndType        #302:#303     // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #302 = Utf8               newInputStream\n+  #303 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #304 = Methodref          #305.#306     // org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n+  #305 = Class              #307          // org/apache/commons/io/IOUtils\n+  #306 = NameAndType        #308:#309     // contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n+  #307 = Utf8               org/apache/commons/io/IOUtils\n+  #308 = Utf8               contentEquals\n+  #309 = Utf8               (Ljava/io/InputStream;Ljava/io/InputStream;)Z\n+  #310 = String             #311          // filter\n+  #311 = Utf8               filter\n+  #312 = Methodref          #313.#314     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #313 = Class              #315          // java/util/Objects\n+  #314 = NameAndType        #316:#317     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #315 = Utf8               java/util/Objects\n+  #316 = Utf8               requireNonNull\n+  #317 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #318 = Fieldref           #2.#319       // org/apache/commons/io/file/PathUtils.EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n+  #319 = NameAndType        #320:#321     // EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n+  #320 = Utf8               EMPTY_PATH_ARRAY\n+  #321 = Utf8               [Ljava/nio/file/Path;\n+  #322 = Methodref          #323.#324     // java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+  #323 = Class              #325          // java/util/Arrays\n+  #324 = NameAndType        #326:#327     // stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+  #325 = Utf8               java/util/Arrays\n+  #326 = Utf8               stream\n+  #327 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+  #328 = Methodref          #329.#330     // java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n+  #329 = Class              #331          // java/util/stream/Collectors\n+  #330 = NameAndType        #332:#333     // toList:()Ljava/util/stream/Collector;\n+  #331 = Utf8               java/util/stream/Collectors\n+  #332 = Utf8               toList\n+  #333 = Utf8               ()Ljava/util/stream/Collector;\n+  #334 = Methodref          #2.#335       // org/apache/commons/io/file/PathUtils.filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n+  #335 = NameAndType        #336:#337     // filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n+  #336 = Utf8               filterPaths\n+  #337 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n+  #338 = InterfaceMethodref #243.#339     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #339 = NameAndType        #340:#341     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #340 = Utf8               toArray\n+  #341 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #342 = Class              #321          // \"[Ljava/nio/file/Path;\"\n+  #343 = String             #344          // collector\n+  #344 = Utf8               collector\n+  #345 = InterfaceMethodref #346.#347     // java/util/stream/Stream.empty:()Ljava/util/stream/Stream;\n+  #346 = Class              #348          // java/util/stream/Stream\n+  #347 = NameAndType        #349:#350     // empty:()Ljava/util/stream/Stream;\n+  #348 = Utf8               java/util/stream/Stream\n+  #349 = Utf8               empty\n+  #350 = Utf8               ()Ljava/util/stream/Stream;\n+  #351 = InterfaceMethodref #346.#352     // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+  #352 = NameAndType        #353:#354     // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+  #353 = Utf8               collect\n+  #354 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;\n+  #355 = InvokeDynamic      #0:#356       // #0:test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n+  #356 = NameAndType        #357:#358     // test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n+  #357 = Utf8               test\n+  #358 = Utf8               (Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n+  #359 = InterfaceMethodref #346.#360     // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #360 = NameAndType        #311:#361     // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #361 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+  #362 = Class              #363          // java/nio/file/attribute/AclFileAttributeView\n+  #363 = Utf8               java/nio/file/attribute/AclFileAttributeView\n+  #364 = Methodref          #68.#365      // java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+  #365 = NameAndType        #366:#367     // getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+  #366 = Utf8               getFileAttributeView\n+  #367 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+  #368 = InterfaceMethodref #362.#369     // java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;\n+  #369 = NameAndType        #370:#371     // getAcl:()Ljava/util/List;\n+  #370 = Utf8               getAcl\n+  #371 = Utf8               ()Ljava/util/List;\n+  #372 = Methodref          #2.#373       // org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z\n+  #373 = NameAndType        #374:#171     // isEmptyDirectory:(Ljava/nio/file/Path;)Z\n+  #374 = Utf8               isEmptyDirectory\n+  #375 = Methodref          #2.#376       // org/apache/commons/io/file/PathUtils.isEmptyFile:(Ljava/nio/file/Path;)Z\n+  #376 = NameAndType        #377:#171     // isEmptyFile:(Ljava/nio/file/Path;)Z\n+  #377 = Utf8               isEmptyFile\n+  #378 = Methodref          #68.#379      // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+  #379 = NameAndType        #380:#381     // newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+  #380 = Utf8               newDirectoryStream\n+  #381 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+  #382 = InterfaceMethodref #383.#244     // java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n+  #383 = Class              #384          // java/nio/file/DirectoryStream\n+  #384 = Utf8               java/nio/file/DirectoryStream\n+  #385 = InterfaceMethodref #383.#75      // java/nio/file/DirectoryStream.close:()V\n+  #386 = String             #387          // file\n+  #387 = Utf8               file\n+  #388 = Methodref          #68.#389      // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #389 = NameAndType        #390:#391     // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #390 = Utf8               getLastModifiedTime\n+  #391 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #392 = Methodref          #393.#394     // java/nio/file/attribute/FileTime.toMillis:()J\n+  #393 = Class              #395          // java/nio/file/attribute/FileTime\n+  #394 = NameAndType        #396:#397     // toMillis:()J\n+  #395 = Utf8               java/nio/file/attribute/FileTime\n+  #396 = Utf8               toMillis\n+  #397 = Utf8               ()J\n+  #398 = Methodref          #68.#399      // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #399 = NameAndType        #400:#135     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #400 = Utf8               isRegularFile\n+  #401 = Class              #402          // org/apache/commons/io/file/DirectoryStreamFilter\n+  #402 = Utf8               org/apache/commons/io/file/DirectoryStreamFilter\n+  #403 = Methodref          #401.#404     // org/apache/commons/io/file/DirectoryStreamFilter.\"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n+  #404 = NameAndType        #41:#405      // \"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n+  #405 = Utf8               (Lorg/apache/commons/io/file/PathFilter;)V\n+  #406 = Methodref          #68.#407      // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n+  #407 = NameAndType        #380:#408     // newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n+  #408 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n+  #409 = Fieldref           #410.#411     // org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n+  #410 = Class              #412          // org/apache/commons/io/file/StandardDeleteOption\n+  #411 = NameAndType        #413:#414     // OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n+  #412 = Utf8               org/apache/commons/io/file/StandardDeleteOption\n+  #413 = Utf8               OVERRIDE_READ_ONLY\n+  #414 = Utf8               Lorg/apache/commons/io/file/StandardDeleteOption;\n+  #415 = Class              #416          // java/nio/file/attribute/BasicFileAttributes\n+  #416 = Utf8               java/nio/file/attribute/BasicFileAttributes\n+  #417 = Methodref          #68.#418      // java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #418 = NameAndType        #419:#420     // readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #419 = Utf8               readAttributes\n+  #420 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #421 = Methodref          #2.#422       // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #422 = NameAndType        #423:#424     // readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #423 = Utf8               readBasicFileAttributes\n+  #424 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #425 = Class              #426          // java/io/UncheckedIOException\n+  #426 = Utf8               java/io/UncheckedIOException\n+  #427 = Methodref          #425.#428     // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n+  #428 = NameAndType        #41:#429      // \"<init>\":(Ljava/io/IOException;)V\n+  #429 = Utf8               (Ljava/io/IOException;)V\n+  #430 = InterfaceMethodref #431.#432     // java/util/Collection.stream:()Ljava/util/stream/Stream;\n+  #431 = Class              #433          // java/util/Collection\n+  #432 = NameAndType        #326:#350     // stream:()Ljava/util/stream/Stream;\n+  #433 = Utf8               java/util/Collection\n+  #434 = Methodref          #313.#435     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #435 = NameAndType        #316:#436     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #436 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #437 = InvokeDynamic      #1:#438       // #1:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n+  #438 = NameAndType        #439:#440     // apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n+  #439 = Utf8               apply\n+  #440 = Utf8               (Ljava/nio/file/Path;)Ljava/util/function/Function;\n+  #441 = InterfaceMethodref #346.#442     // java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+  #442 = NameAndType        #443:#444     // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+  #443 = Utf8               map\n+  #444 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+  #445 = InterfaceMethodref #346.#446     // java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;\n+  #446 = NameAndType        #447:#350     // sorted:()Ljava/util/stream/Stream;\n+  #447 = Utf8               sorted\n+  #448 = InterfaceMethodref #346.#449     // java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+  #449 = NameAndType        #447:#450     // sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+  #450 = Utf8               (Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+  #451 = Class              #452          // java/util/ArrayList\n+  #452 = Utf8               java/util/ArrayList\n+  #453 = Methodref          #451.#454     // java/util/ArrayList.\"<init>\":(I)V\n+  #454 = NameAndType        #41:#455      // \"<init>\":(I)V\n+  #455 = Utf8               (I)V\n+  #456 = Class              #457          // java/nio/file/attribute/DosFileAttributeView\n+  #457 = Utf8               java/nio/file/attribute/DosFileAttributeView\n+  #458 = InterfaceMethodref #456.#459     // java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V\n+  #459 = NameAndType        #182:#460     // setReadOnly:(Z)V\n+  #460 = Utf8               (Z)V\n+  #461 = InterfaceMethodref #243.#462     // java/util/List.add:(Ljava/lang/Object;)Z\n+  #462 = NameAndType        #203:#299     // add:(Ljava/lang/Object;)Z\n+  #463 = Class              #464          // java/nio/file/attribute/PosixFileAttributeView\n+  #464 = Utf8               java/nio/file/attribute/PosixFileAttributeView\n+  #465 = InterfaceMethodref #463.#466     // java/nio/file/attribute/PosixFileAttributeView.readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;\n+  #466 = NameAndType        #419:#467     // readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;\n+  #467 = Utf8               ()Ljava/nio/file/attribute/PosixFileAttributes;\n+  #468 = InterfaceMethodref #469.#470     // java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n+  #469 = Class              #471          // java/nio/file/attribute/PosixFileAttributes\n+  #470 = NameAndType        #472:#473     // permissions:()Ljava/util/Set;\n+  #471 = Utf8               java/nio/file/attribute/PosixFileAttributes\n+  #472 = Utf8               permissions\n+  #473 = Utf8               ()Ljava/util/Set;\n+  #474 = Fieldref           #475.#476     // java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+  #475 = Class              #477          // java/nio/file/attribute/PosixFilePermission\n+  #476 = NameAndType        #478:#479     // OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+  #477 = Utf8               java/nio/file/attribute/PosixFilePermission\n+  #478 = Utf8               OWNER_WRITE\n+  #479 = Utf8               Ljava/nio/file/attribute/PosixFilePermission;\n+  #480 = InterfaceMethodref #481.#482     // java/util/Set.remove:(Ljava/lang/Object;)Z\n+  #481 = Class              #483          // java/util/Set\n+  #482 = NameAndType        #484:#299     // remove:(Ljava/lang/Object;)Z\n+  #483 = Utf8               java/util/Set\n+  #484 = Utf8               remove\n+  #485 = Fieldref           #475.#486     // java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+  #486 = NameAndType        #487:#479     // GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+  #487 = Utf8               GROUP_WRITE\n+  #488 = Fieldref           #475.#489     // java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+  #489 = NameAndType        #490:#479     // OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+  #490 = Utf8               OTHERS_WRITE\n+  #491 = Methodref          #68.#492      // java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+  #492 = NameAndType        #493:#494     // setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+  #493 = Utf8               setPosixFilePermissions\n+  #494 = Utf8               (Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+  #495 = InterfaceMethodref #243.#496     // java/util/List.isEmpty:()Z\n+  #496 = NameAndType        #497:#253     // isEmpty:()Z\n+  #497 = Utf8               isEmpty\n+  #498 = Class              #499          // org/apache/commons/io/IOExceptionList\n+  #499 = Utf8               org/apache/commons/io/IOExceptionList\n+  #500 = Methodref          #498.#501     // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+  #501 = NameAndType        #41:#502      // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+  #502 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n+  #503 = String             #504          // No DosFileAttributeView or PosixFileAttributeView for \\'%s\\' (linkOptions=%s)\n+  #504 = Utf8               No DosFileAttributeView or PosixFileAttributeView for \\'%s\\' (linkOptions=%s)\n+  #505 = Class              #506          // java/lang/Object\n+  #506 = Utf8               java/lang/Object\n+  #507 = Methodref          #323.#508     // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+  #508 = NameAndType        #161:#509     // toString:([Ljava/lang/Object;)Ljava/lang/String;\n+  #509 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n+  #510 = Methodref          #37.#511      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #511 = NameAndType        #512:#513     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #512 = Utf8               format\n+  #513 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #514 = Class              #515          // java/nio/file/FileVisitOption\n+  #515 = Utf8               java/nio/file/FileVisitOption\n+  #516 = Methodref          #517.#518     // java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n+  #517 = Class              #519          // java/util/EnumSet\n+  #518 = NameAndType        #520:#521     // noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n+  #519 = Utf8               java/util/EnumSet\n+  #520 = Utf8               noneOf\n+  #521 = Utf8               (Ljava/lang/Class;)Ljava/util/EnumSet;\n+  #522 = Methodref          #329.#523     // java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;\n+  #523 = NameAndType        #524:#333     // toSet:()Ljava/util/stream/Collector;\n+  #524 = Utf8               toSet\n+  #525 = Methodref          #68.#526      // java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+  #526 = NameAndType        #527:#528     // walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+  #527 = Utf8               walkFileTree\n+  #528 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+  #529 = Methodref          #68.#530      // java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+  #530 = NameAndType        #527:#531     // walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+  #531 = Utf8               (Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+  #532 = Methodref          #118.#533     // java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;\n+  #533 = NameAndType        #121:#534     // get:(Ljava/net/URI;)Ljava/nio/file/Path;\n+  #534 = Utf8               (Ljava/net/URI;)Ljava/nio/file/Path;\n+  #535 = Methodref          #68.#536      // java/nio/file/Files.walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n+  #536 = NameAndType        #537:#538     // walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n+  #537 = Utf8               walk\n+  #538 = Utf8               (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n+  #539 = InvokeDynamic      #2:#540       // #2:test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n+  #540 = NameAndType        #357:#541     // test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n+  #541 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n+  #542 = Methodref          #505.#285     // java/lang/Object.\"<init>\":()V\n+  #543 = Methodref          #2.#544       // org/apache/commons/io/file/PathUtils.readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #544 = NameAndType        #545:#424     // readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #545 = Utf8               readBasicFileAttributesUnchecked\n+  #546 = InterfaceMethodref #547.#548     // org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #547 = Class              #549          // org/apache/commons/io/file/PathFilter\n+  #548 = NameAndType        #550:#551     // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #549 = Utf8               org/apache/commons/io/file/PathFilter\n+  #550 = Utf8               accept\n+  #551 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #552 = Fieldref           #553.#554     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #553 = Class              #555          // java/nio/file/FileVisitResult\n+  #554 = NameAndType        #556:#557     // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #555 = Utf8               java/nio/file/FileVisitResult\n+  #556 = Utf8               CONTINUE\n+  #557 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #558 = Class              #559          // java/nio/file/CopyOption\n+  #559 = Utf8               java/nio/file/CopyOption\n+  #560 = Fieldref           #2.#561       // org/apache/commons/io/file/PathUtils.EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n+  #561 = NameAndType        #562:#563     // EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n+  #562 = Utf8               EMPTY_COPY_OPTIONS\n+  #563 = Utf8               [Ljava/nio/file/CopyOption;\n+  #564 = Class              #565          // org/apache/commons/io/file/DeleteOption\n+  #565 = Utf8               org/apache/commons/io/file/DeleteOption\n+  #566 = Class              #567          // java/nio/file/OpenOption\n+  #567 = Utf8               java/nio/file/OpenOption\n+  #568 = Utf8               Code\n+  #569 = Utf8               LineNumberTable\n+  #570 = Utf8               LocalVariableTable\n+  #571 = Utf8               directory\n+  #572 = Utf8               Ljava/nio/file/Path;\n+  #573 = Utf8               maxDepth\n+  #574 = Utf8               I\n+  #575 = Utf8               fileVisitOptions\n+  #576 = Utf8               Exceptions\n+  #577 = Utf8               (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #578 = Utf8               deleteOptions\n+  #579 = Utf8               copyDirectory\n+  #580 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #581 = Utf8               sourceDirectory\n+  #582 = Utf8               targetDirectory\n+  #583 = Utf8               copyOptions\n+  #584 = Utf8               absoluteSource\n+  #585 = Utf8               copyFile\n+  #586 = Utf8               (Ljava/net/URL;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n+  #587 = Utf8               inputStream\n+  #588 = Utf8               Ljava/io/InputStream;\n+  #589 = Utf8               sourceFile\n+  #590 = Utf8               Ljava/net/URL;\n+  #591 = Utf8               targetFile\n+  #592 = Utf8               StackMapTable\n+  #593 = Class              #563          // \"[Ljava/nio/file/CopyOption;\"\n+  #594 = Utf8               copyFileToDirectory\n+  #595 = Utf8               countDirectory\n+  #596 = Utf8               createParentDirectories\n+  #597 = Utf8               path\n+  #598 = Utf8               attrs\n+  #599 = Utf8               [Ljava/nio/file/attribute/FileAttribute;\n+  #600 = Utf8               parent\n+  #601 = Utf8               LocalVariableTypeTable\n+  #602 = Utf8               [Ljava/nio/file/attribute/FileAttribute<*>;\n+  #603 = Utf8               Signature\n+  #604 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n+  #605 = Utf8               current\n+  #606 = Utf8               linkOptions\n+  #607 = Utf8               pathCounts\n+  #608 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #609 = Utf8               J\n+  #610 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n+  #611 = Utf8               path1\n+  #612 = Utf8               path2\n+  #613 = Utf8               openOptions\n+  #614 = Utf8               fileVisitOption\n+  #615 = Utf8               relativeSortedPaths\n+  #616 = Utf8               Lorg/apache/commons/io/file/PathUtils$RelativeSortedPaths;\n+  #617 = Utf8               fileList1\n+  #618 = Utf8               fileList2\n+  #619 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n+  #620 = Utf8               inputStream2\n+  #621 = Utf8               inputStream1\n+  #622 = Utf8               nPath1\n+  #623 = Utf8               nPath2\n+  #624 = Utf8               path1Exists\n+  #625 = Class              #152          // \"[Ljava/nio/file/LinkOption;\"\n+  #626 = Class              #211          // \"[Ljava/nio/file/OpenOption;\"\n+  #627 = Utf8               (Lorg/apache/commons/io/file/PathFilter;[Ljava/nio/file/Path;)[Ljava/nio/file/Path;\n+  #628 = Utf8               Lorg/apache/commons/io/file/PathFilter;\n+  #629 = Utf8               paths\n+  #630 = Utf8               Ljava/util/stream/Stream;\n+  #631 = Utf8               Ljava/util/stream/Collector;\n+  #632 = Utf8               Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n+  #633 = Utf8               Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;\n+  #634 = Utf8               <R:Ljava/lang/Object;A:Ljava/lang/Object;>(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream<Ljava/nio/file/Path;>;Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;)TR;\n+  #635 = Utf8               getAclEntryList\n+  #636 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List;\n+  #637 = Utf8               sourcePath\n+  #638 = Utf8               fileAttributeView\n+  #639 = Utf8               Ljava/nio/file/attribute/AclFileAttributeView;\n+  #640 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/attribute/AclEntry;>;\n+  #641 = Utf8               options\n+  #642 = Utf8               directoryStream\n+  #643 = Utf8               Ljava/nio/file/DirectoryStream;\n+  #644 = Utf8               Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n+  #645 = Utf8               isNewer\n+  #646 = Utf8               (Ljava/nio/file/Path;J[Ljava/nio/file/LinkOption;)Z\n+  #647 = Utf8               timeMillis\n+  #648 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream;\n+  #649 = Utf8               dir\n+  #650 = Utf8               pathFilter\n+  #651 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n+  #652 = Utf8               deleteOption\n+  #653 = Utf8               Lorg/apache/commons/io/file/DeleteOption;\n+  #654 = Class              #24           // \"[Lorg/apache/commons/io/file/DeleteOption;\"\n+  #655 = Utf8               e\n+  #656 = Utf8               Ljava/io/IOException;\n+  #657 = Utf8               relativize\n+  #658 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+  #659 = Utf8               collection\n+  #660 = Utf8               Ljava/util/Collection;\n+  #661 = Utf8               sort\n+  #662 = Utf8               comparator\n+  #663 = Utf8               Ljava/util/Comparator;\n+  #664 = Utf8               Ljava/util/Collection<Ljava/nio/file/Path;>;\n+  #665 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n+  #666 = Utf8               (Ljava/util/Collection<Ljava/nio/file/Path;>;Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+  #667 = Utf8               Ljava/nio/file/attribute/PosixFileAttributes;\n+  #668 = Utf8               Ljava/util/Set;\n+  #669 = Utf8               readOnly\n+  #670 = Utf8               causeList\n+  #671 = Utf8               Ljava/nio/file/attribute/DosFileAttributeView;\n+  #672 = Utf8               posixFileAttributeView\n+  #673 = Utf8               Ljava/nio/file/attribute/PosixFileAttributeView;\n+  #674 = Utf8               Ljava/util/Set<Ljava/nio/file/attribute/PosixFilePermission;>;\n+  #675 = Utf8               Ljava/util/List<Ljava/lang/Exception;>;\n+  #676 = Utf8               ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n+  #677 = Utf8               visitor\n+  #678 = Utf8               Ljava/nio/file/FileVisitor;\n+  #679 = Utf8               TT;\n+  #680 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;)TT;\n+  #681 = Utf8               start\n+  #682 = Utf8               Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n+  #683 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;I)TT;\n+  #684 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/FileVisitor;\n+  #685 = Utf8               first\n+  #686 = Utf8               Ljava/lang/String;\n+  #687 = Utf8               more\n+  #688 = Utf8               [Ljava/lang/String;\n+  #689 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/lang/String;[Ljava/lang/String;)TT;\n+  #690 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/net/URI;)Ljava/nio/file/FileVisitor;\n+  #691 = Utf8               uri\n+  #692 = Utf8               Ljava/net/URI;\n+  #693 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/net/URI;)TT;\n+  #694 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n+  #695 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n+  #696 = Utf8               this\n+  #697 = Utf8               Lorg/apache/commons/io/file/PathUtils;\n+  #698 = Utf8               lambda$walk$1\n+  #699 = Utf8               (Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n+  #700 = Utf8               lambda$filterPaths$0\n+  #701 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n+  #702 = Utf8               p\n+  #703 = Utf8               access$000\n+  #704 = Utf8               x0\n+  #705 = Utf8               x1\n+  #706 = Utf8               x2\n+  #707 = Utf8               <clinit>\n+  #708 = Utf8               SourceFile\n+  #709 = Utf8               PathUtils.java\n+  #710 = Utf8               BootstrapMethods\n+  #711 = MethodHandle       6:#712        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #712 = Methodref          #713.#714     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #713 = Class              #715          // java/lang/invoke/LambdaMetafactory\n+  #714 = NameAndType        #716:#717     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #715 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #716 = Utf8               metafactory\n+  #717 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #718 = MethodType         #299          //  (Ljava/lang/Object;)Z\n+  #719 = MethodHandle       6:#720        // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$filterPaths$0:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n+  #720 = Methodref          #2.#721       // org/apache/commons/io/file/PathUtils.lambda$filterPaths$0:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n+  #721 = NameAndType        #700:#701     // lambda$filterPaths$0:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n+  #722 = MethodType         #171          //  (Ljava/nio/file/Path;)Z\n+  #723 = MethodType         #436          //  (Ljava/lang/Object;)Ljava/lang/Object;\n+  #724 = MethodHandle       9:#725        // REF_invokeInterface java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+  #725 = InterfaceMethodref #50.#726      // java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+  #726 = NameAndType        #657:#91      // relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+  #727 = MethodType         #91           //  (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+  #728 = MethodHandle       6:#729        // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$walk$1:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n+  #729 = Methodref          #2.#730       // org/apache/commons/io/file/PathUtils.lambda$walk$1:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n+  #730 = NameAndType        #698:#699     // lambda$walk$1:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n+  #731 = Utf8               InnerClasses\n+  #732 = Utf8               PathCounters\n+  #733 = Utf8               Counter\n+  #734 = Utf8               RelativeSortedPaths\n+  #735 = Class              #736          // org/apache/commons/io/file/PathUtils$1\n+  #736 = Utf8               org/apache/commons/io/file/PathUtils$1\n+  #737 = Class              #738          // java/nio/file/DirectoryStream$Filter\n+  #738 = Utf8               java/nio/file/DirectoryStream$Filter\n+  #739 = Utf8               Filter\n+  #740 = Class              #741          // java/lang/invoke/MethodHandles$Lookup\n+  #741 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #742 = Class              #743          // java/lang/invoke/MethodHandles\n+  #743 = Utf8               java/lang/invoke/MethodHandles\n+  #744 = Utf8               Lookup\n {\n   public static final java.nio.file.CopyOption[] EMPTY_COPY_OPTIONS;\n     descriptor: [Ljava/nio/file/CopyOption;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final org.apache.commons.io.file.DeleteOption[] EMPTY_DELETE_OPTION_ARRAY;\n     descriptor: [Lorg/apache/commons/io/file/DeleteOption;\n@@ -782,21 +782,21 @@\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private static org.apache.commons.io.file.AccumulatorPathVisitor accumulate(java.nio.file.Path, int, java.nio.file.FileVisitOption[]) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n-         0: invokestatic  #2                  // Method org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+         0: invokestatic  #7                  // Method org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n          3: aload_0\n          4: aload_2\n-         5: invokestatic  #3                  // Method toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n+         5: invokestatic  #13                 // Method toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n          8: iload_1\n-         9: invokestatic  #4                  // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n-        12: checkcast     #5                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n+         9: invokestatic  #17                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n+        12: checkcast     #8                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n         15: areturn\n       LineNumberTable:\n         line 188: 0\n         line 189: 5\n         line 188: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -808,41 +808,41 @@\n \n   public static org.apache.commons.io.file.Counters$PathCounters cleanDirectory(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-         4: invokestatic  #7                  // Method cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         1: getstatic     #21                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+         4: invokestatic  #25                 // Method cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: areturn\n       LineNumberTable:\n         line 200: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 directory   Ljava/nio/file/Path;\n     Exceptions:\n       throws java.io.IOException\n \n   public static org.apache.commons.io.file.Counters$PathCounters cleanDirectory(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=5, locals=2, args_size=2\n-         0: new           #8                  // class org/apache/commons/io/file/CleaningPathVisitor\n+         0: new           #29                 // class org/apache/commons/io/file/CleaningPathVisitor\n          3: dup\n-         4: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #31                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: aload_1\n          8: iconst_0\n-         9: anewarray     #10                 // class java/lang/String\n-        12: invokespecial #11                 // Method org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+         9: anewarray     #37                 // class java/lang/String\n+        12: invokespecial #39                 // Method org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n         15: aload_0\n-        16: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-        19: checkcast     #8                  // class org/apache/commons/io/file/CleaningPathVisitor\n-        22: invokevirtual #13                 // Method org/apache/commons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        16: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+        19: checkcast     #29                 // class org/apache/commons/io/file/CleaningPathVisitor\n+        22: invokevirtual #46                 // Method org/apache/commons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         25: areturn\n       LineNumberTable:\n         line 214: 0\n         line 215: 22\n         line 214: 25\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -853,27 +853,27 @@\n \n   public static org.apache.commons.io.file.Counters$PathCounters copyDirectory(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=6, locals=4, args_size=3\n          0: aload_0\n-         1: invokeinterface #14,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;\n+         1: invokeinterface #49,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;\n          6: astore_3\n-         7: new           #15                 // class org/apache/commons/io/file/CopyDirectoryVisitor\n+         7: new           #55                 // class org/apache/commons/io/file/CopyDirectoryVisitor\n         10: dup\n-        11: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        11: invokestatic  #31                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         14: aload_3\n         15: aload_1\n         16: aload_2\n-        17: invokespecial #16                 // Method org/apache/commons/io/file/CopyDirectoryVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n+        17: invokespecial #57                 // Method org/apache/commons/io/file/CopyDirectoryVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n         20: aload_3\n-        21: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-        24: checkcast     #15                 // class org/apache/commons/io/file/CopyDirectoryVisitor\n-        27: invokevirtual #17                 // Method org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        21: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+        24: checkcast     #55                 // class org/apache/commons/io/file/CopyDirectoryVisitor\n+        27: invokevirtual #60                 // Method org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         30: areturn\n       LineNumberTable:\n         line 229: 0\n         line 230: 7\n         line 231: 11\n         line 230: 21\n         line 232: 27\n@@ -889,39 +889,39 @@\n \n   public static java.nio.file.Path copyFile(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;\n     descriptor: (Ljava/net/URL;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=6, args_size=3\n          0: aload_0\n-         1: invokevirtual #18                 // Method java/net/URL.openStream:()Ljava/io/InputStream;\n+         1: invokevirtual #61                 // Method java/net/URL.openStream:()Ljava/io/InputStream;\n          4: astore_3\n          5: aload_3\n          6: aload_1\n          7: aload_2\n-         8: invokestatic  #19                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+         8: invokestatic  #67                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n         11: pop2\n         12: aload_1\n         13: astore        4\n         15: aload_3\n         16: ifnull        23\n         19: aload_3\n-        20: invokevirtual #20                 // Method java/io/InputStream.close:()V\n+        20: invokevirtual #73                 // Method java/io/InputStream.close:()V\n         23: aload         4\n         25: areturn\n         26: astore        4\n         28: aload_3\n         29: ifnull        48\n         32: aload_3\n-        33: invokevirtual #20                 // Method java/io/InputStream.close:()V\n+        33: invokevirtual #73                 // Method java/io/InputStream.close:()V\n         36: goto          48\n         39: astore        5\n         41: aload         4\n         43: aload         5\n-        45: invokevirtual #22                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        45: invokevirtual #81                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         48: aload         4\n         50: athrow\n       Exception table:\n          from    to  target type\n              5    15    26   Class java/lang/Throwable\n             32    36    39   Class java/lang/Throwable\n       LineNumberTable:\n@@ -957,18 +957,18 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_0\n-         3: invokeinterface #23,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-         8: invokeinterface #24,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+         3: invokeinterface #85,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+         8: invokeinterface #88,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n         13: aload_2\n-        14: invokestatic  #25                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n+        14: invokestatic  #92                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n         17: areturn\n       LineNumberTable:\n         line 265: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0 sourceFile   Ljava/nio/file/Path;\n             0      18     1 targetDirectory   Ljava/nio/file/Path;\n@@ -978,42 +978,42 @@\n \n   public static java.nio.file.Path copyFileToDirectory(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;\n     descriptor: (Ljava/net/URL;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=6, args_size=3\n          0: aload_0\n-         1: invokevirtual #18                 // Method java/net/URL.openStream:()Ljava/io/InputStream;\n+         1: invokevirtual #61                 // Method java/net/URL.openStream:()Ljava/io/InputStream;\n          4: astore_3\n          5: aload_3\n          6: aload_1\n          7: aload_0\n-         8: invokevirtual #26                 // Method java/net/URL.getFile:()Ljava/lang/String;\n-        11: invokeinterface #27,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+         8: invokevirtual #95                 // Method java/net/URL.getFile:()Ljava/lang/String;\n+        11: invokeinterface #99,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n         16: aload_2\n-        17: invokestatic  #19                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+        17: invokestatic  #67                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n         20: pop2\n         21: aload_1\n         22: astore        4\n         24: aload_3\n         25: ifnull        32\n         28: aload_3\n-        29: invokevirtual #20                 // Method java/io/InputStream.close:()V\n+        29: invokevirtual #73                 // Method java/io/InputStream.close:()V\n         32: aload         4\n         34: areturn\n         35: astore        4\n         37: aload_3\n         38: ifnull        57\n         41: aload_3\n-        42: invokevirtual #20                 // Method java/io/InputStream.close:()V\n+        42: invokevirtual #73                 // Method java/io/InputStream.close:()V\n         45: goto          57\n         48: astore        5\n         50: aload         4\n         52: aload         5\n-        54: invokevirtual #22                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        54: invokevirtual #81                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         57: aload         4\n         59: athrow\n       Exception table:\n          from    to  target type\n              5    24    35   Class java/lang/Throwable\n             41    45    48   Class java/lang/Throwable\n       LineNumberTable:\n@@ -1046,22 +1046,22 @@\n       throws java.io.IOException\n \n   public static org.apache.commons.io.file.Counters$PathCounters countDirectory(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #28                 // class org/apache/commons/io/file/CountingPathVisitor\n+         0: new           #102                // class org/apache/commons/io/file/CountingPathVisitor\n          3: dup\n-         4: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-         7: invokespecial #29                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         4: invokestatic  #31                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         7: invokespecial #104                // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n         10: aload_0\n-        11: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-        14: checkcast     #28                 // class org/apache/commons/io/file/CountingPathVisitor\n-        17: invokevirtual #30                 // Method org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        11: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+        14: checkcast     #102                // class org/apache/commons/io/file/CountingPathVisitor\n+        17: invokevirtual #107                // Method org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         20: areturn\n       LineNumberTable:\n         line 294: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0 directory   Ljava/nio/file/Path;\n     Exceptions:\n@@ -1069,23 +1069,23 @@\n \n   public static java.nio.file.Path createParentDirectories(java.nio.file.Path, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: invokeinterface #31,  1           // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;\n+         1: invokeinterface #108,  1          // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;\n          6: astore_2\n          7: aload_2\n          8: ifnonnull     13\n         11: aconst_null\n         12: areturn\n         13: aload_2\n         14: aload_1\n-        15: invokestatic  #32                 // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+        15: invokestatic  #111                // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n         18: areturn\n       LineNumberTable:\n         line 307: 0\n         line 308: 7\n         line 309: 11\n         line 311: 13\n       LocalVariableTable:\n@@ -1098,37 +1098,37 @@\n             0      19     1 attrs   [Ljava/nio/file/attribute/FileAttribute<*>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 13\n           locals = [ class java/nio/file/Path ]\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #235                         // (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n+    Signature: #604                         // (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n \n   public static java.nio.file.Path current();\n     descriptor: ()Ljava/nio/file/Path;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: ldc           #33                 // String\n+         0: ldc           #115                // String\n          2: iconst_0\n-         3: anewarray     #10                 // class java/lang/String\n-         6: invokestatic  #34                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+         3: anewarray     #37                 // class java/lang/String\n+         6: invokestatic  #117                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n          9: areturn\n       LineNumberTable:\n         line 322: 0\n \n   public static org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-         4: invokestatic  #35                 // Method delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         1: getstatic     #21                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+         4: invokestatic  #123                // Method delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: areturn\n       LineNumberTable:\n         line 342: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  path   Ljava/nio/file/Path;\n     Exceptions:\n@@ -1137,28 +1137,28 @@\n   public static org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: anewarray     #36                 // class java/nio/file/LinkOption\n+         2: anewarray     #126                // class java/nio/file/LinkOption\n          5: dup\n          6: iconst_0\n-         7: getstatic     #37                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+         7: getstatic     #128                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n         10: aastore\n-        11: invokestatic  #38                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        11: invokestatic  #132                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         14: ifeq          25\n         17: aload_0\n         18: aload_1\n-        19: invokestatic  #39                 // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+        19: invokestatic  #136                // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n         22: goto          30\n         25: aload_0\n         26: aload_1\n-        27: invokestatic  #40                 // Method deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+        27: invokestatic  #139                // Method deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n         30: areturn\n       LineNumberTable:\n         line 365: 0\n         line 366: 25\n         line 365: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1174,25 +1174,25 @@\n   public static org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path, java.nio.file.LinkOption[], org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #38                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: invokestatic  #132                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          5: ifeq          17\n          8: aload_0\n          9: aload_1\n         10: aload_2\n-        11: invokestatic  #41                 // Method deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+        11: invokestatic  #142                // Method deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n         14: goto          23\n         17: aload_0\n         18: aload_1\n         19: aload_2\n-        20: invokestatic  #42                 // Method deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+        20: invokestatic  #145                // Method deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n         23: areturn\n       LineNumberTable:\n         line 391: 0\n         line 392: 17\n         line 391: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1208,42 +1208,42 @@\n \n   public static org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-         4: invokestatic  #39                 // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         1: getstatic     #21                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+         4: invokestatic  #136                // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: areturn\n       LineNumberTable:\n         line 403: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 directory   Ljava/nio/file/Path;\n     Exceptions:\n       throws java.io.IOException\n \n   public static org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=6, locals=2, args_size=2\n-         0: new           #43                 // class org/apache/commons/io/file/DeletingPathVisitor\n+         0: new           #147                // class org/apache/commons/io/file/DeletingPathVisitor\n          3: dup\n-         4: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-         7: getstatic     #44                 // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         4: invokestatic  #31                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         7: getstatic     #149                // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n         10: aload_1\n         11: iconst_0\n-        12: anewarray     #10                 // class java/lang/String\n-        15: invokespecial #45                 // Method org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+        12: anewarray     #37                 // class java/lang/String\n+        15: invokespecial #153                // Method org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n         18: aload_0\n-        19: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-        22: checkcast     #43                 // class org/apache/commons/io/file/DeletingPathVisitor\n-        25: invokevirtual #46                 // Method org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        19: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+        22: checkcast     #147                // class org/apache/commons/io/file/DeletingPathVisitor\n+        25: invokevirtual #156                // Method org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         28: areturn\n       LineNumberTable:\n         line 417: 0\n         line 418: 4\n         line 417: 19\n         line 419: 25\n         line 417: 28\n@@ -1255,26 +1255,26 @@\n       throws java.io.IOException\n \n   public static org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path, java.nio.file.LinkOption[], org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=6, locals=3, args_size=3\n-         0: new           #43                 // class org/apache/commons/io/file/DeletingPathVisitor\n+         0: new           #147                // class org/apache/commons/io/file/DeletingPathVisitor\n          3: dup\n-         4: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #31                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: aload_1\n          8: aload_2\n          9: iconst_0\n-        10: anewarray     #10                 // class java/lang/String\n-        13: invokespecial #45                 // Method org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+        10: anewarray     #37                 // class java/lang/String\n+        13: invokespecial #153                // Method org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n         16: aload_0\n-        17: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-        20: checkcast     #43                 // class org/apache/commons/io/file/DeletingPathVisitor\n-        23: invokevirtual #46                 // Method org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        17: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+        20: checkcast     #147                // class org/apache/commons/io/file/DeletingPathVisitor\n+        23: invokevirtual #156                // Method org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         26: areturn\n       LineNumberTable:\n         line 434: 0\n         line 435: 23\n         line 434: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1286,16 +1286,16 @@\n \n   public static org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-         4: invokestatic  #40                 // Method deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         1: getstatic     #21                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+         4: invokestatic  #139                // Method deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: areturn\n       LineNumberTable:\n         line 447: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  file   Ljava/nio/file/Path;\n     Exceptions:\n@@ -1303,17 +1303,17 @@\n \n   public static org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getstatic     #44                 // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         1: getstatic     #149                // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n          4: aload_1\n-         5: invokestatic  #42                 // Method deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         5: invokestatic  #145                // Method deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n          8: areturn\n       LineNumberTable:\n         line 462: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  file   Ljava/nio/file/Path;\n             0       9     1 deleteOptions   [Lorg/apache/commons/io/file/DeleteOption;\n@@ -1323,58 +1323,58 @@\n   public static org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path, java.nio.file.LinkOption[], org.apache.commons.io.file.DeleteOption...) throws java.nio.file.NoSuchFileException, java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=7, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #38                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: invokestatic  #132                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          5: ifeq          22\n-         8: new           #47                 // class java/nio/file/NoSuchFileException\n+         8: new           #157                // class java/nio/file/NoSuchFileException\n         11: dup\n         12: aload_0\n-        13: invokeinterface #48,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n-        18: invokespecial #49                 // Method java/nio/file/NoSuchFileException.\"<init>\":(Ljava/lang/String;)V\n+        13: invokeinterface #159,  1          // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n+        18: invokespecial #162                // Method java/nio/file/NoSuchFileException.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n-        22: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        22: invokestatic  #31                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         25: astore_3\n         26: aload_0\n         27: aload_1\n-        28: invokestatic  #50                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        28: invokestatic  #165                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         31: istore        4\n         33: iload         4\n         35: ifeq          52\n         38: aload_0\n-        39: invokestatic  #51                 // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n+        39: invokestatic  #168                // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n         42: ifne          52\n         45: aload_0\n-        46: invokestatic  #52                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+        46: invokestatic  #172                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n         49: goto          53\n         52: lconst_0\n         53: lstore        5\n         55: aload_2\n-        56: invokestatic  #53                 // Method overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+        56: invokestatic  #176                // Method overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n         59: ifeq          74\n         62: iload         4\n         64: ifeq          74\n         67: aload_0\n         68: iconst_0\n         69: aload_1\n-        70: invokestatic  #54                 // Method setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+        70: invokestatic  #180                // Method setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n         73: pop\n         74: aload_0\n-        75: invokestatic  #55                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+        75: invokestatic  #184                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n         78: ifeq          105\n         81: aload_3\n-        82: invokeinterface #56,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-        87: invokeinterface #57,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V\n+        82: invokeinterface #187,  1          // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+        87: invokeinterface #193,  1          // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V\n         92: aload_3\n-        93: invokeinterface #58,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+        93: invokeinterface #198,  1          // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n         98: lload         5\n-       100: invokeinterface #59,  3           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.add:(J)V\n+       100: invokeinterface #201,  3          // InterfaceMethod org/apache/commons/io/file/Counters$Counter.add:(J)V\n        105: aload_3\n        106: areturn\n       LineNumberTable:\n         line 478: 0\n         line 479: 8\n         line 481: 22\n         line 482: 26\n@@ -1410,18 +1410,18 @@\n   public static boolean directoryAndFileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #60                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-         5: getstatic     #61                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n-         8: getstatic     #62                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n-        11: invokestatic  #63                 // Method directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n+         2: getstatic     #205                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         5: getstatic     #208                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+         8: getstatic     #212                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n+        11: invokestatic  #216                // Method directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n         14: ireturn\n       LineNumberTable:\n         line 504: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0 path1   Ljava/nio/file/Path;\n             0      15     1 path2   Ljava/nio/file/Path;\n@@ -1443,82 +1443,82 @@\n         11: ifnull        18\n         14: aload_1\n         15: ifnonnull     20\n         18: iconst_0\n         19: ireturn\n         20: aload_0\n         21: iconst_0\n-        22: anewarray     #36                 // class java/nio/file/LinkOption\n-        25: invokestatic  #64                 // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        22: anewarray     #126                // class java/nio/file/LinkOption\n+        25: invokestatic  #220                // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         28: ifeq          44\n         31: aload_1\n         32: iconst_0\n-        33: anewarray     #36                 // class java/nio/file/LinkOption\n-        36: invokestatic  #64                 // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        33: anewarray     #126                // class java/nio/file/LinkOption\n+        36: invokestatic  #220                // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         39: ifeq          44\n         42: iconst_1\n         43: ireturn\n-        44: new           #65                 // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n+        44: new           #223                // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n         47: dup\n         48: aload_0\n         49: aload_1\n-        50: ldc           #67                 // int 2147483647\n+        50: ldc           #227                // int 2147483647\n         52: aload_2\n         53: aload         4\n         55: aconst_null\n-        56: invokespecial #68                 // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n+        56: invokespecial #228                // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n         59: astore        5\n         61: aload         5\n-        63: getfield      #69                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n+        63: getfield      #231                // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n         66: ifne          71\n         69: iconst_0\n         70: ireturn\n         71: aload         5\n-        73: getfield      #70                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;\n+        73: getfield      #235                // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;\n         76: astore        6\n         78: aload         5\n-        80: getfield      #71                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;\n+        80: getfield      #239                // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;\n         83: astore        7\n         85: aload         6\n-        87: invokeinterface #72,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        87: invokeinterface #242,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         92: astore        8\n         94: aload         8\n-        96: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-       101: ifeq          170\n+        96: invokeinterface #248,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       101: ifeq          171\n        104: aload         8\n-       106: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       111: checkcast     #75                 // class java/nio/file/Path\n+       106: invokeinterface #254,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       111: checkcast     #50                 // class java/nio/file/Path\n        114: astore        9\n        116: aload         7\n        118: aload         9\n-       120: invokestatic  #76                 // Method java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n+       120: invokestatic  #258                // Method java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n        123: istore        10\n        125: iload         10\n        127: iconst_m1\n-       128: if_icmpgt     141\n-       131: new           #77                 // class java/lang/IllegalStateException\n+       128: if_icmpgt     142\n+       131: new           #264                // class java/lang/IllegalStateException\n        134: dup\n-       135: ldc           #78                 // String Unexpected mismatch.\n-       137: invokespecial #79                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       140: athrow\n-       141: aload_0\n-       142: aload         9\n-       144: invokeinterface #24,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-       149: aload_1\n-       150: aload         9\n-       152: invokeinterface #24,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-       157: aload_2\n-       158: aload_3\n-       159: invokestatic  #80                 // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n-       162: ifne          167\n-       165: iconst_0\n-       166: ireturn\n-       167: goto          94\n-       170: iconst_1\n-       171: ireturn\n+       135: ldc_w         #266                // String Unexpected mismatch.\n+       138: invokespecial #268                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       141: athrow\n+       142: aload_0\n+       143: aload         9\n+       145: invokeinterface #88,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+       150: aload_1\n+       151: aload         9\n+       153: invokeinterface #88,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+       158: aload_2\n+       159: aload_3\n+       160: invokestatic  #269                // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n+       163: ifne          168\n+       166: iconst_0\n+       167: ireturn\n+       168: goto          94\n+       171: iconst_1\n+       172: ireturn\n       LineNumberTable:\n         line 524: 0\n         line 525: 8\n         line 527: 10\n         line 528: 18\n         line 530: 20\n         line 531: 42\n@@ -1527,47 +1527,47 @@\n         line 537: 69\n         line 540: 71\n         line 541: 78\n         line 542: 85\n         line 543: 116\n         line 544: 125\n         line 545: 131\n-        line 547: 141\n-        line 548: 165\n-        line 550: 167\n-        line 551: 170\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          125      42    10 binarySearch   I\n-          116      51     9  path   Ljava/nio/file/Path;\n-            0     172     0 path1   Ljava/nio/file/Path;\n-            0     172     1 path2   Ljava/nio/file/Path;\n-            0     172     2 linkOptions   [Ljava/nio/file/LinkOption;\n-            0     172     3 openOptions   [Ljava/nio/file/OpenOption;\n-            0     172     4 fileVisitOption   [Ljava/nio/file/FileVisitOption;\n-           61     111     5 relativeSortedPaths   Lorg/apache/commons/io/file/PathUtils$RelativeSortedPaths;\n-           78      94     6 fileList1   Ljava/util/List;\n-           85      87     7 fileList2   Ljava/util/List;\n+        line 547: 142\n+        line 548: 166\n+        line 550: 168\n+        line 551: 171\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+          125      43    10 binarySearch   I\n+          116      52     9  path   Ljava/nio/file/Path;\n+            0     173     0 path1   Ljava/nio/file/Path;\n+            0     173     1 path2   Ljava/nio/file/Path;\n+            0     173     2 linkOptions   [Ljava/nio/file/LinkOption;\n+            0     173     3 openOptions   [Ljava/nio/file/OpenOption;\n+            0     173     4 fileVisitOption   [Ljava/nio/file/FileVisitOption;\n+           61     112     5 relativeSortedPaths   Lorg/apache/commons/io/file/PathUtils$RelativeSortedPaths;\n+           78      95     6 fileList1   Ljava/util/List;\n+           85      88     7 fileList2   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-           78      94     6 fileList1   Ljava/util/List<Ljava/nio/file/Path;>;\n-           85      87     7 fileList2   Ljava/util/List<Ljava/nio/file/Path;>;\n+           78      95     6 fileList1   Ljava/util/List<Ljava/nio/file/Path;>;\n+           85      88     7 fileList2   Ljava/util/List<Ljava/nio/file/Path;>;\n       StackMapTable: number_of_entries = 9\n         frame_type = 10 /* same */\n         frame_type = 7 /* same */\n         frame_type = 1 /* same */\n         frame_type = 23 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 26\n           locals = [ class org/apache/commons/io/file/PathUtils$RelativeSortedPaths ]\n         frame_type = 254 /* append */\n           offset_delta = 22\n           locals = [ class java/util/List, class java/util/List, class java/util/Iterator ]\n         frame_type = 253 /* append */\n-          offset_delta = 46\n+          offset_delta = 47\n           locals = [ class java/nio/file/Path, int ]\n         frame_type = 249 /* chop */\n           offset_delta = 25\n         frame_type = 250 /* chop */\n           offset_delta = 2\n     Exceptions:\n       throws java.io.IOException\n@@ -1575,18 +1575,18 @@\n   public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: ldc           #67                 // int 2147483647\n-         4: getstatic     #60                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-         7: getstatic     #62                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n-        10: invokestatic  #81                 // Method directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n+         2: ldc           #227                // int 2147483647\n+         4: getstatic     #205                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         7: getstatic     #212                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n+        10: invokestatic  #273                // Method directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n         13: ireturn\n       LineNumberTable:\n         line 564: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 path1   Ljava/nio/file/Path;\n             0      14     1 path2   Ljava/nio/file/Path;\n@@ -1594,24 +1594,24 @@\n       throws java.io.IOException\n \n   public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path, int, java.nio.file.LinkOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=8, locals=5, args_size=5\n-         0: new           #65                 // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n+         0: new           #223                // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n          3: dup\n          4: aload_0\n          5: aload_1\n          6: iload_2\n          7: aload_3\n          8: aload         4\n         10: aconst_null\n-        11: invokespecial #68                 // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n-        14: getfield      #69                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n+        11: invokespecial #228                // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n+        14: getfield      #231                // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n         17: ireturn\n       LineNumberTable:\n         line 582: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0 path1   Ljava/nio/file/Path;\n             0      18     1 path2   Ljava/nio/file/Path;\n@@ -1624,17 +1624,17 @@\n   public static boolean fileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #60                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-         5: getstatic     #61                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n-         8: invokestatic  #80                 // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n+         2: getstatic     #205                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         5: getstatic     #208                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+         8: invokestatic  #269                // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n         11: ireturn\n       LineNumberTable:\n         line 599: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 path1   Ljava/nio/file/Path;\n             0      12     1 path2   Ljava/nio/file/Path;\n@@ -1655,180 +1655,180 @@\n         10: aload_0\n         11: ifnull        18\n         14: aload_1\n         15: ifnonnull     20\n         18: iconst_0\n         19: ireturn\n         20: aload_0\n-        21: invokeinterface #82,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+        21: invokeinterface #277,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n         26: astore        4\n         28: aload_1\n-        29: invokeinterface #82,  1           // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+        29: invokeinterface #277,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n         34: astore        5\n         36: aload         4\n         38: aload_2\n-        39: invokestatic  #50                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        39: invokestatic  #165                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         42: istore        6\n         44: iload         6\n         46: aload         5\n         48: aload_2\n-        49: invokestatic  #50                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        49: invokestatic  #165                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         52: if_icmpeq     57\n         55: iconst_0\n         56: ireturn\n         57: iload         6\n         59: ifne          64\n         62: iconst_1\n         63: ireturn\n         64: aload         4\n         66: aload_2\n-        67: invokestatic  #38                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        70: ifeq          101\n-        73: new           #83                 // class java/io/IOException\n+        67: invokestatic  #132                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        70: ifeq          102\n+        73: new           #280                // class java/io/IOException\n         76: dup\n-        77: new           #84                 // class java/lang/StringBuilder\n+        77: new           #282                // class java/lang/StringBuilder\n         80: dup\n-        81: invokespecial #85                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        84: ldc           #86                 // String Can\\'t compare directories, only files:\n-        86: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        89: aload         4\n-        91: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        94: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        97: invokespecial #90                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       100: athrow\n-       101: aload         5\n-       103: aload_2\n-       104: invokestatic  #38                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-       107: ifeq          138\n-       110: new           #83                 // class java/io/IOException\n-       113: dup\n-       114: new           #84                 // class java/lang/StringBuilder\n-       117: dup\n-       118: invokespecial #85                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       121: ldc           #86                 // String Can\\'t compare directories, only files:\n-       123: invokevirtual #87                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       126: aload         5\n-       128: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       131: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       134: invokespecial #90                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       137: athrow\n-       138: aload         4\n-       140: invokestatic  #52                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-       143: aload         5\n-       145: invokestatic  #52                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-       148: lcmp\n-       149: ifeq          154\n-       152: iconst_0\n-       153: ireturn\n-       154: aload_0\n-       155: aload_1\n-       156: invokeinterface #91,  2           // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z\n-       161: ifeq          166\n-       164: iconst_1\n-       165: ireturn\n-       166: aload         4\n-       168: aload_3\n-       169: invokestatic  #92                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-       172: astore        7\n-       174: aload         5\n-       176: aload_3\n-       177: invokestatic  #92                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-       180: astore        8\n-       182: aload         7\n-       184: aload         8\n-       186: invokestatic  #93                 // Method org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n-       189: istore        9\n-       191: aload         8\n-       193: ifnull        201\n-       196: aload         8\n-       198: invokevirtual #20                 // Method java/io/InputStream.close:()V\n-       201: aload         7\n-       203: ifnull        211\n-       206: aload         7\n-       208: invokevirtual #20                 // Method java/io/InputStream.close:()V\n-       211: iload         9\n-       213: ireturn\n-       214: astore        9\n-       216: aload         8\n-       218: ifnull        238\n-       221: aload         8\n-       223: invokevirtual #20                 // Method java/io/InputStream.close:()V\n-       226: goto          238\n-       229: astore        10\n-       231: aload         9\n-       233: aload         10\n-       235: invokevirtual #22                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       238: aload         9\n-       240: athrow\n-       241: astore        8\n-       243: aload         7\n-       245: ifnull        265\n-       248: aload         7\n-       250: invokevirtual #20                 // Method java/io/InputStream.close:()V\n-       253: goto          265\n-       256: astore        9\n-       258: aload         8\n-       260: aload         9\n-       262: invokevirtual #22                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       265: aload         8\n-       267: athrow\n+        81: invokespecial #284                // Method java/lang/StringBuilder.\"<init>\":()V\n+        84: ldc_w         #286                // String Can\\'t compare directories, only files:\n+        87: invokevirtual #288                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        90: aload         4\n+        92: invokevirtual #292                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        95: invokevirtual #295                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        98: invokespecial #296                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       101: athrow\n+       102: aload         5\n+       104: aload_2\n+       105: invokestatic  #132                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+       108: ifeq          140\n+       111: new           #280                // class java/io/IOException\n+       114: dup\n+       115: new           #282                // class java/lang/StringBuilder\n+       118: dup\n+       119: invokespecial #284                // Method java/lang/StringBuilder.\"<init>\":()V\n+       122: ldc_w         #286                // String Can\\'t compare directories, only files:\n+       125: invokevirtual #288                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       128: aload         5\n+       130: invokevirtual #292                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       133: invokevirtual #295                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       136: invokespecial #296                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       139: athrow\n+       140: aload         4\n+       142: invokestatic  #172                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+       145: aload         5\n+       147: invokestatic  #172                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+       150: lcmp\n+       151: ifeq          156\n+       154: iconst_0\n+       155: ireturn\n+       156: aload_0\n+       157: aload_1\n+       158: invokeinterface #297,  2          // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z\n+       163: ifeq          168\n+       166: iconst_1\n+       167: ireturn\n+       168: aload         4\n+       170: aload_3\n+       171: invokestatic  #300                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+       174: astore        7\n+       176: aload         5\n+       178: aload_3\n+       179: invokestatic  #300                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+       182: astore        8\n+       184: aload         7\n+       186: aload         8\n+       188: invokestatic  #304                // Method org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n+       191: istore        9\n+       193: aload         8\n+       195: ifnull        203\n+       198: aload         8\n+       200: invokevirtual #73                 // Method java/io/InputStream.close:()V\n+       203: aload         7\n+       205: ifnull        213\n+       208: aload         7\n+       210: invokevirtual #73                 // Method java/io/InputStream.close:()V\n+       213: iload         9\n+       215: ireturn\n+       216: astore        9\n+       218: aload         8\n+       220: ifnull        240\n+       223: aload         8\n+       225: invokevirtual #73                 // Method java/io/InputStream.close:()V\n+       228: goto          240\n+       231: astore        10\n+       233: aload         9\n+       235: aload         10\n+       237: invokevirtual #81                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       240: aload         9\n+       242: athrow\n+       243: astore        8\n+       245: aload         7\n+       247: ifnull        267\n+       250: aload         7\n+       252: invokevirtual #73                 // Method java/io/InputStream.close:()V\n+       255: goto          267\n+       258: astore        9\n+       260: aload         8\n+       262: aload         9\n+       264: invokevirtual #81                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       267: aload         8\n+       269: athrow\n       Exception table:\n          from    to  target type\n-           182   191   214   Class java/lang/Throwable\n-           221   226   229   Class java/lang/Throwable\n-           174   201   241   Class java/lang/Throwable\n-           214   241   241   Class java/lang/Throwable\n-           248   253   256   Class java/lang/Throwable\n+           184   193   216   Class java/lang/Throwable\n+           223   228   231   Class java/lang/Throwable\n+           176   203   243   Class java/lang/Throwable\n+           216   243   243   Class java/lang/Throwable\n+           250   255   258   Class java/lang/Throwable\n       LineNumberTable:\n         line 619: 0\n         line 620: 8\n         line 622: 10\n         line 623: 18\n         line 625: 20\n         line 626: 28\n         line 627: 36\n         line 628: 44\n         line 629: 55\n         line 631: 57\n         line 634: 62\n         line 636: 64\n         line 638: 73\n-        line 640: 101\n-        line 642: 110\n-        line 644: 138\n-        line 646: 152\n-        line 648: 154\n-        line 650: 164\n-        line 652: 166\n-        line 653: 174\n-        line 654: 182\n-        line 655: 191\n-        line 654: 211\n-        line 652: 214\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          182      59     8 inputStream2   Ljava/io/InputStream;\n-          174      94     7 inputStream1   Ljava/io/InputStream;\n-            0     268     0 path1   Ljava/nio/file/Path;\n-            0     268     1 path2   Ljava/nio/file/Path;\n-            0     268     2 linkOptions   [Ljava/nio/file/LinkOption;\n-            0     268     3 openOptions   [Ljava/nio/file/OpenOption;\n-           28     240     4 nPath1   Ljava/nio/file/Path;\n-           36     232     5 nPath2   Ljava/nio/file/Path;\n-           44     224     6 path1Exists   Z\n+        line 640: 102\n+        line 642: 111\n+        line 644: 140\n+        line 646: 154\n+        line 648: 156\n+        line 650: 166\n+        line 652: 168\n+        line 653: 176\n+        line 654: 184\n+        line 655: 193\n+        line 654: 213\n+        line 652: 216\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+          184      59     8 inputStream2   Ljava/io/InputStream;\n+          176      94     7 inputStream1   Ljava/io/InputStream;\n+            0     270     0 path1   Ljava/nio/file/Path;\n+            0     270     1 path2   Ljava/nio/file/Path;\n+            0     270     2 linkOptions   [Ljava/nio/file/LinkOption;\n+            0     270     3 openOptions   [Ljava/nio/file/OpenOption;\n+           28     242     4 nPath1   Ljava/nio/file/Path;\n+           36     234     5 nPath2   Ljava/nio/file/Path;\n+           44     226     6 path1Exists   Z\n       StackMapTable: number_of_entries = 17\n         frame_type = 10 /* same */\n         frame_type = 7 /* same */\n         frame_type = 1 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 36\n           locals = [ class java/nio/file/Path, class java/nio/file/Path, int ]\n         frame_type = 6 /* same */\n-        frame_type = 36 /* same */\n-        frame_type = 36 /* same */\n+        frame_type = 37 /* same */\n+        frame_type = 37 /* same */\n         frame_type = 15 /* same */\n         frame_type = 11 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 34\n           locals = [ class java/io/InputStream, class java/io/InputStream, int ]\n         frame_type = 9 /* same */\n         frame_type = 255 /* full_frame */\n@@ -1854,136 +1854,136 @@\n \n   public static java.nio.file.Path[] filter(org.apache.commons.io.file.PathFilter, java.nio.file.Path...);\n     descriptor: (Lorg/apache/commons/io/file/PathFilter;[Ljava/nio/file/Path;)[Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #94                 // String filter\n-         3: invokestatic  #95                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: pop\n-         7: aload_1\n-         8: ifnonnull     15\n-        11: getstatic     #96                 // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n-        14: areturn\n-        15: aload_0\n-        16: aload_1\n-        17: invokestatic  #97                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-        20: invokestatic  #98                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n-        23: invokestatic  #99                 // Method filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n-        26: checkcast     #100                // class java/util/List\n-        29: getstatic     #96                 // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n-        32: invokeinterface #101,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        37: checkcast     #102                // class \"[Ljava/nio/file/Path;\"\n-        40: areturn\n+         1: ldc_w         #310                // String filter\n+         4: invokestatic  #312                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: pop\n+         8: aload_1\n+         9: ifnonnull     16\n+        12: getstatic     #318                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n+        15: areturn\n+        16: aload_0\n+        17: aload_1\n+        18: invokestatic  #322                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+        21: invokestatic  #328                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n+        24: invokestatic  #334                // Method filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n+        27: checkcast     #243                // class java/util/List\n+        30: getstatic     #318                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n+        33: invokeinterface #338,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        38: checkcast     #342                // class \"[Ljava/nio/file/Path;\"\n+        41: areturn\n       LineNumberTable:\n         line 684: 0\n-        line 685: 7\n-        line 686: 11\n-        line 688: 15\n+        line 685: 8\n+        line 686: 12\n+        line 688: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      41     0 filter   Lorg/apache/commons/io/file/PathFilter;\n-            0      41     1 paths   [Ljava/nio/file/Path;\n+            0      42     0 filter   Lorg/apache/commons/io/file/PathFilter;\n+            0      42     1 paths   [Ljava/nio/file/Path;\n       StackMapTable: number_of_entries = 1\n-        frame_type = 15 /* same */\n+        frame_type = 16 /* same */\n \n   private static <R extends java.lang.Object, A extends java.lang.Object> R filterPaths(org.apache.commons.io.file.PathFilter, java.util.stream.Stream<java.nio.file.Path>, java.util.stream.Collector<? super java.nio.file.Path, A, R>);\n     descriptor: (Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: ldc           #94                 // String filter\n-         3: invokestatic  #95                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: pop\n-         7: aload_2\n-         8: ldc           #103                // String collector\n-        10: invokestatic  #95                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        13: pop\n-        14: aload_1\n-        15: ifnonnull     28\n-        18: invokestatic  #104                // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;\n-        21: aload_2\n-        22: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-        27: areturn\n-        28: aload_1\n-        29: aload_0\n-        30: invokedynamic #106,  0            // InvokeDynamic #0:test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n-        35: invokeinterface #107,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-        40: aload_2\n-        41: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-        46: areturn\n+         1: ldc_w         #310                // String filter\n+         4: invokestatic  #312                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: pop\n+         8: aload_2\n+         9: ldc_w         #343                // String collector\n+        12: invokestatic  #312                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        15: pop\n+        16: aload_1\n+        17: ifnonnull     30\n+        20: invokestatic  #345                // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;\n+        23: aload_2\n+        24: invokeinterface #351,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+        29: areturn\n+        30: aload_1\n+        31: aload_0\n+        32: invokedynamic #355,  0            // InvokeDynamic #0:test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n+        37: invokeinterface #359,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+        42: aload_2\n+        43: invokeinterface #351,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+        48: areturn\n       LineNumberTable:\n         line 693: 0\n-        line 694: 7\n-        line 695: 14\n-        line 696: 18\n-        line 698: 28\n-        line 704: 41\n-        line 698: 46\n+        line 694: 8\n+        line 695: 16\n+        line 696: 20\n+        line 698: 30\n+        line 704: 43\n+        line 698: 48\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      47     0 filter   Lorg/apache/commons/io/file/PathFilter;\n-            0      47     1 stream   Ljava/util/stream/Stream;\n-            0      47     2 collector   Ljava/util/stream/Collector;\n+            0      49     0 filter   Lorg/apache/commons/io/file/PathFilter;\n+            0      49     1 stream   Ljava/util/stream/Stream;\n+            0      49     2 collector   Ljava/util/stream/Collector;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-            0      47     1 stream   Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n-            0      47     2 collector   Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;\n+            0      49     1 stream   Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n+            0      49     2 collector   Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;\n       StackMapTable: number_of_entries = 1\n-        frame_type = 28 /* same */\n-    Signature: #288                         // <R:Ljava/lang/Object;A:Ljava/lang/Object;>(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream<Ljava/nio/file/Path;>;Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;)TR;\n+        frame_type = 30 /* same */\n+    Signature: #634                         // <R:Ljava/lang/Object;A:Ljava/lang/Object;>(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream<Ljava/nio/file/Path;>;Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;)TR;\n \n   public static java.util.List<java.nio.file.attribute.AclEntry> getAclEntryList(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: ldc           #108                // class java/nio/file/attribute/AclFileAttributeView\n-         3: iconst_0\n-         4: anewarray     #36                 // class java/nio/file/LinkOption\n-         7: invokestatic  #109                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-        10: checkcast     #108                // class java/nio/file/attribute/AclFileAttributeView\n-        13: astore_1\n-        14: aload_1\n-        15: ifnonnull     22\n-        18: aconst_null\n-        19: goto          28\n-        22: aload_1\n-        23: invokeinterface #110,  1          // InterfaceMethod java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;\n-        28: areturn\n+         1: ldc_w         #362                // class java/nio/file/attribute/AclFileAttributeView\n+         4: iconst_0\n+         5: anewarray     #126                // class java/nio/file/LinkOption\n+         8: invokestatic  #364                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+        11: checkcast     #362                // class java/nio/file/attribute/AclFileAttributeView\n+        14: astore_1\n+        15: aload_1\n+        16: ifnonnull     23\n+        19: aconst_null\n+        20: goto          29\n+        23: aload_1\n+        24: invokeinterface #368,  1          // InterfaceMethod java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;\n+        29: areturn\n       LineNumberTable:\n         line 716: 0\n-        line 718: 14\n+        line 718: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      29     0 sourcePath   Ljava/nio/file/Path;\n-           14      15     1 fileAttributeView   Ljava/nio/file/attribute/AclFileAttributeView;\n+            0      30     0 sourcePath   Ljava/nio/file/Path;\n+           15      15     1 fileAttributeView   Ljava/nio/file/attribute/AclFileAttributeView;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n-          offset_delta = 22\n+          offset_delta = 23\n           locals = [ class java/nio/file/attribute/AclFileAttributeView ]\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/util/List ]\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #294                         // (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/attribute/AclEntry;>;\n+    Signature: #640                         // (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/attribute/AclEntry;>;\n \n   public static boolean isDirectory(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: ifnull        16\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #38                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         6: invokestatic  #132                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          9: ifeq          16\n         12: iconst_1\n         13: goto          17\n         16: iconst_0\n         17: ireturn\n       LineNumberTable:\n         line 736: 0\n@@ -1999,22 +1999,22 @@\n   public static boolean isEmpty(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: anewarray     #36                 // class java/nio/file/LinkOption\n-         5: invokestatic  #38                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #126                // class java/nio/file/LinkOption\n+         5: invokestatic  #132                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          18\n         11: aload_0\n-        12: invokestatic  #111                // Method isEmptyDirectory:(Ljava/nio/file/Path;)Z\n+        12: invokestatic  #372                // Method isEmptyDirectory:(Ljava/nio/file/Path;)Z\n         15: goto          22\n         18: aload_0\n-        19: invokestatic  #112                // Method isEmptyFile:(Ljava/nio/file/Path;)Z\n+        19: invokestatic  #375                // Method isEmptyFile:(Ljava/nio/file/Path;)Z\n         22: ireturn\n       LineNumberTable:\n         line 747: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  path   Ljava/nio/file/Path;\n       StackMapTable: number_of_entries = 2\n@@ -2026,40 +2026,40 @@\n \n   public static boolean isEmptyDirectory(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=4, args_size=1\n          0: aload_0\n-         1: invokestatic  #113                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+         1: invokestatic  #378                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n          4: astore_1\n          5: aload_1\n-         6: invokeinterface #114,  1          // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n-        11: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+         6: invokeinterface #382,  1          // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n+        11: invokeinterface #248,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         16: ifne          23\n         19: iconst_1\n         20: goto          24\n         23: iconst_0\n         24: istore_2\n         25: aload_1\n         26: ifnull        35\n         29: aload_1\n-        30: invokeinterface #115,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n+        30: invokeinterface #385,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n         35: iload_2\n         36: ireturn\n         37: astore_2\n         38: aload_1\n         39: ifnull        57\n         42: aload_1\n-        43: invokeinterface #115,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n+        43: invokeinterface #385,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n         48: goto          57\n         51: astore_3\n         52: aload_2\n         53: aload_3\n-        54: invokevirtual #22                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        54: invokevirtual #81                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         57: aload_2\n         58: athrow\n       Exception table:\n          from    to  target type\n              5    25    37   Class java/lang/Throwable\n             42    48    51   Class java/lang/Throwable\n       LineNumberTable:\n@@ -2098,15 +2098,15 @@\n \n   public static boolean isEmptyFile(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #52                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+         1: invokestatic  #172                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n          4: lconst_0\n          5: lcmp\n          6: ifgt          13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n@@ -2124,47 +2124,47 @@\n \n   public static boolean isNewer(java.nio.file.Path, long, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;J[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_0\n-         1: ldc           #116                // String file\n-         3: invokestatic  #95                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: pop\n-         7: aload_0\n-         8: iconst_0\n-         9: anewarray     #36                 // class java/nio/file/LinkOption\n-        12: invokestatic  #64                 // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        15: ifeq          20\n-        18: iconst_0\n-        19: ireturn\n-        20: aload_0\n-        21: aload_3\n-        22: invokestatic  #117                // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-        25: invokevirtual #118                // Method java/nio/file/attribute/FileTime.toMillis:()J\n-        28: lload_1\n-        29: lcmp\n-        30: ifle          37\n-        33: iconst_1\n-        34: goto          38\n-        37: iconst_0\n-        38: ireturn\n+         1: ldc_w         #386                // String file\n+         4: invokestatic  #312                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: pop\n+         8: aload_0\n+         9: iconst_0\n+        10: anewarray     #126                // class java/nio/file/LinkOption\n+        13: invokestatic  #220                // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        16: ifeq          21\n+        19: iconst_0\n+        20: ireturn\n+        21: aload_0\n+        22: aload_3\n+        23: invokestatic  #388                // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+        26: invokevirtual #392                // Method java/nio/file/attribute/FileTime.toMillis:()J\n+        29: lload_1\n+        30: lcmp\n+        31: ifle          38\n+        34: iconst_1\n+        35: goto          39\n+        38: iconst_0\n+        39: ireturn\n       LineNumberTable:\n         line 796: 0\n-        line 797: 7\n-        line 798: 18\n-        line 800: 20\n+        line 797: 8\n+        line 798: 19\n+        line 800: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      39     0  file   Ljava/nio/file/Path;\n-            0      39     1 timeMillis   J\n-            0      39     3 options   [Ljava/nio/file/LinkOption;\n+            0      40     0  file   Ljava/nio/file/Path;\n+            0      40     1 timeMillis   J\n+            0      40     3 options   [Ljava/nio/file/LinkOption;\n       StackMapTable: number_of_entries = 3\n-        frame_type = 20 /* same */\n+        frame_type = 21 /* same */\n         frame_type = 16 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n     Exceptions:\n       throws java.io.IOException\n \n   public static boolean isRegularFile(java.nio.file.Path, java.nio.file.LinkOption...);\n@@ -2172,15 +2172,15 @@\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: ifnull        16\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #119                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         6: invokestatic  #398                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          9: ifeq          16\n         12: iconst_1\n         13: goto          17\n         16: iconst_0\n         17: ireturn\n       LineNumberTable:\n         line 818: 0\n@@ -2195,29 +2195,29 @@\n \n   public static java.nio.file.DirectoryStream<java.nio.file.Path> newDirectoryStream(java.nio.file.Path, org.apache.commons.io.file.PathFilter) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: new           #120                // class org/apache/commons/io/file/DirectoryStreamFilter\n+         1: new           #401                // class org/apache/commons/io/file/DirectoryStreamFilter\n          4: dup\n          5: aload_1\n-         6: invokespecial #121                // Method org/apache/commons/io/file/DirectoryStreamFilter.\"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n-         9: invokestatic  #122                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n+         6: invokespecial #403                // Method org/apache/commons/io/file/DirectoryStreamFilter.\"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n+         9: invokestatic  #406                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n         12: areturn\n       LineNumberTable:\n         line 831: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0   dir   Ljava/nio/file/Path;\n             0      13     1 pathFilter   Lorg/apache/commons/io/file/PathFilter;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #314                         // (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n+    Signature: #651                         // (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n \n   private static boolean overrideReadOnly(org.apache.commons.io.file.DeleteOption...);\n     descriptor: ([Lorg/apache/commons/io/file/DeleteOption;)Z\n     flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=5, args_size=1\n          0: aload_0\n@@ -2235,15 +2235,15 @@\n         14: iload_2\n         15: if_icmpge     39\n         18: aload_1\n         19: iload_3\n         20: aaload\n         21: astore        4\n         23: aload         4\n-        25: getstatic     #123                // Field org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n+        25: getstatic     #409                // Field org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n         28: if_acmpne     33\n         31: iconst_1\n         32: ireturn\n         33: iinc          3, 1\n         36: goto          13\n         39: iconst_0\n         40: ireturn\n@@ -2270,40 +2270,40 @@\n \n   public static java.nio.file.attribute.BasicFileAttributes readBasicFileAttributes(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #124                // class java/nio/file/attribute/BasicFileAttributes\n-         3: iconst_0\n-         4: anewarray     #36                 // class java/nio/file/LinkOption\n-         7: invokestatic  #125                // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-        10: areturn\n+         1: ldc_w         #415                // class java/nio/file/attribute/BasicFileAttributes\n+         4: iconst_0\n+         5: anewarray     #126                // class java/nio/file/LinkOption\n+         8: invokestatic  #417                // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        11: areturn\n       LineNumberTable:\n         line 861: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      11     0  path   Ljava/nio/file/Path;\n+            0      12     0  path   Ljava/nio/file/Path;\n     Exceptions:\n       throws java.io.IOException\n \n   public static java.nio.file.attribute.BasicFileAttributes readBasicFileAttributesUnchecked(java.nio.file.Path);\n     descriptor: (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #126                // Method readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+         1: invokestatic  #421                // Method readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n          4: areturn\n          5: astore_1\n-         6: new           #127                // class java/io/UncheckedIOException\n+         6: new           #425                // class java/io/UncheckedIOException\n          9: dup\n         10: aload_1\n-        11: invokespecial #128                // Method java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n+        11: invokespecial #427                // Method java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n         14: athrow\n       Exception table:\n          from    to  target type\n              0     4     5   Class java/io/IOException\n       LineNumberTable:\n         line 875: 0\n         line 876: 5\n@@ -2318,37 +2318,37 @@\n \n   static java.util.List<java.nio.file.Path> relativize(java.util.Collection<java.nio.file.Path>, java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);\n     descriptor: (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=4\n          0: aload_0\n-         1: invokeinterface #129,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;\n+         1: invokeinterface #430,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;\n          6: aload_1\n          7: dup\n-         8: invokestatic  #130                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         8: invokestatic  #434                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n         11: pop\n-        12: invokedynamic #131,  0            // InvokeDynamic #1:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n-        17: invokeinterface #132,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+        12: invokedynamic #437,  0            // InvokeDynamic #1:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n+        17: invokeinterface #441,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n         22: astore        4\n         24: iload_2\n         25: ifeq          52\n         28: aload_3\n         29: ifnonnull     42\n         32: aload         4\n-        34: invokeinterface #133,  1          // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;\n+        34: invokeinterface #445,  1          // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;\n         39: goto          50\n         42: aload         4\n         44: aload_3\n-        45: invokeinterface #134,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+        45: invokeinterface #448,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n         50: astore        4\n         52: aload         4\n-        54: invokestatic  #98                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n-        57: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-        62: checkcast     #100                // class java/util/List\n+        54: invokestatic  #328                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n+        57: invokeinterface #351,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+        62: checkcast     #243                // class java/util/List\n         65: areturn\n       LineNumberTable:\n         line 892: 0\n         line 893: 24\n         line 894: 28\n         line 896: 52\n       LocalVariableTable:\n@@ -2366,202 +2366,202 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 42\n           locals = [ class java/util/stream/Stream ]\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/util/stream/Stream ]\n         frame_type = 1 /* same */\n-    Signature: #335                         // (Ljava/util/Collection<Ljava/nio/file/Path;>;Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #666                         // (Ljava/util/Collection<Ljava/nio/file/Path;>;Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public static java.nio.file.Path setReadOnly(java.nio.file.Path, boolean, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=7, locals=9, args_size=3\n-         0: new           #135                // class java/util/ArrayList\n+         0: new           #451                // class java/util/ArrayList\n          3: dup\n          4: iconst_2\n-         5: invokespecial #136                // Method java/util/ArrayList.\"<init>\":(I)V\n+         5: invokespecial #453                // Method java/util/ArrayList.\"<init>\":(I)V\n          8: astore_3\n          9: aload_0\n-        10: ldc           #137                // class java/nio/file/attribute/DosFileAttributeView\n-        12: aload_2\n-        13: invokestatic  #109                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-        16: checkcast     #137                // class java/nio/file/attribute/DosFileAttributeView\n-        19: astore        4\n-        21: aload         4\n-        23: ifnull        47\n-        26: aload         4\n-        28: iload_1\n-        29: invokeinterface #138,  2          // InterfaceMethod java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V\n-        34: aload_0\n-        35: areturn\n-        36: astore        5\n-        38: aload_3\n-        39: aload         5\n-        41: invokeinterface #139,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n-        46: pop\n-        47: aload_0\n-        48: ldc           #140                // class java/nio/file/attribute/PosixFileAttributeView\n-        50: aload_2\n-        51: invokestatic  #109                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-        54: checkcast     #140                // class java/nio/file/attribute/PosixFileAttributeView\n-        57: astore        5\n-        59: aload         5\n-        61: ifnull        133\n-        64: aload         5\n-        66: invokeinterface #141,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributeView.readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;\n-        71: astore        6\n-        73: aload         6\n-        75: invokeinterface #142,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n-        80: astore        7\n-        82: aload         7\n-        84: getstatic     #143                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n-        87: invokeinterface #144,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z\n-        92: pop\n-        93: aload         7\n-        95: getstatic     #145                // Field java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n-        98: invokeinterface #144,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z\n-       103: pop\n-       104: aload         7\n-       106: getstatic     #146                // Field java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n-       109: invokeinterface #144,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z\n-       114: pop\n-       115: aload_0\n-       116: aload         7\n-       118: invokestatic  #147                // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n-       121: areturn\n-       122: astore        8\n-       124: aload_3\n-       125: aload         8\n-       127: invokeinterface #139,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n-       132: pop\n-       133: aload_3\n-       134: invokeinterface #148,  1          // InterfaceMethod java/util/List.isEmpty:()Z\n-       139: ifne          157\n-       142: new           #149                // class org/apache/commons/io/IOExceptionList\n-       145: dup\n-       146: aload_0\n-       147: invokeinterface #48,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n-       152: aload_3\n-       153: invokespecial #150                // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-       156: athrow\n-       157: new           #83                 // class java/io/IOException\n-       160: dup\n-       161: ldc           #151                // String No DosFileAttributeView or PosixFileAttributeView for \\'%s\\' (linkOptions=%s)\n-       163: iconst_2\n-       164: anewarray     #152                // class java/lang/Object\n-       167: dup\n-       168: iconst_0\n-       169: aload_0\n-       170: aastore\n-       171: dup\n-       172: iconst_1\n-       173: aload_2\n-       174: invokestatic  #153                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       177: aastore\n-       178: invokestatic  #154                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-       181: invokespecial #90                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       184: athrow\n+        10: ldc_w         #456                // class java/nio/file/attribute/DosFileAttributeView\n+        13: aload_2\n+        14: invokestatic  #364                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+        17: checkcast     #456                // class java/nio/file/attribute/DosFileAttributeView\n+        20: astore        4\n+        22: aload         4\n+        24: ifnull        48\n+        27: aload         4\n+        29: iload_1\n+        30: invokeinterface #458,  2          // InterfaceMethod java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V\n+        35: aload_0\n+        36: areturn\n+        37: astore        5\n+        39: aload_3\n+        40: aload         5\n+        42: invokeinterface #461,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        47: pop\n+        48: aload_0\n+        49: ldc_w         #463                // class java/nio/file/attribute/PosixFileAttributeView\n+        52: aload_2\n+        53: invokestatic  #364                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+        56: checkcast     #463                // class java/nio/file/attribute/PosixFileAttributeView\n+        59: astore        5\n+        61: aload         5\n+        63: ifnull        135\n+        66: aload         5\n+        68: invokeinterface #465,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributeView.readAttributes:()Ljava/nio/file/attribute/PosixFileAttributes;\n+        73: astore        6\n+        75: aload         6\n+        77: invokeinterface #468,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n+        82: astore        7\n+        84: aload         7\n+        86: getstatic     #474                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+        89: invokeinterface #480,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z\n+        94: pop\n+        95: aload         7\n+        97: getstatic     #485                // Field java/nio/file/attribute/PosixFilePermission.GROUP_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+       100: invokeinterface #480,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z\n+       105: pop\n+       106: aload         7\n+       108: getstatic     #488                // Field java/nio/file/attribute/PosixFilePermission.OTHERS_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+       111: invokeinterface #480,  2          // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z\n+       116: pop\n+       117: aload_0\n+       118: aload         7\n+       120: invokestatic  #491                // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+       123: areturn\n+       124: astore        8\n+       126: aload_3\n+       127: aload         8\n+       129: invokeinterface #461,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       134: pop\n+       135: aload_3\n+       136: invokeinterface #495,  1          // InterfaceMethod java/util/List.isEmpty:()Z\n+       141: ifne          159\n+       144: new           #498                // class org/apache/commons/io/IOExceptionList\n+       147: dup\n+       148: aload_0\n+       149: invokeinterface #159,  1          // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n+       154: aload_3\n+       155: invokespecial #500                // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+       158: athrow\n+       159: new           #280                // class java/io/IOException\n+       162: dup\n+       163: ldc_w         #503                // String No DosFileAttributeView or PosixFileAttributeView for \\'%s\\' (linkOptions=%s)\n+       166: iconst_2\n+       167: anewarray     #505                // class java/lang/Object\n+       170: dup\n+       171: iconst_0\n+       172: aload_0\n+       173: aastore\n+       174: dup\n+       175: iconst_1\n+       176: aload_2\n+       177: invokestatic  #507                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       180: aastore\n+       181: invokestatic  #510                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+       184: invokespecial #296                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       187: athrow\n       Exception table:\n          from    to  target type\n-            26    35    36   Class java/io/IOException\n-           115   121   122   Class java/io/IOException\n+            27    36    37   Class java/io/IOException\n+           117   123   124   Class java/io/IOException\n       LineNumberTable:\n         line 914: 0\n         line 915: 9\n-        line 917: 21\n-        line 919: 26\n-        line 920: 34\n-        line 921: 36\n-        line 923: 38\n-        line 926: 47\n-        line 928: 59\n-        line 932: 64\n-        line 933: 73\n-        line 934: 82\n-        line 935: 93\n-        line 936: 104\n-        line 938: 115\n-        line 939: 122\n-        line 940: 124\n-        line 943: 133\n-        line 944: 142\n-        line 946: 157\n-        line 948: 174\n-        line 947: 178\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-           38       9     5     e   Ljava/io/IOException;\n-          124       9     8     e   Ljava/io/IOException;\n-           73      60     6 readAttributes   Ljava/nio/file/attribute/PosixFileAttributes;\n-           82      51     7 permissions   Ljava/util/Set;\n-            0     185     0  path   Ljava/nio/file/Path;\n-            0     185     1 readOnly   Z\n-            0     185     2 linkOptions   [Ljava/nio/file/LinkOption;\n-            9     176     3 causeList   Ljava/util/List;\n-           21     164     4 fileAttributeView   Ljava/nio/file/attribute/DosFileAttributeView;\n-           59     126     5 posixFileAttributeView   Ljava/nio/file/attribute/PosixFileAttributeView;\n+        line 917: 22\n+        line 919: 27\n+        line 920: 35\n+        line 921: 37\n+        line 923: 39\n+        line 926: 48\n+        line 928: 61\n+        line 932: 66\n+        line 933: 75\n+        line 934: 84\n+        line 935: 95\n+        line 936: 106\n+        line 938: 117\n+        line 939: 124\n+        line 940: 126\n+        line 943: 135\n+        line 944: 144\n+        line 946: 159\n+        line 948: 177\n+        line 947: 181\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+           39       9     5     e   Ljava/io/IOException;\n+          126       9     8     e   Ljava/io/IOException;\n+           75      60     6 readAttributes   Ljava/nio/file/attribute/PosixFileAttributes;\n+           84      51     7 permissions   Ljava/util/Set;\n+            0     188     0  path   Ljava/nio/file/Path;\n+            0     188     1 readOnly   Z\n+            0     188     2 linkOptions   [Ljava/nio/file/LinkOption;\n+            9     179     3 causeList   Ljava/util/List;\n+           22     166     4 fileAttributeView   Ljava/nio/file/attribute/DosFileAttributeView;\n+           61     127     5 posixFileAttributeView   Ljava/nio/file/attribute/PosixFileAttributeView;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-           82      51     7 permissions   Ljava/util/Set<Ljava/nio/file/attribute/PosixFilePermission;>;\n-            9     176     3 causeList   Ljava/util/List<Ljava/lang/Exception;>;\n+           84      51     7 permissions   Ljava/util/Set<Ljava/nio/file/attribute/PosixFilePermission;>;\n+            9     179     3 causeList   Ljava/util/List<Ljava/lang/Exception;>;\n       StackMapTable: number_of_entries = 5\n         frame_type = 255 /* full_frame */\n-          offset_delta = 36\n+          offset_delta = 37\n           locals = [ class java/nio/file/Path, int, class \"[Ljava/nio/file/LinkOption;\", class java/util/List, class java/nio/file/attribute/DosFileAttributeView ]\n           stack = [ class java/io/IOException ]\n         frame_type = 10 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 74\n+          offset_delta = 75\n           locals = [ class java/nio/file/Path, int, class \"[Ljava/nio/file/LinkOption;\", class java/util/List, class java/nio/file/attribute/DosFileAttributeView, class java/nio/file/attribute/PosixFileAttributeView, class java/nio/file/attribute/PosixFileAttributes, class java/util/Set ]\n           stack = [ class java/io/IOException ]\n         frame_type = 249 /* chop */\n           offset_delta = 10\n         frame_type = 23 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   static java.util.Set<java.nio.file.FileVisitOption> toFileVisitOptionSet(java.nio.file.FileVisitOption...);\n     descriptor: ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n     flags: (0x0088) ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: ifnonnull     12\n-         4: ldc           #155                // class java/nio/file/FileVisitOption\n-         6: invokestatic  #156                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n-         9: goto          27\n-        12: aload_0\n-        13: invokestatic  #97                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-        16: invokestatic  #157                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;\n-        19: invokeinterface #105,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-        24: checkcast     #158                // class java/util/Set\n-        27: areturn\n+         1: ifnonnull     13\n+         4: ldc_w         #514                // class java/nio/file/FileVisitOption\n+         7: invokestatic  #516                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n+        10: goto          28\n+        13: aload_0\n+        14: invokestatic  #322                // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+        17: invokestatic  #522                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;\n+        20: invokeinterface #351,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+        25: checkcast     #481                // class java/util/Set\n+        28: areturn\n       LineNumberTable:\n         line 958: 0\n-        line 959: 12\n-        line 958: 27\n+        line 959: 13\n+        line 958: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      28     0 fileVisitOptions   [Ljava/nio/file/FileVisitOption;\n+            0      29     0 fileVisitOptions   [Ljava/nio/file/FileVisitOption;\n       StackMapTable: number_of_entries = 2\n-        frame_type = 12 /* same */\n+        frame_type = 13 /* same */\n         frame_type = 78 /* same_locals_1_stack_item */\n           stack = [ class java/util/Set ]\n-    Signature: #352                         // ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n+    Signature: #676                         // ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n \n   public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokestatic  #159                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+         2: invokestatic  #525                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n          5: pop\n          6: aload_0\n          7: areturn\n       LineNumberTable:\n         line 976: 0\n         line 977: 6\n       LocalVariableTable:\n@@ -2569,26 +2569,26 @@\n             0       8     0 visitor   Ljava/nio/file/FileVisitor;\n             0       8     1 directory   Ljava/nio/file/Path;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 visitor   TT;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #358                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;)TT;\n+    Signature: #680                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;)TT;\n \n   public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path, java.util.Set<java.nio.file.FileVisitOption>, int) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_1\n          1: aload_2\n          2: iload_3\n          3: aload_0\n-         4: invokestatic  #160                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+         4: invokestatic  #529                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n          7: pop\n          8: aload_0\n          9: areturn\n       LineNumberTable:\n         line 996: 0\n         line 997: 8\n       LocalVariableTable:\n@@ -2599,98 +2599,98 @@\n             0      10     3 maxDepth   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 visitor   TT;\n             0      10     2 options   Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #362                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;I)TT;\n+    Signature: #683                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;I)TT;\n \n   public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.lang.String, java.lang.String...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/FileVisitor;Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/FileVisitor;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #34                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-         6: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+         3: invokestatic  #117                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+         6: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n          9: areturn\n       LineNumberTable:\n         line 1015: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 visitor   Ljava/nio/file/FileVisitor;\n             0      10     1 first   Ljava/lang/String;\n             0      10     2  more   [Ljava/lang/String;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 visitor   TT;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #368                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/lang/String;[Ljava/lang/String;)TT;\n+    Signature: #689                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/lang/String;[Ljava/lang/String;)TT;\n \n   public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.net.URI) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/FileVisitor;Ljava/net/URI;)Ljava/nio/file/FileVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #161                // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;\n-         5: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+         2: invokestatic  #532                // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;\n+         5: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n          8: areturn\n       LineNumberTable:\n         line 1032: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 visitor   Ljava/nio/file/FileVisitor;\n             0       9     1   uri   Ljava/net/URI;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 visitor   TT;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #372                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/net/URI;)TT;\n+    Signature: #693                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/net/URI;)TT;\n \n   public static java.util.stream.Stream<java.nio.file.Path> walk(java.nio.file.Path, org.apache.commons.io.file.PathFilter, int, boolean, java.nio.file.FileVisitOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=5, args_size=5\n          0: aload_0\n          1: iload_2\n          2: aload         4\n-         4: invokestatic  #162                // Method java/nio/file/Files.walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n+         4: invokestatic  #535                // Method java/nio/file/Files.walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n          7: aload_1\n          8: iload_3\n-         9: invokedynamic #163,  0            // InvokeDynamic #2:test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n-        14: invokeinterface #107,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+         9: invokedynamic #539,  0            // InvokeDynamic #2:test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n+        14: invokeinterface #359,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n         19: areturn\n       LineNumberTable:\n         line 1049: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0 start   Ljava/nio/file/Path;\n             0      20     1 pathFilter   Lorg/apache/commons/io/file/PathFilter;\n             0      20     2 maxDepth   I\n             0      20     3 readAttributes   Z\n             0      20     4 options   [Ljava/nio/file/FileVisitOption;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #375                         // (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n+    Signature: #695                         // (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n \n   private org.apache.commons.io.file.PathUtils();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #164                // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #542                // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 1056: 0\n         line 1058: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/PathUtils;\n@@ -2701,19 +2701,19 @@\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n          2: iload_1\n          3: ifeq          13\n          6: aload_2\n-         7: invokestatic  #165                // Method readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+         7: invokestatic  #543                // Method readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n         10: goto          14\n         13: aconst_null\n-        14: invokeinterface #166,  3          // InterfaceMethod org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        19: getstatic     #167                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        14: invokeinterface #546,  3          // InterfaceMethod org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        19: getstatic     #552                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         22: if_acmpne     29\n         25: iconst_1\n         26: goto          30\n         29: iconst_0\n         30: ireturn\n       LineNumberTable:\n         line 1049: 0\n@@ -2743,17 +2743,17 @@\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n          1: ifnull        25\n          4: aload_0\n          5: aload_1\n          6: aload_1\n-         7: invokestatic  #126                // Method readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-        10: invokeinterface #166,  3          // InterfaceMethod org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        15: getstatic     #167                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+         7: invokestatic  #421                // Method readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        10: invokeinterface #546,  3          // InterfaceMethod org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        15: getstatic     #552                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         18: if_acmpne     25\n         21: iconst_1\n         22: goto          26\n         25: iconst_0\n         26: ireturn\n         27: astore_2\n         28: iconst_0\n@@ -2799,65 +2799,65 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #168                // class java/nio/file/CopyOption\n-         4: putstatic     #169                // Field EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n+         1: anewarray     #558                // class java/nio/file/CopyOption\n+         4: putstatic     #560                // Field EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n          7: iconst_0\n-         8: anewarray     #170                // class org/apache/commons/io/file/DeleteOption\n-        11: putstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+         8: anewarray     #564                // class org/apache/commons/io/file/DeleteOption\n+        11: putstatic     #21                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n         14: iconst_0\n-        15: anewarray     #155                // class java/nio/file/FileVisitOption\n-        18: putstatic     #62                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n+        15: anewarray     #514                // class java/nio/file/FileVisitOption\n+        18: putstatic     #212                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n         21: iconst_0\n-        22: anewarray     #36                 // class java/nio/file/LinkOption\n-        25: putstatic     #60                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+        22: anewarray     #126                // class java/nio/file/LinkOption\n+        25: putstatic     #205                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n         28: iconst_1\n-        29: anewarray     #36                 // class java/nio/file/LinkOption\n+        29: anewarray     #126                // class java/nio/file/LinkOption\n         32: dup\n         33: iconst_0\n-        34: getstatic     #37                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+        34: getstatic     #128                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n         37: aastore\n-        38: putstatic     #44                 // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+        38: putstatic     #149                // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n         41: iconst_0\n-        42: anewarray     #171                // class java/nio/file/OpenOption\n-        45: putstatic     #61                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+        42: anewarray     #566                // class java/nio/file/OpenOption\n+        45: putstatic     #208                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n         48: iconst_0\n-        49: anewarray     #75                 // class java/nio/file/Path\n-        52: putstatic     #96                 // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n+        49: anewarray     #50                 // class java/nio/file/Path\n+        52: putstatic     #318                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n         55: return\n       LineNumberTable:\n         line 139: 0\n         line 146: 7\n         line 151: 14\n         line 156: 21\n         line 163: 28\n         line 168: 41\n         line 175: 48\n }\n SourceFile: \"PathUtils.java\"\n-InnerClasses:\n-  static #173;                            // class org/apache/commons/io/file/PathUtils$1\n-  private static #175= #65 of #172;       // RelativeSortedPaths=class org/apache/commons/io/file/PathUtils$RelativeSortedPaths of class org/apache/commons/io/file/PathUtils\n-  public static #202= #201 of #401;       // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n-  public static #622= #449 of #401;       // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n-  public static #683= #682 of #304;       // Filter=class java/nio/file/DirectoryStream$Filter of class java/nio/file/DirectoryStream\n-  public static final #740= #739 of #742; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #498 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #711 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #499 (Ljava/lang/Object;)Z\n-      #500 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$filterPaths$0:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n-      #501 (Ljava/nio/file/Path;)Z\n-  1: #498 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #718 (Ljava/lang/Object;)Z\n+      #719 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$filterPaths$0:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n+      #722 (Ljava/nio/file/Path;)Z\n+  1: #711 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #527 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #528 REF_invokeInterface java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-      #529 (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-  2: #498 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #723 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #724 REF_invokeInterface java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+      #727 (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+  2: #711 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #499 (Ljava/lang/Object;)Z\n-      #564 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$walk$1:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n-      #501 (Ljava/nio/file/Path;)Z\n+      #718 (Ljava/lang/Object;)Z\n+      #728 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$walk$1:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n+      #722 (Ljava/nio/file/Path;)Z\n+InnerClasses:\n+  public static #732= #188 of #32;        // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #733= #194 of #32;        // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n+  private static #734= #223 of #2;        // RelativeSortedPaths=class org/apache/commons/io/file/PathUtils$RelativeSortedPaths of class org/apache/commons/io/file/PathUtils\n+  static #735;                            // class org/apache/commons/io/file/PathUtils$1\n+  public static #739= #737 of #383;       // Filter=class java/nio/file/DirectoryStream$Filter of class java/nio/file/DirectoryStream\n+  public static final #744= #740 of #742; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
