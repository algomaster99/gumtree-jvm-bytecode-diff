{"diffoscope-json-version": 1, "source1": "first/FilterCollectionWriter.class", "source2": "second/FilterCollectionWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,184 +1,178 @@\n-  SHA-256 checksum f372717ac1bc6fe3df7474f1c8e610106ece85a875c48c5561c036ff5d4ecd95\n+  SHA-256 checksum c9c80d42222476f0425bf7afe990c8690d5766f6dbb95568389deb99506c0a3f\n   Compiled from \"FilterCollectionWriter.java\"\n public class org.apache.commons.io.output.FilterCollectionWriter extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #38                         // org/apache/commons/io/output/FilterCollectionWriter\n   super_class: #14                        // java/io/Writer\n   interfaces: 0, fields: 2, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Methodref          #14.#112      // java/io/Writer.\"<init>\":()V\n-    #2 = Methodref          #113.#114     // java/util/Collections.emptyList:()Ljava/util/List;\n-    #3 = Fieldref           #38.#115      // org/apache/commons/io/output/FilterCollectionWriter.EMPTY_WRITERS:Ljava/util/Collection;\n-    #4 = Fieldref           #38.#116      // org/apache/commons/io/output/FilterCollectionWriter.writers:Ljava/util/Collection;\n-    #5 = Methodref          #117.#118     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-    #6 = Class              #119          // java/util/ArrayList\n-    #7 = Methodref          #6.#112       // java/util/ArrayList.\"<init>\":()V\n-    #8 = Class              #120          // org/apache/commons/io/IOIndexedException\n-    #9 = Methodref          #8.#121       // org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-   #10 = InterfaceMethodref #122.#123     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #11 = InterfaceMethodref #124.#125     // java/util/Collection.iterator:()Ljava/util/Iterator;\n-   #12 = InterfaceMethodref #126.#127     // java/util/Iterator.hasNext:()Z\n-   #13 = InterfaceMethodref #126.#128     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #14 = Class              #129          // java/io/Writer\n-   #15 = Methodref          #14.#130      // java/io/Writer.append:(C)Ljava/io/Writer;\n-   #16 = Class              #131          // java/io/IOException\n-   #17 = Methodref          #38.#132      // org/apache/commons/io/output/FilterCollectionWriter.add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n-   #18 = Methodref          #38.#133      // org/apache/commons/io/output/FilterCollectionWriter.notEmpty:(Ljava/util/List;)Z\n-   #19 = Class              #134          // org/apache/commons/io/IOExceptionList\n-   #20 = String             #69           // append\n-   #21 = Methodref          #19.#135      // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-   #22 = Methodref          #14.#136      // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #23 = Methodref          #14.#137      // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #24 = Methodref          #14.#138      // java/io/Writer.close:()V\n-   #25 = String             #87           // close\n-   #26 = Methodref          #14.#139      // java/io/Writer.flush:()V\n-   #27 = String             #89           // flush\n-   #28 = InterfaceMethodref #122.#140     // java/util/List.isEmpty:()Z\n-   #29 = Methodref          #14.#141      // java/io/Writer.write:([C)V\n-   #30 = String             #93           // write\n-   #31 = Methodref          #14.#142      // java/io/Writer.write:([CII)V\n-   #32 = Methodref          #14.#143      // java/io/Writer.write:(I)V\n-   #33 = Methodref          #14.#144      // java/io/Writer.write:(Ljava/lang/String;)V\n-   #34 = Methodref          #14.#145      // java/io/Writer.write:(Ljava/lang/String;II)V\n-   #35 = Methodref          #38.#130      // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n-   #36 = Methodref          #38.#137      // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #37 = Methodref          #38.#136      // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #38 = Class              #146          // org/apache/commons/io/output/FilterCollectionWriter\n+    #1 = Methodref          #14.#109      // java/io/Writer.\"<init>\":()V\n+    #2 = Methodref          #110.#111     // java/util/Collections.emptyList:()Ljava/util/List;\n+    #3 = Fieldref           #38.#112      // org/apache/commons/io/output/FilterCollectionWriter.EMPTY_WRITERS:Ljava/util/Collection;\n+    #4 = Fieldref           #38.#113      // org/apache/commons/io/output/FilterCollectionWriter.writers:Ljava/util/Collection;\n+    #5 = Methodref          #114.#115     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+    #6 = Class              #116          // java/util/ArrayList\n+    #7 = Methodref          #6.#109       // java/util/ArrayList.\"<init>\":()V\n+    #8 = Class              #117          // org/apache/commons/io/IOIndexedException\n+    #9 = Methodref          #8.#118       // org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+   #10 = InterfaceMethodref #74.#119      // java/util/List.add:(Ljava/lang/Object;)Z\n+   #11 = InterfaceMethodref #53.#120      // java/util/Collection.iterator:()Ljava/util/Iterator;\n+   #12 = InterfaceMethodref #75.#121      // java/util/Iterator.hasNext:()Z\n+   #13 = InterfaceMethodref #75.#122      // java/util/Iterator.next:()Ljava/lang/Object;\n+   #14 = Class              #123          // java/io/Writer\n+   #15 = Methodref          #14.#124      // java/io/Writer.append:(C)Ljava/io/Writer;\n+   #16 = Class              #125          // java/io/IOException\n+   #17 = Methodref          #38.#126      // org/apache/commons/io/output/FilterCollectionWriter.add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+   #18 = Methodref          #38.#127      // org/apache/commons/io/output/FilterCollectionWriter.notEmpty:(Ljava/util/List;)Z\n+   #19 = Class              #128          // org/apache/commons/io/IOExceptionList\n+   #20 = String             #68           // append\n+   #21 = Methodref          #19.#129      // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+   #22 = Methodref          #14.#130      // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #23 = Methodref          #14.#131      // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #24 = Methodref          #14.#132      // java/io/Writer.close:()V\n+   #25 = String             #84           // close\n+   #26 = Methodref          #14.#133      // java/io/Writer.flush:()V\n+   #27 = String             #86           // flush\n+   #28 = InterfaceMethodref #74.#134      // java/util/List.isEmpty:()Z\n+   #29 = Methodref          #14.#135      // java/io/Writer.write:([C)V\n+   #30 = String             #90           // write\n+   #31 = Methodref          #14.#136      // java/io/Writer.write:([CII)V\n+   #32 = Methodref          #14.#137      // java/io/Writer.write:(I)V\n+   #33 = Methodref          #14.#138      // java/io/Writer.write:(Ljava/lang/String;)V\n+   #34 = Methodref          #14.#139      // java/io/Writer.write:(Ljava/lang/String;II)V\n+   #35 = Methodref          #38.#124      // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n+   #36 = Methodref          #38.#131      // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #37 = Methodref          #38.#130      // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #38 = Class              #140          // org/apache/commons/io/output/FilterCollectionWriter\n    #39 = Utf8               EMPTY_WRITERS\n    #40 = Utf8               Ljava/util/Collection;\n    #41 = Utf8               Signature\n    #42 = Utf8               Ljava/util/Collection<Ljava/io/Writer;>;\n    #43 = Utf8               writers\n    #44 = Utf8               <init>\n    #45 = Utf8               (Ljava/util/Collection;)V\n    #46 = Utf8               Code\n    #47 = Utf8               LineNumberTable\n    #48 = Utf8               LocalVariableTable\n    #49 = Utf8               this\n    #50 = Utf8               Lorg/apache/commons/io/output/FilterCollectionWriter;\n    #51 = Utf8               LocalVariableTypeTable\n    #52 = Utf8               StackMapTable\n-   #53 = Class              #146          // org/apache/commons/io/output/FilterCollectionWriter\n-   #54 = Class              #147          // java/util/Collection\n-   #55 = Utf8               (Ljava/util/Collection<Ljava/io/Writer;>;)V\n-   #56 = Utf8               ([Ljava/io/Writer;)V\n-   #57 = Utf8               [Ljava/io/Writer;\n-   #58 = Class              #57           // \"[Ljava/io/Writer;\"\n-   #59 = Utf8               add\n-   #60 = Utf8               (Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n-   #61 = Utf8               causeList\n-   #62 = Utf8               Ljava/util/List;\n-   #63 = Utf8               i\n-   #64 = Utf8               I\n-   #65 = Utf8               e\n-   #66 = Utf8               Ljava/io/IOException;\n-   #67 = Utf8               Ljava/util/List<Ljava/lang/Exception;>;\n-   #68 = Utf8               (Ljava/util/List<Ljava/lang/Exception;>;ILjava/io/IOException;)Ljava/util/List<Ljava/lang/Exception;>;\n-   #69 = Utf8               append\n-   #70 = Utf8               (C)Ljava/io/Writer;\n-   #71 = Utf8               w\n-   #72 = Utf8               Ljava/io/Writer;\n-   #73 = Utf8               c\n-   #74 = Utf8               C\n-   #75 = Class              #148          // java/util/List\n-   #76 = Class              #149          // java/util/Iterator\n-   #77 = Class              #129          // java/io/Writer\n-   #78 = Class              #131          // java/io/IOException\n-   #79 = Utf8               Exceptions\n-   #80 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #81 = Utf8               csq\n-   #82 = Utf8               Ljava/lang/CharSequence;\n-   #83 = Class              #150          // java/lang/CharSequence\n-   #84 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #85 = Utf8               start\n-   #86 = Utf8               end\n-   #87 = Utf8               close\n-   #88 = Utf8               ()V\n-   #89 = Utf8               flush\n-   #90 = Utf8               notEmpty\n-   #91 = Utf8               (Ljava/util/List;)Z\n-   #92 = Utf8               (Ljava/util/List<Ljava/lang/Exception;>;)Z\n-   #93 = Utf8               write\n-   #94 = Utf8               ([C)V\n-   #95 = Utf8               cbuf\n-   #96 = Utf8               [C\n-   #97 = Class              #96           // \"[C\"\n-   #98 = Utf8               ([CII)V\n-   #99 = Utf8               off\n-  #100 = Utf8               len\n-  #101 = Utf8               (I)V\n-  #102 = Utf8               (Ljava/lang/String;)V\n-  #103 = Utf8               str\n-  #104 = Utf8               Ljava/lang/String;\n-  #105 = Class              #151          // java/lang/String\n-  #106 = Utf8               (Ljava/lang/String;II)V\n-  #107 = Utf8               (C)Ljava/lang/Appendable;\n-  #108 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #109 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #110 = Utf8               SourceFile\n-  #111 = Utf8               FilterCollectionWriter.java\n-  #112 = NameAndType        #44:#88       // \"<init>\":()V\n-  #113 = Class              #152          // java/util/Collections\n-  #114 = NameAndType        #153:#154     // emptyList:()Ljava/util/List;\n-  #115 = NameAndType        #39:#40       // EMPTY_WRITERS:Ljava/util/Collection;\n-  #116 = NameAndType        #43:#40       // writers:Ljava/util/Collection;\n-  #117 = Class              #155          // java/util/Arrays\n-  #118 = NameAndType        #156:#157     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #119 = Utf8               java/util/ArrayList\n-  #120 = Utf8               org/apache/commons/io/IOIndexedException\n-  #121 = NameAndType        #44:#158      // \"<init>\":(ILjava/lang/Throwable;)V\n-  #122 = Class              #148          // java/util/List\n-  #123 = NameAndType        #59:#159      // add:(Ljava/lang/Object;)Z\n-  #124 = Class              #147          // java/util/Collection\n-  #125 = NameAndType        #160:#161     // iterator:()Ljava/util/Iterator;\n-  #126 = Class              #149          // java/util/Iterator\n-  #127 = NameAndType        #162:#163     // hasNext:()Z\n-  #128 = NameAndType        #164:#165     // next:()Ljava/lang/Object;\n-  #129 = Utf8               java/io/Writer\n-  #130 = NameAndType        #69:#70       // append:(C)Ljava/io/Writer;\n-  #131 = Utf8               java/io/IOException\n-  #132 = NameAndType        #59:#60       // add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n-  #133 = NameAndType        #90:#91       // notEmpty:(Ljava/util/List;)Z\n-  #134 = Utf8               org/apache/commons/io/IOExceptionList\n-  #135 = NameAndType        #44:#166      // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-  #136 = NameAndType        #69:#80       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #137 = NameAndType        #69:#84       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #138 = NameAndType        #87:#88       // close:()V\n-  #139 = NameAndType        #89:#88       // flush:()V\n-  #140 = NameAndType        #167:#163     // isEmpty:()Z\n-  #141 = NameAndType        #93:#94       // write:([C)V\n-  #142 = NameAndType        #93:#98       // write:([CII)V\n-  #143 = NameAndType        #93:#101      // write:(I)V\n-  #144 = NameAndType        #93:#102      // write:(Ljava/lang/String;)V\n-  #145 = NameAndType        #93:#106      // write:(Ljava/lang/String;II)V\n-  #146 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n-  #147 = Utf8               java/util/Collection\n-  #148 = Utf8               java/util/List\n-  #149 = Utf8               java/util/Iterator\n-  #150 = Utf8               java/lang/CharSequence\n-  #151 = Utf8               java/lang/String\n-  #152 = Utf8               java/util/Collections\n-  #153 = Utf8               emptyList\n-  #154 = Utf8               ()Ljava/util/List;\n-  #155 = Utf8               java/util/Arrays\n-  #156 = Utf8               asList\n-  #157 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #158 = Utf8               (ILjava/lang/Throwable;)V\n-  #159 = Utf8               (Ljava/lang/Object;)Z\n-  #160 = Utf8               iterator\n-  #161 = Utf8               ()Ljava/util/Iterator;\n-  #162 = Utf8               hasNext\n-  #163 = Utf8               ()Z\n-  #164 = Utf8               next\n-  #165 = Utf8               ()Ljava/lang/Object;\n-  #166 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n-  #167 = Utf8               isEmpty\n+   #53 = Class              #141          // java/util/Collection\n+   #54 = Utf8               (Ljava/util/Collection<Ljava/io/Writer;>;)V\n+   #55 = Utf8               ([Ljava/io/Writer;)V\n+   #56 = Utf8               [Ljava/io/Writer;\n+   #57 = Class              #56           // \"[Ljava/io/Writer;\"\n+   #58 = Utf8               add\n+   #59 = Utf8               (Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+   #60 = Utf8               causeList\n+   #61 = Utf8               Ljava/util/List;\n+   #62 = Utf8               i\n+   #63 = Utf8               I\n+   #64 = Utf8               e\n+   #65 = Utf8               Ljava/io/IOException;\n+   #66 = Utf8               Ljava/util/List<Ljava/lang/Exception;>;\n+   #67 = Utf8               (Ljava/util/List<Ljava/lang/Exception;>;ILjava/io/IOException;)Ljava/util/List<Ljava/lang/Exception;>;\n+   #68 = Utf8               append\n+   #69 = Utf8               (C)Ljava/io/Writer;\n+   #70 = Utf8               w\n+   #71 = Utf8               Ljava/io/Writer;\n+   #72 = Utf8               c\n+   #73 = Utf8               C\n+   #74 = Class              #142          // java/util/List\n+   #75 = Class              #143          // java/util/Iterator\n+   #76 = Utf8               Exceptions\n+   #77 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #78 = Utf8               csq\n+   #79 = Utf8               Ljava/lang/CharSequence;\n+   #80 = Class              #144          // java/lang/CharSequence\n+   #81 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #82 = Utf8               start\n+   #83 = Utf8               end\n+   #84 = Utf8               close\n+   #85 = Utf8               ()V\n+   #86 = Utf8               flush\n+   #87 = Utf8               notEmpty\n+   #88 = Utf8               (Ljava/util/List;)Z\n+   #89 = Utf8               (Ljava/util/List<Ljava/lang/Exception;>;)Z\n+   #90 = Utf8               write\n+   #91 = Utf8               ([C)V\n+   #92 = Utf8               cbuf\n+   #93 = Utf8               [C\n+   #94 = Class              #93           // \"[C\"\n+   #95 = Utf8               ([CII)V\n+   #96 = Utf8               off\n+   #97 = Utf8               len\n+   #98 = Utf8               (I)V\n+   #99 = Utf8               (Ljava/lang/String;)V\n+  #100 = Utf8               str\n+  #101 = Utf8               Ljava/lang/String;\n+  #102 = Class              #145          // java/lang/String\n+  #103 = Utf8               (Ljava/lang/String;II)V\n+  #104 = Utf8               (C)Ljava/lang/Appendable;\n+  #105 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #106 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #107 = Utf8               SourceFile\n+  #108 = Utf8               FilterCollectionWriter.java\n+  #109 = NameAndType        #44:#85       // \"<init>\":()V\n+  #110 = Class              #146          // java/util/Collections\n+  #111 = NameAndType        #147:#148     // emptyList:()Ljava/util/List;\n+  #112 = NameAndType        #39:#40       // EMPTY_WRITERS:Ljava/util/Collection;\n+  #113 = NameAndType        #43:#40       // writers:Ljava/util/Collection;\n+  #114 = Class              #149          // java/util/Arrays\n+  #115 = NameAndType        #150:#151     // asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #116 = Utf8               java/util/ArrayList\n+  #117 = Utf8               org/apache/commons/io/IOIndexedException\n+  #118 = NameAndType        #44:#152      // \"<init>\":(ILjava/lang/Throwable;)V\n+  #119 = NameAndType        #58:#153      // add:(Ljava/lang/Object;)Z\n+  #120 = NameAndType        #154:#155     // iterator:()Ljava/util/Iterator;\n+  #121 = NameAndType        #156:#157     // hasNext:()Z\n+  #122 = NameAndType        #158:#159     // next:()Ljava/lang/Object;\n+  #123 = Utf8               java/io/Writer\n+  #124 = NameAndType        #68:#69       // append:(C)Ljava/io/Writer;\n+  #125 = Utf8               java/io/IOException\n+  #126 = NameAndType        #58:#59       // add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+  #127 = NameAndType        #87:#88       // notEmpty:(Ljava/util/List;)Z\n+  #128 = Utf8               org/apache/commons/io/IOExceptionList\n+  #129 = NameAndType        #44:#160      // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+  #130 = NameAndType        #68:#77       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #131 = NameAndType        #68:#81       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #132 = NameAndType        #84:#85       // close:()V\n+  #133 = NameAndType        #86:#85       // flush:()V\n+  #134 = NameAndType        #161:#157     // isEmpty:()Z\n+  #135 = NameAndType        #90:#91       // write:([C)V\n+  #136 = NameAndType        #90:#95       // write:([CII)V\n+  #137 = NameAndType        #90:#98       // write:(I)V\n+  #138 = NameAndType        #90:#99       // write:(Ljava/lang/String;)V\n+  #139 = NameAndType        #90:#103      // write:(Ljava/lang/String;II)V\n+  #140 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n+  #141 = Utf8               java/util/Collection\n+  #142 = Utf8               java/util/List\n+  #143 = Utf8               java/util/Iterator\n+  #144 = Utf8               java/lang/CharSequence\n+  #145 = Utf8               java/lang/String\n+  #146 = Utf8               java/util/Collections\n+  #147 = Utf8               emptyList\n+  #148 = Utf8               ()Ljava/util/List;\n+  #149 = Utf8               java/util/Arrays\n+  #150 = Utf8               asList\n+  #151 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+  #152 = Utf8               (ILjava/lang/Throwable;)V\n+  #153 = Utf8               (Ljava/lang/Object;)Z\n+  #154 = Utf8               iterator\n+  #155 = Utf8               ()Ljava/util/Iterator;\n+  #156 = Utf8               hasNext\n+  #157 = Utf8               ()Z\n+  #158 = Utf8               next\n+  #159 = Utf8               ()Ljava/lang/Object;\n+  #160 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n+  #161 = Utf8               isEmpty\n {\n   protected final java.util.Collection<java.io.Writer> EMPTY_WRITERS;\n     descriptor: Ljava/util/Collection;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Signature: #42                          // Ljava/util/Collection<Ljava/io/Writer;>;\n \n   protected final java.util.Collection<java.io.Writer> writers;\n@@ -222,15 +216,15 @@\n           offset_delta = 23\n           locals = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n           stack = [ class org/apache/commons/io/output/FilterCollectionWriter ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n           stack = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n-    Signature: #55                          // (Ljava/util/Collection<Ljava/io/Writer;>;)V\n+    Signature: #54                          // (Ljava/util/Collection<Ljava/io/Writer;>;)V\n \n   protected org.apache.commons.io.output.FilterCollectionWriter(java.io.Writer...);\n     descriptor: ([Ljava/io/Writer;)V\n     flags: (0x0084) ACC_PROTECTED, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -300,15 +294,15 @@\n             0      30     2     i   I\n             0      30     3     e   Ljava/io/IOException;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      30     1 causeList   Ljava/util/List<Ljava/lang/Exception;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 12 /* same */\n-    Signature: #68                          // (Ljava/util/List<Ljava/lang/Exception;>;ILjava/io/IOException;)Ljava/util/List<Ljava/lang/Exception;>;\n+    Signature: #67                          // (Ljava/util/List<Ljava/lang/Exception;>;ILjava/io/IOException;)Ljava/util/List<Ljava/lang/Exception;>;\n \n   public java.io.Writer append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=7, args_size=2\n          0: aconst_null\n@@ -780,15 +774,15 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      19     1 causeList   Ljava/util/List<Ljava/lang/Exception;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #92                          // (Ljava/util/List<Ljava/lang/Exception;>;)Z\n+    Signature: #89                          // (Ljava/util/List<Ljava/lang/Exception;>;)Z\n \n   public void write(char[]) throws java.io.IOException;\n     descriptor: ([C)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=7, args_size=2\n          0: aconst_null\n"}]}
