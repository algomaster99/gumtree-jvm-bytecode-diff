{"diffoscope-json-version": 1, "source1": "first/ExceptionUtils.class", "source2": "second/ExceptionUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,124 +1,124 @@\n-  SHA-256 checksum 1bc59655f3e57136b90fc32a355a420dbf0350d2083042acd498ded1e9cf6272\n+  SHA-256 checksum e6794a36f46379e287d04326281b06bc738db6de3f67e5ff5461bf2a1ca3fbe7\n   Compiled from \"ExceptionUtils.java\"\n public class org.apache.commons.lang3.exception.ExceptionUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #44                         // org/apache/commons/lang3/exception/ExceptionUtils\n   super_class: #13                        // java/lang/Object\n   interfaces: 0, fields: 3, methods: 35, attributes: 1\n Constant pool:\n-    #1 = Methodref          #44.#196      // org/apache/commons/lang3/exception/ExceptionUtils.getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n-    #2 = Methodref          #10.#197      // java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n-    #3 = Fieldref           #44.#198      // org/apache/commons/lang3/exception/ExceptionUtils.CAUSE_METHOD_NAMES:[Ljava/lang/String;\n-    #4 = Methodref          #44.#199      // org/apache/commons/lang3/exception/ExceptionUtils.getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-    #5 = Methodref          #13.#200      // java/lang/Object.getClass:()Ljava/lang/Class;\n-    #6 = Class              #201          // java/lang/Class\n-    #7 = Methodref          #6.#202       // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-    #8 = Class              #203          // java/lang/NoSuchMethodException\n-    #9 = Class              #204          // java/lang/SecurityException\n-   #10 = Class              #205          // java/lang/Throwable\n-   #11 = Methodref          #206.#207     // java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n-   #12 = Methodref          #6.#208       // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n-   #13 = Class              #209          // java/lang/Object\n-   #14 = Methodref          #206.#210     // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #15 = Class              #211          // java/lang/IllegalAccessException\n-   #16 = Class              #212          // java/lang/IllegalArgumentException\n-   #17 = Class              #213          // java/lang/reflect/InvocationTargetException\n-   #18 = Methodref          #214.#215     // org/apache/commons/lang3/ArrayUtils.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+    #1 = Methodref          #44.#192      // org/apache/commons/lang3/exception/ExceptionUtils.getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n+    #2 = Methodref          #10.#193      // java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n+    #3 = Fieldref           #44.#194      // org/apache/commons/lang3/exception/ExceptionUtils.CAUSE_METHOD_NAMES:[Ljava/lang/String;\n+    #4 = Methodref          #44.#195      // org/apache/commons/lang3/exception/ExceptionUtils.getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+    #5 = Methodref          #13.#196      // java/lang/Object.getClass:()Ljava/lang/Class;\n+    #6 = Class              #197          // java/lang/Class\n+    #7 = Methodref          #6.#198       // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+    #8 = Class              #199          // java/lang/NoSuchMethodException\n+    #9 = Class              #200          // java/lang/SecurityException\n+   #10 = Class              #201          // java/lang/Throwable\n+   #11 = Methodref          #127.#202     // java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n+   #12 = Methodref          #6.#203       // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+   #13 = Class              #204          // java/lang/Object\n+   #14 = Methodref          #127.#205     // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #15 = Class              #206          // java/lang/IllegalAccessException\n+   #16 = Class              #207          // java/lang/IllegalArgumentException\n+   #17 = Class              #208          // java/lang/reflect/InvocationTargetException\n+   #18 = Methodref          #209.#210     // org/apache/commons/lang3/ArrayUtils.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n    #19 = Class              #113          // \"[Ljava/lang/String;\"\n-   #20 = Class              #216          // org/apache/commons/lang3/StringUtils\n-   #21 = String             #217          //\n-   #22 = Methodref          #218.#219     // org/apache/commons/lang3/ClassUtils.getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #23 = Methodref          #10.#220      // java/lang/Throwable.getMessage:()Ljava/lang/String;\n-   #24 = Class              #221          // java/lang/StringBuilder\n-   #25 = Methodref          #24.#222      // java/lang/StringBuilder.\"<init>\":()V\n-   #26 = Methodref          #24.#223      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #27 = String             #224          // :\n-   #28 = Methodref          #20.#225      // org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;\n-   #29 = Methodref          #24.#226      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #30 = Methodref          #44.#227      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n-   #31 = InterfaceMethodref #228.#229     // java/util/List.isEmpty:()Z\n-   #32 = InterfaceMethodref #228.#230     // java/util/List.size:()I\n-   #33 = InterfaceMethodref #228.#231     // java/util/List.get:(I)Ljava/lang/Object;\n-   #34 = Methodref          #44.#232      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-   #35 = Methodref          #44.#233      // org/apache/commons/lang3/exception/ExceptionUtils.getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n-   #36 = Fieldref           #214.#234     // org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #37 = Methodref          #44.#235      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-   #38 = Class              #236          // java/util/ArrayList\n-   #39 = Methodref          #38.#222      // java/util/ArrayList.\"<init>\":()V\n-   #40 = Methodref          #44.#237      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n-   #41 = Methodref          #44.#238      // org/apache/commons/lang3/exception/ExceptionUtils.removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n-   #42 = Methodref          #10.#226      // java/lang/Throwable.toString:()Ljava/lang/String;\n-   #43 = InterfaceMethodref #228.#239     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #44 = Class              #240          // org/apache/commons/lang3/exception/ExceptionUtils\n-   #45 = String             #241          //  [wrapped]\n-   #46 = InterfaceMethodref #228.#242     // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #47 = InterfaceMethodref #228.#243     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #48 = Methodref          #44.#244      // org/apache/commons/lang3/exception/ExceptionUtils.getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n-   #49 = Methodref          #245.#246     // java/lang/System.lineSeparator:()Ljava/lang/String;\n-   #50 = Class              #247          // java/util/StringTokenizer\n-   #51 = Methodref          #50.#248      // java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-   #52 = Methodref          #50.#249      // java/util/StringTokenizer.hasMoreTokens:()Z\n-   #53 = Methodref          #50.#250      // java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n-   #54 = String             #251          // at\n-   #55 = Methodref          #86.#252      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #56 = Methodref          #86.#253      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #57 = Methodref          #86.#254      // java/lang/String.trim:()Ljava/lang/String;\n-   #58 = Methodref          #86.#229      // java/lang/String.isEmpty:()Z\n-   #59 = Methodref          #44.#255      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n-   #60 = Class              #256          // java/io/StringWriter\n-   #61 = Methodref          #60.#222      // java/io/StringWriter.\"<init>\":()V\n-   #62 = Class              #257          // java/io/PrintWriter\n-   #63 = Methodref          #62.#258      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n-   #64 = Methodref          #10.#259      // java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V\n-   #65 = Methodref          #60.#260      // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n-   #66 = Methodref          #261.#226     // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #67 = InterfaceMethodref #228.#262     // java/util/List.contains:(Ljava/lang/Object;)Z\n-   #68 = Fieldref           #214.#263     // org/apache/commons/lang3/ArrayUtils.EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n-   #69 = Class              #264          // \"[Ljava/lang/Throwable;\"\n-   #70 = Class              #265          // java/lang/reflect/UndeclaredThrowableException\n-   #71 = Methodref          #6.#266       // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-   #72 = Methodref          #13.#267      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #73 = Methodref          #44.#268      // org/apache/commons/lang3/exception/ExceptionUtils.indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-   #74 = Fieldref           #245.#269     // java/lang/System.err:Ljava/io/PrintStream;\n-   #75 = Methodref          #44.#270      // org/apache/commons/lang3/exception/ExceptionUtils.printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-   #76 = String             #271          // The PrintStream must not be null\n-   #77 = Methodref          #272.#273     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #78 = Methodref          #44.#274      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n-   #79 = Methodref          #275.#276     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #80 = Methodref          #275.#277     // java/io/PrintStream.flush:()V\n-   #81 = String             #278          // The PrintWriter must not be null\n-   #82 = Methodref          #62.#276      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n-   #83 = Methodref          #62.#277      // java/io/PrintWriter.flush:()V\n-   #84 = String             #279          // The List must not be null\n-   #85 = Methodref          #16.#280      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #86 = Class              #281          // java/lang/String\n-   #87 = Methodref          #86.#267      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #88 = InterfaceMethodref #228.#282     // java/util/List.remove:(I)Ljava/lang/Object;\n-   #89 = Methodref          #44.#283      // org/apache/commons/lang3/exception/ExceptionUtils.typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n-   #90 = Methodref          #6.#284       // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #91 = Methodref          #44.#285      // org/apache/commons/lang3/exception/ExceptionUtils.throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n-   #92 = Class              #286          // java/lang/RuntimeException\n-   #93 = Class              #287          // java/lang/Error\n-   #94 = Methodref          #70.#288      // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #95 = Methodref          #13.#222      // java/lang/Object.\"<init>\":()V\n+   #20 = Class              #211          // org/apache/commons/lang3/StringUtils\n+   #21 = String             #212          //\n+   #22 = Methodref          #213.#214     // org/apache/commons/lang3/ClassUtils.getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #23 = Methodref          #10.#215      // java/lang/Throwable.getMessage:()Ljava/lang/String;\n+   #24 = Class              #216          // java/lang/StringBuilder\n+   #25 = Methodref          #24.#217      // java/lang/StringBuilder.\"<init>\":()V\n+   #26 = Methodref          #24.#218      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #27 = String             #219          // :\n+   #28 = Methodref          #20.#220      // org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;\n+   #29 = Methodref          #24.#221      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #30 = Methodref          #44.#222      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n+   #31 = InterfaceMethodref #134.#223     // java/util/List.isEmpty:()Z\n+   #32 = InterfaceMethodref #134.#224     // java/util/List.size:()I\n+   #33 = InterfaceMethodref #134.#225     // java/util/List.get:(I)Ljava/lang/Object;\n+   #34 = Methodref          #44.#226      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+   #35 = Methodref          #44.#227      // org/apache/commons/lang3/exception/ExceptionUtils.getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n+   #36 = Fieldref           #209.#228     // org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #37 = Methodref          #44.#229      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+   #38 = Class              #230          // java/util/ArrayList\n+   #39 = Methodref          #38.#217      // java/util/ArrayList.\"<init>\":()V\n+   #40 = Methodref          #44.#231      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n+   #41 = Methodref          #44.#232      // org/apache/commons/lang3/exception/ExceptionUtils.removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n+   #42 = Methodref          #10.#221      // java/lang/Throwable.toString:()Ljava/lang/String;\n+   #43 = InterfaceMethodref #134.#233     // java/util/List.add:(Ljava/lang/Object;)Z\n+   #44 = Class              #234          // org/apache/commons/lang3/exception/ExceptionUtils\n+   #45 = String             #235          //  [wrapped]\n+   #46 = InterfaceMethodref #134.#236     // java/util/List.addAll:(Ljava/util/Collection;)Z\n+   #47 = InterfaceMethodref #134.#237     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #48 = Methodref          #44.#238      // org/apache/commons/lang3/exception/ExceptionUtils.getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n+   #49 = Methodref          #239.#240     // java/lang/System.lineSeparator:()Ljava/lang/String;\n+   #50 = Class              #241          // java/util/StringTokenizer\n+   #51 = Methodref          #50.#242      // java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+   #52 = Methodref          #50.#243      // java/util/StringTokenizer.hasMoreTokens:()Z\n+   #53 = Methodref          #50.#244      // java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n+   #54 = String             #245          // at\n+   #55 = Methodref          #86.#246      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+   #56 = Methodref          #86.#247      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #57 = Methodref          #86.#248      // java/lang/String.trim:()Ljava/lang/String;\n+   #58 = Methodref          #86.#223      // java/lang/String.isEmpty:()Z\n+   #59 = Methodref          #44.#249      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n+   #60 = Class              #250          // java/io/StringWriter\n+   #61 = Methodref          #60.#217      // java/io/StringWriter.\"<init>\":()V\n+   #62 = Class              #251          // java/io/PrintWriter\n+   #63 = Methodref          #62.#252      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n+   #64 = Methodref          #10.#253      // java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V\n+   #65 = Methodref          #60.#254      // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n+   #66 = Methodref          #255.#221     // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+   #67 = InterfaceMethodref #134.#256     // java/util/List.contains:(Ljava/lang/Object;)Z\n+   #68 = Fieldref           #209.#257     // org/apache/commons/lang3/ArrayUtils.EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n+   #69 = Class              #258          // \"[Ljava/lang/Throwable;\"\n+   #70 = Class              #259          // java/lang/reflect/UndeclaredThrowableException\n+   #71 = Methodref          #6.#260       // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+   #72 = Methodref          #13.#261      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+   #73 = Methodref          #44.#262      // org/apache/commons/lang3/exception/ExceptionUtils.indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+   #74 = Fieldref           #239.#263     // java/lang/System.err:Ljava/io/PrintStream;\n+   #75 = Methodref          #44.#264      // org/apache/commons/lang3/exception/ExceptionUtils.printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+   #76 = String             #265          // The PrintStream must not be null\n+   #77 = Methodref          #266.#267     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #78 = Methodref          #44.#268      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n+   #79 = Methodref          #166.#269     // java/io/PrintStream.println:(Ljava/lang/String;)V\n+   #80 = Methodref          #166.#270     // java/io/PrintStream.flush:()V\n+   #81 = String             #271          // The PrintWriter must not be null\n+   #82 = Methodref          #62.#269      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n+   #83 = Methodref          #62.#270      // java/io/PrintWriter.flush:()V\n+   #84 = String             #272          // The List must not be null\n+   #85 = Methodref          #16.#273      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #86 = Class              #274          // java/lang/String\n+   #87 = Methodref          #86.#261      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #88 = InterfaceMethodref #134.#275     // java/util/List.remove:(I)Ljava/lang/Object;\n+   #89 = Methodref          #44.#276      // org/apache/commons/lang3/exception/ExceptionUtils.typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n+   #90 = Methodref          #6.#277       // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #91 = Methodref          #44.#278      // org/apache/commons/lang3/exception/ExceptionUtils.throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+   #92 = Class              #279          // java/lang/RuntimeException\n+   #93 = Class              #280          // java/lang/Error\n+   #94 = Methodref          #70.#281      // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #95 = Methodref          #13.#217      // java/lang/Object.\"<init>\":()V\n    #96 = String             #116          // getCause\n-   #97 = String             #289          // getNextException\n-   #98 = String             #290          // getTargetException\n-   #99 = String             #291          // getException\n-  #100 = String             #292          // getSourceException\n-  #101 = String             #135          // getRootCause\n-  #102 = String             #293          // getCausedByException\n-  #103 = String             #294          // getNested\n-  #104 = String             #295          // getLinkedException\n-  #105 = String             #296          // getNestedException\n-  #106 = String             #297          // getLinkedCause\n-  #107 = String             #298          // getThrowable\n+   #97 = String             #282          // getNextException\n+   #98 = String             #283          // getTargetException\n+   #99 = String             #284          // getException\n+  #100 = String             #285          // getSourceException\n+  #101 = String             #133          // getRootCause\n+  #102 = String             #286          // getCausedByException\n+  #103 = String             #287          // getNested\n+  #104 = String             #288          // getLinkedException\n+  #105 = String             #289          // getNestedException\n+  #106 = String             #290          // getLinkedCause\n+  #107 = String             #291          // getThrowable\n   #108 = Utf8               NOT_FOUND\n   #109 = Utf8               I\n   #110 = Utf8               ConstantValue\n   #111 = Integer            -1\n   #112 = Utf8               CAUSE_METHOD_NAMES\n   #113 = Utf8               [Ljava/lang/String;\n   #114 = Utf8               WRAPPED_MARKER\n@@ -128,256 +128,249 @@\n   #118 = Utf8               Code\n   #119 = Utf8               LineNumberTable\n   #120 = Utf8               Deprecated\n   #121 = Utf8               RuntimeVisibleAnnotations\n   #122 = Utf8               Ljava/lang/Deprecated;\n   #123 = Utf8               (Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n   #124 = Utf8               StackMapTable\n-  #125 = Class              #205          // java/lang/Throwable\n-  #126 = Utf8               getCauseUsingMethodName\n-  #127 = Utf8               (Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-  #128 = Class              #281          // java/lang/String\n-  #129 = Class              #299          // java/lang/reflect/Method\n-  #130 = Class              #300          // java/lang/Exception\n-  #131 = Utf8               getDefaultCauseMethodNames\n-  #132 = Utf8               ()[Ljava/lang/String;\n-  #133 = Utf8               getMessage\n-  #134 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/String;\n-  #135 = Utf8               getRootCause\n-  #136 = Class              #301          // java/util/List\n-  #137 = Utf8               getRootCauseMessage\n-  #138 = Utf8               getRootCauseStackTrace\n-  #139 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/String;\n-  #140 = Utf8               getStackFrameList\n-  #141 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List;\n-  #142 = Class              #247          // java/util/StringTokenizer\n-  #143 = Utf8               Signature\n-  #144 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n-  #145 = Utf8               getStackFrames\n-  #146 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #147 = Utf8               getStackTrace\n-  #148 = Utf8               getThrowableCount\n-  #149 = Utf8               (Ljava/lang/Throwable;)I\n-  #150 = Utf8               getThrowableList\n-  #151 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n-  #152 = Utf8               getThrowables\n-  #153 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-  #154 = Utf8               hasCause\n-  #155 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Z\n-  #156 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n-  #157 = Utf8               indexOf\n-  #158 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-  #159 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n-  #160 = Utf8               indexOfThrowable\n-  #161 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)I\n-  #162 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n-  #163 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n-  #164 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n-  #165 = Utf8               indexOfType\n-  #166 = Utf8               printRootCauseStackTrace\n-  #167 = Utf8               (Ljava/lang/Throwable;)V\n-  #168 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-  #169 = Class              #302          // java/io/PrintStream\n-  #170 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintWriter;)V\n-  #171 = Class              #257          // java/io/PrintWriter\n-  #172 = Utf8               removeCommonFrames\n-  #173 = Utf8               (Ljava/util/List;Ljava/util/List;)V\n-  #174 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n-  #175 = Utf8               rethrow\n-  #176 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Object;\n-  #177 = Utf8               <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n-  #178 = Utf8               throwableOf\n-  #179 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n-  #180 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n-  #181 = Utf8               throwableOfThrowable\n-  #182 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n-  #183 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n-  #184 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n-  #185 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n-  #186 = Utf8               throwableOfType\n-  #187 = Utf8               typeErasure\n-  #188 = Utf8               Exceptions\n-  #189 = Utf8               <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n-  #190 = Utf8               wrapAndThrow\n-  #191 = Utf8               <init>\n-  #192 = Utf8               ()V\n-  #193 = Utf8               <clinit>\n-  #194 = Utf8               SourceFile\n-  #195 = Utf8               ExceptionUtils.java\n-  #196 = NameAndType        #116:#123     // getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n-  #197 = NameAndType        #116:#303     // getCause:()Ljava/lang/Throwable;\n-  #198 = NameAndType        #112:#113     // CAUSE_METHOD_NAMES:[Ljava/lang/String;\n-  #199 = NameAndType        #126:#127     // getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-  #200 = NameAndType        #304:#305     // getClass:()Ljava/lang/Class;\n-  #201 = Utf8               java/lang/Class\n-  #202 = NameAndType        #306:#307     // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #203 = Utf8               java/lang/NoSuchMethodException\n-  #204 = Utf8               java/lang/SecurityException\n-  #205 = Utf8               java/lang/Throwable\n-  #206 = Class              #299          // java/lang/reflect/Method\n-  #207 = NameAndType        #308:#305     // getReturnType:()Ljava/lang/Class;\n-  #208 = NameAndType        #309:#310     // isAssignableFrom:(Ljava/lang/Class;)Z\n-  #209 = Utf8               java/lang/Object\n-  #210 = NameAndType        #311:#312     // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #211 = Utf8               java/lang/IllegalAccessException\n-  #212 = Utf8               java/lang/IllegalArgumentException\n-  #213 = Utf8               java/lang/reflect/InvocationTargetException\n-  #214 = Class              #313          // org/apache/commons/lang3/ArrayUtils\n-  #215 = NameAndType        #314:#315     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #216 = Utf8               org/apache/commons/lang3/StringUtils\n-  #217 = Utf8\n-  #218 = Class              #316          // org/apache/commons/lang3/ClassUtils\n-  #219 = NameAndType        #317:#318     // getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #220 = NameAndType        #133:#319     // getMessage:()Ljava/lang/String;\n-  #221 = Utf8               java/lang/StringBuilder\n-  #222 = NameAndType        #191:#192     // \"<init>\":()V\n-  #223 = NameAndType        #320:#321     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #224 = Utf8               :\n-  #225 = NameAndType        #322:#323     // defaultString:(Ljava/lang/String;)Ljava/lang/String;\n-  #226 = NameAndType        #324:#319     // toString:()Ljava/lang/String;\n-  #227 = NameAndType        #150:#141     // getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n-  #228 = Class              #301          // java/util/List\n-  #229 = NameAndType        #325:#326     // isEmpty:()Z\n-  #230 = NameAndType        #327:#328     // size:()I\n-  #231 = NameAndType        #329:#330     // get:(I)Ljava/lang/Object;\n-  #232 = NameAndType        #135:#117     // getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-  #233 = NameAndType        #133:#134     // getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n-  #234 = NameAndType        #331:#113     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #235 = NameAndType        #152:#153     // getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-  #236 = Utf8               java/util/ArrayList\n-  #237 = NameAndType        #140:#141     // getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n-  #238 = NameAndType        #172:#173     // removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n-  #239 = NameAndType        #332:#333     // add:(Ljava/lang/Object;)Z\n-  #240 = Utf8               org/apache/commons/lang3/exception/ExceptionUtils\n-  #241 = Utf8                [wrapped]\n-  #242 = NameAndType        #334:#335     // addAll:(Ljava/util/Collection;)Z\n-  #243 = NameAndType        #336:#315     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #244 = NameAndType        #147:#134     // getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n-  #245 = Class              #337          // java/lang/System\n-  #246 = NameAndType        #338:#319     // lineSeparator:()Ljava/lang/String;\n-  #247 = Utf8               java/util/StringTokenizer\n-  #248 = NameAndType        #191:#339     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-  #249 = NameAndType        #340:#326     // hasMoreTokens:()Z\n-  #250 = NameAndType        #341:#319     // nextToken:()Ljava/lang/String;\n-  #251 = Utf8               at\n-  #252 = NameAndType        #157:#342     // indexOf:(Ljava/lang/String;)I\n-  #253 = NameAndType        #343:#344     // substring:(II)Ljava/lang/String;\n-  #254 = NameAndType        #345:#319     // trim:()Ljava/lang/String;\n-  #255 = NameAndType        #145:#146     // getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n-  #256 = Utf8               java/io/StringWriter\n-  #257 = Utf8               java/io/PrintWriter\n-  #258 = NameAndType        #191:#346     // \"<init>\":(Ljava/io/Writer;Z)V\n-  #259 = NameAndType        #347:#348     // printStackTrace:(Ljava/io/PrintWriter;)V\n-  #260 = NameAndType        #349:#350     // getBuffer:()Ljava/lang/StringBuffer;\n-  #261 = Class              #351          // java/lang/StringBuffer\n-  #262 = NameAndType        #352:#333     // contains:(Ljava/lang/Object;)Z\n-  #263 = NameAndType        #353:#264     // EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n-  #264 = Utf8               [Ljava/lang/Throwable;\n-  #265 = Utf8               java/lang/reflect/UndeclaredThrowableException\n-  #266 = NameAndType        #354:#333     // isInstance:(Ljava/lang/Object;)Z\n-  #267 = NameAndType        #355:#333     // equals:(Ljava/lang/Object;)Z\n-  #268 = NameAndType        #157:#158     // indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-  #269 = NameAndType        #356:#357     // err:Ljava/io/PrintStream;\n-  #270 = NameAndType        #166:#168     // printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-  #271 = Utf8               The PrintStream must not be null\n-  #272 = Class              #358          // org/apache/commons/lang3/Validate\n-  #273 = NameAndType        #359:#360     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #274 = NameAndType        #138:#139     // getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n-  #275 = Class              #302          // java/io/PrintStream\n-  #276 = NameAndType        #361:#362     // println:(Ljava/lang/String;)V\n-  #277 = NameAndType        #363:#192     // flush:()V\n-  #278 = Utf8               The PrintWriter must not be null\n-  #279 = Utf8               The List must not be null\n-  #280 = NameAndType        #191:#362     // \"<init>\":(Ljava/lang/String;)V\n-  #281 = Utf8               java/lang/String\n-  #282 = NameAndType        #364:#330     // remove:(I)Ljava/lang/Object;\n-  #283 = NameAndType        #187:#176     // typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n-  #284 = NameAndType        #365:#366     // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #285 = NameAndType        #178:#179     // throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n-  #286 = Utf8               java/lang/RuntimeException\n-  #287 = Utf8               java/lang/Error\n-  #288 = NameAndType        #191:#167     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #289 = Utf8               getNextException\n-  #290 = Utf8               getTargetException\n-  #291 = Utf8               getException\n-  #292 = Utf8               getSourceException\n-  #293 = Utf8               getCausedByException\n-  #294 = Utf8               getNested\n-  #295 = Utf8               getLinkedException\n-  #296 = Utf8               getNestedException\n-  #297 = Utf8               getLinkedCause\n-  #298 = Utf8               getThrowable\n-  #299 = Utf8               java/lang/reflect/Method\n-  #300 = Utf8               java/lang/Exception\n-  #301 = Utf8               java/util/List\n-  #302 = Utf8               java/io/PrintStream\n-  #303 = Utf8               ()Ljava/lang/Throwable;\n-  #304 = Utf8               getClass\n-  #305 = Utf8               ()Ljava/lang/Class;\n-  #306 = Utf8               getMethod\n-  #307 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #308 = Utf8               getReturnType\n-  #309 = Utf8               isAssignableFrom\n-  #310 = Utf8               (Ljava/lang/Class;)Z\n-  #311 = Utf8               invoke\n-  #312 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #313 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #314 = Utf8               clone\n-  #315 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #316 = Utf8               org/apache/commons/lang3/ClassUtils\n-  #317 = Utf8               getShortClassName\n-  #318 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #319 = Utf8               ()Ljava/lang/String;\n-  #320 = Utf8               append\n-  #321 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #322 = Utf8               defaultString\n-  #323 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #324 = Utf8               toString\n-  #325 = Utf8               isEmpty\n-  #326 = Utf8               ()Z\n-  #327 = Utf8               size\n-  #328 = Utf8               ()I\n-  #329 = Utf8               get\n-  #330 = Utf8               (I)Ljava/lang/Object;\n-  #331 = Utf8               EMPTY_STRING_ARRAY\n-  #332 = Utf8               add\n-  #333 = Utf8               (Ljava/lang/Object;)Z\n-  #334 = Utf8               addAll\n-  #335 = Utf8               (Ljava/util/Collection;)Z\n-  #336 = Utf8               toArray\n-  #337 = Utf8               java/lang/System\n-  #338 = Utf8               lineSeparator\n-  #339 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #340 = Utf8               hasMoreTokens\n-  #341 = Utf8               nextToken\n-  #342 = Utf8               (Ljava/lang/String;)I\n-  #343 = Utf8               substring\n-  #344 = Utf8               (II)Ljava/lang/String;\n-  #345 = Utf8               trim\n-  #346 = Utf8               (Ljava/io/Writer;Z)V\n-  #347 = Utf8               printStackTrace\n-  #348 = Utf8               (Ljava/io/PrintWriter;)V\n-  #349 = Utf8               getBuffer\n-  #350 = Utf8               ()Ljava/lang/StringBuffer;\n-  #351 = Utf8               java/lang/StringBuffer\n-  #352 = Utf8               contains\n-  #353 = Utf8               EMPTY_THROWABLE_ARRAY\n-  #354 = Utf8               isInstance\n-  #355 = Utf8               equals\n-  #356 = Utf8               err\n-  #357 = Utf8               Ljava/io/PrintStream;\n-  #358 = Utf8               org/apache/commons/lang3/Validate\n-  #359 = Utf8               notNull\n-  #360 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #361 = Utf8               println\n-  #362 = Utf8               (Ljava/lang/String;)V\n-  #363 = Utf8               flush\n-  #364 = Utf8               remove\n-  #365 = Utf8               cast\n-  #366 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #125 = Utf8               getCauseUsingMethodName\n+  #126 = Utf8               (Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+  #127 = Class              #292          // java/lang/reflect/Method\n+  #128 = Class              #293          // java/lang/Exception\n+  #129 = Utf8               getDefaultCauseMethodNames\n+  #130 = Utf8               ()[Ljava/lang/String;\n+  #131 = Utf8               getMessage\n+  #132 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/String;\n+  #133 = Utf8               getRootCause\n+  #134 = Class              #294          // java/util/List\n+  #135 = Utf8               getRootCauseMessage\n+  #136 = Utf8               getRootCauseStackTrace\n+  #137 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/String;\n+  #138 = Utf8               getStackFrameList\n+  #139 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List;\n+  #140 = Utf8               Signature\n+  #141 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n+  #142 = Utf8               getStackFrames\n+  #143 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+  #144 = Utf8               getStackTrace\n+  #145 = Utf8               getThrowableCount\n+  #146 = Utf8               (Ljava/lang/Throwable;)I\n+  #147 = Utf8               getThrowableList\n+  #148 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n+  #149 = Utf8               getThrowables\n+  #150 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+  #151 = Utf8               hasCause\n+  #152 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Z\n+  #153 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n+  #154 = Utf8               indexOf\n+  #155 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+  #156 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n+  #157 = Utf8               indexOfThrowable\n+  #158 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)I\n+  #159 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n+  #160 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n+  #161 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n+  #162 = Utf8               indexOfType\n+  #163 = Utf8               printRootCauseStackTrace\n+  #164 = Utf8               (Ljava/lang/Throwable;)V\n+  #165 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+  #166 = Class              #295          // java/io/PrintStream\n+  #167 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintWriter;)V\n+  #168 = Utf8               removeCommonFrames\n+  #169 = Utf8               (Ljava/util/List;Ljava/util/List;)V\n+  #170 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n+  #171 = Utf8               rethrow\n+  #172 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Object;\n+  #173 = Utf8               <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+  #174 = Utf8               throwableOf\n+  #175 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+  #176 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n+  #177 = Utf8               throwableOfThrowable\n+  #178 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n+  #179 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n+  #180 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n+  #181 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n+  #182 = Utf8               throwableOfType\n+  #183 = Utf8               typeErasure\n+  #184 = Utf8               Exceptions\n+  #185 = Utf8               <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n+  #186 = Utf8               wrapAndThrow\n+  #187 = Utf8               <init>\n+  #188 = Utf8               ()V\n+  #189 = Utf8               <clinit>\n+  #190 = Utf8               SourceFile\n+  #191 = Utf8               ExceptionUtils.java\n+  #192 = NameAndType        #116:#123     // getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n+  #193 = NameAndType        #116:#296     // getCause:()Ljava/lang/Throwable;\n+  #194 = NameAndType        #112:#113     // CAUSE_METHOD_NAMES:[Ljava/lang/String;\n+  #195 = NameAndType        #125:#126     // getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+  #196 = NameAndType        #297:#298     // getClass:()Ljava/lang/Class;\n+  #197 = Utf8               java/lang/Class\n+  #198 = NameAndType        #299:#300     // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #199 = Utf8               java/lang/NoSuchMethodException\n+  #200 = Utf8               java/lang/SecurityException\n+  #201 = Utf8               java/lang/Throwable\n+  #202 = NameAndType        #301:#298     // getReturnType:()Ljava/lang/Class;\n+  #203 = NameAndType        #302:#303     // isAssignableFrom:(Ljava/lang/Class;)Z\n+  #204 = Utf8               java/lang/Object\n+  #205 = NameAndType        #304:#305     // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #206 = Utf8               java/lang/IllegalAccessException\n+  #207 = Utf8               java/lang/IllegalArgumentException\n+  #208 = Utf8               java/lang/reflect/InvocationTargetException\n+  #209 = Class              #306          // org/apache/commons/lang3/ArrayUtils\n+  #210 = NameAndType        #307:#308     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #211 = Utf8               org/apache/commons/lang3/StringUtils\n+  #212 = Utf8\n+  #213 = Class              #309          // org/apache/commons/lang3/ClassUtils\n+  #214 = NameAndType        #310:#311     // getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #215 = NameAndType        #131:#312     // getMessage:()Ljava/lang/String;\n+  #216 = Utf8               java/lang/StringBuilder\n+  #217 = NameAndType        #187:#188     // \"<init>\":()V\n+  #218 = NameAndType        #313:#314     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #219 = Utf8               :\n+  #220 = NameAndType        #315:#316     // defaultString:(Ljava/lang/String;)Ljava/lang/String;\n+  #221 = NameAndType        #317:#312     // toString:()Ljava/lang/String;\n+  #222 = NameAndType        #147:#139     // getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n+  #223 = NameAndType        #318:#319     // isEmpty:()Z\n+  #224 = NameAndType        #320:#321     // size:()I\n+  #225 = NameAndType        #322:#323     // get:(I)Ljava/lang/Object;\n+  #226 = NameAndType        #133:#117     // getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+  #227 = NameAndType        #131:#132     // getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n+  #228 = NameAndType        #324:#113     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #229 = NameAndType        #149:#150     // getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+  #230 = Utf8               java/util/ArrayList\n+  #231 = NameAndType        #138:#139     // getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n+  #232 = NameAndType        #168:#169     // removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n+  #233 = NameAndType        #325:#326     // add:(Ljava/lang/Object;)Z\n+  #234 = Utf8               org/apache/commons/lang3/exception/ExceptionUtils\n+  #235 = Utf8                [wrapped]\n+  #236 = NameAndType        #327:#328     // addAll:(Ljava/util/Collection;)Z\n+  #237 = NameAndType        #329:#308     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #238 = NameAndType        #144:#132     // getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n+  #239 = Class              #330          // java/lang/System\n+  #240 = NameAndType        #331:#312     // lineSeparator:()Ljava/lang/String;\n+  #241 = Utf8               java/util/StringTokenizer\n+  #242 = NameAndType        #187:#332     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #243 = NameAndType        #333:#319     // hasMoreTokens:()Z\n+  #244 = NameAndType        #334:#312     // nextToken:()Ljava/lang/String;\n+  #245 = Utf8               at\n+  #246 = NameAndType        #154:#335     // indexOf:(Ljava/lang/String;)I\n+  #247 = NameAndType        #336:#337     // substring:(II)Ljava/lang/String;\n+  #248 = NameAndType        #338:#312     // trim:()Ljava/lang/String;\n+  #249 = NameAndType        #142:#143     // getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n+  #250 = Utf8               java/io/StringWriter\n+  #251 = Utf8               java/io/PrintWriter\n+  #252 = NameAndType        #187:#339     // \"<init>\":(Ljava/io/Writer;Z)V\n+  #253 = NameAndType        #340:#341     // printStackTrace:(Ljava/io/PrintWriter;)V\n+  #254 = NameAndType        #342:#343     // getBuffer:()Ljava/lang/StringBuffer;\n+  #255 = Class              #344          // java/lang/StringBuffer\n+  #256 = NameAndType        #345:#326     // contains:(Ljava/lang/Object;)Z\n+  #257 = NameAndType        #346:#258     // EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n+  #258 = Utf8               [Ljava/lang/Throwable;\n+  #259 = Utf8               java/lang/reflect/UndeclaredThrowableException\n+  #260 = NameAndType        #347:#326     // isInstance:(Ljava/lang/Object;)Z\n+  #261 = NameAndType        #348:#326     // equals:(Ljava/lang/Object;)Z\n+  #262 = NameAndType        #154:#155     // indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+  #263 = NameAndType        #349:#350     // err:Ljava/io/PrintStream;\n+  #264 = NameAndType        #163:#165     // printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+  #265 = Utf8               The PrintStream must not be null\n+  #266 = Class              #351          // org/apache/commons/lang3/Validate\n+  #267 = NameAndType        #352:#353     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #268 = NameAndType        #136:#137     // getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n+  #269 = NameAndType        #354:#355     // println:(Ljava/lang/String;)V\n+  #270 = NameAndType        #356:#188     // flush:()V\n+  #271 = Utf8               The PrintWriter must not be null\n+  #272 = Utf8               The List must not be null\n+  #273 = NameAndType        #187:#355     // \"<init>\":(Ljava/lang/String;)V\n+  #274 = Utf8               java/lang/String\n+  #275 = NameAndType        #357:#323     // remove:(I)Ljava/lang/Object;\n+  #276 = NameAndType        #183:#172     // typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n+  #277 = NameAndType        #358:#359     // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #278 = NameAndType        #174:#175     // throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+  #279 = Utf8               java/lang/RuntimeException\n+  #280 = Utf8               java/lang/Error\n+  #281 = NameAndType        #187:#164     // \"<init>\":(Ljava/lang/Throwable;)V\n+  #282 = Utf8               getNextException\n+  #283 = Utf8               getTargetException\n+  #284 = Utf8               getException\n+  #285 = Utf8               getSourceException\n+  #286 = Utf8               getCausedByException\n+  #287 = Utf8               getNested\n+  #288 = Utf8               getLinkedException\n+  #289 = Utf8               getNestedException\n+  #290 = Utf8               getLinkedCause\n+  #291 = Utf8               getThrowable\n+  #292 = Utf8               java/lang/reflect/Method\n+  #293 = Utf8               java/lang/Exception\n+  #294 = Utf8               java/util/List\n+  #295 = Utf8               java/io/PrintStream\n+  #296 = Utf8               ()Ljava/lang/Throwable;\n+  #297 = Utf8               getClass\n+  #298 = Utf8               ()Ljava/lang/Class;\n+  #299 = Utf8               getMethod\n+  #300 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+  #301 = Utf8               getReturnType\n+  #302 = Utf8               isAssignableFrom\n+  #303 = Utf8               (Ljava/lang/Class;)Z\n+  #304 = Utf8               invoke\n+  #305 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #306 = Utf8               org/apache/commons/lang3/ArrayUtils\n+  #307 = Utf8               clone\n+  #308 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #309 = Utf8               org/apache/commons/lang3/ClassUtils\n+  #310 = Utf8               getShortClassName\n+  #311 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #312 = Utf8               ()Ljava/lang/String;\n+  #313 = Utf8               append\n+  #314 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #315 = Utf8               defaultString\n+  #316 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #317 = Utf8               toString\n+  #318 = Utf8               isEmpty\n+  #319 = Utf8               ()Z\n+  #320 = Utf8               size\n+  #321 = Utf8               ()I\n+  #322 = Utf8               get\n+  #323 = Utf8               (I)Ljava/lang/Object;\n+  #324 = Utf8               EMPTY_STRING_ARRAY\n+  #325 = Utf8               add\n+  #326 = Utf8               (Ljava/lang/Object;)Z\n+  #327 = Utf8               addAll\n+  #328 = Utf8               (Ljava/util/Collection;)Z\n+  #329 = Utf8               toArray\n+  #330 = Utf8               java/lang/System\n+  #331 = Utf8               lineSeparator\n+  #332 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #333 = Utf8               hasMoreTokens\n+  #334 = Utf8               nextToken\n+  #335 = Utf8               (Ljava/lang/String;)I\n+  #336 = Utf8               substring\n+  #337 = Utf8               (II)Ljava/lang/String;\n+  #338 = Utf8               trim\n+  #339 = Utf8               (Ljava/io/Writer;Z)V\n+  #340 = Utf8               printStackTrace\n+  #341 = Utf8               (Ljava/io/PrintWriter;)V\n+  #342 = Utf8               getBuffer\n+  #343 = Utf8               ()Ljava/lang/StringBuffer;\n+  #344 = Utf8               java/lang/StringBuffer\n+  #345 = Utf8               contains\n+  #346 = Utf8               EMPTY_THROWABLE_ARRAY\n+  #347 = Utf8               isInstance\n+  #348 = Utf8               equals\n+  #349 = Utf8               err\n+  #350 = Utf8               Ljava/io/PrintStream;\n+  #351 = Utf8               org/apache/commons/lang3/Validate\n+  #352 = Utf8               notNull\n+  #353 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #354 = Utf8               println\n+  #355 = Utf8               (Ljava/lang/String;)V\n+  #356 = Utf8               flush\n+  #357 = Utf8               remove\n+  #358 = Utf8               cast\n+  #359 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n {\n   private static final int NOT_FOUND = -1;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   private static final java.lang.String[] CAUSE_METHOD_NAMES;\n@@ -849,15 +842,15 @@\n           stack = []\n         frame_type = 253 /* append */\n           offset_delta = 60\n           locals = [ class java/lang/String, int ]\n         frame_type = 249 /* chop */\n           offset_delta = 7\n         frame_type = 2 /* same */\n-    Signature: #144                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #141                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n \n   static java.lang.String[] getStackFrames(java.lang.String);\n     descriptor: (Ljava/lang/String;)[Ljava/lang/String;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=1\n          0: invokestatic  #49                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n@@ -991,15 +984,15 @@\n         line 417: 30\n         line 419: 38\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 8\n           locals = [ class java/util/List ]\n         frame_type = 29 /* same */\n-    Signature: #151                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n+    Signature: #148                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n \n   public static java.lang.Throwable[] getThrowables(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n@@ -1031,15 +1024,15 @@\n         17: ireturn\n       LineNumberTable:\n         line 461: 0\n         line 462: 7\n         line 464: 12\n       StackMapTable: number_of_entries = 1\n         frame_type = 12 /* same */\n-    Signature: #156                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n+    Signature: #153                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n \n   private static int indexOf(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>, int, boolean);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_0\n@@ -1134,75 +1127,75 @@\n         frame_type = 2 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n         frame_type = 25 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n-    Signature: #159                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n+    Signature: #156                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n \n   public static int indexOfThrowable(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: iconst_0\n          4: invokestatic  #73                 // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n          7: ireturn\n       LineNumberTable:\n         line 520: 0\n-    Signature: #162                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n+    Signature: #159                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n \n   public static int indexOfThrowable(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iconst_0\n          4: invokestatic  #73                 // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n          7: ireturn\n       LineNumberTable:\n         line 543: 0\n-    Signature: #164                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n+    Signature: #161                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n \n   public static int indexOfType(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: iconst_1\n          4: invokestatic  #73                 // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n          7: ireturn\n       LineNumberTable:\n         line 562: 0\n-    Signature: #162                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n+    Signature: #159                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n \n   public static int indexOfType(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iconst_1\n          4: invokestatic  #73                 // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n          7: ireturn\n       LineNumberTable:\n         line 586: 0\n-    Signature: #164                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n+    Signature: #161                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n \n   public static void printRootCauseStackTrace(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n@@ -1400,27 +1393,27 @@\n           offset_delta = 17\n           locals = [ int, int ]\n         frame_type = 253 /* append */\n           offset_delta = 49\n           locals = [ class java/lang/String, class java/lang/String ]\n         frame_type = 249 /* chop */\n           offset_delta = 8\n-    Signature: #174                         // (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n+    Signature: #170                         // (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n \n   public static <R extends java.lang.Object> R rethrow(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: invokestatic  #89                 // Method typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 758: 0\n-    Signature: #177                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+    Signature: #173                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n \n   private static <T extends java.lang.Throwable> T throwableOf(java.lang.Throwable, java.lang.Class<T>, int, boolean);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_0\n@@ -1525,88 +1518,88 @@\n         frame_type = 2 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n         frame_type = 35 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n-    Signature: #180                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n+    Signature: #176                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfThrowable(java.lang.Throwable, java.lang.Class<T>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: iconst_0\n          4: invokestatic  #91                 // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n          7: areturn\n       LineNumberTable:\n         line 817: 0\n-    Signature: #183                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n+    Signature: #179                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfThrowable(java.lang.Throwable, java.lang.Class<T>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iconst_0\n          4: invokestatic  #91                 // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n          7: areturn\n       LineNumberTable:\n         line 842: 0\n-    Signature: #185                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n+    Signature: #181                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfType(java.lang.Throwable, java.lang.Class<T>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: iconst_1\n          4: invokestatic  #91                 // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n          7: areturn\n       LineNumberTable:\n         line 862: 0\n-    Signature: #183                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n+    Signature: #179                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfType(java.lang.Throwable, java.lang.Class<T>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iconst_1\n          4: invokestatic  #91                 // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n          7: areturn\n       LineNumberTable:\n         line 887: 0\n-    Signature: #185                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n+    Signature: #181                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n \n   private static <R extends java.lang.Object, T extends java.lang.Throwable> R typeErasure(java.lang.Throwable) throws T;\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: athrow\n       LineNumberTable:\n         line 898: 0\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #189                         // <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n+    Signature: #185                         // <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n \n   public static <R extends java.lang.Object> R wrapAndThrow(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n@@ -1631,15 +1624,15 @@\n         line 924: 7\n         line 926: 12\n         line 927: 19\n         line 929: 24\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 11 /* same */\n-    Signature: #177                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+    Signature: #173                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n \n   public org.apache.commons.lang3.exception.ExceptionUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
