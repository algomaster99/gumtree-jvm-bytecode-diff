{"diffoscope-json-version": 1, "source1": "first/ThresholdingOutputStream.class", "source2": "second/ThresholdingOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,175 +1,175 @@\n-  SHA-256 checksum 5c1388aeede11d4f34e5fa06e1eb282cec711d5bb1b06c8ec5d12f546df9c4e0\n+  SHA-256 checksum 12b025aa186bf9b42ed533599235bab276ff4dc6317c618de212667fae784add\n   Compiled from \"ThresholdingOutputStream.java\"\n public class org.apache.commons.io.output.ThresholdingOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #25                         // org/apache/commons/io/output/ThresholdingOutputStream\n-  super_class: #17                        // java/io/OutputStream\n+  this_class: #8                          // org/apache/commons/io/output/ThresholdingOutputStream\n+  super_class: #18                        // java/io/OutputStream\n   interfaces: 0, fields: 6, methods: 17, attributes: 3\n Constant pool:\n-    #1 = InterfaceMethodref #50.#84       // org/apache/commons/io/function/IOConsumer.noop:()Lorg/apache/commons/io/function/IOConsumer;\n-    #2 = Fieldref           #25.#85       // org/apache/commons/io/output/ThresholdingOutputStream.NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n-    #3 = Methodref          #25.#86       // org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n-    #4 = Methodref          #17.#87       // java/io/OutputStream.\"<init>\":()V\n-    #5 = Fieldref           #25.#88       // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n-    #6 = Fieldref           #25.#89       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n-    #7 = Fieldref           #25.#90       // org/apache/commons/io/output/ThresholdingOutputStream.outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n-    #8 = Fieldref           #25.#91       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n-    #9 = Fieldref           #25.#92       // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n-   #10 = Methodref          #25.#93       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n-   #11 = Methodref          #25.#94       // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n-   #12 = Class              #95           // java/io/IOException\n-   #13 = Methodref          #25.#96       // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n-   #14 = Methodref          #17.#97       // java/io/OutputStream.close:()V\n-   #15 = Methodref          #17.#94       // java/io/OutputStream.flush:()V\n-   #16 = InterfaceMethodref #51.#98       // org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #17 = Class              #99           // java/io/OutputStream\n-   #18 = InterfaceMethodref #50.#100      // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n-   #19 = Methodref          #25.#101      // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n-   #20 = Methodref          #17.#102      // java/io/OutputStream.write:([B)V\n-   #21 = Methodref          #17.#103      // java/io/OutputStream.write:([BII)V\n-   #22 = Methodref          #17.#104      // java/io/OutputStream.write:(I)V\n-   #23 = Fieldref           #105.#106     // org/apache/commons/io/output/NullOutputStream.NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n-   #24 = InvokeDynamic      #0:#112       // #0:apply:()Lorg/apache/commons/io/function/IOFunction;\n-   #25 = Class              #113          // org/apache/commons/io/output/ThresholdingOutputStream\n-   #26 = Utf8               NOOP_OS_GETTER\n-   #27 = Utf8               Lorg/apache/commons/io/function/IOFunction;\n-   #28 = Utf8               Signature\n-   #29 = Utf8               Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;\n-   #30 = Utf8               threshold\n-   #31 = Utf8               I\n-   #32 = Utf8               thresholdConsumer\n-   #33 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n-   #34 = Utf8               Lorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;\n-   #35 = Utf8               outputStreamGetter\n-   #36 = Utf8               written\n-   #37 = Utf8               J\n-   #38 = Utf8               thresholdExceeded\n-   #39 = Utf8               Z\n-   #40 = Utf8               <init>\n-   #41 = Utf8               (I)V\n-   #42 = Utf8               Code\n-   #43 = Utf8               LineNumberTable\n-   #44 = Utf8               LocalVariableTable\n-   #45 = Utf8               this\n-   #46 = Utf8               Lorg/apache/commons/io/output/ThresholdingOutputStream;\n-   #47 = Utf8               (ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n-   #48 = Utf8               LocalVariableTypeTable\n-   #49 = Utf8               StackMapTable\n-   #50 = Class              #114          // org/apache/commons/io/function/IOConsumer\n-   #51 = Class              #115          // org/apache/commons/io/function/IOFunction\n-   #52 = Utf8               (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n-   #53 = Utf8               checkThreshold\n-   #54 = Utf8               count\n-   #55 = Utf8               Exceptions\n-   #56 = Utf8               close\n-   #57 = Utf8               ()V\n-   #58 = Utf8               flush\n-   #59 = Utf8               getByteCount\n-   #60 = Utf8               ()J\n-   #61 = Utf8               getStream\n-   #62 = Utf8               ()Ljava/io/OutputStream;\n-   #63 = Utf8               getThreshold\n-   #64 = Utf8               ()I\n-   #65 = Utf8               isThresholdExceeded\n-   #66 = Utf8               ()Z\n-   #67 = Utf8               resetByteCount\n-   #68 = Utf8               setByteCount\n-   #69 = Utf8               (J)V\n-   #70 = Utf8               thresholdReached\n-   #71 = Utf8               write\n-   #72 = Utf8               ([B)V\n-   #73 = Utf8               b\n-   #74 = Utf8               [B\n-   #75 = Utf8               ([BII)V\n-   #76 = Utf8               off\n-   #77 = Utf8               len\n-   #78 = Utf8               lambda$static$0\n-   #79 = Utf8               (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-   #80 = Utf8               os\n-   #81 = Utf8               <clinit>\n-   #82 = Utf8               SourceFile\n-   #83 = Utf8               ThresholdingOutputStream.java\n-   #84 = NameAndType        #116:#117     // noop:()Lorg/apache/commons/io/function/IOConsumer;\n-   #85 = NameAndType        #26:#27       // NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n-   #86 = NameAndType        #40:#47       // \"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n-   #87 = NameAndType        #40:#57       // \"<init>\":()V\n-   #88 = NameAndType        #30:#31       // threshold:I\n-   #89 = NameAndType        #32:#33       // thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n-   #90 = NameAndType        #35:#27       // outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n-   #91 = NameAndType        #38:#39       // thresholdExceeded:Z\n-   #92 = NameAndType        #36:#37       // written:J\n-   #93 = NameAndType        #70:#57       // thresholdReached:()V\n-   #94 = NameAndType        #58:#57       // flush:()V\n-   #95 = Utf8               java/io/IOException\n-   #96 = NameAndType        #61:#62       // getStream:()Ljava/io/OutputStream;\n-   #97 = NameAndType        #56:#57       // close:()V\n-   #98 = NameAndType        #118:#119     // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #99 = Utf8               java/io/OutputStream\n-  #100 = NameAndType        #120:#121     // accept:(Ljava/lang/Object;)V\n-  #101 = NameAndType        #53:#41       // checkThreshold:(I)V\n-  #102 = NameAndType        #71:#72       // write:([B)V\n-  #103 = NameAndType        #71:#75       // write:([BII)V\n-  #104 = NameAndType        #71:#41       // write:(I)V\n-  #105 = Class              #122          // org/apache/commons/io/output/NullOutputStream\n-  #106 = NameAndType        #123:#124     // NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n-  #107 = Utf8               BootstrapMethods\n-  #108 = MethodHandle       6:#125        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #109 = MethodType         #119          //  (Ljava/lang/Object;)Ljava/lang/Object;\n-  #110 = MethodHandle       6:#126        // REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #111 = MethodType         #79           //  (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #112 = NameAndType        #118:#127     // apply:()Lorg/apache/commons/io/function/IOFunction;\n-  #113 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n-  #114 = Utf8               org/apache/commons/io/function/IOConsumer\n-  #115 = Utf8               org/apache/commons/io/function/IOFunction\n-  #116 = Utf8               noop\n-  #117 = Utf8               ()Lorg/apache/commons/io/function/IOConsumer;\n-  #118 = Utf8               apply\n-  #119 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #120 = Utf8               accept\n-  #121 = Utf8               (Ljava/lang/Object;)V\n-  #122 = Utf8               org/apache/commons/io/output/NullOutputStream\n-  #123 = Utf8               NULL_OUTPUT_STREAM\n-  #124 = Utf8               Lorg/apache/commons/io/output/NullOutputStream;\n-  #125 = Methodref          #128.#129     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #126 = Methodref          #25.#130      // org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #127 = Utf8               ()Lorg/apache/commons/io/function/IOFunction;\n-  #128 = Class              #131          // java/lang/invoke/LambdaMetafactory\n-  #129 = NameAndType        #132:#136     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #130 = NameAndType        #78:#79       // lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #131 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #132 = Utf8               metafactory\n-  #133 = Class              #138          // java/lang/invoke/MethodHandles$Lookup\n-  #134 = Utf8               Lookup\n-  #135 = Utf8               InnerClasses\n-  #136 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #137 = Class              #139          // java/lang/invoke/MethodHandles\n-  #138 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #139 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = InterfaceMethodref #2.#3         // org/apache/commons/io/function/IOConsumer.noop:()Lorg/apache/commons/io/function/IOConsumer;\n+    #2 = Class              #4            // org/apache/commons/io/function/IOConsumer\n+    #3 = NameAndType        #5:#6         // noop:()Lorg/apache/commons/io/function/IOConsumer;\n+    #4 = Utf8               org/apache/commons/io/function/IOConsumer\n+    #5 = Utf8               noop\n+    #6 = Utf8               ()Lorg/apache/commons/io/function/IOConsumer;\n+    #7 = Fieldref           #8.#9         // org/apache/commons/io/output/ThresholdingOutputStream.NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n+    #8 = Class              #10           // org/apache/commons/io/output/ThresholdingOutputStream\n+    #9 = NameAndType        #11:#12       // NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n+   #10 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n+   #11 = Utf8               NOOP_OS_GETTER\n+   #12 = Utf8               Lorg/apache/commons/io/function/IOFunction;\n+   #13 = Methodref          #8.#14        // org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n+   #14 = NameAndType        #15:#16       // \"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n+   #15 = Utf8               <init>\n+   #16 = Utf8               (ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n+   #17 = Methodref          #18.#19       // java/io/OutputStream.\"<init>\":()V\n+   #18 = Class              #20           // java/io/OutputStream\n+   #19 = NameAndType        #15:#21       // \"<init>\":()V\n+   #20 = Utf8               java/io/OutputStream\n+   #21 = Utf8               ()V\n+   #22 = Fieldref           #8.#23        // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n+   #23 = NameAndType        #24:#25       // threshold:I\n+   #24 = Utf8               threshold\n+   #25 = Utf8               I\n+   #26 = Fieldref           #8.#27        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n+   #27 = NameAndType        #28:#29       // thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n+   #28 = Utf8               thresholdConsumer\n+   #29 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n+   #30 = Fieldref           #8.#31        // org/apache/commons/io/output/ThresholdingOutputStream.outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n+   #31 = NameAndType        #32:#12       // outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n+   #32 = Utf8               outputStreamGetter\n+   #33 = Fieldref           #8.#34        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n+   #34 = NameAndType        #35:#36       // thresholdExceeded:Z\n+   #35 = Utf8               thresholdExceeded\n+   #36 = Utf8               Z\n+   #37 = Fieldref           #8.#38        // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n+   #38 = NameAndType        #39:#40       // written:J\n+   #39 = Utf8               written\n+   #40 = Utf8               J\n+   #41 = Methodref          #8.#42        // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n+   #42 = NameAndType        #43:#21       // thresholdReached:()V\n+   #43 = Utf8               thresholdReached\n+   #44 = Methodref          #8.#45        // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n+   #45 = NameAndType        #46:#21       // flush:()V\n+   #46 = Utf8               flush\n+   #47 = Class              #48           // java/io/IOException\n+   #48 = Utf8               java/io/IOException\n+   #49 = Methodref          #8.#50        // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n+   #50 = NameAndType        #51:#52       // getStream:()Ljava/io/OutputStream;\n+   #51 = Utf8               getStream\n+   #52 = Utf8               ()Ljava/io/OutputStream;\n+   #53 = Methodref          #18.#54       // java/io/OutputStream.close:()V\n+   #54 = NameAndType        #55:#21       // close:()V\n+   #55 = Utf8               close\n+   #56 = Methodref          #18.#45       // java/io/OutputStream.flush:()V\n+   #57 = InterfaceMethodref #58.#59       // org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #58 = Class              #60           // org/apache/commons/io/function/IOFunction\n+   #59 = NameAndType        #61:#62       // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #60 = Utf8               org/apache/commons/io/function/IOFunction\n+   #61 = Utf8               apply\n+   #62 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #63 = InterfaceMethodref #2.#64        // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n+   #64 = NameAndType        #65:#66       // accept:(Ljava/lang/Object;)V\n+   #65 = Utf8               accept\n+   #66 = Utf8               (Ljava/lang/Object;)V\n+   #67 = Methodref          #8.#68        // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n+   #68 = NameAndType        #69:#70       // checkThreshold:(I)V\n+   #69 = Utf8               checkThreshold\n+   #70 = Utf8               (I)V\n+   #71 = Methodref          #18.#72       // java/io/OutputStream.write:([B)V\n+   #72 = NameAndType        #73:#74       // write:([B)V\n+   #73 = Utf8               write\n+   #74 = Utf8               ([B)V\n+   #75 = Methodref          #18.#76       // java/io/OutputStream.write:([BII)V\n+   #76 = NameAndType        #73:#77       // write:([BII)V\n+   #77 = Utf8               ([BII)V\n+   #78 = Methodref          #18.#79       // java/io/OutputStream.write:(I)V\n+   #79 = NameAndType        #73:#70       // write:(I)V\n+   #80 = Fieldref           #81.#82       // org/apache/commons/io/output/NullOutputStream.NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n+   #81 = Class              #83           // org/apache/commons/io/output/NullOutputStream\n+   #82 = NameAndType        #84:#85       // NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n+   #83 = Utf8               org/apache/commons/io/output/NullOutputStream\n+   #84 = Utf8               NULL_OUTPUT_STREAM\n+   #85 = Utf8               Lorg/apache/commons/io/output/NullOutputStream;\n+   #86 = InvokeDynamic      #0:#87        // #0:apply:()Lorg/apache/commons/io/function/IOFunction;\n+   #87 = NameAndType        #61:#88       // apply:()Lorg/apache/commons/io/function/IOFunction;\n+   #88 = Utf8               ()Lorg/apache/commons/io/function/IOFunction;\n+   #89 = Utf8               Signature\n+   #90 = Utf8               Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;\n+   #91 = Utf8               Lorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;\n+   #92 = Utf8               Code\n+   #93 = Utf8               LineNumberTable\n+   #94 = Utf8               LocalVariableTable\n+   #95 = Utf8               this\n+   #96 = Utf8               Lorg/apache/commons/io/output/ThresholdingOutputStream;\n+   #97 = Utf8               LocalVariableTypeTable\n+   #98 = Utf8               StackMapTable\n+   #99 = Utf8               (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n+  #100 = Utf8               count\n+  #101 = Utf8               Exceptions\n+  #102 = Utf8               getByteCount\n+  #103 = Utf8               ()J\n+  #104 = Utf8               getThreshold\n+  #105 = Utf8               ()I\n+  #106 = Utf8               isThresholdExceeded\n+  #107 = Utf8               ()Z\n+  #108 = Utf8               resetByteCount\n+  #109 = Utf8               setByteCount\n+  #110 = Utf8               (J)V\n+  #111 = Utf8               b\n+  #112 = Utf8               [B\n+  #113 = Utf8               off\n+  #114 = Utf8               len\n+  #115 = Utf8               lambda$static$0\n+  #116 = Utf8               (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #117 = Utf8               os\n+  #118 = Utf8               <clinit>\n+  #119 = Utf8               SourceFile\n+  #120 = Utf8               ThresholdingOutputStream.java\n+  #121 = Utf8               BootstrapMethods\n+  #122 = MethodHandle       6:#123        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #123 = Methodref          #124.#125     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #124 = Class              #126          // java/lang/invoke/LambdaMetafactory\n+  #125 = NameAndType        #127:#128     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #126 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #127 = Utf8               metafactory\n+  #128 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #129 = MethodType         #62           //  (Ljava/lang/Object;)Ljava/lang/Object;\n+  #130 = MethodHandle       6:#131        // REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #131 = Methodref          #8.#132       // org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #132 = NameAndType        #115:#116     // lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #133 = MethodType         #116          //  (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #134 = Utf8               InnerClasses\n+  #135 = Class              #136          // java/lang/invoke/MethodHandles$Lookup\n+  #136 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #137 = Class              #138          // java/lang/invoke/MethodHandles\n+  #138 = Utf8               java/lang/invoke/MethodHandles\n+  #139 = Utf8               Lookup\n {\n   private static org.apache.commons.io.function.IOFunction<org.apache.commons.io.output.ThresholdingOutputStream, java.io.OutputStream> NOOP_OS_GETTER;\n     descriptor: Lorg/apache/commons/io/function/IOFunction;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n-    Signature: #29                          // Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;\n+    Signature: #90                          // Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;\n \n   private final int threshold;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final org.apache.commons.io.function.IOConsumer<org.apache.commons.io.output.ThresholdingOutputStream> thresholdConsumer;\n     descriptor: Lorg/apache/commons/io/function/IOConsumer;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #34                          // Lorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;\n+    Signature: #91                          // Lorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;\n \n   private final org.apache.commons.io.function.IOFunction<org.apache.commons.io.output.ThresholdingOutputStream, java.io.OutputStream> outputStreamGetter;\n     descriptor: Lorg/apache/commons/io/function/IOFunction;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #29                          // Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;\n+    Signature: #90                          // Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;\n \n   private long written;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   private boolean thresholdExceeded;\n     descriptor: Z\n@@ -179,16 +179,16 @@\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: invokestatic  #1                  // InterfaceMethod org/apache/commons/io/function/IOConsumer.noop:()Lorg/apache/commons/io/function/IOConsumer;\n-         5: getstatic     #2                  // Field NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n-         8: invokespecial #3                  // Method \"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n+         5: getstatic     #7                  // Field NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n+         8: invokespecial #13                 // Method \"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n         11: return\n       LineNumberTable:\n         line 76: 0\n         line 77: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n@@ -196,32 +196,32 @@\n \n   public org.apache.commons.io.output.ThresholdingOutputStream(int, org.apache.commons.io.function.IOConsumer<org.apache.commons.io.output.ThresholdingOutputStream>, org.apache.commons.io.function.IOFunction<org.apache.commons.io.output.ThresholdingOutputStream, java.io.OutputStream>);\n     descriptor: (ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #4                  // Method java/io/OutputStream.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/io/OutputStream.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #5                  // Field threshold:I\n+         6: putfield      #22                 // Field threshold:I\n          9: aload_0\n         10: aload_2\n         11: ifnonnull     20\n         14: invokestatic  #1                  // InterfaceMethod org/apache/commons/io/function/IOConsumer.noop:()Lorg/apache/commons/io/function/IOConsumer;\n         17: goto          21\n         20: aload_2\n-        21: putfield      #6                  // Field thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n+        21: putfield      #26                 // Field thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n         24: aload_0\n         25: aload_3\n         26: ifnonnull     35\n-        29: getstatic     #2                  // Field NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n+        29: getstatic     #7                  // Field NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n         32: goto          36\n         35: aload_3\n-        36: putfield      #7                  // Field outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n+        36: putfield      #30                 // Field outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n         39: return\n       LineNumberTable:\n         line 88: 0\n         line 89: 4\n         line 90: 9\n         line 91: 24\n         line 92: 39\n@@ -246,39 +246,39 @@\n           stack = [ class org/apache/commons/io/output/ThresholdingOutputStream, class org/apache/commons/io/function/IOConsumer ]\n         frame_type = 77 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/output/ThresholdingOutputStream ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/output/ThresholdingOutputStream, int, class org/apache/commons/io/function/IOConsumer, class org/apache/commons/io/function/IOFunction ]\n           stack = [ class org/apache/commons/io/output/ThresholdingOutputStream, class org/apache/commons/io/function/IOFunction ]\n-    Signature: #52                          // (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n+    Signature: #99                          // (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n \n   protected void checkThreshold(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field thresholdExceeded:Z\n+         1: getfield      #33                 // Field thresholdExceeded:Z\n          4: ifne          32\n          7: aload_0\n-         8: getfield      #9                  // Field written:J\n+         8: getfield      #37                 // Field written:J\n         11: iload_1\n         12: i2l\n         13: ladd\n         14: aload_0\n-        15: getfield      #5                  // Field threshold:I\n+        15: getfield      #22                 // Field threshold:I\n         18: i2l\n         19: lcmp\n         20: ifle          32\n         23: aload_0\n         24: iconst_1\n-        25: putfield      #8                  // Field thresholdExceeded:Z\n+        25: putfield      #33                 // Field thresholdExceeded:Z\n         28: aload_0\n-        29: invokevirtual #10                 // Method thresholdReached:()V\n+        29: invokevirtual #41                 // Method thresholdReached:()V\n         32: return\n       LineNumberTable:\n         line 103: 0\n         line 104: 23\n         line 105: 28\n         line 107: 32\n       LocalVariableTable:\n@@ -292,20 +292,20 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #11                 // Method flush:()V\n+         1: invokevirtual #44                 // Method flush:()V\n          4: goto          8\n          7: astore_1\n          8: aload_0\n-         9: invokevirtual #13                 // Method getStream:()Ljava/io/OutputStream;\n-        12: invokevirtual #14                 // Method java/io/OutputStream.close:()V\n+         9: invokevirtual #49                 // Method getStream:()Ljava/io/OutputStream;\n+        12: invokevirtual #53                 // Method java/io/OutputStream.close:()V\n         15: return\n       Exception table:\n          from    to  target type\n              0     4     7   Class java/io/IOException\n       LineNumberTable:\n         line 117: 0\n         line 120: 4\n@@ -324,16 +324,16 @@\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #13                 // Method getStream:()Ljava/io/OutputStream;\n-         4: invokevirtual #15                 // Method java/io/OutputStream.flush:()V\n+         1: invokevirtual #49                 // Method getStream:()Ljava/io/OutputStream;\n+         4: invokevirtual #56                 // Method java/io/OutputStream.flush:()V\n          7: return\n       LineNumberTable:\n         line 132: 0\n         line 133: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n@@ -342,32 +342,32 @@\n \n   public long getByteCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field written:J\n+         1: getfield      #37                 // Field written:J\n          4: lreturn\n       LineNumberTable:\n         line 141: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n \n   protected java.io.OutputStream getStream() throws java.io.IOException;\n     descriptor: ()Ljava/io/OutputStream;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n+         1: getfield      #30                 // Field outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n          4: aload_0\n-         5: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-        10: checkcast     #17                 // class java/io/OutputStream\n+         5: invokeinterface #57,  2           // InterfaceMethod org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+        10: checkcast     #18                 // class java/io/OutputStream\n         13: areturn\n       LineNumberTable:\n         line 153: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n     Exceptions:\n@@ -375,31 +375,31 @@\n \n   public int getThreshold();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field threshold:I\n+         1: getfield      #22                 // Field threshold:I\n          4: ireturn\n       LineNumberTable:\n         line 162: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n \n   public boolean isThresholdExceeded();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field written:J\n+         1: getfield      #37                 // Field written:J\n          4: aload_0\n-         5: getfield      #5                  // Field threshold:I\n+         5: getfield      #22                 // Field threshold:I\n          8: i2l\n          9: lcmp\n         10: ifle          17\n         13: iconst_1\n         14: goto          18\n         17: iconst_0\n         18: ireturn\n@@ -416,18 +416,18 @@\n   protected void resetByteCount();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: putfield      #8                  // Field thresholdExceeded:Z\n+         2: putfield      #33                 // Field thresholdExceeded:Z\n          5: aload_0\n          6: lconst_0\n-         7: putfield      #9                  // Field written:J\n+         7: putfield      #37                 // Field written:J\n         10: return\n       LineNumberTable:\n         line 179: 0\n         line 180: 5\n         line 181: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -436,15 +436,15 @@\n   protected void setByteCount(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #9                  // Field written:J\n+         2: putfield      #37                 // Field written:J\n          5: return\n       LineNumberTable:\n         line 191: 0\n         line 192: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n@@ -452,17 +452,17 @@\n \n   protected void thresholdReached() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n+         1: getfield      #26                 // Field thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n          4: aload_0\n-         5: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n+         5: invokeinterface #63,  2           // InterfaceMethod org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n         10: return\n       LineNumberTable:\n         line 201: 0\n         line 202: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n@@ -473,27 +473,27 @@\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: arraylength\n-         3: invokevirtual #19                 // Method checkThreshold:(I)V\n+         3: invokevirtual #67                 // Method checkThreshold:(I)V\n          6: aload_0\n-         7: invokevirtual #13                 // Method getStream:()Ljava/io/OutputStream;\n+         7: invokevirtual #49                 // Method getStream:()Ljava/io/OutputStream;\n         10: aload_1\n-        11: invokevirtual #20                 // Method java/io/OutputStream.write:([B)V\n+        11: invokevirtual #71                 // Method java/io/OutputStream.write:([B)V\n         14: aload_0\n         15: dup\n-        16: getfield      #9                  // Field written:J\n+        16: getfield      #37                 // Field written:J\n         19: aload_1\n         20: arraylength\n         21: i2l\n         22: ladd\n-        23: putfield      #9                  // Field written:J\n+        23: putfield      #37                 // Field written:J\n         26: return\n       LineNumberTable:\n         line 214: 0\n         line 215: 6\n         line 216: 14\n         line 217: 26\n       LocalVariableTable:\n@@ -506,28 +506,28 @@\n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #19                 // Method checkThreshold:(I)V\n+         2: invokevirtual #67                 // Method checkThreshold:(I)V\n          5: aload_0\n-         6: invokevirtual #13                 // Method getStream:()Ljava/io/OutputStream;\n+         6: invokevirtual #49                 // Method getStream:()Ljava/io/OutputStream;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #21                 // Method java/io/OutputStream.write:([BII)V\n+        12: invokevirtual #75                 // Method java/io/OutputStream.write:([BII)V\n         15: aload_0\n         16: dup\n-        17: getfield      #9                  // Field written:J\n+        17: getfield      #37                 // Field written:J\n         20: iload_3\n         21: i2l\n         22: ladd\n-        23: putfield      #9                  // Field written:J\n+        23: putfield      #37                 // Field written:J\n         26: return\n       LineNumberTable:\n         line 231: 0\n         line 232: 5\n         line 233: 15\n         line 234: 26\n       LocalVariableTable:\n@@ -542,25 +542,25 @@\n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #19                 // Method checkThreshold:(I)V\n+         2: invokevirtual #67                 // Method checkThreshold:(I)V\n          5: aload_0\n-         6: invokevirtual #13                 // Method getStream:()Ljava/io/OutputStream;\n+         6: invokevirtual #49                 // Method getStream:()Ljava/io/OutputStream;\n          9: iload_1\n-        10: invokevirtual #22                 // Method java/io/OutputStream.write:(I)V\n+        10: invokevirtual #78                 // Method java/io/OutputStream.write:(I)V\n         13: aload_0\n         14: dup\n-        15: getfield      #9                  // Field written:J\n+        15: getfield      #37                 // Field written:J\n         18: lconst_1\n         19: ladd\n-        20: putfield      #9                  // Field written:J\n+        20: putfield      #37                 // Field written:J\n         23: return\n       LineNumberTable:\n         line 246: 0\n         line 247: 5\n         line 248: 13\n         line 249: 23\n       LocalVariableTable:\n@@ -571,37 +571,37 @@\n       throws java.io.IOException\n \n   private static java.io.OutputStream lambda$static$0(org.apache.commons.io.output.ThresholdingOutputStream) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: getstatic     #23                 // Field org/apache/commons/io/output/NullOutputStream.NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n+         0: getstatic     #80                 // Field org/apache/commons/io/output/NullOutputStream.NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n          3: areturn\n       LineNumberTable:\n         line 43: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0    os   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n     Exceptions:\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #24,  0             // InvokeDynamic #0:apply:()Lorg/apache/commons/io/function/IOFunction;\n-         5: putstatic     #2                  // Field NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n+         0: invokedynamic #86,  0             // InvokeDynamic #0:apply:()Lorg/apache/commons/io/function/IOFunction;\n+         5: putstatic     #7                  // Field NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n          8: return\n       LineNumberTable:\n         line 43: 0\n }\n SourceFile: \"ThresholdingOutputStream.java\"\n-InnerClasses:\n-  public static final #134= #133 of #137; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #108 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #122 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #109 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #110 REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-      #111 (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+      #129 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #130 REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+      #133 (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+InnerClasses:\n+  public static final #139= #135 of #137; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
