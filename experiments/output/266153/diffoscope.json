{"diffoscope-json-version": 1, "source1": "first/VerifierFactory.class", "source2": "second/VerifierFactory.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -21,27 +21,27 @@\n     }\n     \n     public static void detach(final VerifierFactoryObserver o) {\n         VerifierFactory.OBSVERVERS.remove(o);\n     }\n     \n     public static Verifier getVerifier(final String fullyQualifiedClassName) {\n-        return VerifierFactory.MAP.computeIfAbsent(fullyQualifiedClassName, k -> {\n-            final Verifier v = new Verifier(k);\n-            notify(k);\n-            return v;\n+        return VerifierFactory.MAP.computeIfAbsent(fullyQualifiedClassName, fullyQualifiedClassName2 -> {\n+            final Verifier verifier = new Verifier(fullyQualifiedClassName2);\n+            notify(fullyQualifiedClassName2);\n+            return verifier;\n         });\n     }\n     \n     public static Verifier[] getVerifiers() {\n         return VerifierFactory.MAP.values().toArray(Verifier.EMPTY_ARRAY);\n     }\n     \n     private static void notify(final String fullyQualifiedClassName) {\n-        VerifierFactory.OBSVERVERS.forEach(vfo -> vfo.update(fullyQualifiedClassName));\n+        VerifierFactory.OBSVERVERS.forEach(verifierFactoryObserver -> verifierFactoryObserver.update(s));\n     }\n     \n     private VerifierFactory() {\n     }\n     \n     static {\n         MAP = new HashMap<String, Verifier>();\n"}]}
