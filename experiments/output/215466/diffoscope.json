{"diffoscope-json-version": 1, "source1": "first/CPInstruction.class", "source2": "second/CPInstruction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,55 +13,54 @@\n {\n     @Deprecated\n     protected int index;\n     \n     CPInstruction() {\n     }\n     \n-    protected CPInstruction(final short opcode, final int index) {\n-        super(opcode, (short)3);\n+    protected CPInstruction(final short n, final int index) {\n+        super(n, (short)3);\n         this.setIndex(index);\n     }\n     \n-    public void dump(final DataOutputStream out) throws IOException {\n-        out.writeByte(super.getOpcode());\n-        out.writeShort(this.index);\n+    public void dump(final DataOutputStream dataOutputStream) throws IOException {\n+        dataOutputStream.writeByte(super.getOpcode());\n+        dataOutputStream.writeShort(this.index);\n     }\n     \n-    public String toString(final boolean verbose) {\n-        return super.toString(verbose) + \" \" + this.index;\n+    public String toString(final boolean b) {\n+        return super.toString(b) + \" \" + this.index;\n     }\n     \n-    public String toString(final ConstantPool cp) {\n-        final Constant c = cp.getConstant(this.index);\n-        String str = cp.constantToString(c);\n-        if (c instanceof ConstantClass) {\n+    public String toString(final ConstantPool constantPool) {\n+        final Constant constant = constantPool.getConstant(this.index);\n+        String str = constantPool.constantToString(constant);\n+        if (constant instanceof ConstantClass) {\n             str = str.replace('.', '/');\n         }\n         return Const.getOpcodeName((int)super.getOpcode()) + \" \" + str;\n     }\n     \n-    protected void initFromFile(final ByteSequence bytes, final boolean wide) throws IOException {\n-        this.setIndex(bytes.readUnsignedShort());\n+    protected void initFromFile(final ByteSequence byteSequence, final boolean b) throws IOException {\n+        this.setIndex(byteSequence.readUnsignedShort());\n         super.setLength(3);\n     }\n     \n     public final int getIndex() {\n         return this.index;\n     }\n     \n-    public void setIndex(final int index) {\n-        if (index < 0) {\n-            throw new ClassGenException(\"Negative index value: \" + index);\n+    public void setIndex(final int n) {\n+        if (n < 0) {\n+            throw new ClassGenException(\"Negative index value: \" + n);\n         }\n-        this.index = index;\n+        this.index = n;\n     }\n     \n-    public Type getType(final ConstantPoolGen cpg) {\n-        final ConstantPool cp = cpg.getConstantPool();\n-        String name = cp.getConstantString(this.index, (byte)7);\n-        if (!name.startsWith(\"[\")) {\n-            name = \"L\" + name + \";\";\n+    public Type getType(final ConstantPoolGen constantPoolGen) {\n+        String str = constantPoolGen.getConstantPool().getConstantString(this.index, (byte)7);\n+        if (!str.startsWith(\"[\")) {\n+            str = \"L\" + str + \";\";\n         }\n-        return Type.getType(name);\n+        return Type.getType(str);\n     }\n }\n"}]}
