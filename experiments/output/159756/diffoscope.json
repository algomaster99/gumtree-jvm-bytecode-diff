{"diffoscope-json-version": 1, "source1": "first/TestAppletConfiguration.class", "source2": "second/TestAppletConfiguration.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 7e8056e750298f27ce17b891463b9968dfa09561346f08d37d69b8e39763f24a\n+  SHA-256 checksum 923647ff7ab67187fd1d8484e4db449d1ea15b773e9399372c361123fc271530\n   Compiled from \"TestAppletConfiguration.java\"\n public class org.apache.commons.configuration2.web.TestAppletConfiguration extends org.apache.commons.configuration2.TestAbstractConfiguration\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/configuration2/web/TestAppletConfiguration\n   super_class: #3                         // org/apache/commons/configuration2/TestAbstractConfiguration\n@@ -92,36 +92,38 @@\n    #82 = Methodref          #80.#11       // org/apache/commons/configuration2/BaseConfiguration.\"<init>\":()V\n    #83 = Utf8               setUp\n    #84 = Utf8               Exceptions\n    #85 = Class              #86           // java/lang/Exception\n    #86 = Utf8               java/lang/Exception\n    #87 = Utf8               RuntimeVisibleAnnotations\n    #88 = Utf8               Lorg/junit/Before;\n-   #89 = Utf8               testAddPropertyDirect\n-   #90 = Utf8               Lorg/junit/Test;\n-   #91 = Methodref          #3.#92        // org/apache/commons/configuration2/TestAbstractConfiguration.testAddPropertyDirect:()V\n-   #92 = NameAndType        #89:#8        // testAddPropertyDirect:()V\n-   #93 = String             #94           // addPropertyDirect should throw an UnsupportedException\n-   #94 = Utf8               addPropertyDirect should throw an UnsupportedException\n-   #95 = Methodref          #96.#98       // org/junit/Assert.fail:(Ljava/lang/String;)V\n-   #96 = Class              #97           // org/junit/Assert\n-   #97 = Utf8               org/junit/Assert\n-   #98 = NameAndType        #99:#100      // fail:(Ljava/lang/String;)V\n-   #99 = Utf8               fail\n-  #100 = Utf8               (Ljava/lang/String;)V\n-  #101 = Class              #102          // java/lang/UnsupportedOperationException\n-  #102 = Utf8               java/lang/UnsupportedOperationException\n-  #103 = Utf8               testClearProperty\n-  #104 = Methodref          #3.#105       // org/apache/commons/configuration2/TestAbstractConfiguration.testClearProperty:()V\n-  #105 = NameAndType        #103:#8       // testClearProperty:()V\n-  #106 = String             #107          // testClearProperty should throw an UnsupportedException\n-  #107 = Utf8               testClearProperty should throw an UnsupportedException\n-  #108 = Utf8               SourceFile\n-  #109 = Utf8               TestAppletConfiguration.java\n-  #110 = Utf8               InnerClasses\n+   #89 = Utf8               ex\n+   #90 = Utf8               Ljava/lang/Exception;\n+   #91 = Utf8               testAddPropertyDirect\n+   #92 = Utf8               Lorg/junit/Test;\n+   #93 = Methodref          #3.#94        // org/apache/commons/configuration2/TestAbstractConfiguration.testAddPropertyDirect:()V\n+   #94 = NameAndType        #91:#8        // testAddPropertyDirect:()V\n+   #95 = String             #96           // addPropertyDirect should throw an UnsupportedException\n+   #96 = Utf8               addPropertyDirect should throw an UnsupportedException\n+   #97 = Methodref          #98.#100      // org/junit/Assert.fail:(Ljava/lang/String;)V\n+   #98 = Class              #99           // org/junit/Assert\n+   #99 = Utf8               org/junit/Assert\n+  #100 = NameAndType        #101:#102     // fail:(Ljava/lang/String;)V\n+  #101 = Utf8               fail\n+  #102 = Utf8               (Ljava/lang/String;)V\n+  #103 = Class              #104          // java/lang/UnsupportedOperationException\n+  #104 = Utf8               java/lang/UnsupportedOperationException\n+  #105 = Utf8               testClearProperty\n+  #106 = Methodref          #3.#107       // org/apache/commons/configuration2/TestAbstractConfiguration.testClearProperty:()V\n+  #107 = NameAndType        #105:#8       // testClearProperty:()V\n+  #108 = String             #109          // testClearProperty should throw an UnsupportedException\n+  #109 = Utf8               testClearProperty should throw an UnsupportedException\n+  #110 = Utf8               SourceFile\n+  #111 = Utf8               TestAppletConfiguration.java\n+  #112 = Utf8               InnerClasses\n {\n   boolean supportsApplet;\n     descriptor: Z\n     flags: (0x0000)\n \n   public org.apache.commons.configuration2.web.TestAppletConfiguration();\n     descriptor: ()V\n@@ -258,22 +260,22 @@\n     flags: (0x0001) ACC_PUBLIC\n     Exceptions:\n       throws java.lang.Exception\n     RuntimeVisibleAnnotations:\n       0: #88()\n         org.junit.Before\n     Code:\n-      stack=2, locals=1, args_size=1\n+      stack=2, locals=2, args_size=1\n          0: new           #77                 // class java/applet/Applet\n          3: invokespecial #79                 // Method java/applet/Applet.\"<init>\":()V\n          6: aload_0\n          7: iconst_1\n          8: putfield      #41                 // Field supportsApplet:Z\n         11: goto          20\n-        14: pop\n+        14: astore_1\n         15: aload_0\n         16: iconst_0\n         17: putfield      #41                 // Field supportsApplet:Z\n         20: return\n       Exception table:\n          from    to  target type\n              0    11    14   Class java/lang/Exception\n@@ -282,36 +284,37 @@\n         line 94: 6\n         line 95: 11\n         line 97: 15\n         line 99: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/configuration2/web/TestAppletConfiguration;\n+           15       5     1    ex   Ljava/lang/Exception;\n       StackMapTable: number_of_entries = 2\n         frame_type = 78 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Exception ]\n         frame_type = 5 /* same */\n \n   public void testAddPropertyDirect();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     RuntimeVisibleAnnotations:\n-      0: #90()\n+      0: #92()\n         org.junit.Test\n     Code:\n-      stack=1, locals=1, args_size=1\n+      stack=1, locals=2, args_size=1\n          0: aload_0\n          1: getfield      #41                 // Field supportsApplet:Z\n          4: ifeq          20\n          7: aload_0\n-         8: invokespecial #91                 // Method org/apache/commons/configuration2/TestAbstractConfiguration.testAddPropertyDirect:()V\n-        11: ldc           #93                 // String addPropertyDirect should throw an UnsupportedException\n-        13: invokestatic  #95                 // Method org/junit/Assert.fail:(Ljava/lang/String;)V\n+         8: invokespecial #93                 // Method org/apache/commons/configuration2/TestAbstractConfiguration.testAddPropertyDirect:()V\n+        11: ldc           #95                 // String addPropertyDirect should throw an UnsupportedException\n+        13: invokestatic  #97                 // Method org/junit/Assert.fail:(Ljava/lang/String;)V\n         16: goto          20\n-        19: pop\n+        19: astore_1\n         20: return\n       Exception table:\n          from    to  target type\n              7    16    19   Class java/lang/UnsupportedOperationException\n       LineNumberTable:\n         line 104: 0\n         line 106: 7\n@@ -326,27 +329,27 @@\n           stack = [ class java/lang/UnsupportedOperationException ]\n         frame_type = 0 /* same */\n \n   public void testClearProperty();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     RuntimeVisibleAnnotations:\n-      0: #90()\n+      0: #92()\n         org.junit.Test\n     Code:\n-      stack=1, locals=1, args_size=1\n+      stack=1, locals=2, args_size=1\n          0: aload_0\n          1: getfield      #41                 // Field supportsApplet:Z\n          4: ifeq          20\n          7: aload_0\n-         8: invokespecial #104                // Method org/apache/commons/configuration2/TestAbstractConfiguration.testClearProperty:()V\n-        11: ldc           #106                // String testClearProperty should throw an UnsupportedException\n-        13: invokestatic  #95                 // Method org/junit/Assert.fail:(Ljava/lang/String;)V\n+         8: invokespecial #106                // Method org/apache/commons/configuration2/TestAbstractConfiguration.testClearProperty:()V\n+        11: ldc           #108                // String testClearProperty should throw an UnsupportedException\n+        13: invokestatic  #97                 // Method org/junit/Assert.fail:(Ljava/lang/String;)V\n         16: goto          20\n-        19: pop\n+        19: astore_1\n         20: return\n       Exception table:\n          from    to  target type\n              7    16    19   Class java/lang/UnsupportedOperationException\n       LineNumberTable:\n         line 117: 0\n         line 119: 7\n"}]}
