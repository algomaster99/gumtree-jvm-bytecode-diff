{"diffoscope-json-version": 1, "source1": "first/ConcurrentUtils.class", "source2": "second/ConcurrentUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,139 +1,136 @@\n-  SHA-256 checksum 9fc6c4cf0ddb5dbe58e704b31f8e5e29228d65bd57d46400e266843bf470fe40\n+  SHA-256 checksum d1ecbadd91c1e9db920147a566ed0062490c7daeef3ec4d7ea0b5364b03f63cc\n   Compiled from \"ConcurrentUtils.java\"\n public class org.apache.commons.lang3.concurrent.ConcurrentUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #31                         // org/apache/commons/lang3/concurrent/ConcurrentUtils\n   super_class: #19                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 13, attributes: 2\n Constant pool:\n-    #1 = Methodref          #19.#70       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #71.#72       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-    #3 = Methodref          #31.#73       // org/apache/commons/lang3/concurrent/ConcurrentUtils.throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-    #4 = Class              #74           // org/apache/commons/lang3/concurrent/ConcurrentException\n-    #5 = Methodref          #71.#75       // java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n-    #6 = Methodref          #4.#76        // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-    #7 = Class              #77           // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n-    #8 = Methodref          #7.#76        // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-    #9 = Methodref          #31.#78       // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-   #10 = Methodref          #31.#79       // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-   #11 = Class              #80           // java/lang/RuntimeException\n-   #12 = Class              #81           // java/lang/Error\n-   #13 = Class              #82           // java/lang/StringBuilder\n-   #14 = Methodref          #13.#70       // java/lang/StringBuilder.\"<init>\":()V\n-   #15 = String             #83           // Not a checked exception:\n-   #16 = Methodref          #13.#84       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #13.#85       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #18 = Methodref          #13.#86       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #19 = Class              #87           // java/lang/Object\n-   #20 = Methodref          #88.#89       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #21 = InterfaceMethodref #90.#91       // org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n-   #22 = Methodref          #31.#92       // org/apache/commons/lang3/concurrent/ConcurrentUtils.initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #23 = Methodref          #4.#72        // org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n-   #24 = Methodref          #7.#93        // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #25 = InterfaceMethodref #94.#95       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #26 = InterfaceMethodref #94.#96       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #27 = Methodref          #31.#97       // org/apache/commons/lang3/concurrent/ConcurrentUtils.putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #28 = Methodref          #31.#98       // org/apache/commons/lang3/concurrent/ConcurrentUtils.createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #29 = Class              #99           // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n-   #30 = Methodref          #29.#100      // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n-   #31 = Class              #101          // org/apache/commons/lang3/concurrent/ConcurrentUtils\n+    #1 = Methodref          #19.#67       // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #68.#69       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+    #3 = Methodref          #31.#70       // org/apache/commons/lang3/concurrent/ConcurrentUtils.throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+    #4 = Class              #71           // org/apache/commons/lang3/concurrent/ConcurrentException\n+    #5 = Methodref          #68.#72       // java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n+    #6 = Methodref          #4.#73        // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+    #7 = Class              #74           // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+    #8 = Methodref          #7.#73        // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+    #9 = Methodref          #31.#75       // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+   #10 = Methodref          #31.#76       // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+   #11 = Class              #77           // java/lang/RuntimeException\n+   #12 = Class              #78           // java/lang/Error\n+   #13 = Class              #79           // java/lang/StringBuilder\n+   #14 = Methodref          #13.#67       // java/lang/StringBuilder.\"<init>\":()V\n+   #15 = String             #80           // Not a checked exception:\n+   #16 = Methodref          #13.#81       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #17 = Methodref          #13.#82       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #18 = Methodref          #13.#83       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #19 = Class              #84           // java/lang/Object\n+   #20 = Methodref          #85.#86       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #21 = InterfaceMethodref #87.#88       // org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n+   #22 = Methodref          #31.#89       // org/apache/commons/lang3/concurrent/ConcurrentUtils.initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #23 = Methodref          #4.#69        // org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n+   #24 = Methodref          #7.#90        // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #25 = InterfaceMethodref #91.#92       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #26 = InterfaceMethodref #91.#93       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #27 = Methodref          #31.#94       // org/apache/commons/lang3/concurrent/ConcurrentUtils.putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #28 = Methodref          #31.#95       // org/apache/commons/lang3/concurrent/ConcurrentUtils.createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #29 = Class              #96           // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n+   #30 = Methodref          #29.#97       // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n+   #31 = Class              #98           // org/apache/commons/lang3/concurrent/ConcurrentUtils\n    #32 = Utf8               ConstantFuture\n    #33 = Utf8               InnerClasses\n    #34 = Utf8               <init>\n    #35 = Utf8               ()V\n    #36 = Utf8               Code\n    #37 = Utf8               LineNumberTable\n    #38 = Utf8               extractCause\n    #39 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n    #40 = Utf8               StackMapTable\n    #41 = Utf8               extractCauseUnchecked\n    #42 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n    #43 = Utf8               handleCause\n    #44 = Utf8               (Ljava/util/concurrent/ExecutionException;)V\n-   #45 = Class              #74           // org/apache/commons/lang3/concurrent/ConcurrentException\n-   #46 = Utf8               Exceptions\n-   #47 = Utf8               handleCauseUnchecked\n-   #48 = Class              #77           // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n-   #49 = Utf8               checkedException\n-   #50 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-   #51 = Utf8               throwCause\n-   #52 = Utf8               initialize\n-   #53 = Utf8               (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #54 = Class              #87           // java/lang/Object\n-   #55 = Utf8               Signature\n-   #56 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n-   #57 = Utf8               initializeUnchecked\n-   #58 = Utf8               putIfAbsent\n-   #59 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #60 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n-   #61 = Utf8               createIfAbsent\n-   #62 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #63 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n-   #64 = Utf8               createIfAbsentUnchecked\n-   #65 = Utf8               constantFuture\n-   #66 = Utf8               (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n-   #67 = Utf8               <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n-   #68 = Utf8               SourceFile\n-   #69 = Utf8               ConcurrentUtils.java\n-   #70 = NameAndType        #34:#35       // \"<init>\":()V\n-   #71 = Class              #102          // java/util/concurrent/ExecutionException\n-   #72 = NameAndType        #103:#104     // getCause:()Ljava/lang/Throwable;\n-   #73 = NameAndType        #51:#44       // throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-   #74 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n-   #75 = NameAndType        #105:#106     // getMessage:()Ljava/lang/String;\n-   #76 = NameAndType        #34:#107      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #77 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n-   #78 = NameAndType        #38:#39       // extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-   #79 = NameAndType        #41:#42       // extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-   #80 = Utf8               java/lang/RuntimeException\n-   #81 = Utf8               java/lang/Error\n-   #82 = Utf8               java/lang/StringBuilder\n-   #83 = Utf8               Not a checked exception:\n-   #84 = NameAndType        #108:#109     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #85 = NameAndType        #108:#110     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #86 = NameAndType        #111:#106     // toString:()Ljava/lang/String;\n-   #87 = Utf8               java/lang/Object\n-   #88 = Class              #112          // org/apache/commons/lang3/Validate\n-   #89 = NameAndType        #113:#114     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #90 = Class              #115          // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-   #91 = NameAndType        #116:#117     // get:()Ljava/lang/Object;\n-   #92 = NameAndType        #52:#53       // initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #93 = NameAndType        #34:#118      // \"<init>\":(Ljava/lang/Throwable;)V\n-   #94 = Class              #119          // java/util/concurrent/ConcurrentMap\n-   #95 = NameAndType        #58:#120      // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #96 = NameAndType        #116:#121     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #97 = NameAndType        #58:#59       // putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #98 = NameAndType        #61:#62       // createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #99 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n-  #100 = NameAndType        #34:#122      // \"<init>\":(Ljava/lang/Object;)V\n-  #101 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n-  #102 = Utf8               java/util/concurrent/ExecutionException\n-  #103 = Utf8               getCause\n-  #104 = Utf8               ()Ljava/lang/Throwable;\n-  #105 = Utf8               getMessage\n-  #106 = Utf8               ()Ljava/lang/String;\n-  #107 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #108 = Utf8               append\n-  #109 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #110 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #111 = Utf8               toString\n-  #112 = Utf8               org/apache/commons/lang3/Validate\n-  #113 = Utf8               isTrue\n-  #114 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #115 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-  #116 = Utf8               get\n-  #117 = Utf8               ()Ljava/lang/Object;\n-  #118 = Utf8               (Ljava/lang/Throwable;)V\n-  #119 = Utf8               java/util/concurrent/ConcurrentMap\n-  #120 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #121 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #122 = Utf8               (Ljava/lang/Object;)V\n+   #45 = Utf8               Exceptions\n+   #46 = Utf8               handleCauseUnchecked\n+   #47 = Utf8               checkedException\n+   #48 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+   #49 = Utf8               throwCause\n+   #50 = Utf8               initialize\n+   #51 = Utf8               (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #52 = Utf8               Signature\n+   #53 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n+   #54 = Utf8               initializeUnchecked\n+   #55 = Utf8               putIfAbsent\n+   #56 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #57 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n+   #58 = Utf8               createIfAbsent\n+   #59 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #60 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n+   #61 = Utf8               createIfAbsentUnchecked\n+   #62 = Utf8               constantFuture\n+   #63 = Utf8               (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n+   #64 = Utf8               <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n+   #65 = Utf8               SourceFile\n+   #66 = Utf8               ConcurrentUtils.java\n+   #67 = NameAndType        #34:#35       // \"<init>\":()V\n+   #68 = Class              #99           // java/util/concurrent/ExecutionException\n+   #69 = NameAndType        #100:#101     // getCause:()Ljava/lang/Throwable;\n+   #70 = NameAndType        #49:#44       // throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+   #71 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n+   #72 = NameAndType        #102:#103     // getMessage:()Ljava/lang/String;\n+   #73 = NameAndType        #34:#104      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #74 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+   #75 = NameAndType        #38:#39       // extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+   #76 = NameAndType        #41:#42       // extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+   #77 = Utf8               java/lang/RuntimeException\n+   #78 = Utf8               java/lang/Error\n+   #79 = Utf8               java/lang/StringBuilder\n+   #80 = Utf8               Not a checked exception:\n+   #81 = NameAndType        #105:#106     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #82 = NameAndType        #105:#107     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #83 = NameAndType        #108:#103     // toString:()Ljava/lang/String;\n+   #84 = Utf8               java/lang/Object\n+   #85 = Class              #109          // org/apache/commons/lang3/Validate\n+   #86 = NameAndType        #110:#111     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #87 = Class              #112          // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+   #88 = NameAndType        #113:#114     // get:()Ljava/lang/Object;\n+   #89 = NameAndType        #50:#51       // initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #90 = NameAndType        #34:#115      // \"<init>\":(Ljava/lang/Throwable;)V\n+   #91 = Class              #116          // java/util/concurrent/ConcurrentMap\n+   #92 = NameAndType        #55:#117      // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #93 = NameAndType        #113:#118     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #94 = NameAndType        #55:#56       // putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #95 = NameAndType        #58:#59       // createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #96 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n+   #97 = NameAndType        #34:#119      // \"<init>\":(Ljava/lang/Object;)V\n+   #98 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n+   #99 = Utf8               java/util/concurrent/ExecutionException\n+  #100 = Utf8               getCause\n+  #101 = Utf8               ()Ljava/lang/Throwable;\n+  #102 = Utf8               getMessage\n+  #103 = Utf8               ()Ljava/lang/String;\n+  #104 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #105 = Utf8               append\n+  #106 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #107 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #108 = Utf8               toString\n+  #109 = Utf8               org/apache/commons/lang3/Validate\n+  #110 = Utf8               isTrue\n+  #111 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #112 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+  #113 = Utf8               get\n+  #114 = Utf8               ()Ljava/lang/Object;\n+  #115 = Utf8               (Ljava/lang/Throwable;)V\n+  #116 = Utf8               java/util/concurrent/ConcurrentMap\n+  #117 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #118 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #119 = Utf8               (Ljava/lang/Object;)V\n {\n   private org.apache.commons.lang3.concurrent.ConcurrentUtils();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -338,15 +335,15 @@\n         line 183: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 13 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #56                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n+    Signature: #53                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n \n   public static <T extends java.lang.Object> T initializeUnchecked(org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n@@ -365,15 +362,15 @@\n       LineNumberTable:\n         line 201: 0\n         line 202: 5\n         line 203: 6\n       StackMapTable: number_of_entries = 1\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]\n-    Signature: #56                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n+    Signature: #53                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V putIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, V);\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n@@ -399,15 +396,15 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 16\n           locals = [ class java/lang/Object ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n-    Signature: #60                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n+    Signature: #57                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V createIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>) throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n@@ -441,15 +438,15 @@\n         frame_type = 8 /* same */\n         frame_type = 1 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 23\n           locals = [ class java/lang/Object ]\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #63                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n+    Signature: #60                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V createIfAbsentUnchecked(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>);\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n@@ -470,26 +467,26 @@\n       LineNumberTable:\n         line 302: 0\n         line 303: 7\n         line 304: 8\n       StackMapTable: number_of_entries = 1\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]\n-    Signature: #63                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n+    Signature: #60                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n \n   public static <T extends java.lang.Object> java.util.concurrent.Future<T> constantFuture(T);\n     descriptor: (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: new           #29                 // class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n          3: dup\n          4: aload_0\n          5: invokespecial #30                 // Method org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n          8: areturn\n       LineNumberTable:\n         line 325: 0\n-    Signature: #67                          // <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n+    Signature: #64                          // <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n }\n SourceFile: \"ConcurrentUtils.java\"\n InnerClasses:\n   static final #32= #29 of #31;           // ConstantFuture=class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture of class org/apache/commons/lang3/concurrent/ConcurrentUtils\n"}]}
