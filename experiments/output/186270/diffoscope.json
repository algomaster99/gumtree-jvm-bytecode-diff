{"diffoscope-json-version": 1, "source1": "first/DaitchMokotoffSoundex.class", "source2": "second/DaitchMokotoffSoundex.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,424 +1,424 @@\n-  SHA-256 checksum 3ddc2411aa92817df8e89d979cf476f47afc22f8b84eb708aa7367f4ad85549d\n+  SHA-256 checksum f717c113bcab4214df8bf9ea97db5e399565521eba93dd3aa24c8d4b94297488\n   Compiled from \"DaitchMokotoffSoundex.java\"\n public class org.apache.commons.codec.language.DaitchMokotoffSoundex implements org.apache.commons.codec.StringEncoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #3                          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  super_class: #107                       // java/lang/Object\n+  this_class: #11                         // org/apache/commons/codec/language/DaitchMokotoffSoundex\n+  super_class: #146                       // java/lang/Object\n   interfaces: 1, fields: 9, methods: 10, attributes: 2\n Constant pool:\n-    #1 = Methodref          #93.#220      // java/util/Scanner.hasNextLine:()Z\n-    #2 = Methodref          #93.#221      // java/util/Scanner.nextLine:()Ljava/lang/String;\n-    #3 = Class              #222          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n-    #4 = String             #223          // */\n-    #5 = Methodref          #58.#224      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-    #6 = String             #225          // /*\n-    #7 = Methodref          #58.#226      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-    #8 = String             #227          // //\n-    #9 = Methodref          #58.#228      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #10 = Methodref          #58.#229      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #11 = Methodref          #58.#230      // java/lang/String.trim:()Ljava/lang/String;\n-   #12 = Methodref          #58.#231      // java/lang/String.length:()I\n-   #13 = String             #232          // =\n-   #14 = Methodref          #58.#233      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #15 = Methodref          #58.#234      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n-   #16 = Class              #235          // java/lang/IllegalArgumentException\n-   #17 = Class              #236          // java/lang/StringBuilder\n-   #18 = Methodref          #17.#237      // java/lang/StringBuilder.\"<init>\":()V\n-   #19 = String             #238          // Malformed folding statement split into\n-   #20 = Methodref          #17.#239      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #21 = Methodref          #17.#240      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #22 = String             #241          //  parts:\n-   #23 = String             #242          //  in\n-   #24 = Methodref          #17.#243      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #16.#244      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #26 = String             #245          // Malformed folding statement - patterns are not single characters:\n-   #27 = Methodref          #58.#246      // java/lang/String.charAt:(I)C\n-   #28 = Methodref          #55.#247      // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #29 = InterfaceMethodref #165.#248     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #30 = String             #249          // \\\\s+\n-   #31 = String             #250          // Malformed rule statement split into\n-   #32 = Methodref          #3.#251       // org/apache/commons/codec/language/DaitchMokotoffSoundex.stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n-   #33 = Class              #252          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n-   #34 = Methodref          #33.#253      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #35 = Methodref          #33.#254      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-   #36 = InterfaceMethodref #165.#255     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #37 = Class              #256          // java/util/List\n-   #38 = Class              #257          // java/util/ArrayList\n-   #39 = Methodref          #38.#237      // java/util/ArrayList.\"<init>\":()V\n-   #40 = InterfaceMethodref #37.#258      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #41 = Class              #259          // java/lang/IllegalStateException\n-   #42 = String             #260          // Problem parsing line \\'\n-   #43 = String             #261          // \\' in\n-   #44 = Methodref          #41.#262      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #45 = String             #263          // \\\"\n-   #46 = Methodref          #58.#264      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #47 = Methodref          #3.#265       // org/apache/commons/codec/language/DaitchMokotoffSoundex.\"<init>\":(Z)V\n-   #48 = Methodref          #107.#237     // java/lang/Object.\"<init>\":()V\n-   #49 = Fieldref           #3.#266       // org/apache/commons/codec/language/DaitchMokotoffSoundex.folding:Z\n-   #50 = Methodref          #58.#267      // java/lang/String.toCharArray:()[C\n-   #51 = Methodref          #55.#268      // java/lang/Character.isWhitespace:(C)Z\n-   #52 = Methodref          #55.#269      // java/lang/Character.toLowerCase:(C)C\n-   #53 = Fieldref           #3.#270       // org/apache/commons/codec/language/DaitchMokotoffSoundex.FOLDINGS:Ljava/util/Map;\n-   #54 = InterfaceMethodref #165.#271     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n-   #55 = Class              #272          // java/lang/Character\n-   #56 = Methodref          #55.#273      // java/lang/Character.charValue:()C\n-   #57 = Methodref          #17.#274      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #58 = Class              #275          // java/lang/String\n-   #59 = Class              #276          // org/apache/commons/codec/EncoderException\n-   #60 = String             #277          // Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n-   #61 = Methodref          #59.#244      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #62 = Methodref          #3.#278       // org/apache/commons/codec/language/DaitchMokotoffSoundex.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #63 = Methodref          #3.#279       // org/apache/commons/codec/language/DaitchMokotoffSoundex.soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n-   #64 = Methodref          #3.#280       // org/apache/commons/codec/language/DaitchMokotoffSoundex.cleanup:(Ljava/lang/String;)Ljava/lang/String;\n-   #65 = Class              #281          // java/util/LinkedHashSet\n-   #66 = Methodref          #65.#237      // java/util/LinkedHashSet.\"<init>\":()V\n-   #67 = Class              #282          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n-   #68 = Methodref          #67.#283      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-   #69 = InterfaceMethodref #208.#258     // java/util/Set.add:(Ljava/lang/Object;)Z\n-   #70 = Fieldref           #3.#284       // org/apache/commons/codec/language/DaitchMokotoffSoundex.RULES:Ljava/util/Map;\n-   #71 = Fieldref           #285.#286     // java/util/Collections.EMPTY_LIST:Ljava/util/List;\n-   #72 = InterfaceMethodref #37.#287      // java/util/List.iterator:()Ljava/util/Iterator;\n-   #73 = InterfaceMethodref #209.#288     // java/util/Iterator.hasNext:()Z\n-   #74 = InterfaceMethodref #209.#289     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #75 = Methodref          #33.#290      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n-   #76 = InterfaceMethodref #37.#291      // java/util/List.clear:()V\n-   #77 = Methodref          #33.#292      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n-   #78 = InterfaceMethodref #208.#287     // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #79 = Methodref          #67.#293      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-   #80 = Methodref          #67.#294      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n-   #81 = InterfaceMethodref #208.#291     // java/util/Set.clear:()V\n-   #82 = InterfaceMethodref #208.#295     // java/util/Set.addAll:(Ljava/util/Collection;)Z\n-   #83 = Methodref          #33.#296      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n-   #84 = InterfaceMethodref #208.#297     // java/util/Set.size:()I\n-   #85 = Methodref          #67.#298      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n-   #86 = Methodref          #67.#243      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n-   #87 = Class              #299          // java/util/HashMap\n-   #88 = Methodref          #87.#237      // java/util/HashMap.\"<init>\":()V\n-   #89 = Methodref          #300.#301     // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n-   #90 = String             #302          // org/apache/commons/codec/language/dmrules.txt\n-   #91 = Methodref          #303.#304     // java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-   #92 = String             #305          // Unable to load resource: org/apache/commons/codec/language/dmrules.txt\n-   #93 = Class              #306          // java/util/Scanner\n-   #94 = Class              #307          // org/apache/commons/codec/CharEncoding\n-   #95 = String             #308          // UTF-8\n-   #96 = Methodref          #93.#309      // java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #97 = Methodref          #3.#310       // org/apache/commons/codec/language/DaitchMokotoffSoundex.parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-   #98 = Methodref          #93.#311      // java/util/Scanner.close:()V\n-   #99 = Class              #312          // java/lang/Throwable\n-  #100 = Methodref          #99.#313      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-  #101 = InterfaceMethodref #165.#314     // java/util/Map.entrySet:()Ljava/util/Set;\n-  #102 = Class              #315          // java/util/Map$Entry\n-  #103 = InterfaceMethodref #102.#316     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-  #104 = Class              #317          // org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  #105 = Methodref          #104.#237     // org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n-  #106 = Methodref          #285.#318     // java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n-  #107 = Class              #319          // java/lang/Object\n-  #108 = Class              #320          // org/apache/commons/codec/StringEncoder\n-  #109 = Utf8               Rule\n-  #110 = Utf8               InnerClasses\n-  #111 = Utf8               Branch\n-  #112 = Utf8               COMMENT\n-  #113 = Utf8               Ljava/lang/String;\n-  #114 = Utf8               ConstantValue\n-  #115 = Utf8               DOUBLE_QUOTE\n-  #116 = Utf8               MULTILINE_COMMENT_END\n-  #117 = Utf8               MULTILINE_COMMENT_START\n-  #118 = Utf8               RESOURCE_FILE\n-  #119 = Utf8               MAX_LENGTH\n-  #120 = Utf8               I\n-  #121 = Integer            6\n-  #122 = Utf8               RULES\n-  #123 = Utf8               Ljava/util/Map;\n-  #124 = Utf8               Signature\n-  #125 = Utf8               Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n-  #126 = Utf8               FOLDINGS\n-  #127 = Utf8               Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;\n-  #128 = Utf8               folding\n-  #129 = Utf8               Z\n-  #130 = Utf8               parseRules\n-  #131 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-  #132 = Utf8               Code\n-  #133 = Utf8               LineNumberTable\n-  #134 = Utf8               LocalVariableTable\n-  #135 = Utf8               parts\n-  #136 = Utf8               [Ljava/lang/String;\n-  #137 = Utf8               leftCharacter\n-  #138 = Utf8               rightCharacter\n-  #139 = Utf8               pattern\n-  #140 = Utf8               replacement1\n-  #141 = Utf8               replacement2\n-  #142 = Utf8               replacement3\n-  #143 = Utf8               r\n-  #144 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;\n-  #145 = Utf8               patternKey\n-  #146 = Utf8               C\n-  #147 = Utf8               rules\n-  #148 = Utf8               Ljava/util/List;\n-  #149 = Utf8               e\n-  #150 = Utf8               Ljava/lang/IllegalArgumentException;\n-  #151 = Utf8               cmtI\n-  #152 = Utf8               rawLine\n-  #153 = Utf8               line\n-  #154 = Utf8               scanner\n-  #155 = Utf8               Ljava/util/Scanner;\n-  #156 = Utf8               location\n-  #157 = Utf8               ruleMapping\n-  #158 = Utf8               asciiFoldings\n-  #159 = Utf8               currentLine\n-  #160 = Utf8               inMultilineComment\n-  #161 = Utf8               LocalVariableTypeTable\n-  #162 = Utf8               Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;\n-  #163 = Utf8               StackMapTable\n-  #164 = Class              #136          // \"[Ljava/lang/String;\"\n-  #165 = Class              #321          // java/util/Map\n-  #166 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n-  #167 = Utf8               stripQuotes\n-  #168 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #169 = Utf8               str\n-  #170 = Utf8               <init>\n-  #171 = Utf8               ()V\n-  #172 = Utf8               this\n-  #173 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex;\n-  #174 = Utf8               (Z)V\n-  #175 = Utf8               cleanup\n-  #176 = Utf8               ch\n-  #177 = Utf8               input\n-  #178 = Utf8               sb\n-  #179 = Utf8               Ljava/lang/StringBuilder;\n-  #180 = Class              #322          // \"[C\"\n-  #181 = Utf8               encode\n-  #182 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #183 = Utf8               obj\n-  #184 = Utf8               Ljava/lang/Object;\n-  #185 = Utf8               Exceptions\n-  #186 = Utf8               source\n-  #187 = Utf8               soundex\n-  #188 = Utf8               branch\n-  #189 = Utf8               branches\n-  #190 = Utf8               index\n-  #191 = Utf8               (Ljava/lang/String;Z)[Ljava/lang/String;\n-  #192 = Utf8               nextBranch\n-  #193 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-  #194 = Utf8               force\n-  #195 = Utf8               nextReplacement\n-  #196 = Utf8               replacements\n-  #197 = Utf8               branchingRequired\n-  #198 = Utf8               rule\n-  #199 = Utf8               inputContext\n-  #200 = Utf8               nextBranches\n-  #201 = Utf8               branching\n-  #202 = Utf8               currentBranches\n-  #203 = Utf8               Ljava/util/Set;\n-  #204 = Utf8               lastChar\n-  #205 = Utf8               result\n-  #206 = Utf8               Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n-  #207 = Utf8               Ljava/util/Set<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n-  #208 = Class              #323          // java/util/Set\n-  #209 = Class              #324          // java/util/Iterator\n-  #210 = Utf8               <clinit>\n-  #211 = Utf8               ruleList\n-  #212 = Utf8               Entry\n-  #213 = Utf8               Ljava/util/Map$Entry;\n-  #214 = Utf8               rulesIS\n-  #215 = Utf8               Ljava/io/InputStream;\n-  #216 = Utf8               Ljava/util/Map$Entry<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n-  #217 = Class              #325          // java/io/InputStream\n-  #218 = Utf8               SourceFile\n-  #219 = Utf8               DaitchMokotoffSoundex.java\n-  #220 = NameAndType        #326:#327     // hasNextLine:()Z\n-  #221 = NameAndType        #328:#329     // nextLine:()Ljava/lang/String;\n-  #222 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  #223 = Utf8               */\n-  #224 = NameAndType        #330:#331     // endsWith:(Ljava/lang/String;)Z\n-  #225 = Utf8               /*\n-  #226 = NameAndType        #332:#331     // startsWith:(Ljava/lang/String;)Z\n-  #227 = Utf8               //\n-  #228 = NameAndType        #333:#334     // indexOf:(Ljava/lang/String;)I\n-  #229 = NameAndType        #335:#336     // substring:(II)Ljava/lang/String;\n-  #230 = NameAndType        #337:#329     // trim:()Ljava/lang/String;\n-  #231 = NameAndType        #338:#339     // length:()I\n-  #232 = Utf8               =\n-  #233 = NameAndType        #340:#341     // contains:(Ljava/lang/CharSequence;)Z\n-  #234 = NameAndType        #342:#343     // split:(Ljava/lang/String;)[Ljava/lang/String;\n-  #235 = Utf8               java/lang/IllegalArgumentException\n-  #236 = Utf8               java/lang/StringBuilder\n-  #237 = NameAndType        #170:#171     // \"<init>\":()V\n-  #238 = Utf8               Malformed folding statement split into\n-  #239 = NameAndType        #344:#345     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #240 = NameAndType        #344:#346     // append:(I)Ljava/lang/StringBuilder;\n-  #241 = Utf8                parts:\n-  #242 = Utf8                in\n-  #243 = NameAndType        #347:#329     // toString:()Ljava/lang/String;\n-  #244 = NameAndType        #170:#348     // \"<init>\":(Ljava/lang/String;)V\n-  #245 = Utf8               Malformed folding statement - patterns are not single characters:\n-  #246 = NameAndType        #349:#350     // charAt:(I)C\n-  #247 = NameAndType        #351:#352     // valueOf:(C)Ljava/lang/Character;\n-  #248 = NameAndType        #353:#354     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #249 = Utf8               \\\\s+\n-  #250 = Utf8               Malformed rule statement split into\n-  #251 = NameAndType        #167:#168     // stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n-  #252 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n-  #253 = NameAndType        #170:#355     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #254 = NameAndType        #356:#357     // access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-  #255 = NameAndType        #358:#182     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #256 = Utf8               java/util/List\n-  #257 = Utf8               java/util/ArrayList\n-  #258 = NameAndType        #359:#360     // add:(Ljava/lang/Object;)Z\n-  #259 = Utf8               java/lang/IllegalStateException\n-  #260 = Utf8               Problem parsing line \\'\n-  #261 = Utf8               \\' in\n-  #262 = NameAndType        #170:#361     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #263 = Utf8               \\\"\n-  #264 = NameAndType        #335:#362     // substring:(I)Ljava/lang/String;\n-  #265 = NameAndType        #170:#174     // \"<init>\":(Z)V\n-  #266 = NameAndType        #128:#129     // folding:Z\n-  #267 = NameAndType        #363:#364     // toCharArray:()[C\n-  #268 = NameAndType        #365:#366     // isWhitespace:(C)Z\n-  #269 = NameAndType        #367:#368     // toLowerCase:(C)C\n-  #270 = NameAndType        #126:#123     // FOLDINGS:Ljava/util/Map;\n-  #271 = NameAndType        #369:#360     // containsKey:(Ljava/lang/Object;)Z\n-  #272 = Utf8               java/lang/Character\n-  #273 = NameAndType        #370:#371     // charValue:()C\n-  #274 = NameAndType        #344:#372     // append:(C)Ljava/lang/StringBuilder;\n-  #275 = Utf8               java/lang/String\n-  #276 = Utf8               org/apache/commons/codec/EncoderException\n-  #277 = Utf8               Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n-  #278 = NameAndType        #181:#168     // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #279 = NameAndType        #187:#191     // soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n-  #280 = NameAndType        #175:#168     // cleanup:(Ljava/lang/String;)Ljava/lang/String;\n-  #281 = Utf8               java/util/LinkedHashSet\n-  #282 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n-  #283 = NameAndType        #170:#373     // \"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-  #284 = NameAndType        #122:#123     // RULES:Ljava/util/Map;\n-  #285 = Class              #374          // java/util/Collections\n-  #286 = NameAndType        #375:#148     // EMPTY_LIST:Ljava/util/List;\n-  #287 = NameAndType        #376:#377     // iterator:()Ljava/util/Iterator;\n-  #288 = NameAndType        #378:#327     // hasNext:()Z\n-  #289 = NameAndType        #379:#380     // next:()Ljava/lang/Object;\n-  #290 = NameAndType        #381:#331     // matches:(Ljava/lang/String;)Z\n-  #291 = NameAndType        #382:#171     // clear:()V\n-  #292 = NameAndType        #383:#191     // getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n-  #293 = NameAndType        #384:#385     // createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-  #294 = NameAndType        #386:#387     // processNextReplacement:(Ljava/lang/String;Z)V\n-  #295 = NameAndType        #388:#389     // addAll:(Ljava/util/Collection;)Z\n-  #296 = NameAndType        #390:#339     // getPatternLength:()I\n-  #297 = NameAndType        #391:#339     // size:()I\n-  #298 = NameAndType        #392:#171     // finish:()V\n-  #299 = Utf8               java/util/HashMap\n-  #300 = Class              #393          // java/lang/Class\n-  #301 = NameAndType        #394:#395     // getClassLoader:()Ljava/lang/ClassLoader;\n-  #302 = Utf8               org/apache/commons/codec/language/dmrules.txt\n-  #303 = Class              #396          // java/lang/ClassLoader\n-  #304 = NameAndType        #397:#398     // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-  #305 = Utf8               Unable to load resource: org/apache/commons/codec/language/dmrules.txt\n-  #306 = Utf8               java/util/Scanner\n-  #307 = Utf8               org/apache/commons/codec/CharEncoding\n-  #308 = Utf8               UTF-8\n-  #309 = NameAndType        #170:#399     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #310 = NameAndType        #130:#131     // parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-  #311 = NameAndType        #400:#171     // close:()V\n-  #312 = Utf8               java/lang/Throwable\n-  #313 = NameAndType        #401:#402     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #314 = NameAndType        #403:#404     // entrySet:()Ljava/util/Set;\n-  #315 = Utf8               java/util/Map$Entry\n-  #316 = NameAndType        #405:#380     // getValue:()Ljava/lang/Object;\n-  #317 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  #318 = NameAndType        #406:#407     // sort:(Ljava/util/List;Ljava/util/Comparator;)V\n-  #319 = Utf8               java/lang/Object\n-  #320 = Utf8               org/apache/commons/codec/StringEncoder\n-  #321 = Utf8               java/util/Map\n-  #322 = Utf8               [C\n-  #323 = Utf8               java/util/Set\n-  #324 = Utf8               java/util/Iterator\n-  #325 = Utf8               java/io/InputStream\n-  #326 = Utf8               hasNextLine\n-  #327 = Utf8               ()Z\n-  #328 = Utf8               nextLine\n-  #329 = Utf8               ()Ljava/lang/String;\n-  #330 = Utf8               endsWith\n-  #331 = Utf8               (Ljava/lang/String;)Z\n-  #332 = Utf8               startsWith\n-  #333 = Utf8               indexOf\n-  #334 = Utf8               (Ljava/lang/String;)I\n-  #335 = Utf8               substring\n-  #336 = Utf8               (II)Ljava/lang/String;\n-  #337 = Utf8               trim\n-  #338 = Utf8               length\n-  #339 = Utf8               ()I\n-  #340 = Utf8               contains\n-  #341 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #342 = Utf8               split\n-  #343 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #344 = Utf8               append\n-  #345 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #346 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #347 = Utf8               toString\n-  #348 = Utf8               (Ljava/lang/String;)V\n-  #349 = Utf8               charAt\n-  #350 = Utf8               (I)C\n-  #351 = Utf8               valueOf\n-  #352 = Utf8               (C)Ljava/lang/Character;\n-  #353 = Utf8               put\n-  #354 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #355 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #356 = Utf8               access$000\n-  #357 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-  #358 = Utf8               get\n-  #359 = Utf8               add\n-  #360 = Utf8               (Ljava/lang/Object;)Z\n-  #361 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #362 = Utf8               (I)Ljava/lang/String;\n-  #363 = Utf8               toCharArray\n-  #364 = Utf8               ()[C\n-  #365 = Utf8               isWhitespace\n-  #366 = Utf8               (C)Z\n-  #367 = Utf8               toLowerCase\n-  #368 = Utf8               (C)C\n-  #369 = Utf8               containsKey\n-  #370 = Utf8               charValue\n-  #371 = Utf8               ()C\n-  #372 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #373 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-  #374 = Utf8               java/util/Collections\n-  #375 = Utf8               EMPTY_LIST\n-  #376 = Utf8               iterator\n-  #377 = Utf8               ()Ljava/util/Iterator;\n-  #378 = Utf8               hasNext\n-  #379 = Utf8               next\n-  #380 = Utf8               ()Ljava/lang/Object;\n-  #381 = Utf8               matches\n-  #382 = Utf8               clear\n-  #383 = Utf8               getReplacements\n-  #384 = Utf8               createBranch\n-  #385 = Utf8               ()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-  #386 = Utf8               processNextReplacement\n-  #387 = Utf8               (Ljava/lang/String;Z)V\n-  #388 = Utf8               addAll\n-  #389 = Utf8               (Ljava/util/Collection;)Z\n-  #390 = Utf8               getPatternLength\n-  #391 = Utf8               size\n-  #392 = Utf8               finish\n-  #393 = Utf8               java/lang/Class\n-  #394 = Utf8               getClassLoader\n-  #395 = Utf8               ()Ljava/lang/ClassLoader;\n-  #396 = Utf8               java/lang/ClassLoader\n-  #397 = Utf8               getResourceAsStream\n-  #398 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n-  #399 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #400 = Utf8               close\n-  #401 = Utf8               addSuppressed\n-  #402 = Utf8               (Ljava/lang/Throwable;)V\n-  #403 = Utf8               entrySet\n-  #404 = Utf8               ()Ljava/util/Set;\n-  #405 = Utf8               getValue\n-  #406 = Utf8               sort\n-  #407 = Utf8               (Ljava/util/List;Ljava/util/Comparator;)V\n+    #1 = Methodref          #2.#3         // java/util/Scanner.hasNextLine:()Z\n+    #2 = Class              #4            // java/util/Scanner\n+    #3 = NameAndType        #5:#6         // hasNextLine:()Z\n+    #4 = Utf8               java/util/Scanner\n+    #5 = Utf8               hasNextLine\n+    #6 = Utf8               ()Z\n+    #7 = Methodref          #2.#8         // java/util/Scanner.nextLine:()Ljava/lang/String;\n+    #8 = NameAndType        #9:#10        // nextLine:()Ljava/lang/String;\n+    #9 = Utf8               nextLine\n+   #10 = Utf8               ()Ljava/lang/String;\n+   #11 = Class              #12           // org/apache/commons/codec/language/DaitchMokotoffSoundex\n+   #12 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex\n+   #13 = String             #14           // */\n+   #14 = Utf8               */\n+   #15 = Methodref          #16.#17       // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+   #16 = Class              #18           // java/lang/String\n+   #17 = NameAndType        #19:#20       // endsWith:(Ljava/lang/String;)Z\n+   #18 = Utf8               java/lang/String\n+   #19 = Utf8               endsWith\n+   #20 = Utf8               (Ljava/lang/String;)Z\n+   #21 = String             #22           // /*\n+   #22 = Utf8               /*\n+   #23 = Methodref          #16.#24       // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #24 = NameAndType        #25:#20       // startsWith:(Ljava/lang/String;)Z\n+   #25 = Utf8               startsWith\n+   #26 = String             #27           // //\n+   #27 = Utf8               //\n+   #28 = Methodref          #16.#29       // java/lang/String.indexOf:(Ljava/lang/String;)I\n+   #29 = NameAndType        #30:#31       // indexOf:(Ljava/lang/String;)I\n+   #30 = Utf8               indexOf\n+   #31 = Utf8               (Ljava/lang/String;)I\n+   #32 = Methodref          #16.#33       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #33 = NameAndType        #34:#35       // substring:(II)Ljava/lang/String;\n+   #34 = Utf8               substring\n+   #35 = Utf8               (II)Ljava/lang/String;\n+   #36 = Methodref          #16.#37       // java/lang/String.trim:()Ljava/lang/String;\n+   #37 = NameAndType        #38:#10       // trim:()Ljava/lang/String;\n+   #38 = Utf8               trim\n+   #39 = Methodref          #16.#40       // java/lang/String.length:()I\n+   #40 = NameAndType        #41:#42       // length:()I\n+   #41 = Utf8               length\n+   #42 = Utf8               ()I\n+   #43 = String             #44           // =\n+   #44 = Utf8               =\n+   #45 = Methodref          #16.#46       // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+   #46 = NameAndType        #47:#48       // contains:(Ljava/lang/CharSequence;)Z\n+   #47 = Utf8               contains\n+   #48 = Utf8               (Ljava/lang/CharSequence;)Z\n+   #49 = Methodref          #16.#50       // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+   #50 = NameAndType        #51:#52       // split:(Ljava/lang/String;)[Ljava/lang/String;\n+   #51 = Utf8               split\n+   #52 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+   #53 = Class              #54           // java/lang/IllegalArgumentException\n+   #54 = Utf8               java/lang/IllegalArgumentException\n+   #55 = Class              #56           // java/lang/StringBuilder\n+   #56 = Utf8               java/lang/StringBuilder\n+   #57 = Methodref          #55.#58       // java/lang/StringBuilder.\"<init>\":()V\n+   #58 = NameAndType        #59:#60       // \"<init>\":()V\n+   #59 = Utf8               <init>\n+   #60 = Utf8               ()V\n+   #61 = String             #62           // Malformed folding statement split into\n+   #62 = Utf8               Malformed folding statement split into\n+   #63 = Methodref          #55.#64       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #64 = NameAndType        #65:#66       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #65 = Utf8               append\n+   #66 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #67 = Methodref          #55.#68       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #68 = NameAndType        #65:#69       // append:(I)Ljava/lang/StringBuilder;\n+   #69 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #70 = String             #71           //  parts:\n+   #71 = Utf8                parts:\n+   #72 = String             #73           //  in\n+   #73 = Utf8                in\n+   #74 = Methodref          #55.#75       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #75 = NameAndType        #76:#10       // toString:()Ljava/lang/String;\n+   #76 = Utf8               toString\n+   #77 = Methodref          #53.#78       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #78 = NameAndType        #59:#79       // \"<init>\":(Ljava/lang/String;)V\n+   #79 = Utf8               (Ljava/lang/String;)V\n+   #80 = String             #81           // Malformed folding statement - patterns are not single characters:\n+   #81 = Utf8               Malformed folding statement - patterns are not single characters:\n+   #82 = Methodref          #16.#83       // java/lang/String.charAt:(I)C\n+   #83 = NameAndType        #84:#85       // charAt:(I)C\n+   #84 = Utf8               charAt\n+   #85 = Utf8               (I)C\n+   #86 = Methodref          #87.#88       // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+   #87 = Class              #89           // java/lang/Character\n+   #88 = NameAndType        #90:#91       // valueOf:(C)Ljava/lang/Character;\n+   #89 = Utf8               java/lang/Character\n+   #90 = Utf8               valueOf\n+   #91 = Utf8               (C)Ljava/lang/Character;\n+   #92 = InterfaceMethodref #93.#94       // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #93 = Class              #95           // java/util/Map\n+   #94 = NameAndType        #96:#97       // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #95 = Utf8               java/util/Map\n+   #96 = Utf8               put\n+   #97 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #98 = String             #99           // \\\\s+\n+   #99 = Utf8               \\\\s+\n+  #100 = String             #101          // Malformed rule statement split into\n+  #101 = Utf8               Malformed rule statement split into\n+  #102 = Methodref          #11.#103      // org/apache/commons/codec/language/DaitchMokotoffSoundex.stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+  #103 = NameAndType        #104:#105     // stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+  #104 = Utf8               stripQuotes\n+  #105 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #106 = Class              #107          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+  #107 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+  #108 = Methodref          #106.#109     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #109 = NameAndType        #59:#110      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #110 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #111 = Methodref          #106.#112     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+  #112 = NameAndType        #113:#114     // access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+  #113 = Utf8               access$000\n+  #114 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+  #115 = InterfaceMethodref #93.#116      // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #116 = NameAndType        #117:#118     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #117 = Utf8               get\n+  #118 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #119 = Class              #120          // java/util/List\n+  #120 = Utf8               java/util/List\n+  #121 = Class              #122          // java/util/ArrayList\n+  #122 = Utf8               java/util/ArrayList\n+  #123 = Methodref          #121.#58      // java/util/ArrayList.\"<init>\":()V\n+  #124 = InterfaceMethodref #119.#125     // java/util/List.add:(Ljava/lang/Object;)Z\n+  #125 = NameAndType        #126:#127     // add:(Ljava/lang/Object;)Z\n+  #126 = Utf8               add\n+  #127 = Utf8               (Ljava/lang/Object;)Z\n+  #128 = Class              #129          // java/lang/IllegalStateException\n+  #129 = Utf8               java/lang/IllegalStateException\n+  #130 = String             #131          // Problem parsing line \\'\n+  #131 = Utf8               Problem parsing line \\'\n+  #132 = String             #133          // \\' in\n+  #133 = Utf8               \\' in\n+  #134 = Methodref          #128.#135     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #135 = NameAndType        #59:#136      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #136 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #137 = String             #138          // \\\"\n+  #138 = Utf8               \\\"\n+  #139 = Methodref          #16.#140      // java/lang/String.substring:(I)Ljava/lang/String;\n+  #140 = NameAndType        #34:#141      // substring:(I)Ljava/lang/String;\n+  #141 = Utf8               (I)Ljava/lang/String;\n+  #142 = Methodref          #11.#143      // org/apache/commons/codec/language/DaitchMokotoffSoundex.\"<init>\":(Z)V\n+  #143 = NameAndType        #59:#144      // \"<init>\":(Z)V\n+  #144 = Utf8               (Z)V\n+  #145 = Methodref          #146.#58      // java/lang/Object.\"<init>\":()V\n+  #146 = Class              #147          // java/lang/Object\n+  #147 = Utf8               java/lang/Object\n+  #148 = Fieldref           #11.#149      // org/apache/commons/codec/language/DaitchMokotoffSoundex.folding:Z\n+  #149 = NameAndType        #150:#151     // folding:Z\n+  #150 = Utf8               folding\n+  #151 = Utf8               Z\n+  #152 = Methodref          #16.#153      // java/lang/String.toCharArray:()[C\n+  #153 = NameAndType        #154:#155     // toCharArray:()[C\n+  #154 = Utf8               toCharArray\n+  #155 = Utf8               ()[C\n+  #156 = Methodref          #87.#157      // java/lang/Character.isWhitespace:(C)Z\n+  #157 = NameAndType        #158:#159     // isWhitespace:(C)Z\n+  #158 = Utf8               isWhitespace\n+  #159 = Utf8               (C)Z\n+  #160 = Methodref          #87.#161      // java/lang/Character.toLowerCase:(C)C\n+  #161 = NameAndType        #162:#163     // toLowerCase:(C)C\n+  #162 = Utf8               toLowerCase\n+  #163 = Utf8               (C)C\n+  #164 = Fieldref           #11.#165      // org/apache/commons/codec/language/DaitchMokotoffSoundex.FOLDINGS:Ljava/util/Map;\n+  #165 = NameAndType        #166:#167     // FOLDINGS:Ljava/util/Map;\n+  #166 = Utf8               FOLDINGS\n+  #167 = Utf8               Ljava/util/Map;\n+  #168 = InterfaceMethodref #93.#169      // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+  #169 = NameAndType        #170:#127     // containsKey:(Ljava/lang/Object;)Z\n+  #170 = Utf8               containsKey\n+  #171 = Methodref          #87.#172      // java/lang/Character.charValue:()C\n+  #172 = NameAndType        #173:#174     // charValue:()C\n+  #173 = Utf8               charValue\n+  #174 = Utf8               ()C\n+  #175 = Methodref          #55.#176      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #176 = NameAndType        #65:#177      // append:(C)Ljava/lang/StringBuilder;\n+  #177 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #178 = Class              #179          // org/apache/commons/codec/EncoderException\n+  #179 = Utf8               org/apache/commons/codec/EncoderException\n+  #180 = String             #181          // Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n+  #181 = Utf8               Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n+  #182 = Methodref          #178.#78      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+  #183 = Methodref          #11.#184      // org/apache/commons/codec/language/DaitchMokotoffSoundex.encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #184 = NameAndType        #185:#105     // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #185 = Utf8               encode\n+  #186 = Methodref          #11.#187      // org/apache/commons/codec/language/DaitchMokotoffSoundex.soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #187 = NameAndType        #188:#189     // soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #188 = Utf8               soundex\n+  #189 = Utf8               (Ljava/lang/String;Z)[Ljava/lang/String;\n+  #190 = Methodref          #11.#191      // org/apache/commons/codec/language/DaitchMokotoffSoundex.cleanup:(Ljava/lang/String;)Ljava/lang/String;\n+  #191 = NameAndType        #192:#105     // cleanup:(Ljava/lang/String;)Ljava/lang/String;\n+  #192 = Utf8               cleanup\n+  #193 = Class              #194          // java/util/LinkedHashSet\n+  #194 = Utf8               java/util/LinkedHashSet\n+  #195 = Methodref          #193.#58      // java/util/LinkedHashSet.\"<init>\":()V\n+  #196 = Class              #197          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+  #197 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+  #198 = Methodref          #196.#199     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+  #199 = NameAndType        #59:#200      // \"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+  #200 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+  #201 = InterfaceMethodref #202.#125     // java/util/Set.add:(Ljava/lang/Object;)Z\n+  #202 = Class              #203          // java/util/Set\n+  #203 = Utf8               java/util/Set\n+  #204 = Fieldref           #11.#205      // org/apache/commons/codec/language/DaitchMokotoffSoundex.RULES:Ljava/util/Map;\n+  #205 = NameAndType        #206:#167     // RULES:Ljava/util/Map;\n+  #206 = Utf8               RULES\n+  #207 = Fieldref           #208.#209     // java/util/Collections.EMPTY_LIST:Ljava/util/List;\n+  #208 = Class              #210          // java/util/Collections\n+  #209 = NameAndType        #211:#212     // EMPTY_LIST:Ljava/util/List;\n+  #210 = Utf8               java/util/Collections\n+  #211 = Utf8               EMPTY_LIST\n+  #212 = Utf8               Ljava/util/List;\n+  #213 = InterfaceMethodref #119.#214     // java/util/List.iterator:()Ljava/util/Iterator;\n+  #214 = NameAndType        #215:#216     // iterator:()Ljava/util/Iterator;\n+  #215 = Utf8               iterator\n+  #216 = Utf8               ()Ljava/util/Iterator;\n+  #217 = InterfaceMethodref #218.#219     // java/util/Iterator.hasNext:()Z\n+  #218 = Class              #220          // java/util/Iterator\n+  #219 = NameAndType        #221:#6       // hasNext:()Z\n+  #220 = Utf8               java/util/Iterator\n+  #221 = Utf8               hasNext\n+  #222 = InterfaceMethodref #218.#223     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #223 = NameAndType        #224:#225     // next:()Ljava/lang/Object;\n+  #224 = Utf8               next\n+  #225 = Utf8               ()Ljava/lang/Object;\n+  #226 = Methodref          #106.#227     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n+  #227 = NameAndType        #228:#20      // matches:(Ljava/lang/String;)Z\n+  #228 = Utf8               matches\n+  #229 = InterfaceMethodref #119.#230     // java/util/List.clear:()V\n+  #230 = NameAndType        #231:#60      // clear:()V\n+  #231 = Utf8               clear\n+  #232 = Methodref          #106.#233     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #233 = NameAndType        #234:#189     // getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #234 = Utf8               getReplacements\n+  #235 = InterfaceMethodref #202.#214     // java/util/Set.iterator:()Ljava/util/Iterator;\n+  #236 = Methodref          #196.#237     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #237 = NameAndType        #238:#239     // createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #238 = Utf8               createBranch\n+  #239 = Utf8               ()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #240 = Methodref          #196.#241     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n+  #241 = NameAndType        #242:#243     // processNextReplacement:(Ljava/lang/String;Z)V\n+  #242 = Utf8               processNextReplacement\n+  #243 = Utf8               (Ljava/lang/String;Z)V\n+  #244 = InterfaceMethodref #202.#230     // java/util/Set.clear:()V\n+  #245 = InterfaceMethodref #202.#246     // java/util/Set.addAll:(Ljava/util/Collection;)Z\n+  #246 = NameAndType        #247:#248     // addAll:(Ljava/util/Collection;)Z\n+  #247 = Utf8               addAll\n+  #248 = Utf8               (Ljava/util/Collection;)Z\n+  #249 = Methodref          #106.#250     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n+  #250 = NameAndType        #251:#42      // getPatternLength:()I\n+  #251 = Utf8               getPatternLength\n+  #252 = InterfaceMethodref #202.#253     // java/util/Set.size:()I\n+  #253 = NameAndType        #254:#42      // size:()I\n+  #254 = Utf8               size\n+  #255 = Methodref          #196.#256     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n+  #256 = NameAndType        #257:#60      // finish:()V\n+  #257 = Utf8               finish\n+  #258 = Methodref          #196.#75      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n+  #259 = Class              #260          // java/util/HashMap\n+  #260 = Utf8               java/util/HashMap\n+  #261 = Methodref          #259.#58      // java/util/HashMap.\"<init>\":()V\n+  #262 = Methodref          #263.#264     // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n+  #263 = Class              #265          // java/lang/Class\n+  #264 = NameAndType        #266:#267     // getClassLoader:()Ljava/lang/ClassLoader;\n+  #265 = Utf8               java/lang/Class\n+  #266 = Utf8               getClassLoader\n+  #267 = Utf8               ()Ljava/lang/ClassLoader;\n+  #268 = String             #269          // org/apache/commons/codec/language/dmrules.txt\n+  #269 = Utf8               org/apache/commons/codec/language/dmrules.txt\n+  #270 = Methodref          #271.#272     // java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+  #271 = Class              #273          // java/lang/ClassLoader\n+  #272 = NameAndType        #274:#275     // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+  #273 = Utf8               java/lang/ClassLoader\n+  #274 = Utf8               getResourceAsStream\n+  #275 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n+  #276 = String             #277          // Unable to load resource: org/apache/commons/codec/language/dmrules.txt\n+  #277 = Utf8               Unable to load resource: org/apache/commons/codec/language/dmrules.txt\n+  #278 = Class              #279          // org/apache/commons/codec/CharEncoding\n+  #279 = Utf8               org/apache/commons/codec/CharEncoding\n+  #280 = String             #281          // UTF-8\n+  #281 = Utf8               UTF-8\n+  #282 = Methodref          #2.#283       // java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #283 = NameAndType        #59:#284      // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #284 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #285 = Methodref          #11.#286      // org/apache/commons/codec/language/DaitchMokotoffSoundex.parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+  #286 = NameAndType        #287:#288     // parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+  #287 = Utf8               parseRules\n+  #288 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+  #289 = Methodref          #2.#290       // java/util/Scanner.close:()V\n+  #290 = NameAndType        #291:#60      // close:()V\n+  #291 = Utf8               close\n+  #292 = Class              #293          // java/lang/Throwable\n+  #293 = Utf8               java/lang/Throwable\n+  #294 = Methodref          #292.#295     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #295 = NameAndType        #296:#297     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #296 = Utf8               addSuppressed\n+  #297 = Utf8               (Ljava/lang/Throwable;)V\n+  #298 = InterfaceMethodref #93.#299      // java/util/Map.entrySet:()Ljava/util/Set;\n+  #299 = NameAndType        #300:#301     // entrySet:()Ljava/util/Set;\n+  #300 = Utf8               entrySet\n+  #301 = Utf8               ()Ljava/util/Set;\n+  #302 = Class              #303          // java/util/Map$Entry\n+  #303 = Utf8               java/util/Map$Entry\n+  #304 = InterfaceMethodref #302.#305     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+  #305 = NameAndType        #306:#225     // getValue:()Ljava/lang/Object;\n+  #306 = Utf8               getValue\n+  #307 = Class              #308          // org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  #308 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  #309 = Methodref          #307.#58      // org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n+  #310 = Methodref          #208.#311     // java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n+  #311 = NameAndType        #312:#313     // sort:(Ljava/util/List;Ljava/util/Comparator;)V\n+  #312 = Utf8               sort\n+  #313 = Utf8               (Ljava/util/List;Ljava/util/Comparator;)V\n+  #314 = Class              #315          // org/apache/commons/codec/StringEncoder\n+  #315 = Utf8               org/apache/commons/codec/StringEncoder\n+  #316 = Utf8               COMMENT\n+  #317 = Utf8               Ljava/lang/String;\n+  #318 = Utf8               ConstantValue\n+  #319 = Utf8               DOUBLE_QUOTE\n+  #320 = Utf8               MULTILINE_COMMENT_END\n+  #321 = Utf8               MULTILINE_COMMENT_START\n+  #322 = Utf8               RESOURCE_FILE\n+  #323 = Utf8               MAX_LENGTH\n+  #324 = Utf8               I\n+  #325 = Integer            6\n+  #326 = Utf8               Signature\n+  #327 = Utf8               Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n+  #328 = Utf8               Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;\n+  #329 = Utf8               Code\n+  #330 = Utf8               LineNumberTable\n+  #331 = Utf8               LocalVariableTable\n+  #332 = Utf8               parts\n+  #333 = Utf8               [Ljava/lang/String;\n+  #334 = Utf8               leftCharacter\n+  #335 = Utf8               rightCharacter\n+  #336 = Utf8               pattern\n+  #337 = Utf8               replacement1\n+  #338 = Utf8               replacement2\n+  #339 = Utf8               replacement3\n+  #340 = Utf8               r\n+  #341 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;\n+  #342 = Utf8               patternKey\n+  #343 = Utf8               C\n+  #344 = Utf8               rules\n+  #345 = Utf8               e\n+  #346 = Utf8               Ljava/lang/IllegalArgumentException;\n+  #347 = Utf8               cmtI\n+  #348 = Utf8               rawLine\n+  #349 = Utf8               line\n+  #350 = Utf8               scanner\n+  #351 = Utf8               Ljava/util/Scanner;\n+  #352 = Utf8               location\n+  #353 = Utf8               ruleMapping\n+  #354 = Utf8               asciiFoldings\n+  #355 = Utf8               currentLine\n+  #356 = Utf8               inMultilineComment\n+  #357 = Utf8               LocalVariableTypeTable\n+  #358 = Utf8               Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;\n+  #359 = Utf8               StackMapTable\n+  #360 = Class              #333          // \"[Ljava/lang/String;\"\n+  #361 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n+  #362 = Utf8               str\n+  #363 = Utf8               this\n+  #364 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex;\n+  #365 = Utf8               ch\n+  #366 = Utf8               input\n+  #367 = Utf8               sb\n+  #368 = Utf8               Ljava/lang/StringBuilder;\n+  #369 = Class              #370          // \"[C\"\n+  #370 = Utf8               [C\n+  #371 = Utf8               obj\n+  #372 = Utf8               Ljava/lang/Object;\n+  #373 = Utf8               Exceptions\n+  #374 = Utf8               source\n+  #375 = Utf8               branch\n+  #376 = Utf8               branches\n+  #377 = Utf8               index\n+  #378 = Utf8               nextBranch\n+  #379 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #380 = Utf8               force\n+  #381 = Utf8               nextReplacement\n+  #382 = Utf8               replacements\n+  #383 = Utf8               branchingRequired\n+  #384 = Utf8               rule\n+  #385 = Utf8               inputContext\n+  #386 = Utf8               nextBranches\n+  #387 = Utf8               branching\n+  #388 = Utf8               currentBranches\n+  #389 = Utf8               Ljava/util/Set;\n+  #390 = Utf8               lastChar\n+  #391 = Utf8               result\n+  #392 = Utf8               Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n+  #393 = Utf8               Ljava/util/Set<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n+  #394 = Utf8               <clinit>\n+  #395 = Utf8               ruleList\n+  #396 = Utf8               Ljava/util/Map$Entry;\n+  #397 = Utf8               rulesIS\n+  #398 = Utf8               Ljava/io/InputStream;\n+  #399 = Utf8               Ljava/util/Map$Entry<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n+  #400 = Class              #401          // java/io/InputStream\n+  #401 = Utf8               java/io/InputStream\n+  #402 = Utf8               SourceFile\n+  #403 = Utf8               DaitchMokotoffSoundex.java\n+  #404 = Utf8               InnerClasses\n+  #405 = Utf8               Rule\n+  #406 = Utf8               Branch\n+  #407 = Utf8               Entry\n {\n   private static final java.lang.String COMMENT = \"//\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String //\n \n   private static final java.lang.String DOUBLE_QUOTE = \"\\\"\";\n@@ -445,20 +445,20 @@\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 6\n \n   private static final java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule>> RULES;\n     descriptor: Ljava/util/Map;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n-    Signature: #125                         // Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n+    Signature: #327                         // Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n \n   private static final java.util.Map<java.lang.Character, java.lang.Character> FOLDINGS;\n     descriptor: Ljava/util/Map;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n-    Signature: #127                         // Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;\n+    Signature: #328                         // Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;\n \n   private final boolean folding;\n     descriptor: Z\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private static void parseRules(java.util.Scanner, java.lang.String, java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule>>, java.util.Map<java.lang.Character, java.lang.Character>);\n     descriptor: (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n@@ -470,231 +470,231 @@\n          3: iconst_0\n          4: istore        5\n          6: aload_0\n          7: invokevirtual #1                  // Method java/util/Scanner.hasNextLine:()Z\n         10: ifeq          503\n         13: iinc          4, 1\n         16: aload_0\n-        17: invokevirtual #2                  // Method java/util/Scanner.nextLine:()Ljava/lang/String;\n+        17: invokevirtual #7                  // Method java/util/Scanner.nextLine:()Ljava/lang/String;\n         20: astore        6\n         22: aload         6\n         24: astore        7\n         26: iload         5\n         28: ifeq          47\n         31: aload         7\n-        33: ldc           #4                  // String */\n-        35: invokevirtual #5                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        33: ldc           #13                 // String */\n+        35: invokevirtual #15                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         38: ifeq          6\n         41: iconst_0\n         42: istore        5\n         44: goto          6\n         47: aload         7\n-        49: ldc           #6                  // String /*\n-        51: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        49: ldc           #21                 // String /*\n+        51: invokevirtual #23                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         54: ifeq          63\n         57: iconst_1\n         58: istore        5\n         60: goto          500\n         63: aload         7\n-        65: ldc           #8                  // String //\n-        67: invokevirtual #9                  // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n+        65: ldc           #26                 // String //\n+        67: invokevirtual #28                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n         70: istore        8\n         72: iload         8\n         74: iflt          87\n         77: aload         7\n         79: iconst_0\n         80: iload         8\n-        82: invokevirtual #10                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        82: invokevirtual #32                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n         85: astore        7\n         87: aload         7\n-        89: invokevirtual #11                 // Method java/lang/String.trim:()Ljava/lang/String;\n+        89: invokevirtual #36                 // Method java/lang/String.trim:()Ljava/lang/String;\n         92: astore        7\n         94: aload         7\n-        96: invokevirtual #12                 // Method java/lang/String.length:()I\n+        96: invokevirtual #39                 // Method java/lang/String.length:()I\n         99: ifne          105\n        102: goto          6\n        105: aload         7\n-       107: ldc           #13                 // String =\n-       109: invokevirtual #14                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+       107: ldc           #43                 // String =\n+       109: invokevirtual #45                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n        112: ifeq          274\n        115: aload         7\n-       117: ldc           #13                 // String =\n-       119: invokevirtual #15                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+       117: ldc           #43                 // String =\n+       119: invokevirtual #49                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n        122: astore        9\n        124: aload         9\n        126: arraylength\n        127: iconst_2\n        128: if_icmpeq     179\n-       131: new           #16                 // class java/lang/IllegalArgumentException\n+       131: new           #53                 // class java/lang/IllegalArgumentException\n        134: dup\n-       135: new           #17                 // class java/lang/StringBuilder\n+       135: new           #55                 // class java/lang/StringBuilder\n        138: dup\n-       139: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       142: ldc           #19                 // String Malformed folding statement split into\n-       144: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       139: invokespecial #57                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       142: ldc           #61                 // String Malformed folding statement split into\n+       144: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        147: aload         9\n        149: arraylength\n-       150: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       153: ldc           #22                 // String  parts:\n-       155: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       150: invokevirtual #67                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       153: ldc           #70                 // String  parts:\n+       155: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        158: aload         6\n-       160: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       163: ldc           #23                 // String  in\n-       165: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       160: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       163: ldc           #72                 // String  in\n+       165: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        168: aload_1\n-       169: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       172: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       175: invokespecial #25                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       169: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       172: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       175: invokespecial #77                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        178: athrow\n        179: aload         9\n        181: iconst_0\n        182: aaload\n        183: astore        10\n        185: aload         9\n        187: iconst_1\n        188: aaload\n        189: astore        11\n        191: aload         10\n-       193: invokevirtual #12                 // Method java/lang/String.length:()I\n+       193: invokevirtual #39                 // Method java/lang/String.length:()I\n        196: iconst_1\n        197: if_icmpne     209\n        200: aload         11\n-       202: invokevirtual #12                 // Method java/lang/String.length:()I\n+       202: invokevirtual #39                 // Method java/lang/String.length:()I\n        205: iconst_1\n        206: if_icmpeq     246\n-       209: new           #16                 // class java/lang/IllegalArgumentException\n+       209: new           #53                 // class java/lang/IllegalArgumentException\n        212: dup\n-       213: new           #17                 // class java/lang/StringBuilder\n+       213: new           #55                 // class java/lang/StringBuilder\n        216: dup\n-       217: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       220: ldc           #26                 // String Malformed folding statement - patterns are not single characters:\n-       222: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       217: invokespecial #57                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       220: ldc           #80                 // String Malformed folding statement - patterns are not single characters:\n+       222: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        225: aload         6\n-       227: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       230: ldc           #23                 // String  in\n-       232: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       227: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       230: ldc           #72                 // String  in\n+       232: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        235: aload_1\n-       236: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       239: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       242: invokespecial #25                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       236: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       239: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       242: invokespecial #77                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        245: athrow\n        246: aload_3\n        247: aload         10\n        249: iconst_0\n-       250: invokevirtual #27                 // Method java/lang/String.charAt:(I)C\n-       253: invokestatic  #28                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+       250: invokevirtual #82                 // Method java/lang/String.charAt:(I)C\n+       253: invokestatic  #86                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n        256: aload         11\n        258: iconst_0\n-       259: invokevirtual #27                 // Method java/lang/String.charAt:(I)C\n-       262: invokestatic  #28                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-       265: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       259: invokevirtual #82                 // Method java/lang/String.charAt:(I)C\n+       262: invokestatic  #86                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+       265: invokeinterface #92,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n        270: pop\n        271: goto          500\n        274: aload         7\n-       276: ldc           #30                 // String \\\\s+\n-       278: invokevirtual #15                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+       276: ldc           #98                 // String \\\\s+\n+       278: invokevirtual #49                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n        281: astore        9\n        283: aload         9\n        285: arraylength\n        286: iconst_4\n        287: if_icmpeq     338\n-       290: new           #16                 // class java/lang/IllegalArgumentException\n+       290: new           #53                 // class java/lang/IllegalArgumentException\n        293: dup\n-       294: new           #17                 // class java/lang/StringBuilder\n+       294: new           #55                 // class java/lang/StringBuilder\n        297: dup\n-       298: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       301: ldc           #31                 // String Malformed rule statement split into\n-       303: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       298: invokespecial #57                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       301: ldc           #100                // String Malformed rule statement split into\n+       303: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        306: aload         9\n        308: arraylength\n-       309: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       312: ldc           #22                 // String  parts:\n-       314: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       309: invokevirtual #67                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       312: ldc           #70                 // String  parts:\n+       314: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        317: aload         6\n-       319: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       322: ldc           #23                 // String  in\n-       324: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       319: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       322: ldc           #72                 // String  in\n+       324: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        327: aload_1\n-       328: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       331: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       334: invokespecial #25                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       328: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       331: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       334: invokespecial #77                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        337: athrow\n        338: aload         9\n        340: iconst_0\n        341: aaload\n-       342: invokestatic  #32                 // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+       342: invokestatic  #102                // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n        345: astore        10\n        347: aload         9\n        349: iconst_1\n        350: aaload\n-       351: invokestatic  #32                 // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+       351: invokestatic  #102                // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n        354: astore        11\n        356: aload         9\n        358: iconst_2\n        359: aaload\n-       360: invokestatic  #32                 // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+       360: invokestatic  #102                // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n        363: astore        12\n        365: aload         9\n        367: iconst_3\n        368: aaload\n-       369: invokestatic  #32                 // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+       369: invokestatic  #102                // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n        372: astore        13\n-       374: new           #33                 // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+       374: new           #106                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n        377: dup\n        378: aload         10\n        380: aload         11\n        382: aload         12\n        384: aload         13\n-       386: invokespecial #34                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+       386: invokespecial #108                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n        389: astore        14\n        391: aload         14\n-       393: invokestatic  #35                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+       393: invokestatic  #111                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n        396: iconst_0\n-       397: invokevirtual #27                 // Method java/lang/String.charAt:(I)C\n+       397: invokevirtual #82                 // Method java/lang/String.charAt:(I)C\n        400: istore        15\n        402: aload_2\n        403: iload         15\n-       405: invokestatic  #28                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-       408: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-       413: checkcast     #37                 // class java/util/List\n+       405: invokestatic  #86                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+       408: invokeinterface #115,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       413: checkcast     #119                // class java/util/List\n        416: astore        16\n        418: aload         16\n        420: ifnonnull     446\n-       423: new           #38                 // class java/util/ArrayList\n+       423: new           #121                // class java/util/ArrayList\n        426: dup\n-       427: invokespecial #39                 // Method java/util/ArrayList.\"<init>\":()V\n+       427: invokespecial #123                // Method java/util/ArrayList.\"<init>\":()V\n        430: astore        16\n        432: aload_2\n        433: iload         15\n-       435: invokestatic  #28                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+       435: invokestatic  #86                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n        438: aload         16\n-       440: invokeinterface #29,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       440: invokeinterface #92,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n        445: pop\n        446: aload         16\n        448: aload         14\n-       450: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       450: invokeinterface #124,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        455: pop\n        456: goto          500\n        459: astore        10\n-       461: new           #41                 // class java/lang/IllegalStateException\n+       461: new           #128                // class java/lang/IllegalStateException\n        464: dup\n-       465: new           #17                 // class java/lang/StringBuilder\n+       465: new           #55                 // class java/lang/StringBuilder\n        468: dup\n-       469: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       472: ldc           #42                 // String Problem parsing line \\'\n-       474: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       469: invokespecial #57                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       472: ldc           #130                // String Problem parsing line \\'\n+       474: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        477: iload         4\n-       479: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       482: ldc           #43                 // String \\' in\n-       484: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       479: invokevirtual #67                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       482: ldc           #132                // String \\' in\n+       484: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        487: aload_1\n-       488: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       491: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       488: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       491: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        494: aload         10\n-       496: invokespecial #44                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+       496: invokespecial #134                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n        499: athrow\n        500: goto          6\n        503: return\n       Exception table:\n          from    to  target type\n            338   456   459   Class java/lang/IllegalArgumentException\n       LineNumberTable:\n@@ -805,40 +805,40 @@\n           locals = [ class java/util/Scanner, class java/lang/String, class java/util/Map, class java/util/Map, int, int, class java/lang/String, class java/lang/String, int, class \"[Ljava/lang/String;\" ]\n           stack = [ class java/lang/IllegalArgumentException ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 40\n           locals = [ class java/util/Scanner, class java/lang/String, class java/util/Map, class java/util/Map, int, int ]\n           stack = []\n         frame_type = 2 /* same */\n-    Signature: #166                         // (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n+    Signature: #361                         // (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n \n   private static java.lang.String stripQuotes(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #45                 // String \\\"\n-         3: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+         1: ldc           #137                // String \\\"\n+         3: invokevirtual #23                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n          6: ifeq          15\n          9: aload_0\n         10: iconst_1\n-        11: invokevirtual #46                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        11: invokevirtual #139                // Method java/lang/String.substring:(I)Ljava/lang/String;\n         14: astore_0\n         15: aload_0\n-        16: ldc           #45                 // String \\\"\n-        18: invokevirtual #5                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        16: ldc           #137                // String \\\"\n+        18: invokevirtual #15                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         21: ifeq          36\n         24: aload_0\n         25: iconst_0\n         26: aload_0\n-        27: invokevirtual #12                 // Method java/lang/String.length:()I\n+        27: invokevirtual #39                 // Method java/lang/String.length:()I\n         30: iconst_1\n         31: isub\n-        32: invokevirtual #10                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        32: invokevirtual #32                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n         35: astore_0\n         36: aload_0\n         37: areturn\n       LineNumberTable:\n         line 330: 0\n         line 331: 9\n         line 334: 15\n@@ -854,33 +854,33 @@\n   public org.apache.commons.codec.language.DaitchMokotoffSoundex();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokespecial #47                 // Method \"<init>\":(Z)V\n+         2: invokespecial #142                // Method \"<init>\":(Z)V\n          5: return\n       LineNumberTable:\n         line 348: 0\n         line 349: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/codec/language/DaitchMokotoffSoundex;\n \n   public org.apache.commons.codec.language.DaitchMokotoffSoundex(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #48                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #145                // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #49                 // Field folding:Z\n+         6: putfield      #148                // Field folding:Z\n          9: return\n       LineNumberTable:\n         line 361: 0\n         line 362: 4\n         line 363: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -888,63 +888,63 @@\n             0      10     1 folding   Z\n \n   private java.lang.String cleanup(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=7, args_size=2\n-         0: new           #17                 // class java/lang/StringBuilder\n+         0: new           #55                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #57                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_2\n          8: aload_1\n-         9: invokevirtual #50                 // Method java/lang/String.toCharArray:()[C\n+         9: invokevirtual #152                // Method java/lang/String.toCharArray:()[C\n         12: astore_3\n         13: aload_3\n         14: arraylength\n         15: istore        4\n         17: iconst_0\n         18: istore        5\n         20: iload         5\n         22: iload         4\n         24: if_icmpge     108\n         27: aload_3\n         28: iload         5\n         30: caload\n         31: istore        6\n         33: iload         6\n-        35: invokestatic  #51                 // Method java/lang/Character.isWhitespace:(C)Z\n+        35: invokestatic  #156                // Method java/lang/Character.isWhitespace:(C)Z\n         38: ifeq          44\n         41: goto          102\n         44: iload         6\n-        46: invokestatic  #52                 // Method java/lang/Character.toLowerCase:(C)C\n+        46: invokestatic  #160                // Method java/lang/Character.toLowerCase:(C)C\n         49: istore        6\n         51: aload_0\n-        52: getfield      #49                 // Field folding:Z\n+        52: getfield      #148                // Field folding:Z\n         55: ifeq          95\n-        58: getstatic     #53                 // Field FOLDINGS:Ljava/util/Map;\n+        58: getstatic     #164                // Field FOLDINGS:Ljava/util/Map;\n         61: iload         6\n-        63: invokestatic  #28                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-        66: invokeinterface #54,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+        63: invokestatic  #86                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+        66: invokeinterface #168,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z\n         71: ifeq          95\n-        74: getstatic     #53                 // Field FOLDINGS:Ljava/util/Map;\n+        74: getstatic     #164                // Field FOLDINGS:Ljava/util/Map;\n         77: iload         6\n-        79: invokestatic  #28                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-        82: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        87: checkcast     #55                 // class java/lang/Character\n-        90: invokevirtual #56                 // Method java/lang/Character.charValue:()C\n+        79: invokestatic  #86                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+        82: invokeinterface #115,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        87: checkcast     #87                 // class java/lang/Character\n+        90: invokevirtual #171                // Method java/lang/Character.charValue:()C\n         93: istore        6\n         95: aload_2\n         96: iload         6\n-        98: invokevirtual #57                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        98: invokevirtual #175                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        101: pop\n        102: iinc          5, 1\n        105: goto          20\n        108: aload_2\n-       109: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       109: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        112: areturn\n       LineNumberTable:\n         line 376: 0\n         line 377: 8\n         line 378: 33\n         line 379: 41\n         line 382: 44\n@@ -975,25 +975,25 @@\n \n   public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #58                 // class java/lang/String\n+         1: instanceof    #16                 // class java/lang/String\n          4: ifne          17\n-         7: new           #59                 // class org/apache/commons/codec/EncoderException\n+         7: new           #178                // class org/apache/commons/codec/EncoderException\n         10: dup\n-        11: ldc           #60                 // String Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n-        13: invokespecial #61                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #180                // String Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n+        13: invokespecial #182                // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: checkcast     #58                 // class java/lang/String\n-        22: invokevirtual #62                 // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n+        19: checkcast     #16                 // class java/lang/String\n+        22: invokevirtual #183                // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n         25: areturn\n       LineNumberTable:\n         line 411: 0\n         line 412: 7\n         line 415: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1012,15 +1012,15 @@\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n          8: iconst_0\n-         9: invokespecial #63                 // Method soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+         9: invokespecial #186                // Method soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n         12: iconst_0\n         13: aaload\n         14: areturn\n       LineNumberTable:\n         line 431: 0\n         line 432: 4\n         line 434: 6\n@@ -1035,19 +1035,19 @@\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=9, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: invokespecial #63                 // Method soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+         3: invokespecial #186                // Method soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n          6: astore_2\n-         7: new           #17                 // class java/lang/StringBuilder\n+         7: new           #55                 // class java/lang/StringBuilder\n         10: dup\n-        11: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        11: invokespecial #57                 // Method java/lang/StringBuilder.\"<init>\":()V\n         14: astore_3\n         15: iconst_0\n         16: istore        4\n         18: aload_2\n         19: astore        5\n         21: aload         5\n         23: arraylength\n@@ -1059,29 +1059,29 @@\n         33: if_icmpge     73\n         36: aload         5\n         38: iload         7\n         40: aaload\n         41: astore        8\n         43: aload_3\n         44: aload         8\n-        46: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         49: pop\n         50: iinc          4, 1\n         53: iload         4\n         55: aload_2\n         56: arraylength\n         57: if_icmpge     67\n         60: aload_3\n         61: bipush        124\n-        63: invokevirtual #57                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        63: invokevirtual #175                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         66: pop\n         67: iinc          7, 1\n         70: goto          29\n         73: aload_3\n-        74: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        74: invokevirtual #74                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         77: areturn\n       LineNumberTable:\n         line 461: 0\n         line 462: 7\n         line 463: 15\n         line 464: 18\n         line 465: 43\n@@ -1113,110 +1113,110 @@\n       stack=4, locals=23, args_size=3\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n-         8: invokespecial #64                 // Method cleanup:(Ljava/lang/String;)Ljava/lang/String;\n+         8: invokespecial #190                // Method cleanup:(Ljava/lang/String;)Ljava/lang/String;\n         11: astore_3\n-        12: new           #65                 // class java/util/LinkedHashSet\n+        12: new           #193                // class java/util/LinkedHashSet\n         15: dup\n-        16: invokespecial #66                 // Method java/util/LinkedHashSet.\"<init>\":()V\n+        16: invokespecial #195                // Method java/util/LinkedHashSet.\"<init>\":()V\n         19: astore        4\n         21: aload         4\n-        23: new           #67                 // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+        23: new           #196                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n         26: dup\n         27: aconst_null\n-        28: invokespecial #68                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-        31: invokeinterface #69,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n+        28: invokespecial #198                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+        31: invokeinterface #201,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n         36: pop\n         37: iconst_0\n         38: istore        5\n         40: iconst_0\n         41: istore        6\n         43: iload         6\n         45: aload_3\n-        46: invokevirtual #12                 // Method java/lang/String.length:()I\n+        46: invokevirtual #39                 // Method java/lang/String.length:()I\n         49: if_icmpge     403\n         52: aload_3\n         53: iload         6\n-        55: invokevirtual #27                 // Method java/lang/String.charAt:(I)C\n+        55: invokevirtual #82                 // Method java/lang/String.charAt:(I)C\n         58: istore        7\n         60: iload         7\n-        62: invokestatic  #51                 // Method java/lang/Character.isWhitespace:(C)Z\n+        62: invokestatic  #156                // Method java/lang/Character.isWhitespace:(C)Z\n         65: ifeq          71\n         68: goto          397\n         71: aload_3\n         72: iload         6\n-        74: invokevirtual #46                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        74: invokevirtual #139                // Method java/lang/String.substring:(I)Ljava/lang/String;\n         77: astore        8\n-        79: getstatic     #70                 // Field RULES:Ljava/util/Map;\n+        79: getstatic     #204                // Field RULES:Ljava/util/Map;\n         82: iload         7\n-        84: invokestatic  #28                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-        87: invokeinterface #36,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        92: checkcast     #37                 // class java/util/List\n+        84: invokestatic  #86                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+        87: invokeinterface #115,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        92: checkcast     #119                // class java/util/List\n         95: astore        9\n         97: aload         9\n         99: ifnonnull     105\n        102: goto          397\n        105: iload_2\n        106: ifeq          119\n-       109: new           #38                 // class java/util/ArrayList\n+       109: new           #121                // class java/util/ArrayList\n        112: dup\n-       113: invokespecial #39                 // Method java/util/ArrayList.\"<init>\":()V\n+       113: invokespecial #123                // Method java/util/ArrayList.\"<init>\":()V\n        116: goto          122\n-       119: getstatic     #71                 // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;\n+       119: getstatic     #207                // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;\n        122: astore        10\n        124: aload         9\n-       126: invokeinterface #72,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+       126: invokeinterface #213,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n        131: astore        11\n        133: aload         11\n-       135: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       135: invokeinterface #217,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n        140: ifeq          393\n        143: aload         11\n-       145: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       150: checkcast     #33                 // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+       145: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       150: checkcast     #106                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n        153: astore        12\n        155: aload         12\n        157: aload         8\n-       159: invokevirtual #75                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n+       159: invokevirtual #226                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n        162: ifeq          390\n        165: iload_2\n        166: ifeq          176\n        169: aload         10\n-       171: invokeinterface #76,  1           // InterfaceMethod java/util/List.clear:()V\n+       171: invokeinterface #229,  1          // InterfaceMethod java/util/List.clear:()V\n        176: aload         12\n        178: aload         8\n        180: iload         5\n        182: ifne          189\n        185: iconst_1\n        186: goto          190\n        189: iconst_0\n-       190: invokevirtual #77                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n+       190: invokevirtual #232                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n        193: astore        13\n        195: aload         13\n        197: arraylength\n        198: iconst_1\n        199: if_icmple     210\n        202: iload_2\n        203: ifeq          210\n        206: iconst_1\n        207: goto          211\n        210: iconst_0\n        211: istore        14\n        213: aload         4\n-       215: invokeinterface #78,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+       215: invokeinterface #235,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n        220: astore        15\n        222: aload         15\n-       224: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       224: invokeinterface #217,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n        229: ifeq          354\n        232: aload         15\n-       234: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       239: checkcast     #67                 // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+       234: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       239: checkcast     #196                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n        242: astore        16\n        244: aload         13\n        246: astore        17\n        248: aload         17\n        250: arraylength\n        251: istore        18\n        253: iconst_0\n@@ -1227,15 +1227,15 @@\n        263: aload         17\n        265: iload         19\n        267: aaload\n        268: astore        20\n        270: iload         14\n        272: ifeq          283\n        275: aload         16\n-       277: invokevirtual #79                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+       277: invokevirtual #236                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n        280: goto          285\n        283: aload         16\n        285: astore        21\n        287: iload         5\n        289: bipush        109\n        291: if_icmpne     301\n        294: iload         7\n@@ -1250,68 +1250,68 @@\n        315: iconst_1\n        316: goto          320\n        319: iconst_0\n        320: istore        22\n        322: aload         21\n        324: aload         20\n        326: iload         22\n-       328: invokevirtual #80                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n+       328: invokevirtual #240                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n        331: iload_2\n        332: ifeq          351\n        335: aload         10\n        337: aload         21\n-       339: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       339: invokeinterface #124,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        344: pop\n        345: iinc          19, 1\n        348: goto          256\n        351: goto          222\n        354: iload_2\n        355: ifeq          375\n        358: aload         4\n-       360: invokeinterface #81,  1           // InterfaceMethod java/util/Set.clear:()V\n+       360: invokeinterface #244,  1          // InterfaceMethod java/util/Set.clear:()V\n        365: aload         4\n        367: aload         10\n-       369: invokeinterface #82,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n+       369: invokeinterface #245,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n        374: pop\n        375: iload         6\n        377: aload         12\n-       379: invokevirtual #83                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n+       379: invokevirtual #249                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n        382: iconst_1\n        383: isub\n        384: iadd\n        385: istore        6\n        387: goto          393\n        390: goto          133\n        393: iload         7\n        395: istore        5\n        397: iinc          6, 1\n        400: goto          43\n        403: aload         4\n-       405: invokeinterface #84,  1           // InterfaceMethod java/util/Set.size:()I\n-       410: anewarray     #58                 // class java/lang/String\n+       405: invokeinterface #252,  1          // InterfaceMethod java/util/Set.size:()I\n+       410: anewarray     #16                 // class java/lang/String\n        413: astore        6\n        415: iconst_0\n        416: istore        7\n        418: aload         4\n-       420: invokeinterface #78,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+       420: invokeinterface #235,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n        425: astore        8\n        427: aload         8\n-       429: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       429: invokeinterface #217,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n        434: ifeq          470\n        437: aload         8\n-       439: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       444: checkcast     #67                 // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+       439: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       444: checkcast     #196                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n        447: astore        9\n        449: aload         9\n-       451: invokevirtual #85                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n+       451: invokevirtual #255                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n        454: aload         6\n        456: iload         7\n        458: iinc          7, 1\n        461: aload         9\n-       463: invokevirtual #86                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n+       463: invokevirtual #258                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n        466: aastore\n        467: goto          427\n        470: aload         6\n        472: areturn\n       LineNumberTable:\n         line 484: 0\n         line 485: 4\n@@ -1463,115 +1463,115 @@\n           offset_delta = 42\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=0\n-         0: new           #87                 // class java/util/HashMap\n+         0: new           #259                // class java/util/HashMap\n          3: dup\n-         4: invokespecial #88                 // Method java/util/HashMap.\"<init>\":()V\n-         7: putstatic     #70                 // Field RULES:Ljava/util/Map;\n-        10: new           #87                 // class java/util/HashMap\n+         4: invokespecial #261                // Method java/util/HashMap.\"<init>\":()V\n+         7: putstatic     #204                // Field RULES:Ljava/util/Map;\n+        10: new           #259                // class java/util/HashMap\n         13: dup\n-        14: invokespecial #88                 // Method java/util/HashMap.\"<init>\":()V\n-        17: putstatic     #53                 // Field FOLDINGS:Ljava/util/Map;\n-        20: ldc           #3                  // class org/apache/commons/codec/language/DaitchMokotoffSoundex\n-        22: invokevirtual #89                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n-        25: ldc           #90                 // String org/apache/commons/codec/language/dmrules.txt\n-        27: invokevirtual #91                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-        30: astore_0\n-        31: aload_0\n-        32: ifnonnull     45\n-        35: new           #16                 // class java/lang/IllegalArgumentException\n-        38: dup\n-        39: ldc           #92                 // String Unable to load resource: org/apache/commons/codec/language/dmrules.txt\n-        41: invokespecial #25                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        44: athrow\n-        45: new           #93                 // class java/util/Scanner\n-        48: dup\n-        49: aload_0\n-        50: ldc           #95                 // String UTF-8\n-        52: invokespecial #96                 // Method java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-        55: astore_1\n-        56: aload_1\n-        57: ldc           #90                 // String org/apache/commons/codec/language/dmrules.txt\n-        59: getstatic     #70                 // Field RULES:Ljava/util/Map;\n-        62: getstatic     #53                 // Field FOLDINGS:Ljava/util/Map;\n-        65: invokestatic  #97                 // Method parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-        68: aload_1\n-        69: invokevirtual #98                 // Method java/util/Scanner.close:()V\n-        72: goto          91\n-        75: astore_2\n-        76: aload_1\n-        77: invokevirtual #98                 // Method java/util/Scanner.close:()V\n-        80: goto          89\n-        83: astore_3\n-        84: aload_2\n-        85: aload_3\n-        86: invokevirtual #100                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        89: aload_2\n-        90: athrow\n-        91: getstatic     #70                 // Field RULES:Ljava/util/Map;\n-        94: invokeinterface #101,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n-        99: invokeinterface #78,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n-       104: astore_1\n-       105: aload_1\n-       106: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-       111: ifeq          148\n-       114: aload_1\n-       115: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       120: checkcast     #102                // class java/util/Map$Entry\n-       123: astore_2\n-       124: aload_2\n-       125: invokeinterface #103,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-       130: checkcast     #37                 // class java/util/List\n-       133: astore_3\n-       134: aload_3\n-       135: new           #104                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-       138: dup\n-       139: invokespecial #105                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n-       142: invokestatic  #106                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n-       145: goto          105\n-       148: return\n+        14: invokespecial #261                // Method java/util/HashMap.\"<init>\":()V\n+        17: putstatic     #164                // Field FOLDINGS:Ljava/util/Map;\n+        20: ldc           #11                 // class org/apache/commons/codec/language/DaitchMokotoffSoundex\n+        22: invokevirtual #262                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n+        25: ldc_w         #268                // String org/apache/commons/codec/language/dmrules.txt\n+        28: invokevirtual #270                // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+        31: astore_0\n+        32: aload_0\n+        33: ifnonnull     47\n+        36: new           #53                 // class java/lang/IllegalArgumentException\n+        39: dup\n+        40: ldc_w         #276                // String Unable to load resource: org/apache/commons/codec/language/dmrules.txt\n+        43: invokespecial #77                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        46: athrow\n+        47: new           #2                  // class java/util/Scanner\n+        50: dup\n+        51: aload_0\n+        52: ldc_w         #280                // String UTF-8\n+        55: invokespecial #282                // Method java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+        58: astore_1\n+        59: aload_1\n+        60: ldc_w         #268                // String org/apache/commons/codec/language/dmrules.txt\n+        63: getstatic     #204                // Field RULES:Ljava/util/Map;\n+        66: getstatic     #164                // Field FOLDINGS:Ljava/util/Map;\n+        69: invokestatic  #285                // Method parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+        72: aload_1\n+        73: invokevirtual #289                // Method java/util/Scanner.close:()V\n+        76: goto          95\n+        79: astore_2\n+        80: aload_1\n+        81: invokevirtual #289                // Method java/util/Scanner.close:()V\n+        84: goto          93\n+        87: astore_3\n+        88: aload_2\n+        89: aload_3\n+        90: invokevirtual #294                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        93: aload_2\n+        94: athrow\n+        95: getstatic     #204                // Field RULES:Ljava/util/Map;\n+        98: invokeinterface #298,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n+       103: invokeinterface #235,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+       108: astore_1\n+       109: aload_1\n+       110: invokeinterface #217,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       115: ifeq          152\n+       118: aload_1\n+       119: invokeinterface #222,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       124: checkcast     #302                // class java/util/Map$Entry\n+       127: astore_2\n+       128: aload_2\n+       129: invokeinterface #304,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+       134: checkcast     #119                // class java/util/List\n+       137: astore_3\n+       138: aload_3\n+       139: new           #307                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+       142: dup\n+       143: invokespecial #309                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n+       146: invokestatic  #310                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n+       149: goto          109\n+       152: return\n       Exception table:\n          from    to  target type\n-            56    68    75   Class java/lang/Throwable\n-            76    80    83   Class java/lang/Throwable\n+            59    72    79   Class java/lang/Throwable\n+            80    84    87   Class java/lang/Throwable\n       LineNumberTable:\n         line 223: 0\n         line 226: 10\n         line 229: 20\n-        line 230: 31\n-        line 231: 35\n-        line 234: 45\n-        line 235: 56\n-        line 236: 68\n-        line 234: 75\n-        line 239: 91\n-        line 240: 124\n-        line 241: 134\n-        line 247: 145\n-        line 248: 148\n+        line 230: 32\n+        line 231: 36\n+        line 234: 47\n+        line 235: 59\n+        line 236: 72\n+        line 234: 79\n+        line 239: 95\n+        line 240: 128\n+        line 241: 138\n+        line 247: 149\n+        line 248: 152\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           56      35     1 scanner   Ljava/util/Scanner;\n-          134      11     3 ruleList   Ljava/util/List;\n-          124      21     2  rule   Ljava/util/Map$Entry;\n-           31     117     0 rulesIS   Ljava/io/InputStream;\n+           59      36     1 scanner   Ljava/util/Scanner;\n+          138      11     3 ruleList   Ljava/util/List;\n+          128      21     2  rule   Ljava/util/Map$Entry;\n+           32     120     0 rulesIS   Ljava/io/InputStream;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-          134      11     3 ruleList   Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;\n-          124      21     2  rule   Ljava/util/Map$Entry<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n+          138      11     3 ruleList   Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;\n+          128      21     2  rule   Ljava/util/Map$Entry<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n       StackMapTable: number_of_entries = 7\n         frame_type = 252 /* append */\n-          offset_delta = 45\n+          offset_delta = 47\n           locals = [ class java/io/InputStream ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 29\n+          offset_delta = 31\n           locals = [ class java/io/InputStream, class java/util/Scanner ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 7\n           locals = [ class java/io/InputStream, class java/util/Scanner, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 5 /* same */\n@@ -1581,11 +1581,11 @@\n           offset_delta = 13\n           locals = [ class java/util/Iterator ]\n         frame_type = 249 /* chop */\n           offset_delta = 42\n }\n SourceFile: \"DaitchMokotoffSoundex.java\"\n InnerClasses:\n-  private static final #109= #33 of #3;   // Rule=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  private static final #111= #67 of #3;   // Branch=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  #104;                                   // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  public static #212= #102 of #165;       // Entry=class java/util/Map$Entry of class java/util/Map\n+  private static final #405= #106 of #11; // Rule=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n+  private static final #406= #196 of #11; // Branch=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n+  #307;                                   // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  public static #407= #302 of #93;        // Entry=class java/util/Map$Entry of class java/util/Map\n"}]}
