{"diffoscope-json-version": 1, "source1": "first/PathEqualsFileFilter.class", "source2": "second/PathEqualsFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,75 +1,75 @@\n-  SHA-256 checksum c3a09730dbb1a1dd3c9656ebd0e5579ee5b8e07ddc9fabbfab73d9482bed37a2\n+  SHA-256 checksum 21cbe6e4479964e7c5a9340acdfe5bdd40d081295f8c028b0b96d8ba52d660f9\n   Compiled from \"PathEqualsFileFilter.java\"\n public class org.apache.commons.io.filefilter.PathEqualsFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #6                          // org/apache/commons/io/filefilter/PathEqualsFileFilter\n-  super_class: #7                         // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #8                          // org/apache/commons/io/filefilter/PathEqualsFileFilter\n+  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 0, fields: 1, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #7.#26         // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #2 = Fieldref           #6.#27         // org/apache/commons/io/filefilter/PathEqualsFileFilter.path:Ljava/nio/file/Path;\n-   #3 = Methodref          #28.#29        // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #4 = Methodref          #30.#31        // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #5 = Methodref          #6.#32         // org/apache/commons/io/filefilter/PathEqualsFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #6 = Class              #33            // org/apache/commons/io/filefilter/PathEqualsFileFilter\n-   #7 = Class              #34            // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #8 = Utf8               path\n-   #9 = Utf8               Ljava/nio/file/Path;\n-  #10 = Utf8               <init>\n-  #11 = Utf8               (Ljava/nio/file/Path;)V\n-  #12 = Utf8               Code\n-  #13 = Utf8               LineNumberTable\n-  #14 = Utf8               LocalVariableTable\n-  #15 = Utf8               this\n-  #16 = Utf8               Lorg/apache/commons/io/filefilter/PathEqualsFileFilter;\n-  #17 = Utf8               file\n-  #18 = Utf8               accept\n-  #19 = Utf8               (Ljava/io/File;)Z\n-  #20 = Utf8               Ljava/io/File;\n-  #21 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #22 = Utf8               attributes\n-  #23 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-  #24 = Utf8               SourceFile\n-  #25 = Utf8               PathEqualsFileFilter.java\n-  #26 = NameAndType        #10:#35        // \"<init>\":()V\n-  #27 = NameAndType        #8:#9          // path:Ljava/nio/file/Path;\n-  #28 = Class              #36            // java/io/File\n-  #29 = NameAndType        #37:#38        // toPath:()Ljava/nio/file/Path;\n-  #30 = Class              #39            // java/util/Objects\n-  #31 = NameAndType        #40:#41        // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #32 = NameAndType        #42:#43        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #33 = Utf8               org/apache/commons/io/filefilter/PathEqualsFileFilter\n-  #34 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #35 = Utf8               ()V\n-  #36 = Utf8               java/io/File\n-  #37 = Utf8               toPath\n-  #38 = Utf8               ()Ljava/nio/file/Path;\n-  #39 = Utf8               java/util/Objects\n-  #40 = Utf8               equals\n-  #41 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #42 = Utf8               toFileVisitResult\n-  #43 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/io/filefilter/PathEqualsFileFilter.path:Ljava/nio/file/Path;\n+   #8 = Class              #10            // org/apache/commons/io/filefilter/PathEqualsFileFilter\n+   #9 = NameAndType        #11:#12        // path:Ljava/nio/file/Path;\n+  #10 = Utf8               org/apache/commons/io/filefilter/PathEqualsFileFilter\n+  #11 = Utf8               path\n+  #12 = Utf8               Ljava/nio/file/Path;\n+  #13 = Methodref          #14.#15        // java/io/File.toPath:()Ljava/nio/file/Path;\n+  #14 = Class              #16            // java/io/File\n+  #15 = NameAndType        #17:#18        // toPath:()Ljava/nio/file/Path;\n+  #16 = Utf8               java/io/File\n+  #17 = Utf8               toPath\n+  #18 = Utf8               ()Ljava/nio/file/Path;\n+  #19 = Methodref          #20.#21        // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #20 = Class              #22            // java/util/Objects\n+  #21 = NameAndType        #23:#24        // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #22 = Utf8               java/util/Objects\n+  #23 = Utf8               equals\n+  #24 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #25 = Methodref          #8.#26         // org/apache/commons/io/filefilter/PathEqualsFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #26 = NameAndType        #27:#28        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #27 = Utf8               toFileVisitResult\n+  #28 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #29 = Utf8               (Ljava/nio/file/Path;)V\n+  #30 = Utf8               Code\n+  #31 = Utf8               LineNumberTable\n+  #32 = Utf8               LocalVariableTable\n+  #33 = Utf8               this\n+  #34 = Utf8               Lorg/apache/commons/io/filefilter/PathEqualsFileFilter;\n+  #35 = Utf8               file\n+  #36 = Utf8               accept\n+  #37 = Utf8               (Ljava/io/File;)Z\n+  #38 = Utf8               Ljava/io/File;\n+  #39 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #40 = Utf8               attributes\n+  #41 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #42 = Utf8               SourceFile\n+  #43 = Utf8               PathEqualsFileFilter.java\n {\n   private final java.nio.file.Path path;\n     descriptor: Ljava/nio/file/Path;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.io.filefilter.PathEqualsFileFilter(java.nio.file.Path);\n     descriptor: (Ljava/nio/file/Path;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field path:Ljava/nio/file/Path;\n+         6: putfield      #7                  // Field path:Ljava/nio/file/Path;\n          9: return\n       LineNumberTable:\n         line 42: 0\n         line 43: 4\n         line 44: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -78,37 +78,37 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field path:Ljava/nio/file/Path;\n+         1: getfield      #7                  // Field path:Ljava/nio/file/Path;\n          4: aload_1\n-         5: invokevirtual #3                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n-         8: invokestatic  #4                  // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+         5: invokevirtual #13                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         8: invokestatic  #19                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         11: ireturn\n       LineNumberTable:\n         line 48: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/filefilter/PathEqualsFileFilter;\n             0      12     1  file   Ljava/io/File;\n \n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #2                  // Field path:Ljava/nio/file/Path;\n+         1: getfield      #7                  // Field path:Ljava/nio/file/Path;\n          4: aload_1\n-         5: invokestatic  #4                  // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+         5: invokestatic  #19                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n          8: aload_1\n-         9: invokestatic  #5                  // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+         9: invokestatic  #25                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n         12: areturn\n       LineNumberTable:\n         line 53: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/filefilter/PathEqualsFileFilter;\n             0      13     1  path   Ljava/nio/file/Path;\n"}]}
