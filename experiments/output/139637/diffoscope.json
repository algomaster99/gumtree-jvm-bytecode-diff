{"diffoscope-json-version": 1, "source1": "first/UncommentedMainCheck.class", "source2": "second/UncommentedMainCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -15,14 +15,18 @@\n     public static final String MSG_KEY = \"uncommented.main\";\n     private static final Set<String> STRING_PARAMETER_NAMES;\n     private Pattern excludedClasses;\n     private String currentClass;\n     private FullIdent packageName;\n     private int classDepth;\n     \n+    static {\n+        STRING_PARAMETER_NAMES = Set.of(String[].class.getCanonicalName(), String.class.getCanonicalName(), String[].class.getSimpleName(), String.class.getSimpleName());\n+    }\n+    \n     public UncommentedMainCheck() {\n         this.excludedClasses = Pattern.compile(\"^$\");\n     }\n     \n     public void setExcludedClasses(final Pattern excludedClasses) {\n         this.excludedClasses = excludedClasses;\n     }\n@@ -74,15 +78,15 @@\n     private void visitPackageDef(final DetailAST packageDef) {\n         this.packageName = FullIdent.createFullIdent(packageDef.getLastChild().getPreviousSibling());\n     }\n     \n     private void visitClassOrRecordDef(final DetailAST classOrRecordDef) {\n         if (this.classDepth == 0) {\n             final DetailAST ident = classOrRecordDef.findFirstToken(58);\n-            this.currentClass = this.packageName.getText() + \".\" + ident.getText();\n+            this.currentClass = String.valueOf(this.packageName.getText()) + \".\" + ident.getText();\n             ++this.classDepth;\n         }\n     }\n     \n     private void visitMethodDef(final DetailAST method) {\n         if (this.classDepth == 1 && this.checkClassName() && checkName(method) && checkModifiers(method) && checkType(method) && checkParams(method)) {\n             this.log(method, \"uncommented.main\", new Object[0]);\n@@ -122,12 +126,8 @@\n         return checkPassed;\n     }\n     \n     private static boolean isStringType(final DetailAST typeAst) {\n         final FullIdent type = FullIdent.createFullIdent(typeAst);\n         return UncommentedMainCheck.STRING_PARAMETER_NAMES.contains(type.getText());\n     }\n-    \n-    static {\n-        STRING_PARAMETER_NAMES = Set.of(String[].class.getCanonicalName(), String.class.getCanonicalName(), String[].class.getSimpleName(), String.class.getSimpleName());\n-    }\n }\n"}]}
