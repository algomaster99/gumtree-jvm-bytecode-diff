{"diffoscope-json-version": 1, "source1": "first/DatabaseConfiguration.class", "source2": "second/DatabaseConfiguration.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -89,56 +89,57 @@\n     }\n     \n     public void setAutoCommit(final boolean autoCommit) {\n         this.autoCommit = autoCommit;\n     }\n     \n     protected Object getPropertyInternal(final String key) {\n-        final DatabaseConfiguration.JdbcOperation<Object> op = (DatabaseConfiguration.JdbcOperation<Object>)new DatabaseConfiguration.DatabaseConfiguration$1(this, ConfigurationErrorEvent.READ, ConfigurationErrorEvent.READ, key, (Object)null, key);\n+        final DatabaseConfiguration.JdbcOperation<Object> op = (DatabaseConfiguration.JdbcOperation<Object>)new DatabaseConfiguration.DatabaseConfiguration$1(this, this, ConfigurationErrorEvent.READ, ConfigurationErrorEvent.READ, key, (Object)null, key);\n         return op.execute();\n     }\n     \n     protected void addPropertyDirect(final String key, final Object obj) {\n-        new DatabaseConfiguration.DatabaseConfiguration$2(this, ConfigurationErrorEvent.WRITE, ConfigurationEvent.ADD_PROPERTY, key, obj, key, obj).execute();\n+        new DatabaseConfiguration.DatabaseConfiguration$2(this, this, ConfigurationErrorEvent.WRITE, ConfigurationEvent.ADD_PROPERTY, key, obj, key, obj).execute();\n     }\n     \n     protected void addPropertyInternal(final String key, final Object value) {\n         final ListDelimiterHandler oldHandler = this.getListDelimiterHandler();\n         try {\n             this.setListDelimiterHandler(DisabledListDelimiterHandler.INSTANCE);\n             super.addPropertyInternal(key, value);\n         }\n         finally {\n             this.setListDelimiterHandler(oldHandler);\n         }\n+        this.setListDelimiterHandler(oldHandler);\n     }\n     \n     protected boolean isEmptyInternal() {\n-        final DatabaseConfiguration.JdbcOperation<Integer> op = (DatabaseConfiguration.JdbcOperation<Integer>)new DatabaseConfiguration.DatabaseConfiguration$3(this, ConfigurationErrorEvent.READ, ConfigurationErrorEvent.READ, (String)null, (Object)null);\n+        final DatabaseConfiguration.JdbcOperation<Integer> op = (DatabaseConfiguration.JdbcOperation<Integer>)new DatabaseConfiguration.DatabaseConfiguration$3(this, this, ConfigurationErrorEvent.READ, ConfigurationErrorEvent.READ, (String)null, (Object)null);\n         final Integer count = (Integer)op.execute();\n         return count == null || count == 0;\n     }\n     \n     protected boolean containsKeyInternal(final String key) {\n-        final DatabaseConfiguration.JdbcOperation<Boolean> op = (DatabaseConfiguration.JdbcOperation<Boolean>)new DatabaseConfiguration.DatabaseConfiguration$4(this, ConfigurationErrorEvent.READ, ConfigurationErrorEvent.READ, key, (Object)null, key);\n+        final DatabaseConfiguration.JdbcOperation<Boolean> op = (DatabaseConfiguration.JdbcOperation<Boolean>)new DatabaseConfiguration.DatabaseConfiguration$4(this, this, ConfigurationErrorEvent.READ, ConfigurationErrorEvent.READ, key, (Object)null, key);\n         final Boolean result = (Boolean)op.execute();\n         return result != null && result;\n     }\n     \n     protected void clearPropertyDirect(final String key) {\n-        new DatabaseConfiguration.DatabaseConfiguration$5(this, ConfigurationErrorEvent.WRITE, ConfigurationEvent.CLEAR_PROPERTY, key, (Object)null, key).execute();\n+        new DatabaseConfiguration.DatabaseConfiguration$5(this, this, ConfigurationErrorEvent.WRITE, ConfigurationEvent.CLEAR_PROPERTY, key, (Object)null, key).execute();\n     }\n     \n     protected void clearInternal() {\n-        new DatabaseConfiguration.DatabaseConfiguration$6(this, ConfigurationErrorEvent.WRITE, ConfigurationEvent.CLEAR, (String)null, (Object)null).execute();\n+        new DatabaseConfiguration.DatabaseConfiguration$6(this, this, ConfigurationErrorEvent.WRITE, ConfigurationEvent.CLEAR, (String)null, (Object)null).execute();\n     }\n     \n     protected Iterator<String> getKeysInternal() {\n         final Collection<String> keys = new ArrayList<String>();\n-        new DatabaseConfiguration.DatabaseConfiguration$7(this, ConfigurationErrorEvent.READ, ConfigurationErrorEvent.READ, (String)null, (Object)null, (Collection)keys).execute();\n+        new DatabaseConfiguration.DatabaseConfiguration$7(this, this, ConfigurationErrorEvent.READ, ConfigurationErrorEvent.READ, (String)null, (Object)null, (Collection)keys).execute();\n         return keys.iterator();\n     }\n     \n     public DataSource getDatasource() {\n         return this.dataSource;\n     }\n     \n"}]}
