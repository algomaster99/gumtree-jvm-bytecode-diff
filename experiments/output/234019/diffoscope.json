{"diffoscope-json-version": 1, "source1": "first/JiraCsv213Test.class", "source2": "second/JiraCsv213Test.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -14,29 +14,29 @@\n import org.apache.commons.csv.CSVFormat;\n import java.io.File;\n import org.junit.Ignore;\n \n @Ignore\n public class JiraCsv213Test\n {\n-    private void createEndChannel(final File csvFile) {\n-        final CSVFormat csvFormat = CSVFormat.DEFAULT.withDelimiter(';').withFirstRecordAsHeader().withRecordSeparator('\\n').withQuoteMode(QuoteMode.ALL);\n-        try (final CSVParser parser = csvFormat.parse((Reader)new InputStreamReader(new FileInputStream(csvFile), StandardCharsets.UTF_8))) {\n-            if (parser.iterator().hasNext()) {\n-                System.out.println(parser.getCurrentLineNumber());\n-                System.out.println(parser.getRecordNumber());\n-                final CSVRecord firstRecord = (CSVRecord)parser.iterator().next();\n-                if (parser != null) {\n-                    parser.close();\n+    private void createEndChannel(final File file) {\n+        final CSVFormat withQuoteMode = CSVFormat.DEFAULT.withDelimiter(';').withFirstRecordAsHeader().withRecordSeparator('\\n').withQuoteMode(QuoteMode.ALL);\n+        try (final CSVParser parse = withQuoteMode.parse((Reader)new InputStreamReader(new FileInputStream(file), StandardCharsets.UTF_8))) {\n+            if (parse.iterator().hasNext()) {\n+                System.out.println(parse.getCurrentLineNumber());\n+                System.out.println(parse.getRecordNumber());\n+                final CSVRecord csvRecord = (CSVRecord)parse.iterator().next();\n+                if (parse != null) {\n+                    parse.close();\n                 }\n                 return;\n             }\n         }\n-        catch (final IOException e) {\n-            throw new IllegalStateException(\"Error while adding end channel to csv\", e);\n+        catch (final IOException cause) {\n+            throw new IllegalStateException(\"Error while adding end channel to csv\", cause);\n         }\n     }\n     \n     @Test\n     public void test() {\n         this.createEndChannel(new File(\"src/test/resources/CSV-213/999751170.patch.csv\"));\n     }\n"}]}
