{"diffoscope-json-version": 1, "source1": "first/IOCase.class", "source2": "second/IOCase.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,58 +1,58 @@\n-  SHA-256 checksum 5c93ae1771113d9a68f3a6d25fb6d9622cc9f7b4e780f11afa2631afd7b4c58e\n+  SHA-256 checksum 31da66ab96e909d2a9687424e13f3fbc828c995796f53f0c53b2a70417e532fd\n   Compiled from \"IOCase.java\"\n public final class org.apache.commons.io.IOCase extends java.lang.Enum<org.apache.commons.io.IOCase>\n   minor version: 0\n   major version: 52\n   flags: (0x4031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER, ACC_ENUM\n   this_class: #4                          // org/apache/commons/io/IOCase\n   super_class: #41                        // java/lang/Enum\n   interfaces: 0, fields: 7, methods: 16, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #4.#109       // org/apache/commons/io/IOCase.$VALUES:[Lorg/apache/commons/io/IOCase;\n-    #2 = Methodref          #110.#111     // \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n+    #1 = Fieldref           #4.#108       // org/apache/commons/io/IOCase.$VALUES:[Lorg/apache/commons/io/IOCase;\n+    #2 = Methodref          #109.#110     // \"[Lorg/apache/commons/io/IOCase;\".clone:()Ljava/lang/Object;\n     #3 = Class              #56           // \"[Lorg/apache/commons/io/IOCase;\"\n-    #4 = Class              #112          // org/apache/commons/io/IOCase\n-    #5 = Methodref          #41.#113      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-    #6 = Methodref          #4.#114       // org/apache/commons/io/IOCase.isCaseSensitive:()Z\n-    #7 = Methodref          #4.#115       // org/apache/commons/io/IOCase.values:()[Lorg/apache/commons/io/IOCase;\n-    #8 = Methodref          #4.#116       // org/apache/commons/io/IOCase.getName:()Ljava/lang/String;\n-    #9 = Methodref          #117.#118     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #10 = Class              #119          // java/lang/IllegalArgumentException\n-   #11 = Class              #120          // java/lang/StringBuilder\n-   #12 = Methodref          #11.#121      // java/lang/StringBuilder.\"<init>\":()V\n-   #13 = String             #122          // Invalid IOCase name:\n-   #14 = Methodref          #11.#123      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #11.#124      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #16 = Methodref          #10.#125      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Methodref          #41.#126      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n-   #18 = Fieldref           #4.#127       // org/apache/commons/io/IOCase.name:Ljava/lang/String;\n-   #19 = Fieldref           #4.#128       // org/apache/commons/io/IOCase.sensitive:Z\n-   #20 = Methodref          #4.#129       // org/apache/commons/io/IOCase.forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+    #4 = Class              #111          // org/apache/commons/io/IOCase\n+    #5 = Methodref          #41.#112      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+    #6 = Methodref          #4.#113       // org/apache/commons/io/IOCase.isCaseSensitive:()Z\n+    #7 = Methodref          #4.#114       // org/apache/commons/io/IOCase.values:()[Lorg/apache/commons/io/IOCase;\n+    #8 = Methodref          #4.#115       // org/apache/commons/io/IOCase.getName:()Ljava/lang/String;\n+    #9 = Methodref          #89.#116      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #10 = Class              #117          // java/lang/IllegalArgumentException\n+   #11 = Class              #118          // java/lang/StringBuilder\n+   #12 = Methodref          #11.#119      // java/lang/StringBuilder.\"<init>\":()V\n+   #13 = String             #120          // Invalid IOCase name:\n+   #14 = Methodref          #11.#121      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #15 = Methodref          #11.#122      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #16 = Methodref          #10.#123      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #17 = Methodref          #41.#124      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n+   #18 = Fieldref           #4.#125       // org/apache/commons/io/IOCase.name:Ljava/lang/String;\n+   #19 = Fieldref           #4.#126       // org/apache/commons/io/IOCase.sensitive:Z\n+   #20 = Methodref          #4.#127       // org/apache/commons/io/IOCase.forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n    #21 = String             #82           // str1\n-   #22 = Methodref          #130.#131     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #22 = Methodref          #128.#129     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n    #23 = String             #83           // str2\n-   #24 = Methodref          #117.#132     // java/lang/String.compareTo:(Ljava/lang/String;)I\n-   #25 = Methodref          #117.#133     // java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n-   #26 = Methodref          #117.#134     // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #27 = Methodref          #117.#135     // java/lang/String.length:()I\n-   #28 = Methodref          #117.#136     // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n-   #29 = Methodref          #4.#137       // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+   #24 = Methodref          #89.#130      // java/lang/String.compareTo:(Ljava/lang/String;)I\n+   #25 = Methodref          #89.#131      // java/lang/String.compareToIgnoreCase:(Ljava/lang/String;)I\n+   #26 = Methodref          #89.#132      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #27 = Methodref          #89.#133      // java/lang/String.length:()I\n+   #28 = Methodref          #89.#134      // java/lang/String.regionMatches:(ZILjava/lang/String;II)Z\n+   #29 = Methodref          #4.#135       // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n    #30 = String             #42           // SENSITIVE\n-   #31 = String             #138          // Sensitive\n-   #32 = Methodref          #4.#139       // org/apache/commons/io/IOCase.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-   #33 = Fieldref           #4.#140       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+   #31 = String             #136          // Sensitive\n+   #32 = Methodref          #4.#137       // org/apache/commons/io/IOCase.\"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+   #33 = Fieldref           #4.#138       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n    #34 = String             #44           // INSENSITIVE\n-   #35 = String             #141          // Insensitive\n-   #36 = Fieldref           #4.#142       // org/apache/commons/io/IOCase.INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+   #35 = String             #139          // Insensitive\n+   #36 = Fieldref           #4.#140       // org/apache/commons/io/IOCase.INSENSITIVE:Lorg/apache/commons/io/IOCase;\n    #37 = String             #45           // SYSTEM\n-   #38 = String             #143          // System\n-   #39 = Methodref          #144.#145     // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n-   #40 = Fieldref           #4.#146       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-   #41 = Class              #147          // java/lang/Enum\n+   #38 = String             #141          // System\n+   #39 = Methodref          #142.#143     // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n+   #40 = Fieldref           #4.#144       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+   #41 = Class              #145          // java/lang/Enum\n    #42 = Utf8               SENSITIVE\n    #43 = Utf8               Lorg/apache/commons/io/IOCase;\n    #44 = Utf8               INSENSITIVE\n    #45 = Utf8               SYSTEM\n    #46 = Utf8               serialVersionUID\n    #47 = Utf8               J\n    #48 = Utf8               ConstantValue\n@@ -91,96 +91,94 @@\n    #82 = Utf8               str1\n    #83 = Utf8               str2\n    #84 = Utf8               checkEquals\n    #85 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n    #86 = Utf8               checkStartsWith\n    #87 = Utf8               str\n    #88 = Utf8               start\n-   #89 = Class              #148          // java/lang/String\n-   #90 = Class              #112          // org/apache/commons/io/IOCase\n-   #91 = Utf8               checkEndsWith\n-   #92 = Utf8               end\n-   #93 = Utf8               endLen\n-   #94 = Utf8               I\n-   #95 = Utf8               checkIndexOf\n-   #96 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n-   #97 = Utf8               i\n-   #98 = Utf8               strStartIndex\n-   #99 = Utf8               search\n-  #100 = Utf8               endIndex\n-  #101 = Utf8               checkRegionMatches\n-  #102 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n-  #103 = Utf8               toString\n-  #104 = Utf8               <clinit>\n-  #105 = Utf8               ()V\n-  #106 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n-  #107 = Utf8               SourceFile\n-  #108 = Utf8               IOCase.java\n-  #109 = NameAndType        #55:#56       // $VALUES:[Lorg/apache/commons/io/IOCase;\n-  #110 = Class              #56           // \"[Lorg/apache/commons/io/IOCase;\"\n-  #111 = NameAndType        #149:#76      // clone:()Ljava/lang/Object;\n-  #112 = Utf8               org/apache/commons/io/IOCase\n-  #113 = NameAndType        #61:#150      // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #114 = NameAndType        #64:#79       // isCaseSensitive:()Z\n-  #115 = NameAndType        #57:#58       // values:()[Lorg/apache/commons/io/IOCase;\n-  #116 = NameAndType        #77:#78       // getName:()Ljava/lang/String;\n-  #117 = Class              #148          // java/lang/String\n-  #118 = NameAndType        #151:#152     // equals:(Ljava/lang/Object;)Z\n-  #119 = Utf8               java/lang/IllegalArgumentException\n-  #120 = Utf8               java/lang/StringBuilder\n-  #121 = NameAndType        #70:#105      // \"<init>\":()V\n-  #122 = Utf8               Invalid IOCase name:\n-  #123 = NameAndType        #153:#154     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #124 = NameAndType        #103:#78      // toString:()Ljava/lang/String;\n-  #125 = NameAndType        #70:#155      // \"<init>\":(Ljava/lang/String;)V\n-  #126 = NameAndType        #70:#156      // \"<init>\":(Ljava/lang/String;I)V\n-  #127 = NameAndType        #51:#52       // name:Ljava/lang/String;\n-  #128 = NameAndType        #53:#54       // sensitive:Z\n-  #129 = NameAndType        #68:#62       // forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n-  #130 = Class              #157          // java/util/Objects\n-  #131 = NameAndType        #158:#159     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #132 = NameAndType        #160:#161     // compareTo:(Ljava/lang/String;)I\n-  #133 = NameAndType        #162:#161     // compareToIgnoreCase:(Ljava/lang/String;)I\n-  #134 = NameAndType        #163:#164     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #135 = NameAndType        #165:#166     // length:()I\n-  #136 = NameAndType        #167:#168     // regionMatches:(ZILjava/lang/String;II)Z\n-  #137 = NameAndType        #101:#102     // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n-  #138 = Utf8               Sensitive\n-  #139 = NameAndType        #70:#71       // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n-  #140 = NameAndType        #42:#43       // SENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #141 = Utf8               Insensitive\n-  #142 = NameAndType        #44:#43       // INSENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #143 = Utf8               System\n-  #144 = Class              #169          // org/apache/commons/io/FilenameUtils\n-  #145 = NameAndType        #170:#79      // isSystemWindows:()Z\n-  #146 = NameAndType        #45:#43       // SYSTEM:Lorg/apache/commons/io/IOCase;\n-  #147 = Utf8               java/lang/Enum\n-  #148 = Utf8               java/lang/String\n-  #149 = Utf8               clone\n-  #150 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #151 = Utf8               equals\n-  #152 = Utf8               (Ljava/lang/Object;)Z\n-  #153 = Utf8               append\n-  #154 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #155 = Utf8               (Ljava/lang/String;)V\n-  #156 = Utf8               (Ljava/lang/String;I)V\n-  #157 = Utf8               java/util/Objects\n-  #158 = Utf8               requireNonNull\n-  #159 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #160 = Utf8               compareTo\n-  #161 = Utf8               (Ljava/lang/String;)I\n-  #162 = Utf8               compareToIgnoreCase\n-  #163 = Utf8               equalsIgnoreCase\n-  #164 = Utf8               (Ljava/lang/String;)Z\n-  #165 = Utf8               length\n-  #166 = Utf8               ()I\n-  #167 = Utf8               regionMatches\n-  #168 = Utf8               (ZILjava/lang/String;II)Z\n-  #169 = Utf8               org/apache/commons/io/FilenameUtils\n-  #170 = Utf8               isSystemWindows\n+   #89 = Class              #146          // java/lang/String\n+   #90 = Utf8               checkEndsWith\n+   #91 = Utf8               end\n+   #92 = Utf8               endLen\n+   #93 = Utf8               I\n+   #94 = Utf8               checkIndexOf\n+   #95 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n+   #96 = Utf8               i\n+   #97 = Utf8               strStartIndex\n+   #98 = Utf8               search\n+   #99 = Utf8               endIndex\n+  #100 = Utf8               checkRegionMatches\n+  #101 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n+  #102 = Utf8               toString\n+  #103 = Utf8               <clinit>\n+  #104 = Utf8               ()V\n+  #105 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n+  #106 = Utf8               SourceFile\n+  #107 = Utf8               IOCase.java\n+  #108 = NameAndType        #55:#56       // $VALUES:[Lorg/apache/commons/io/IOCase;\n+  #109 = Class              #56           // \"[Lorg/apache/commons/io/IOCase;\"\n+  #110 = NameAndType        #147:#76      // clone:()Ljava/lang/Object;\n+  #111 = Utf8               org/apache/commons/io/IOCase\n+  #112 = NameAndType        #61:#148      // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #113 = NameAndType        #64:#79       // isCaseSensitive:()Z\n+  #114 = NameAndType        #57:#58       // values:()[Lorg/apache/commons/io/IOCase;\n+  #115 = NameAndType        #77:#78       // getName:()Ljava/lang/String;\n+  #116 = NameAndType        #149:#150     // equals:(Ljava/lang/Object;)Z\n+  #117 = Utf8               java/lang/IllegalArgumentException\n+  #118 = Utf8               java/lang/StringBuilder\n+  #119 = NameAndType        #70:#104      // \"<init>\":()V\n+  #120 = Utf8               Invalid IOCase name:\n+  #121 = NameAndType        #151:#152     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #122 = NameAndType        #102:#78      // toString:()Ljava/lang/String;\n+  #123 = NameAndType        #70:#153      // \"<init>\":(Ljava/lang/String;)V\n+  #124 = NameAndType        #70:#154      // \"<init>\":(Ljava/lang/String;I)V\n+  #125 = NameAndType        #51:#52       // name:Ljava/lang/String;\n+  #126 = NameAndType        #53:#54       // sensitive:Z\n+  #127 = NameAndType        #68:#62       // forName:(Ljava/lang/String;)Lorg/apache/commons/io/IOCase;\n+  #128 = Class              #155          // java/util/Objects\n+  #129 = NameAndType        #156:#157     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #130 = NameAndType        #158:#159     // compareTo:(Ljava/lang/String;)I\n+  #131 = NameAndType        #160:#159     // compareToIgnoreCase:(Ljava/lang/String;)I\n+  #132 = NameAndType        #161:#162     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #133 = NameAndType        #163:#164     // length:()I\n+  #134 = NameAndType        #165:#166     // regionMatches:(ZILjava/lang/String;II)Z\n+  #135 = NameAndType        #100:#101     // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+  #136 = Utf8               Sensitive\n+  #137 = NameAndType        #70:#71       // \"<init>\":(Ljava/lang/String;ILjava/lang/String;Z)V\n+  #138 = NameAndType        #42:#43       // SENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #139 = Utf8               Insensitive\n+  #140 = NameAndType        #44:#43       // INSENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #141 = Utf8               System\n+  #142 = Class              #167          // org/apache/commons/io/FilenameUtils\n+  #143 = NameAndType        #168:#79      // isSystemWindows:()Z\n+  #144 = NameAndType        #45:#43       // SYSTEM:Lorg/apache/commons/io/IOCase;\n+  #145 = Utf8               java/lang/Enum\n+  #146 = Utf8               java/lang/String\n+  #147 = Utf8               clone\n+  #148 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #149 = Utf8               equals\n+  #150 = Utf8               (Ljava/lang/Object;)Z\n+  #151 = Utf8               append\n+  #152 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #153 = Utf8               (Ljava/lang/String;)V\n+  #154 = Utf8               (Ljava/lang/String;I)V\n+  #155 = Utf8               java/util/Objects\n+  #156 = Utf8               requireNonNull\n+  #157 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #158 = Utf8               compareTo\n+  #159 = Utf8               (Ljava/lang/String;)I\n+  #160 = Utf8               compareToIgnoreCase\n+  #161 = Utf8               equalsIgnoreCase\n+  #162 = Utf8               (Ljava/lang/String;)Z\n+  #163 = Utf8               length\n+  #164 = Utf8               ()I\n+  #165 = Utf8               regionMatches\n+  #166 = Utf8               (ZILjava/lang/String;II)Z\n+  #167 = Utf8               org/apache/commons/io/FilenameUtils\n+  #168 = Utf8               isSystemWindows\n {\n   public static final org.apache.commons.io.IOCase SENSITIVE;\n     descriptor: Lorg/apache/commons/io/IOCase;\n     flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM\n \n   public static final org.apache.commons.io.IOCase INSENSITIVE;\n     descriptor: Lorg/apache/commons/io/IOCase;\n@@ -726,9 +724,9 @@\n           locals = []\n           stack = [ uninitialized 32, uninitialized 32, class java/lang/String, int, class java/lang/String ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = []\n           stack = [ uninitialized 32, uninitialized 32, class java/lang/String, int, class java/lang/String, int ]\n }\n-Signature: #106                         // Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n+Signature: #105                         // Ljava/lang/Enum<Lorg/apache/commons/io/IOCase;>;\n SourceFile: \"IOCase.java\"\n"}]}
