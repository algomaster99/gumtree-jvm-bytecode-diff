{"diffoscope-json-version": 1, "source1": "first/FloatBitsFromCharArray.class", "source2": "second/FloatBitsFromCharArray.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,139 +1,139 @@\n-  SHA-256 checksum cca269366d7f3d50a83f71abad925dcca533585386dc03a35a854dbe580d6268\n+  SHA-256 checksum 02ddd47138800a8ac9554d32d5f5ef65a46f6078b8a205c60d9b81fbbee01ba1\n   Compiled from \"FloatBitsFromCharArray.java\"\n class com.fasterxml.jackson.core.io.doubleparser.FloatBitsFromCharArray extends com.fasterxml.jackson.core.io.doubleparser.AbstractFloatingPointBitsFromCharArray\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #13                         // com/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray\n-  super_class: #14                        // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n+  this_class: #1                          // com/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray\n+  super_class: #3                         // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n   interfaces: 0, fields: 0, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #14.#47        // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.\"<init>\":()V\n-   #2 = Class              #48            // java/lang/Float\n-   #3 = Float              NaNf\n-   #4 = Methodref          #2.#49         // java/lang/Float.floatToRawIntBits:(F)I\n-   #5 = Float              -Infinityf\n-   #6 = Float              Infinityf\n-   #7 = Methodref          #50.#51        // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.decFloatLiteralToFloat:(ZJIZI)F\n-   #8 = Methodref          #2.#52         // java/lang/Float.isNaN:(F)Z\n-   #9 = Class              #53            // java/lang/String\n-  #10 = Methodref          #9.#54         // java/lang/String.\"<init>\":([CII)V\n-  #11 = Methodref          #2.#55         // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n-  #12 = Methodref          #50.#56        // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.hexFloatLiteralToFloat:(ZJIZI)F\n-  #13 = Class              #57            // com/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray\n-  #14 = Class              #58            // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n-  #15 = Utf8               <init>\n-  #16 = Utf8               ()V\n-  #17 = Utf8               Code\n-  #18 = Utf8               LineNumberTable\n-  #19 = Utf8               LocalVariableTable\n-  #20 = Utf8               this\n-  #21 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray;\n-  #22 = Utf8               nan\n-  #23 = Utf8               ()J\n-  #24 = Utf8               negativeInfinity\n+   #1 = Class              #2             // com/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray\n+   #2 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray\n+   #3 = Class              #4             // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n+   #4 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.\"<init>\":()V\n+   #9 = NameAndType        #5:#6          // \"<init>\":()V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray;\n+  #14 = Utf8               nan\n+  #15 = Utf8               ()J\n+  #16 = Float              NaNf\n+  #17 = Methodref          #18.#20        // java/lang/Float.floatToRawIntBits:(F)I\n+  #18 = Class              #19            // java/lang/Float\n+  #19 = Utf8               java/lang/Float\n+  #20 = NameAndType        #21:#22        // floatToRawIntBits:(F)I\n+  #21 = Utf8               floatToRawIntBits\n+  #22 = Utf8               (F)I\n+  #23 = Utf8               negativeInfinity\n+  #24 = Float              -Infinityf\n   #25 = Utf8               positiveInfinity\n-  #26 = Utf8               valueOfFloatLiteral\n-  #27 = Utf8               ([CIIZJIZI)J\n-  #28 = Utf8               str\n-  #29 = Utf8               [C\n-  #30 = Utf8               startIndex\n-  #31 = Utf8               I\n-  #32 = Utf8               endIndex\n-  #33 = Utf8               isNegative\n-  #34 = Utf8               Z\n-  #35 = Utf8               significand\n-  #36 = Utf8               J\n-  #37 = Utf8               exponent\n-  #38 = Utf8               isSignificandTruncated\n-  #39 = Utf8               exponentOfTruncatedSignificand\n-  #40 = Utf8               result\n-  #41 = Utf8               F\n-  #42 = Utf8               StackMapTable\n-  #43 = Utf8               valueOfHexLiteral\n-  #44 = Utf8               d\n-  #45 = Utf8               SourceFile\n-  #46 = Utf8               FloatBitsFromCharArray.java\n-  #47 = NameAndType        #15:#16        // \"<init>\":()V\n-  #48 = Utf8               java/lang/Float\n-  #49 = NameAndType        #59:#60        // floatToRawIntBits:(F)I\n-  #50 = Class              #61            // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath\n-  #51 = NameAndType        #62:#63        // decFloatLiteralToFloat:(ZJIZI)F\n-  #52 = NameAndType        #64:#65        // isNaN:(F)Z\n-  #53 = Utf8               java/lang/String\n-  #54 = NameAndType        #15:#66        // \"<init>\":([CII)V\n-  #55 = NameAndType        #67:#68        // parseFloat:(Ljava/lang/String;)F\n-  #56 = NameAndType        #69:#63        // hexFloatLiteralToFloat:(ZJIZI)F\n-  #57 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray\n-  #58 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray\n-  #59 = Utf8               floatToRawIntBits\n-  #60 = Utf8               (F)I\n-  #61 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastFloatMath\n-  #62 = Utf8               decFloatLiteralToFloat\n-  #63 = Utf8               (ZJIZI)F\n-  #64 = Utf8               isNaN\n-  #65 = Utf8               (F)Z\n-  #66 = Utf8               ([CII)V\n-  #67 = Utf8               parseFloat\n-  #68 = Utf8               (Ljava/lang/String;)F\n-  #69 = Utf8               hexFloatLiteralToFloat\n+  #26 = Float              Infinityf\n+  #27 = Utf8               valueOfFloatLiteral\n+  #28 = Utf8               ([CIIZJIZI)J\n+  #29 = Methodref          #30.#32        // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.decFloatLiteralToFloat:(ZJIZI)F\n+  #30 = Class              #31            // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath\n+  #31 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastFloatMath\n+  #32 = NameAndType        #33:#34        // decFloatLiteralToFloat:(ZJIZI)F\n+  #33 = Utf8               decFloatLiteralToFloat\n+  #34 = Utf8               (ZJIZI)F\n+  #35 = Methodref          #18.#36        // java/lang/Float.isNaN:(F)Z\n+  #36 = NameAndType        #37:#38        // isNaN:(F)Z\n+  #37 = Utf8               isNaN\n+  #38 = Utf8               (F)Z\n+  #39 = Class              #40            // java/lang/String\n+  #40 = Utf8               java/lang/String\n+  #41 = Methodref          #39.#42        // java/lang/String.\"<init>\":([CII)V\n+  #42 = NameAndType        #5:#43         // \"<init>\":([CII)V\n+  #43 = Utf8               ([CII)V\n+  #44 = Methodref          #18.#45        // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+  #45 = NameAndType        #46:#47        // parseFloat:(Ljava/lang/String;)F\n+  #46 = Utf8               parseFloat\n+  #47 = Utf8               (Ljava/lang/String;)F\n+  #48 = Utf8               str\n+  #49 = Utf8               [C\n+  #50 = Utf8               startIndex\n+  #51 = Utf8               I\n+  #52 = Utf8               endIndex\n+  #53 = Utf8               isNegative\n+  #54 = Utf8               Z\n+  #55 = Utf8               significand\n+  #56 = Utf8               J\n+  #57 = Utf8               exponent\n+  #58 = Utf8               isSignificandTruncated\n+  #59 = Utf8               exponentOfTruncatedSignificand\n+  #60 = Utf8               result\n+  #61 = Utf8               F\n+  #62 = Utf8               StackMapTable\n+  #63 = Utf8               valueOfHexLiteral\n+  #64 = Methodref          #30.#65        // com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.hexFloatLiteralToFloat:(ZJIZI)F\n+  #65 = NameAndType        #66:#34        // hexFloatLiteralToFloat:(ZJIZI)F\n+  #66 = Utf8               hexFloatLiteralToFloat\n+  #67 = Utf8               d\n+  #68 = Utf8               SourceFile\n+  #69 = Utf8               FloatBitsFromCharArray.java\n {\n   public com.fasterxml.jackson.core.io.doubleparser.FloatBitsFromCharArray();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.\"<init>\":()V\n+         1: invokespecial #8                  // Method com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharArray.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 21: 0\n         line 23: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray;\n \n   long nan();\n     descriptor: ()J\n     flags: (0x0000)\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #3                  // float NaNf\n-         2: invokestatic  #4                  // Method java/lang/Float.floatToRawIntBits:(F)I\n+         0: ldc           #16                 // float NaNf\n+         2: invokestatic  #17                 // Method java/lang/Float.floatToRawIntBits:(F)I\n          5: i2l\n          6: lreturn\n       LineNumberTable:\n         line 27: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lcom/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray;\n \n   long negativeInfinity();\n     descriptor: ()J\n     flags: (0x0000)\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #5                  // float -Infinityf\n-         2: invokestatic  #4                  // Method java/lang/Float.floatToRawIntBits:(F)I\n+         0: ldc           #24                 // float -Infinityf\n+         2: invokestatic  #17                 // Method java/lang/Float.floatToRawIntBits:(F)I\n          5: i2l\n          6: lreturn\n       LineNumberTable:\n         line 32: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lcom/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray;\n \n   long positiveInfinity();\n     descriptor: ()J\n     flags: (0x0000)\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #6                  // float Infinityf\n-         2: invokestatic  #4                  // Method java/lang/Float.floatToRawIntBits:(F)I\n+         0: ldc           #26                 // float Infinityf\n+         2: invokestatic  #17                 // Method java/lang/Float.floatToRawIntBits:(F)I\n          5: i2l\n          6: lreturn\n       LineNumberTable:\n         line 37: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lcom/fasterxml/jackson/core/io/doubleparser/FloatBitsFromCharArray;\n@@ -144,33 +144,33 @@\n     Code:\n       stack=6, locals=11, args_size=9\n          0: iload         4\n          2: lload         5\n          4: iload         7\n          6: iload         8\n          8: iload         9\n-        10: invokestatic  #7                  // Method com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.decFloatLiteralToFloat:(ZJIZI)F\n+        10: invokestatic  #29                 // Method com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.decFloatLiteralToFloat:(ZJIZI)F\n         13: fstore        10\n         15: fload         10\n-        17: invokestatic  #8                  // Method java/lang/Float.isNaN:(F)Z\n+        17: invokestatic  #35                 // Method java/lang/Float.isNaN:(F)Z\n         20: ifeq          45\n-        23: new           #9                  // class java/lang/String\n+        23: new           #39                 // class java/lang/String\n         26: dup\n         27: aload_1\n         28: iload_2\n         29: iload_3\n         30: iload_2\n         31: isub\n-        32: invokespecial #10                 // Method java/lang/String.\"<init>\":([CII)V\n-        35: invokestatic  #11                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n-        38: invokestatic  #4                  // Method java/lang/Float.floatToRawIntBits:(F)I\n+        32: invokespecial #41                 // Method java/lang/String.\"<init>\":([CII)V\n+        35: invokestatic  #44                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+        38: invokestatic  #17                 // Method java/lang/Float.floatToRawIntBits:(F)I\n         41: i2l\n         42: goto          51\n         45: fload         10\n-        47: invokestatic  #4                  // Method java/lang/Float.floatToRawIntBits:(F)I\n+        47: invokestatic  #17                 // Method java/lang/Float.floatToRawIntBits:(F)I\n         50: i2l\n         51: lreturn\n       LineNumberTable:\n         line 44: 0\n         line 45: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -197,31 +197,31 @@\n     Code:\n       stack=6, locals=11, args_size=9\n          0: iload         4\n          2: lload         5\n          4: iload         7\n          6: iload         8\n          8: iload         9\n-        10: invokestatic  #12                 // Method com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.hexFloatLiteralToFloat:(ZJIZI)F\n+        10: invokestatic  #64                 // Method com/fasterxml/jackson/core/io/doubleparser/FastFloatMath.hexFloatLiteralToFloat:(ZJIZI)F\n         13: fstore        10\n         15: fload         10\n-        17: invokestatic  #8                  // Method java/lang/Float.isNaN:(F)Z\n+        17: invokestatic  #35                 // Method java/lang/Float.isNaN:(F)Z\n         20: ifeq          41\n-        23: new           #9                  // class java/lang/String\n+        23: new           #39                 // class java/lang/String\n         26: dup\n         27: aload_1\n         28: iload_2\n         29: iload_3\n         30: iload_2\n         31: isub\n-        32: invokespecial #10                 // Method java/lang/String.\"<init>\":([CII)V\n-        35: invokestatic  #11                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+        32: invokespecial #41                 // Method java/lang/String.\"<init>\":([CII)V\n+        35: invokestatic  #44                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n         38: goto          43\n         41: fload         10\n-        43: invokestatic  #4                  // Method java/lang/Float.floatToRawIntBits:(F)I\n+        43: invokestatic  #17                 // Method java/lang/Float.floatToRawIntBits:(F)I\n         46: i2l\n         47: lreturn\n       LineNumberTable:\n         line 52: 0\n         line 53: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n"}]}
