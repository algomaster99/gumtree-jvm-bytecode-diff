{"diffoscope-json-version": 1, "source1": "first/BoundedSeekableByteChannelInputStream.class", "source2": "second/BoundedSeekableByteChannelInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,24 +1,24 @@\n-  SHA-256 checksum a0f9c3c591fffc8e8141e1e1d5be11503202584c02b92c6eba7f88b62d032dd1\n+  SHA-256 checksum 539d228dbbb4f31d2f8bcb2078a8039fdde31c9bd0345cd2a87d8dd7c096b9ba\n   Compiled from \"BoundedSeekableByteChannelInputStream.java\"\n public class org.apache.commons.compress.utils.BoundedSeekableByteChannelInputStream extends org.apache.commons.compress.utils.BoundedArchiveInputStream\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #6                          // org/apache/commons/compress/utils/BoundedSeekableByteChannelInputStream\n   super_class: #7                         // org/apache/commons/compress/utils/BoundedArchiveInputStream\n   interfaces: 0, fields: 1, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #7.#35         // org/apache/commons/compress/utils/BoundedArchiveInputStream.\"<init>\":(JJ)V\n-   #2 = Fieldref           #6.#36         // org/apache/commons/compress/utils/BoundedSeekableByteChannelInputStream.channel:Ljava/nio/channels/SeekableByteChannel;\n-   #3 = InterfaceMethodref #37.#38        // java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;\n-   #4 = InterfaceMethodref #37.#39        // java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I\n-   #5 = Methodref          #40.#41        // java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n-   #6 = Class              #42            // org/apache/commons/compress/utils/BoundedSeekableByteChannelInputStream\n-   #7 = Class              #43            // org/apache/commons/compress/utils/BoundedArchiveInputStream\n+   #1 = Methodref          #7.#34         // org/apache/commons/compress/utils/BoundedArchiveInputStream.\"<init>\":(JJ)V\n+   #2 = Fieldref           #6.#35         // org/apache/commons/compress/utils/BoundedSeekableByteChannelInputStream.channel:Ljava/nio/channels/SeekableByteChannel;\n+   #3 = InterfaceMethodref #36.#37        // java/nio/channels/SeekableByteChannel.position:(J)Ljava/nio/channels/SeekableByteChannel;\n+   #4 = InterfaceMethodref #36.#38        // java/nio/channels/SeekableByteChannel.read:(Ljava/nio/ByteBuffer;)I\n+   #5 = Methodref          #27.#39        // java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n+   #6 = Class              #40            // org/apache/commons/compress/utils/BoundedSeekableByteChannelInputStream\n+   #7 = Class              #41            // org/apache/commons/compress/utils/BoundedArchiveInputStream\n    #8 = Utf8               channel\n    #9 = Utf8               Ljava/nio/channels/SeekableByteChannel;\n   #10 = Utf8               <init>\n   #11 = Utf8               (JJLjava/nio/channels/SeekableByteChannel;)V\n   #12 = Utf8               Code\n   #13 = Utf8               LineNumberTable\n   #14 = Utf8               LocalVariableTable\n@@ -30,42 +30,40 @@\n   #20 = Utf8               read\n   #21 = Utf8               (JLjava/nio/ByteBuffer;)I\n   #22 = Utf8               I\n   #23 = Utf8               pos\n   #24 = Utf8               buf\n   #25 = Utf8               Ljava/nio/ByteBuffer;\n   #26 = Utf8               StackMapTable\n-  #27 = Class              #42            // org/apache/commons/compress/utils/BoundedSeekableByteChannelInputStream\n-  #28 = Class              #44            // java/nio/ByteBuffer\n-  #29 = Class              #45            // java/lang/Object\n-  #30 = Class              #46            // java/lang/Throwable\n-  #31 = Utf8               Exceptions\n-  #32 = Class              #47            // java/io/IOException\n-  #33 = Utf8               SourceFile\n-  #34 = Utf8               BoundedSeekableByteChannelInputStream.java\n-  #35 = NameAndType        #10:#48        // \"<init>\":(JJ)V\n-  #36 = NameAndType        #8:#9          // channel:Ljava/nio/channels/SeekableByteChannel;\n-  #37 = Class              #49            // java/nio/channels/SeekableByteChannel\n-  #38 = NameAndType        #50:#51        // position:(J)Ljava/nio/channels/SeekableByteChannel;\n-  #39 = NameAndType        #20:#52        // read:(Ljava/nio/ByteBuffer;)I\n-  #40 = Class              #44            // java/nio/ByteBuffer\n-  #41 = NameAndType        #53:#54        // flip:()Ljava/nio/Buffer;\n-  #42 = Utf8               org/apache/commons/compress/utils/BoundedSeekableByteChannelInputStream\n-  #43 = Utf8               org/apache/commons/compress/utils/BoundedArchiveInputStream\n-  #44 = Utf8               java/nio/ByteBuffer\n-  #45 = Utf8               java/lang/Object\n-  #46 = Utf8               java/lang/Throwable\n-  #47 = Utf8               java/io/IOException\n-  #48 = Utf8               (JJ)V\n-  #49 = Utf8               java/nio/channels/SeekableByteChannel\n-  #50 = Utf8               position\n-  #51 = Utf8               (J)Ljava/nio/channels/SeekableByteChannel;\n-  #52 = Utf8               (Ljava/nio/ByteBuffer;)I\n-  #53 = Utf8               flip\n-  #54 = Utf8               ()Ljava/nio/Buffer;\n+  #27 = Class              #42            // java/nio/ByteBuffer\n+  #28 = Class              #43            // java/lang/Object\n+  #29 = Class              #44            // java/lang/Throwable\n+  #30 = Utf8               Exceptions\n+  #31 = Class              #45            // java/io/IOException\n+  #32 = Utf8               SourceFile\n+  #33 = Utf8               BoundedSeekableByteChannelInputStream.java\n+  #34 = NameAndType        #10:#46        // \"<init>\":(JJ)V\n+  #35 = NameAndType        #8:#9          // channel:Ljava/nio/channels/SeekableByteChannel;\n+  #36 = Class              #47            // java/nio/channels/SeekableByteChannel\n+  #37 = NameAndType        #48:#49        // position:(J)Ljava/nio/channels/SeekableByteChannel;\n+  #38 = NameAndType        #20:#50        // read:(Ljava/nio/ByteBuffer;)I\n+  #39 = NameAndType        #51:#52        // flip:()Ljava/nio/ByteBuffer;\n+  #40 = Utf8               org/apache/commons/compress/utils/BoundedSeekableByteChannelInputStream\n+  #41 = Utf8               org/apache/commons/compress/utils/BoundedArchiveInputStream\n+  #42 = Utf8               java/nio/ByteBuffer\n+  #43 = Utf8               java/lang/Object\n+  #44 = Utf8               java/lang/Throwable\n+  #45 = Utf8               java/io/IOException\n+  #46 = Utf8               (JJ)V\n+  #47 = Utf8               java/nio/channels/SeekableByteChannel\n+  #48 = Utf8               position\n+  #49 = Utf8               (J)Ljava/nio/channels/SeekableByteChannel;\n+  #50 = Utf8               (Ljava/nio/ByteBuffer;)I\n+  #51 = Utf8               flip\n+  #52 = Utf8               ()Ljava/nio/ByteBuffer;\n {\n   private final java.nio.channels.SeekableByteChannel channel;\n     descriptor: Ljava/nio/channels/SeekableByteChannel;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.compress.utils.BoundedSeekableByteChannelInputStream(long, long, java.nio.channels.SeekableByteChannel);\n     descriptor: (JJLjava/nio/channels/SeekableByteChannel;)V\n@@ -116,15 +114,15 @@\n         34: goto          45\n         37: astore        6\n         39: aload         5\n         41: monitorexit\n         42: aload         6\n         44: athrow\n         45: aload_3\n-        46: invokevirtual #5                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;\n+        46: invokevirtual #5                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/ByteBuffer;\n         49: pop\n         50: iload         4\n         52: ireturn\n       Exception table:\n          from    to  target type\n              8    34    37   any\n             37    42    37   any\n"}]}
