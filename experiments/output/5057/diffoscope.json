{"diffoscope-json-version": 1, "source1": "first/SuffixFileFilter.class", "source2": "second/SuffixFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,47 +1,47 @@\n-  SHA-256 checksum 2a279226bba1100d7005e32669de02c067c6a5102d5870b87151466d921ae02c\n+  SHA-256 checksum 4620333b521a84eb460229ca8af59e855247d3e343f70b81cdb8cb952dac6d90\n   Compiled from \"SuffixFileFilter.java\"\n public class org.apache.commons.io.filefilter.SuffixFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #28                         // org/apache/commons/io/filefilter/SuffixFileFilter\n   super_class: #29                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 9, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #81.#82       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-    #2 = Methodref          #28.#83       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-    #3 = Methodref          #29.#84       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #4 = Class              #85           // java/lang/IllegalArgumentException\n-    #5 = String             #86           // The suffix must not be null\n-    #6 = Methodref          #4.#87        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #7 = Class              #88           // java/lang/String\n-    #8 = Fieldref           #28.#89       // org/apache/commons/io/filefilter/SuffixFileFilter.suffixes:[Ljava/lang/String;\n-    #9 = Fieldref           #28.#90       // org/apache/commons/io/filefilter/SuffixFileFilter.caseSensitivity:Lorg/apache/commons/io/IOCase;\n-   #10 = Methodref          #28.#91       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #11 = String             #92           // The array of suffixes must not be null\n-   #12 = Methodref          #93.#94       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #13 = Methodref          #28.#95       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n-   #14 = String             #96           // The list of suffixes must not be null\n-   #15 = Fieldref           #28.#97       // org/apache/commons/io/filefilter/SuffixFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #16 = InterfaceMethodref #98.#99       // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+    #1 = Fieldref           #51.#78       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+    #2 = Methodref          #28.#79       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+    #3 = Methodref          #29.#80       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #4 = Class              #81           // java/lang/IllegalArgumentException\n+    #5 = String             #82           // The suffix must not be null\n+    #6 = Methodref          #4.#83        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #7 = Class              #84           // java/lang/String\n+    #8 = Fieldref           #28.#85       // org/apache/commons/io/filefilter/SuffixFileFilter.suffixes:[Ljava/lang/String;\n+    #9 = Fieldref           #28.#86       // org/apache/commons/io/filefilter/SuffixFileFilter.caseSensitivity:Lorg/apache/commons/io/IOCase;\n+   #10 = Methodref          #28.#87       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #11 = String             #88           // The array of suffixes must not be null\n+   #12 = Methodref          #89.#90       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #13 = Methodref          #28.#91       // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n+   #14 = String             #92           // The list of suffixes must not be null\n+   #15 = Fieldref           #28.#93       // org/apache/commons/io/filefilter/SuffixFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #16 = InterfaceMethodref #61.#94       // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n    #17 = Class              #37           // \"[Ljava/lang/String;\"\n-   #18 = Methodref          #100.#101     // java/io/File.getName:()Ljava/lang/String;\n-   #19 = Methodref          #81.#102      // org/apache/commons/io/IOCase.checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #20 = Class              #103          // java/lang/StringBuilder\n-   #21 = Methodref          #20.#84       // java/lang/StringBuilder.\"<init>\":()V\n-   #22 = Methodref          #29.#104      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-   #23 = Methodref          #20.#105      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #24 = String             #106          // (\n-   #25 = String             #107          // ,\n-   #26 = String             #108          // )\n-   #27 = Methodref          #20.#104      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #28 = Class              #109          // org/apache/commons/io/filefilter/SuffixFileFilter\n-   #29 = Class              #110          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #30 = Class              #111          // java/io/Serializable\n+   #18 = Methodref          #68.#95       // java/io/File.getName:()Ljava/lang/String;\n+   #19 = Methodref          #51.#96       // org/apache/commons/io/IOCase.checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #20 = Class              #97           // java/lang/StringBuilder\n+   #21 = Methodref          #20.#80       // java/lang/StringBuilder.\"<init>\":()V\n+   #22 = Methodref          #29.#98       // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+   #23 = Methodref          #20.#99       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #24 = String             #100          // (\n+   #25 = String             #101          // ,\n+   #26 = String             #102          // )\n+   #27 = Methodref          #20.#98       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #28 = Class              #103          // org/apache/commons/io/filefilter/SuffixFileFilter\n+   #29 = Class              #104          // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #30 = Class              #105          // java/io/Serializable\n    #31 = Utf8               serialVersionUID\n    #32 = Utf8               J\n    #33 = Utf8               ConstantValue\n    #34 = Long               -3389157631240246157l\n    #36 = Utf8               suffixes\n    #37 = Utf8               [Ljava/lang/String;\n    #38 = Utf8               caseSensitivity\n@@ -53,91 +53,85 @@\n    #44 = Utf8               LocalVariableTable\n    #45 = Utf8               this\n    #46 = Utf8               Lorg/apache/commons/io/filefilter/SuffixFileFilter;\n    #47 = Utf8               suffix\n    #48 = Utf8               Ljava/lang/String;\n    #49 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n    #50 = Utf8               StackMapTable\n-   #51 = Class              #109          // org/apache/commons/io/filefilter/SuffixFileFilter\n-   #52 = Class              #88           // java/lang/String\n-   #53 = Class              #112          // org/apache/commons/io/IOCase\n-   #54 = Utf8               ([Ljava/lang/String;)V\n-   #55 = Utf8               ([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #56 = Utf8               (Ljava/util/List;)V\n-   #57 = Utf8               Ljava/util/List;\n-   #58 = Utf8               LocalVariableTypeTable\n-   #59 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n-   #60 = Utf8               Signature\n-   #61 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)V\n-   #62 = Utf8               (Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n-   #63 = Class              #113          // java/util/List\n-   #64 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n-   #65 = Utf8               accept\n-   #66 = Utf8               (Ljava/io/File;)Z\n-   #67 = Utf8               file\n-   #68 = Utf8               Ljava/io/File;\n-   #69 = Utf8               name\n-   #70 = Class              #114          // java/io/File\n-   #71 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #72 = Utf8               toString\n-   #73 = Utf8               ()Ljava/lang/String;\n-   #74 = Utf8               i\n-   #75 = Utf8               I\n-   #76 = Utf8               buffer\n-   #77 = Utf8               Ljava/lang/StringBuilder;\n-   #78 = Class              #103          // java/lang/StringBuilder\n-   #79 = Utf8               SourceFile\n-   #80 = Utf8               SuffixFileFilter.java\n-   #81 = Class              #112          // org/apache/commons/io/IOCase\n-   #82 = NameAndType        #115:#39      // SENSITIVE:Lorg/apache/commons/io/IOCase;\n-   #83 = NameAndType        #40:#49       // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #84 = NameAndType        #40:#116      // \"<init>\":()V\n-   #85 = Utf8               java/lang/IllegalArgumentException\n-   #86 = Utf8               The suffix must not be null\n-   #87 = NameAndType        #40:#41       // \"<init>\":(Ljava/lang/String;)V\n-   #88 = Utf8               java/lang/String\n-   #89 = NameAndType        #36:#37       // suffixes:[Ljava/lang/String;\n-   #90 = NameAndType        #38:#39       // caseSensitivity:Lorg/apache/commons/io/IOCase;\n-   #91 = NameAndType        #40:#55       // \"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #92 = Utf8               The array of suffixes must not be null\n-   #93 = Class              #117          // java/lang/System\n-   #94 = NameAndType        #118:#119     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #95 = NameAndType        #40:#62       // \"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n-   #96 = Utf8               The list of suffixes must not be null\n-   #97 = NameAndType        #120:#37      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #98 = Class              #113          // java/util/List\n-   #99 = NameAndType        #121:#122     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #100 = Class              #114          // java/io/File\n-  #101 = NameAndType        #123:#73      // getName:()Ljava/lang/String;\n-  #102 = NameAndType        #124:#125     // checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #103 = Utf8               java/lang/StringBuilder\n-  #104 = NameAndType        #72:#73       // toString:()Ljava/lang/String;\n-  #105 = NameAndType        #126:#127     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #106 = Utf8               (\n-  #107 = Utf8               ,\n-  #108 = Utf8               )\n-  #109 = Utf8               org/apache/commons/io/filefilter/SuffixFileFilter\n-  #110 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #111 = Utf8               java/io/Serializable\n-  #112 = Utf8               org/apache/commons/io/IOCase\n-  #113 = Utf8               java/util/List\n-  #114 = Utf8               java/io/File\n-  #115 = Utf8               SENSITIVE\n-  #116 = Utf8               ()V\n-  #117 = Utf8               java/lang/System\n-  #118 = Utf8               arraycopy\n-  #119 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #120 = Utf8               EMPTY_STRING_ARRAY\n-  #121 = Utf8               toArray\n-  #122 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #123 = Utf8               getName\n-  #124 = Utf8               checkEndsWith\n-  #125 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-  #126 = Utf8               append\n-  #127 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #51 = Class              #106          // org/apache/commons/io/IOCase\n+   #52 = Utf8               ([Ljava/lang/String;)V\n+   #53 = Utf8               ([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #54 = Utf8               (Ljava/util/List;)V\n+   #55 = Utf8               Ljava/util/List;\n+   #56 = Utf8               LocalVariableTypeTable\n+   #57 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n+   #58 = Utf8               Signature\n+   #59 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)V\n+   #60 = Utf8               (Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n+   #61 = Class              #107          // java/util/List\n+   #62 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n+   #63 = Utf8               accept\n+   #64 = Utf8               (Ljava/io/File;)Z\n+   #65 = Utf8               file\n+   #66 = Utf8               Ljava/io/File;\n+   #67 = Utf8               name\n+   #68 = Class              #108          // java/io/File\n+   #69 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #70 = Utf8               toString\n+   #71 = Utf8               ()Ljava/lang/String;\n+   #72 = Utf8               i\n+   #73 = Utf8               I\n+   #74 = Utf8               buffer\n+   #75 = Utf8               Ljava/lang/StringBuilder;\n+   #76 = Utf8               SourceFile\n+   #77 = Utf8               SuffixFileFilter.java\n+   #78 = NameAndType        #109:#39      // SENSITIVE:Lorg/apache/commons/io/IOCase;\n+   #79 = NameAndType        #40:#49       // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #80 = NameAndType        #40:#110      // \"<init>\":()V\n+   #81 = Utf8               java/lang/IllegalArgumentException\n+   #82 = Utf8               The suffix must not be null\n+   #83 = NameAndType        #40:#41       // \"<init>\":(Ljava/lang/String;)V\n+   #84 = Utf8               java/lang/String\n+   #85 = NameAndType        #36:#37       // suffixes:[Ljava/lang/String;\n+   #86 = NameAndType        #38:#39       // caseSensitivity:Lorg/apache/commons/io/IOCase;\n+   #87 = NameAndType        #40:#53       // \"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #88 = Utf8               The array of suffixes must not be null\n+   #89 = Class              #111          // java/lang/System\n+   #90 = NameAndType        #112:#113     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #91 = NameAndType        #40:#60       // \"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n+   #92 = Utf8               The list of suffixes must not be null\n+   #93 = NameAndType        #114:#37      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #94 = NameAndType        #115:#116     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #95 = NameAndType        #117:#71      // getName:()Ljava/lang/String;\n+   #96 = NameAndType        #118:#119     // checkEndsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #97 = Utf8               java/lang/StringBuilder\n+   #98 = NameAndType        #70:#71       // toString:()Ljava/lang/String;\n+   #99 = NameAndType        #120:#121     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #100 = Utf8               (\n+  #101 = Utf8               ,\n+  #102 = Utf8               )\n+  #103 = Utf8               org/apache/commons/io/filefilter/SuffixFileFilter\n+  #104 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #105 = Utf8               java/io/Serializable\n+  #106 = Utf8               org/apache/commons/io/IOCase\n+  #107 = Utf8               java/util/List\n+  #108 = Utf8               java/io/File\n+  #109 = Utf8               SENSITIVE\n+  #110 = Utf8               ()V\n+  #111 = Utf8               java/lang/System\n+  #112 = Utf8               arraycopy\n+  #113 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #114 = Utf8               EMPTY_STRING_ARRAY\n+  #115 = Utf8               toArray\n+  #116 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #117 = Utf8               getName\n+  #118 = Utf8               checkEndsWith\n+  #119 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+  #120 = Utf8               append\n+  #121 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n {\n   private static final long serialVersionUID = -3389157631240246157l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -3389157631240246157l\n \n   private final java.lang.String[] suffixes;\n@@ -314,15 +308,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/filefilter/SuffixFileFilter;\n             0       9     1 suffixes   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     1 suffixes   Ljava/util/List<Ljava/lang/String;>;\n-    Signature: #61                          // (Ljava/util/List<Ljava/lang/String;>;)V\n+    Signature: #59                          // (Ljava/util/List<Ljava/lang/String;>;)V\n \n   public org.apache.commons.io.filefilter.SuffixFileFilter(java.util.List<java.lang.String>, org.apache.commons.io.IOCase);\n     descriptor: (Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n@@ -370,15 +364,15 @@\n           stack = []\n         frame_type = 90 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/filefilter/SuffixFileFilter ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/filefilter/SuffixFileFilter, class java/util/List, class org/apache/commons/io/IOCase ]\n           stack = [ class org/apache/commons/io/filefilter/SuffixFileFilter, class org/apache/commons/io/IOCase ]\n-    Signature: #64                          // (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n+    Signature: #62                          // (Ljava/util/List<Ljava/lang/String;>;Lorg/apache/commons/io/IOCase;)V\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=7, args_size=2\n          0: aload_1\n"}]}
