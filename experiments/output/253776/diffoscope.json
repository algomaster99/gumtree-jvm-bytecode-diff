{"diffoscope-json-version": 1, "source1": "first/SuppressionXpathFilter.class", "source2": "second/SuppressionXpathFilter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -20,46 +20,40 @@\n     private String file;\n     private boolean optional;\n     \n     public SuppressionXpathFilter() {\n         this.filters = new HashSet<TreeWalkerFilter>();\n     }\n     \n-    public void setFile(final String fileName) {\n-        this.file = fileName;\n+    public void setFile(final String file) {\n+        this.file = file;\n     }\n     \n     public void setOptional(final boolean optional) {\n         this.optional = optional;\n     }\n     \n-    public boolean equals(final Object obj) {\n-        if (this == obj) {\n-            return true;\n-        }\n-        if (obj == null || this.getClass() != obj.getClass()) {\n-            return false;\n-        }\n-        final SuppressionXpathFilter suppressionXpathFilter = (SuppressionXpathFilter)obj;\n-        return Objects.equals(this.filters, suppressionXpathFilter.filters);\n+    public boolean equals(final Object o) {\n+        return this == o || (o != null && this.getClass() == o.getClass() && Objects.equals(this.filters, ((SuppressionXpathFilter)o).filters));\n     }\n     \n     public int hashCode() {\n         return Objects.hash(this.filters);\n     }\n     \n     public boolean accept(final TreeWalkerAuditEvent treeWalkerAuditEvent) {\n-        boolean result = true;\n-        for (final TreeWalkerFilter filter : this.filters) {\n-            if (!filter.accept(treeWalkerAuditEvent)) {\n-                result = false;\n+        boolean b = true;\n+        final Iterator<TreeWalkerFilter> iterator = this.filters.iterator();\n+        while (iterator.hasNext()) {\n+            if (!((TreeWalkerFilter)iterator.next()).accept(treeWalkerAuditEvent)) {\n+                b = false;\n                 break;\n             }\n         }\n-        return result;\n+        return b;\n     }\n     \n     public Set<String> getExternalResourceLocations() {\n         return Collections.singleton(this.file);\n     }\n     \n     protected void finishLocalSetup() throws CheckstyleException {\n"}]}
