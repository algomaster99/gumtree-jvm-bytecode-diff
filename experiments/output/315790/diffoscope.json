{"diffoscope-json-version": 1, "source1": "first/RandomAccessFileInputStream.class", "source2": "second/RandomAccessFileInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,95 +1,95 @@\n-  SHA-256 checksum cd227709c145d4eaeec6d28956fd6fd2c87d1c20ce08b8b9ea50a7078ea82d60\n+  SHA-256 checksum 9b4b1b68dc92b0e3f28359048d21b72121d59225f567f3e09b49674c958716d3\n   Compiled from \"RandomAccessFileInputStream.java\"\n public class org.apache.commons.io.input.RandomAccessFileInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #22                         // org/apache/commons/io/input/RandomAccessFileInputStream\n-  super_class: #23                        // java/io/InputStream\n+  this_class: #2                          // org/apache/commons/io/input/RandomAccessFileInputStream\n+  super_class: #8                         // java/io/InputStream\n   interfaces: 0, fields: 2, methods: 12, attributes: 1\n Constant pool:\n-   #1 = Methodref          #22.#55        // org/apache/commons/io/input/RandomAccessFileInputStream.\"<init>\":(Ljava/io/RandomAccessFile;Z)V\n-   #2 = Methodref          #23.#56        // java/io/InputStream.\"<init>\":()V\n-   #3 = String             #57            // file\n-   #4 = Methodref          #58.#59        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #5 = Class              #60            // java/io/RandomAccessFile\n-   #6 = Fieldref           #22.#61        // org/apache/commons/io/input/RandomAccessFileInputStream.randomAccessFile:Ljava/io/RandomAccessFile;\n-   #7 = Fieldref           #22.#62        // org/apache/commons/io/input/RandomAccessFileInputStream.closeOnClose:Z\n-   #8 = Methodref          #22.#63        // org/apache/commons/io/input/RandomAccessFileInputStream.availableLong:()J\n-   #9 = Class              #64            // java/lang/Integer\n-  #10 = Long               2147483647l\n-  #12 = Integer            2147483647\n-  #13 = Methodref          #5.#65         // java/io/RandomAccessFile.length:()J\n-  #14 = Methodref          #5.#66         // java/io/RandomAccessFile.getFilePointer:()J\n-  #15 = Methodref          #23.#67        // java/io/InputStream.close:()V\n-  #16 = Methodref          #5.#67         // java/io/RandomAccessFile.close:()V\n-  #17 = Methodref          #5.#68         // java/io/RandomAccessFile.read:()I\n-  #18 = Methodref          #5.#69         // java/io/RandomAccessFile.read:([B)I\n-  #19 = Methodref          #5.#70         // java/io/RandomAccessFile.read:([BII)I\n-  #20 = Methodref          #5.#71         // java/io/RandomAccessFile.seek:(J)V\n-  #21 = Methodref          #22.#71        // org/apache/commons/io/input/RandomAccessFileInputStream.seek:(J)V\n-  #22 = Class              #72            // org/apache/commons/io/input/RandomAccessFileInputStream\n-  #23 = Class              #73            // java/io/InputStream\n-  #24 = Utf8               closeOnClose\n-  #25 = Utf8               Z\n-  #26 = Utf8               randomAccessFile\n-  #27 = Utf8               Ljava/io/RandomAccessFile;\n-  #28 = Utf8               <init>\n-  #29 = Utf8               (Ljava/io/RandomAccessFile;)V\n-  #30 = Utf8               Code\n-  #31 = Utf8               LineNumberTable\n-  #32 = Utf8               (Ljava/io/RandomAccessFile;Z)V\n-  #33 = Utf8               available\n-  #34 = Utf8               ()I\n-  #35 = Utf8               StackMapTable\n-  #36 = Utf8               Exceptions\n-  #37 = Class              #74            // java/io/IOException\n-  #38 = Utf8               availableLong\n-  #39 = Utf8               ()J\n-  #40 = Utf8               close\n-  #41 = Utf8               ()V\n-  #42 = Utf8               getRandomAccessFile\n-  #43 = Utf8               ()Ljava/io/RandomAccessFile;\n-  #44 = Utf8               isCloseOnClose\n-  #45 = Utf8               ()Z\n-  #46 = Utf8               read\n-  #47 = Utf8               ([B)I\n-  #48 = Utf8               ([BII)I\n-  #49 = Utf8               seek\n-  #50 = Utf8               (J)V\n-  #51 = Utf8               skip\n-  #52 = Utf8               (J)J\n-  #53 = Utf8               SourceFile\n-  #54 = Utf8               RandomAccessFileInputStream.java\n-  #55 = NameAndType        #28:#32        // \"<init>\":(Ljava/io/RandomAccessFile;Z)V\n-  #56 = NameAndType        #28:#41        // \"<init>\":()V\n-  #57 = Utf8               file\n-  #58 = Class              #75            // java/util/Objects\n-  #59 = NameAndType        #76:#77        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #60 = Utf8               java/io/RandomAccessFile\n-  #61 = NameAndType        #26:#27        // randomAccessFile:Ljava/io/RandomAccessFile;\n-  #62 = NameAndType        #24:#25        // closeOnClose:Z\n-  #63 = NameAndType        #38:#39        // availableLong:()J\n-  #64 = Utf8               java/lang/Integer\n-  #65 = NameAndType        #78:#39        // length:()J\n-  #66 = NameAndType        #79:#39        // getFilePointer:()J\n-  #67 = NameAndType        #40:#41        // close:()V\n-  #68 = NameAndType        #46:#34        // read:()I\n-  #69 = NameAndType        #46:#47        // read:([B)I\n-  #70 = NameAndType        #46:#48        // read:([BII)I\n-  #71 = NameAndType        #49:#50        // seek:(J)V\n-  #72 = Utf8               org/apache/commons/io/input/RandomAccessFileInputStream\n-  #73 = Utf8               java/io/InputStream\n-  #74 = Utf8               java/io/IOException\n-  #75 = Utf8               java/util/Objects\n-  #76 = Utf8               requireNonNull\n-  #77 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #78 = Utf8               length\n-  #79 = Utf8               getFilePointer\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/input/RandomAccessFileInputStream.\"<init>\":(Ljava/io/RandomAccessFile;Z)V\n+   #2 = Class              #4             // org/apache/commons/io/input/RandomAccessFileInputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/RandomAccessFile;Z)V\n+   #4 = Utf8               org/apache/commons/io/input/RandomAccessFileInputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/RandomAccessFile;Z)V\n+   #7 = Methodref          #8.#9          // java/io/InputStream.\"<init>\":()V\n+   #8 = Class              #10            // java/io/InputStream\n+   #9 = NameAndType        #5:#11         // \"<init>\":()V\n+  #10 = Utf8               java/io/InputStream\n+  #11 = Utf8               ()V\n+  #12 = String             #13            // file\n+  #13 = Utf8               file\n+  #14 = Methodref          #15.#16        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #15 = Class              #17            // java/util/Objects\n+  #16 = NameAndType        #18:#19        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #17 = Utf8               java/util/Objects\n+  #18 = Utf8               requireNonNull\n+  #19 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #20 = Class              #21            // java/io/RandomAccessFile\n+  #21 = Utf8               java/io/RandomAccessFile\n+  #22 = Fieldref           #2.#23         // org/apache/commons/io/input/RandomAccessFileInputStream.randomAccessFile:Ljava/io/RandomAccessFile;\n+  #23 = NameAndType        #24:#25        // randomAccessFile:Ljava/io/RandomAccessFile;\n+  #24 = Utf8               randomAccessFile\n+  #25 = Utf8               Ljava/io/RandomAccessFile;\n+  #26 = Fieldref           #2.#27         // org/apache/commons/io/input/RandomAccessFileInputStream.closeOnClose:Z\n+  #27 = NameAndType        #28:#29        // closeOnClose:Z\n+  #28 = Utf8               closeOnClose\n+  #29 = Utf8               Z\n+  #30 = Methodref          #2.#31         // org/apache/commons/io/input/RandomAccessFileInputStream.availableLong:()J\n+  #31 = NameAndType        #32:#33        // availableLong:()J\n+  #32 = Utf8               availableLong\n+  #33 = Utf8               ()J\n+  #34 = Class              #35            // java/lang/Integer\n+  #35 = Utf8               java/lang/Integer\n+  #36 = Long               2147483647l\n+  #38 = Integer            2147483647\n+  #39 = Methodref          #20.#40        // java/io/RandomAccessFile.length:()J\n+  #40 = NameAndType        #41:#33        // length:()J\n+  #41 = Utf8               length\n+  #42 = Methodref          #20.#43        // java/io/RandomAccessFile.getFilePointer:()J\n+  #43 = NameAndType        #44:#33        // getFilePointer:()J\n+  #44 = Utf8               getFilePointer\n+  #45 = Methodref          #8.#46         // java/io/InputStream.close:()V\n+  #46 = NameAndType        #47:#11        // close:()V\n+  #47 = Utf8               close\n+  #48 = Methodref          #20.#46        // java/io/RandomAccessFile.close:()V\n+  #49 = Methodref          #20.#50        // java/io/RandomAccessFile.read:()I\n+  #50 = NameAndType        #51:#52        // read:()I\n+  #51 = Utf8               read\n+  #52 = Utf8               ()I\n+  #53 = Methodref          #20.#54        // java/io/RandomAccessFile.read:([B)I\n+  #54 = NameAndType        #51:#55        // read:([B)I\n+  #55 = Utf8               ([B)I\n+  #56 = Methodref          #20.#57        // java/io/RandomAccessFile.read:([BII)I\n+  #57 = NameAndType        #51:#58        // read:([BII)I\n+  #58 = Utf8               ([BII)I\n+  #59 = Methodref          #20.#60        // java/io/RandomAccessFile.seek:(J)V\n+  #60 = NameAndType        #61:#62        // seek:(J)V\n+  #61 = Utf8               seek\n+  #62 = Utf8               (J)V\n+  #63 = Methodref          #2.#60         // org/apache/commons/io/input/RandomAccessFileInputStream.seek:(J)V\n+  #64 = Utf8               (Ljava/io/RandomAccessFile;)V\n+  #65 = Utf8               Code\n+  #66 = Utf8               LineNumberTable\n+  #67 = Utf8               available\n+  #68 = Utf8               StackMapTable\n+  #69 = Utf8               Exceptions\n+  #70 = Class              #71            // java/io/IOException\n+  #71 = Utf8               java/io/IOException\n+  #72 = Utf8               getRandomAccessFile\n+  #73 = Utf8               ()Ljava/io/RandomAccessFile;\n+  #74 = Utf8               isCloseOnClose\n+  #75 = Utf8               ()Z\n+  #76 = Utf8               skip\n+  #77 = Utf8               (J)J\n+  #78 = Utf8               SourceFile\n+  #79 = Utf8               RandomAccessFileInputStream.java\n {\n   private final boolean closeOnClose;\n     descriptor: Z\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.io.RandomAccessFile randomAccessFile;\n     descriptor: Ljava/io/RandomAccessFile;\n@@ -111,44 +111,44 @@\n \n   public org.apache.commons.io.input.RandomAccessFileInputStream(java.io.RandomAccessFile, boolean);\n     descriptor: (Ljava/io/RandomAccessFile;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #2                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #7                  // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #3                  // String file\n-         8: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #5                  // class java/io/RandomAccessFile\n-        14: putfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         6: ldc           #12                 // String file\n+         8: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #20                 // class java/io/RandomAccessFile\n+        14: putfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n         17: aload_0\n         18: iload_2\n-        19: putfield      #7                  // Field closeOnClose:Z\n+        19: putfield      #26                 // Field closeOnClose:Z\n         22: return\n       LineNumberTable:\n         line 50: 0\n         line 51: 4\n         line 52: 17\n         line 53: 22\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #8                  // Method availableLong:()J\n+         1: invokevirtual #30                 // Method availableLong:()J\n          4: lstore_1\n          5: lload_1\n-         6: ldc2_w        #10                 // long 2147483647l\n+         6: ldc2_w        #36                 // long 2147483647l\n          9: lcmp\n         10: ifle          16\n-        13: ldc           #12                 // int 2147483647\n+        13: ldc           #38                 // int 2147483647\n         15: ireturn\n         16: lload_1\n         17: l2i\n         18: ireturn\n       LineNumberTable:\n         line 65: 0\n         line 66: 5\n@@ -163,39 +163,39 @@\n \n   public long availableLong() throws java.io.IOException;\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-         4: invokevirtual #13                 // Method java/io/RandomAccessFile.length:()J\n+         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         4: invokevirtual #39                 // Method java/io/RandomAccessFile.length:()J\n          7: aload_0\n-         8: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-        11: invokevirtual #14                 // Method java/io/RandomAccessFile.getFilePointer:()J\n+         8: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+        11: invokevirtual #42                 // Method java/io/RandomAccessFile.getFilePointer:()J\n         14: lsub\n         15: lreturn\n       LineNumberTable:\n         line 79: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #15                 // Method java/io/InputStream.close:()V\n+         1: invokespecial #45                 // Method java/io/InputStream.close:()V\n          4: aload_0\n-         5: getfield      #7                  // Field closeOnClose:Z\n+         5: getfield      #26                 // Field closeOnClose:Z\n          8: ifeq          18\n         11: aload_0\n-        12: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-        15: invokevirtual #16                 // Method java/io/RandomAccessFile.close:()V\n+        12: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+        15: invokevirtual #48                 // Method java/io/RandomAccessFile.close:()V\n         18: return\n       LineNumberTable:\n         line 84: 0\n         line 85: 4\n         line 86: 11\n         line 88: 18\n       StackMapTable: number_of_entries = 1\n@@ -205,85 +205,85 @@\n \n   public java.io.RandomAccessFile getRandomAccessFile();\n     descriptor: ()Ljava/io/RandomAccessFile;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n          4: areturn\n       LineNumberTable:\n         line 96: 0\n \n   public boolean isCloseOnClose();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field closeOnClose:Z\n+         1: getfield      #26                 // Field closeOnClose:Z\n          4: ireturn\n       LineNumberTable:\n         line 105: 0\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-         4: invokevirtual #17                 // Method java/io/RandomAccessFile.read:()I\n+         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         4: invokevirtual #49                 // Method java/io/RandomAccessFile.read:()I\n          7: ireturn\n       LineNumberTable:\n         line 110: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n          4: aload_1\n-         5: invokevirtual #18                 // Method java/io/RandomAccessFile.read:([B)I\n+         5: invokevirtual #53                 // Method java/io/RandomAccessFile.read:([B)I\n          8: ireturn\n       LineNumberTable:\n         line 115: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #19                 // Method java/io/RandomAccessFile.read:([BII)I\n+         7: invokevirtual #56                 // Method java/io/RandomAccessFile.read:([BII)I\n         10: ireturn\n       LineNumberTable:\n         line 120: 0\n     Exceptions:\n       throws java.io.IOException\n \n   private void seek(long) throws java.io.IOException;\n     descriptor: (J)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n          4: lload_1\n-         5: invokevirtual #20                 // Method java/io/RandomAccessFile.seek:(J)V\n+         5: invokevirtual #59                 // Method java/io/RandomAccessFile.seek:(J)V\n          8: return\n       LineNumberTable:\n         line 131: 0\n         line 132: 8\n     Exceptions:\n       throws java.io.IOException\n \n@@ -295,20 +295,20 @@\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n          3: ifgt          8\n          6: lconst_0\n          7: lreturn\n          8: aload_0\n-         9: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-        12: invokevirtual #14                 // Method java/io/RandomAccessFile.getFilePointer:()J\n+         9: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+        12: invokevirtual #42                 // Method java/io/RandomAccessFile.getFilePointer:()J\n         15: lstore_3\n         16: aload_0\n-        17: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-        20: invokevirtual #13                 // Method java/io/RandomAccessFile.length:()J\n+        17: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+        20: invokevirtual #39                 // Method java/io/RandomAccessFile.length:()J\n         23: lstore        5\n         25: lload_3\n         26: lload         5\n         28: lcmp\n         29: iflt          34\n         32: lconst_0\n         33: lreturn\n@@ -328,18 +328,18 @@\n         56: lstore        9\n         58: lload         9\n         60: lconst_0\n         61: lcmp\n         62: ifle          71\n         65: aload_0\n         66: lload         9\n-        68: invokespecial #21                 // Method seek:(J)V\n+        68: invokespecial #63                 // Method seek:(J)V\n         71: aload_0\n-        72: getfield      #6                  // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-        75: invokevirtual #14                 // Method java/io/RandomAccessFile.getFilePointer:()J\n+        72: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+        75: invokevirtual #42                 // Method java/io/RandomAccessFile.getFilePointer:()J\n         78: lload_3\n         79: lsub\n         80: lreturn\n       LineNumberTable:\n         line 136: 0\n         line 137: 6\n         line 139: 8\n"}]}
