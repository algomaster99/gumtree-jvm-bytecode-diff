{"diffoscope-json-version": 1, "source1": "first/ExtraFieldUtils.class", "source2": "second/ExtraFieldUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,98 +1,98 @@\n-  SHA-256 checksum e01b16e8e3d52053e7822eed451f269915f49ea3fad708df53ee3e05dc04195c\n+  SHA-256 checksum 79bf99364ecb57d574bcb2383da0b64c8b7ccf2989264ff95c1b37819c2175b3\n   Compiled from \"ExtraFieldUtils.java\"\n public class org.apache.commons.compress.archivers.zip.ExtraFieldUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #33                         // org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n   super_class: #80                        // java/lang/Object\n   interfaces: 0, fields: 3, methods: 12, attributes: 2\n Constant pool:\n-    #1 = Methodref          #80.#174      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #25.#175      // java/lang/Class.newInstance:()Ljava/lang/Object;\n-    #3 = Class              #176          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-    #4 = Fieldref           #33.#177      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.IMPLEMENTATIONS:Ljava/util/Map;\n-    #5 = InterfaceMethodref #3.#178       // org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-    #6 = InterfaceMethodref #179.#180     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-    #7 = Class              #181          // java/lang/ClassCastException\n-    #8 = Class              #182          // java/lang/IllegalArgumentException\n-    #9 = Class              #183          // java/lang/StringBuilder\n-   #10 = Methodref          #9.#174       // java/lang/StringBuilder.\"<init>\":()V\n-   #11 = Methodref          #9.#184       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #12 = String             #185          //  doesn\\'t implement ZipExtraField\n-   #13 = Methodref          #9.#186       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #14 = Methodref          #9.#187       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #15 = Methodref          #8.#188       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = Class              #189          // java/lang/InstantiationException\n-   #17 = String             #190          //  is not a concrete class\n-   #18 = Class              #191          // java/lang/IllegalAccessException\n-   #19 = String             #192          // \\'s no-arg constructor is not public\n-   #20 = Methodref          #33.#193      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.createExtraFieldNoDefault:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #21 = Class              #194          // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-   #22 = Methodref          #21.#174      // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n-   #23 = Methodref          #21.#195      // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-   #24 = InterfaceMethodref #179.#196     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #25 = Class              #197          // java/lang/Class\n-   #26 = Fieldref           #81.#198      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField.THROW:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n-   #27 = Methodref          #33.#199      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #28 = Class              #200          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$1\n-   #29 = Methodref          #28.#201      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$1.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)V\n-   #30 = Methodref          #33.#202      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #31 = Class              #203          // java/util/ArrayList\n-   #32 = Methodref          #31.#174      // java/util/ArrayList.\"<init>\":()V\n-   #33 = Class              #204          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-   #34 = Class              #205          // org/apache/commons/compress/archivers/zip/ZipShort\n-   #35 = Methodref          #34.#206      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n-   #36 = Methodref          #34.#207      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n-   #37 = InterfaceMethodref #208.#209     // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior.onUnparseableExtraField:([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #38 = InterfaceMethodref #210.#211     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #39 = InterfaceMethodref #208.#212     // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior.createExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #40 = String             #213          // createExtraField must not return null\n-   #41 = Methodref          #214.#215     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #42 = InterfaceMethodref #208.#216     // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior.fill:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #43 = String             #217          // fill must not return null\n-   #44 = Class              #218          // java/util/zip/ZipException\n-   #45 = Methodref          #219.#220     // java/lang/ReflectiveOperationException.getMessage:()Ljava/lang/String;\n-   #46 = Methodref          #44.#188      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #47 = Methodref          #44.#221      // java/util/zip/ZipException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-   #48 = Fieldref           #33.#222      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-   #49 = InterfaceMethodref #210.#223     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+    #1 = Methodref          #80.#167      // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #25.#168      // java/lang/Class.newInstance:()Ljava/lang/Object;\n+    #3 = Class              #169          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+    #4 = Fieldref           #33.#170      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.IMPLEMENTATIONS:Ljava/util/Map;\n+    #5 = InterfaceMethodref #3.#171       // org/apache/commons/compress/archivers/zip/ZipExtraField.getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+    #6 = InterfaceMethodref #172.#173     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+    #7 = Class              #174          // java/lang/ClassCastException\n+    #8 = Class              #175          // java/lang/IllegalArgumentException\n+    #9 = Class              #176          // java/lang/StringBuilder\n+   #10 = Methodref          #9.#167       // java/lang/StringBuilder.\"<init>\":()V\n+   #11 = Methodref          #9.#177       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #12 = String             #178          //  doesn\\'t implement ZipExtraField\n+   #13 = Methodref          #9.#179       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #14 = Methodref          #9.#180       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #15 = Methodref          #8.#181       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #16 = Class              #182          // java/lang/InstantiationException\n+   #17 = String             #183          //  is not a concrete class\n+   #18 = Class              #184          // java/lang/IllegalAccessException\n+   #19 = String             #185          // \\'s no-arg constructor is not public\n+   #20 = Methodref          #33.#186      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.createExtraFieldNoDefault:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #21 = Class              #187          // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+   #22 = Methodref          #21.#167      // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.\"<init>\":()V\n+   #23 = Methodref          #21.#188      // org/apache/commons/compress/archivers/zip/UnrecognizedExtraField.setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+   #24 = InterfaceMethodref #172.#189     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #25 = Class              #190          // java/lang/Class\n+   #26 = Fieldref           #81.#191      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField.THROW:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+   #27 = Methodref          #33.#192      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #28 = Class              #193          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$1\n+   #29 = Methodref          #28.#194      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$1.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)V\n+   #30 = Methodref          #33.#195      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #31 = Class              #196          // java/util/ArrayList\n+   #32 = Methodref          #31.#167      // java/util/ArrayList.\"<init>\":()V\n+   #33 = Class              #197          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+   #34 = Class              #198          // org/apache/commons/compress/archivers/zip/ZipShort\n+   #35 = Methodref          #34.#199      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n+   #36 = Methodref          #34.#200      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+   #37 = InterfaceMethodref #201.#202     // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior.onUnparseableExtraField:([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #38 = InterfaceMethodref #145.#203     // java/util/List.add:(Ljava/lang/Object;)Z\n+   #39 = InterfaceMethodref #201.#204     // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior.createExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #40 = String             #205          // createExtraField must not return null\n+   #41 = Methodref          #206.#207     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #42 = InterfaceMethodref #201.#208     // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior.fill:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #43 = String             #209          // fill must not return null\n+   #44 = Class              #210          // java/util/zip/ZipException\n+   #45 = Methodref          #146.#211     // java/lang/ReflectiveOperationException.getMessage:()Ljava/lang/String;\n+   #46 = Methodref          #44.#181      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #47 = Methodref          #44.#212      // java/util/zip/ZipException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+   #48 = Fieldref           #33.#213      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+   #49 = InterfaceMethodref #145.#214     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n    #50 = Class              #93           // \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n-   #51 = Class              #224          // org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-   #52 = InterfaceMethodref #3.#225       // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #53 = Methodref          #34.#226      // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:()[B\n-   #54 = Methodref          #227.#228     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #55 = InterfaceMethodref #3.#229       // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n-   #56 = InterfaceMethodref #3.#230       // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #57 = InterfaceMethodref #3.#231       // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n-   #58 = InterfaceMethodref #3.#232       // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n-   #59 = InterfaceMethodref #3.#233       // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n-   #60 = Class              #234          // java/lang/ArrayIndexOutOfBoundsException\n-   #61 = String             #235          // Failed to parse corrupt ZIP extra field of type\n-   #62 = Methodref          #236.#237     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-   #63 = Class              #238          // java/util/concurrent/ConcurrentHashMap\n-   #64 = Methodref          #63.#174      // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-   #65 = Class              #239          // org/apache/commons/compress/archivers/zip/AsiExtraField\n-   #66 = Methodref          #33.#240      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.register:(Ljava/lang/Class;)V\n-   #67 = Class              #241          // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp\n-   #68 = Class              #242          // org/apache/commons/compress/archivers/zip/X7875_NewUnix\n-   #69 = Class              #243          // org/apache/commons/compress/archivers/zip/JarMarker\n-   #70 = Class              #244          // org/apache/commons/compress/archivers/zip/UnicodePathExtraField\n-   #71 = Class              #245          // org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField\n-   #72 = Class              #246          // org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField\n-   #73 = Class              #247          // org/apache/commons/compress/archivers/zip/X000A_NTFS\n-   #74 = Class              #248          // org/apache/commons/compress/archivers/zip/X0014_X509Certificates\n-   #75 = Class              #249          // org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile\n-   #76 = Class              #250          // org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory\n-   #77 = Class              #251          // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n-   #78 = Class              #252          // org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList\n-   #79 = Class              #253          // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n-   #80 = Class              #254          // java/lang/Object\n-   #81 = Class              #255          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n+   #51 = Class              #215          // org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+   #52 = InterfaceMethodref #3.#216       // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #53 = Methodref          #34.#217      // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:()[B\n+   #54 = Methodref          #218.#219     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #55 = InterfaceMethodref #3.#220       // org/apache/commons/compress/archivers/zip/ZipExtraField.getLocalFileDataData:()[B\n+   #56 = InterfaceMethodref #3.#221       // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #57 = InterfaceMethodref #3.#222       // org/apache/commons/compress/archivers/zip/ZipExtraField.getCentralDirectoryData:()[B\n+   #58 = InterfaceMethodref #3.#223       // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromLocalFileData:([BII)V\n+   #59 = InterfaceMethodref #3.#224       // org/apache/commons/compress/archivers/zip/ZipExtraField.parseFromCentralDirectoryData:([BII)V\n+   #60 = Class              #225          // java/lang/ArrayIndexOutOfBoundsException\n+   #61 = String             #226          // Failed to parse corrupt ZIP extra field of type\n+   #62 = Methodref          #227.#228     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+   #63 = Class              #229          // java/util/concurrent/ConcurrentHashMap\n+   #64 = Methodref          #63.#167      // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+   #65 = Class              #230          // org/apache/commons/compress/archivers/zip/AsiExtraField\n+   #66 = Methodref          #33.#231      // org/apache/commons/compress/archivers/zip/ExtraFieldUtils.register:(Ljava/lang/Class;)V\n+   #67 = Class              #232          // org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp\n+   #68 = Class              #233          // org/apache/commons/compress/archivers/zip/X7875_NewUnix\n+   #69 = Class              #234          // org/apache/commons/compress/archivers/zip/JarMarker\n+   #70 = Class              #235          // org/apache/commons/compress/archivers/zip/UnicodePathExtraField\n+   #71 = Class              #236          // org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField\n+   #72 = Class              #237          // org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField\n+   #73 = Class              #238          // org/apache/commons/compress/archivers/zip/X000A_NTFS\n+   #74 = Class              #239          // org/apache/commons/compress/archivers/zip/X0014_X509Certificates\n+   #75 = Class              #240          // org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile\n+   #76 = Class              #241          // org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory\n+   #77 = Class              #242          // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n+   #78 = Class              #243          // org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList\n+   #79 = Class              #244          // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n+   #80 = Class              #245          // java/lang/Object\n+   #81 = Class              #246          // org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n    #82 = Utf8               UnparseableExtraField\n    #83 = Utf8               InnerClasses\n    #84 = Utf8               WORD\n    #85 = Utf8               I\n    #86 = Utf8               ConstantValue\n    #87 = Integer            4\n    #88 = Utf8               IMPLEMENTATIONS\n@@ -118,208 +118,199 @@\n   #108 = Utf8               Ljava/lang/InstantiationException;\n   #109 = Utf8               Ljava/lang/IllegalAccessException;\n   #110 = Utf8               c\n   #111 = Utf8               Ljava/lang/Class;\n   #112 = Utf8               LocalVariableTypeTable\n   #113 = Utf8               Ljava/lang/Class<*>;\n   #114 = Utf8               StackMapTable\n-  #115 = Class              #181          // java/lang/ClassCastException\n-  #116 = Class              #189          // java/lang/InstantiationException\n-  #117 = Class              #191          // java/lang/IllegalAccessException\n-  #118 = Utf8               (Ljava/lang/Class<*>;)V\n-  #119 = Utf8               createExtraField\n-  #120 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #121 = Utf8               headerId\n-  #122 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #123 = Utf8               field\n-  #124 = Utf8               u\n-  #125 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnrecognizedExtraField;\n-  #126 = Class              #176          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #127 = Utf8               Exceptions\n-  #128 = Utf8               createExtraFieldNoDefault\n-  #129 = Class              #197          // java/lang/Class\n-  #130 = Utf8               parse\n-  #131 = Utf8               ([B)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #132 = Utf8               data\n-  #133 = Utf8               [B\n-  #134 = Utf8               ([BZ)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #135 = Utf8               local\n-  #136 = Utf8               Z\n-  #137 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #138 = Utf8               onUnparseableData\n-  #139 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n-  #140 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #141 = Utf8               Ljava/lang/ReflectiveOperationException;\n-  #142 = Utf8               length\n-  #143 = Utf8               parsingBehavior\n-  #144 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n-  #145 = Utf8               v\n-  #146 = Utf8               Ljava/util/List;\n-  #147 = Utf8               start\n-  #148 = Utf8               dataLength\n-  #149 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n-  #150 = Class              #256          // java/util/List\n-  #151 = Class              #205          // org/apache/commons/compress/archivers/zip/ZipShort\n-  #152 = Class              #257          // java/lang/ReflectiveOperationException\n-  #153 = Utf8               mergeLocalFileDataData\n-  #154 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n-  #155 = Utf8               element\n-  #156 = Utf8               i\n-  #157 = Utf8               lastIsUnparseableHolder\n-  #158 = Utf8               regularExtraFieldCount\n-  #159 = Utf8               sum\n-  #160 = Utf8               result\n-  #161 = Class              #133          // \"[B\"\n-  #162 = Utf8               mergeCentralDirectoryData\n-  #163 = Utf8               central\n-  #164 = Utf8               fillExtraField\n-  #165 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #166 = Utf8               aiobe\n-  #167 = Utf8               Ljava/lang/ArrayIndexOutOfBoundsException;\n-  #168 = Utf8               off\n-  #169 = Utf8               len\n-  #170 = Class              #234          // java/lang/ArrayIndexOutOfBoundsException\n-  #171 = Utf8               <clinit>\n-  #172 = Utf8               SourceFile\n-  #173 = Utf8               ExtraFieldUtils.java\n-  #174 = NameAndType        #94:#95       // \"<init>\":()V\n-  #175 = NameAndType        #258:#259     // newInstance:()Ljava/lang/Object;\n-  #176 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #177 = NameAndType        #88:#89       // IMPLEMENTATIONS:Ljava/util/Map;\n-  #178 = NameAndType        #260:#261     // getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #179 = Class              #262          // java/util/Map\n-  #180 = NameAndType        #263:#264     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #181 = Utf8               java/lang/ClassCastException\n-  #182 = Utf8               java/lang/IllegalArgumentException\n-  #183 = Utf8               java/lang/StringBuilder\n-  #184 = NameAndType        #265:#266     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #185 = Utf8                doesn\\'t implement ZipExtraField\n-  #186 = NameAndType        #265:#267     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #187 = NameAndType        #268:#269     // toString:()Ljava/lang/String;\n-  #188 = NameAndType        #94:#270      // \"<init>\":(Ljava/lang/String;)V\n-  #189 = Utf8               java/lang/InstantiationException\n-  #190 = Utf8                is not a concrete class\n-  #191 = Utf8               java/lang/IllegalAccessException\n-  #192 = Utf8               \\'s no-arg constructor is not public\n-  #193 = NameAndType        #128:#120     // createExtraFieldNoDefault:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #194 = Utf8               org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n-  #195 = NameAndType        #271:#272     // setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #196 = NameAndType        #273:#274     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #197 = Utf8               java/lang/Class\n-  #198 = NameAndType        #275:#139     // THROW:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n-  #199 = NameAndType        #130:#137     // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #200 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils$1\n-  #201 = NameAndType        #94:#276      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)V\n-  #202 = NameAndType        #130:#140     // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #203 = Utf8               java/util/ArrayList\n-  #204 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-  #205 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #206 = NameAndType        #94:#277      // \"<init>\":([BI)V\n-  #207 = NameAndType        #278:#279     // getValue:()I\n-  #208 = Class              #280          // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n-  #209 = NameAndType        #281:#282     // onUnparseableExtraField:([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #210 = Class              #256          // java/util/List\n-  #211 = NameAndType        #283:#284     // add:(Ljava/lang/Object;)Z\n-  #212 = NameAndType        #119:#120     // createExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #213 = Utf8               createExtraField must not return null\n-  #214 = Class              #285          // java/util/Objects\n-  #215 = NameAndType        #286:#287     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #216 = NameAndType        #288:#165     // fill:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #217 = Utf8               fill must not return null\n-  #218 = Utf8               java/util/zip/ZipException\n-  #219 = Class              #257          // java/lang/ReflectiveOperationException\n-  #220 = NameAndType        #289:#269     // getMessage:()Ljava/lang/String;\n-  #221 = NameAndType        #290:#291     // initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-  #222 = NameAndType        #92:#93       // EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #223 = NameAndType        #292:#293     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #224 = Utf8               org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n-  #225 = NameAndType        #294:#261     // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #226 = NameAndType        #295:#296     // getBytes:()[B\n-  #227 = Class              #297          // java/lang/System\n-  #228 = NameAndType        #298:#299     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #229 = NameAndType        #300:#296     // getLocalFileDataData:()[B\n-  #230 = NameAndType        #301:#261     // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #231 = NameAndType        #302:#296     // getCentralDirectoryData:()[B\n-  #232 = NameAndType        #303:#304     // parseFromLocalFileData:([BII)V\n-  #233 = NameAndType        #305:#304     // parseFromCentralDirectoryData:([BII)V\n-  #234 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n-  #235 = Utf8               Failed to parse corrupt ZIP extra field of type\n-  #236 = Class              #306          // java/lang/Integer\n-  #237 = NameAndType        #307:#308     // toHexString:(I)Ljava/lang/String;\n-  #238 = Utf8               java/util/concurrent/ConcurrentHashMap\n-  #239 = Utf8               org/apache/commons/compress/archivers/zip/AsiExtraField\n-  #240 = NameAndType        #101:#102     // register:(Ljava/lang/Class;)V\n-  #241 = Utf8               org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp\n-  #242 = Utf8               org/apache/commons/compress/archivers/zip/X7875_NewUnix\n-  #243 = Utf8               org/apache/commons/compress/archivers/zip/JarMarker\n-  #244 = Utf8               org/apache/commons/compress/archivers/zip/UnicodePathExtraField\n-  #245 = Utf8               org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField\n-  #246 = Utf8               org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField\n-  #247 = Utf8               org/apache/commons/compress/archivers/zip/X000A_NTFS\n-  #248 = Utf8               org/apache/commons/compress/archivers/zip/X0014_X509Certificates\n-  #249 = Utf8               org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile\n-  #250 = Utf8               org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory\n-  #251 = Utf8               org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n-  #252 = Utf8               org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList\n-  #253 = Utf8               org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n-  #254 = Utf8               java/lang/Object\n-  #255 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n-  #256 = Utf8               java/util/List\n-  #257 = Utf8               java/lang/ReflectiveOperationException\n-  #258 = Utf8               newInstance\n-  #259 = Utf8               ()Ljava/lang/Object;\n-  #260 = Utf8               getHeaderId\n-  #261 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #262 = Utf8               java/util/Map\n-  #263 = Utf8               put\n-  #264 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #265 = Utf8               append\n-  #266 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #267 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #268 = Utf8               toString\n-  #269 = Utf8               ()Ljava/lang/String;\n-  #270 = Utf8               (Ljava/lang/String;)V\n-  #271 = Utf8               setHeaderId\n-  #272 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #273 = Utf8               get\n-  #274 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #275 = Utf8               THROW\n-  #276 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)V\n-  #277 = Utf8               ([BI)V\n-  #278 = Utf8               getValue\n-  #279 = Utf8               ()I\n-  #280 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n-  #281 = Utf8               onUnparseableExtraField\n-  #282 = Utf8               ([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-  #283 = Utf8               add\n-  #284 = Utf8               (Ljava/lang/Object;)Z\n-  #285 = Utf8               java/util/Objects\n-  #286 = Utf8               requireNonNull\n-  #287 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #288 = Utf8               fill\n-  #289 = Utf8               getMessage\n-  #290 = Utf8               initCause\n-  #291 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-  #292 = Utf8               toArray\n-  #293 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #294 = Utf8               getLocalFileDataLength\n-  #295 = Utf8               getBytes\n-  #296 = Utf8               ()[B\n-  #297 = Utf8               java/lang/System\n-  #298 = Utf8               arraycopy\n-  #299 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #300 = Utf8               getLocalFileDataData\n-  #301 = Utf8               getCentralDirectoryLength\n-  #302 = Utf8               getCentralDirectoryData\n-  #303 = Utf8               parseFromLocalFileData\n-  #304 = Utf8               ([BII)V\n-  #305 = Utf8               parseFromCentralDirectoryData\n-  #306 = Utf8               java/lang/Integer\n-  #307 = Utf8               toHexString\n-  #308 = Utf8               (I)Ljava/lang/String;\n+  #115 = Utf8               (Ljava/lang/Class<*>;)V\n+  #116 = Utf8               createExtraField\n+  #117 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #118 = Utf8               headerId\n+  #119 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #120 = Utf8               field\n+  #121 = Utf8               u\n+  #122 = Utf8               Lorg/apache/commons/compress/archivers/zip/UnrecognizedExtraField;\n+  #123 = Utf8               Exceptions\n+  #124 = Utf8               createExtraFieldNoDefault\n+  #125 = Utf8               parse\n+  #126 = Utf8               ([B)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #127 = Utf8               data\n+  #128 = Utf8               [B\n+  #129 = Utf8               ([BZ)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #130 = Utf8               local\n+  #131 = Utf8               Z\n+  #132 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #133 = Utf8               onUnparseableData\n+  #134 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+  #135 = Utf8               ([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #136 = Utf8               Ljava/lang/ReflectiveOperationException;\n+  #137 = Utf8               length\n+  #138 = Utf8               parsingBehavior\n+  #139 = Utf8               Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n+  #140 = Utf8               v\n+  #141 = Utf8               Ljava/util/List;\n+  #142 = Utf8               start\n+  #143 = Utf8               dataLength\n+  #144 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n+  #145 = Class              #247          // java/util/List\n+  #146 = Class              #248          // java/lang/ReflectiveOperationException\n+  #147 = Utf8               mergeLocalFileDataData\n+  #148 = Utf8               ([Lorg/apache/commons/compress/archivers/zip/ZipExtraField;)[B\n+  #149 = Utf8               element\n+  #150 = Utf8               i\n+  #151 = Utf8               lastIsUnparseableHolder\n+  #152 = Utf8               regularExtraFieldCount\n+  #153 = Utf8               sum\n+  #154 = Utf8               result\n+  #155 = Class              #128          // \"[B\"\n+  #156 = Utf8               mergeCentralDirectoryData\n+  #157 = Utf8               central\n+  #158 = Utf8               fillExtraField\n+  #159 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #160 = Utf8               aiobe\n+  #161 = Utf8               Ljava/lang/ArrayIndexOutOfBoundsException;\n+  #162 = Utf8               off\n+  #163 = Utf8               len\n+  #164 = Utf8               <clinit>\n+  #165 = Utf8               SourceFile\n+  #166 = Utf8               ExtraFieldUtils.java\n+  #167 = NameAndType        #94:#95       // \"<init>\":()V\n+  #168 = NameAndType        #249:#250     // newInstance:()Ljava/lang/Object;\n+  #169 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #170 = NameAndType        #88:#89       // IMPLEMENTATIONS:Ljava/util/Map;\n+  #171 = NameAndType        #251:#252     // getHeaderId:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #172 = Class              #253          // java/util/Map\n+  #173 = NameAndType        #254:#255     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #174 = Utf8               java/lang/ClassCastException\n+  #175 = Utf8               java/lang/IllegalArgumentException\n+  #176 = Utf8               java/lang/StringBuilder\n+  #177 = NameAndType        #256:#257     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #178 = Utf8                doesn\\'t implement ZipExtraField\n+  #179 = NameAndType        #256:#258     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #180 = NameAndType        #259:#260     // toString:()Ljava/lang/String;\n+  #181 = NameAndType        #94:#261      // \"<init>\":(Ljava/lang/String;)V\n+  #182 = Utf8               java/lang/InstantiationException\n+  #183 = Utf8                is not a concrete class\n+  #184 = Utf8               java/lang/IllegalAccessException\n+  #185 = Utf8               \\'s no-arg constructor is not public\n+  #186 = NameAndType        #124:#117     // createExtraFieldNoDefault:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #187 = Utf8               org/apache/commons/compress/archivers/zip/UnrecognizedExtraField\n+  #188 = NameAndType        #262:#263     // setHeaderId:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #189 = NameAndType        #264:#265     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #190 = Utf8               java/lang/Class\n+  #191 = NameAndType        #266:#134     // THROW:Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;\n+  #192 = NameAndType        #125:#132     // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #193 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils$1\n+  #194 = NameAndType        #94:#267      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)V\n+  #195 = NameAndType        #125:#135     // parse:([BZLorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;)[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #196 = Utf8               java/util/ArrayList\n+  #197 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n+  #198 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #199 = NameAndType        #94:#268      // \"<init>\":([BI)V\n+  #200 = NameAndType        #269:#270     // getValue:()I\n+  #201 = Class              #271          // org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n+  #202 = NameAndType        #272:#273     // onUnparseableExtraField:([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #203 = NameAndType        #274:#275     // add:(Ljava/lang/Object;)Z\n+  #204 = NameAndType        #116:#117     // createExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #205 = Utf8               createExtraField must not return null\n+  #206 = Class              #276          // java/util/Objects\n+  #207 = NameAndType        #277:#278     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #208 = NameAndType        #279:#159     // fill:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #209 = Utf8               fill must not return null\n+  #210 = Utf8               java/util/zip/ZipException\n+  #211 = NameAndType        #280:#260     // getMessage:()Ljava/lang/String;\n+  #212 = NameAndType        #281:#282     // initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+  #213 = NameAndType        #92:#93       // EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #214 = NameAndType        #283:#284     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #215 = Utf8               org/apache/commons/compress/archivers/zip/UnparseableExtraFieldData\n+  #216 = NameAndType        #285:#252     // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #217 = NameAndType        #286:#287     // getBytes:()[B\n+  #218 = Class              #288          // java/lang/System\n+  #219 = NameAndType        #289:#290     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #220 = NameAndType        #291:#287     // getLocalFileDataData:()[B\n+  #221 = NameAndType        #292:#252     // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #222 = NameAndType        #293:#287     // getCentralDirectoryData:()[B\n+  #223 = NameAndType        #294:#295     // parseFromLocalFileData:([BII)V\n+  #224 = NameAndType        #296:#295     // parseFromCentralDirectoryData:([BII)V\n+  #225 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n+  #226 = Utf8               Failed to parse corrupt ZIP extra field of type\n+  #227 = Class              #297          // java/lang/Integer\n+  #228 = NameAndType        #298:#299     // toHexString:(I)Ljava/lang/String;\n+  #229 = Utf8               java/util/concurrent/ConcurrentHashMap\n+  #230 = Utf8               org/apache/commons/compress/archivers/zip/AsiExtraField\n+  #231 = NameAndType        #101:#102     // register:(Ljava/lang/Class;)V\n+  #232 = Utf8               org/apache/commons/compress/archivers/zip/X5455_ExtendedTimestamp\n+  #233 = Utf8               org/apache/commons/compress/archivers/zip/X7875_NewUnix\n+  #234 = Utf8               org/apache/commons/compress/archivers/zip/JarMarker\n+  #235 = Utf8               org/apache/commons/compress/archivers/zip/UnicodePathExtraField\n+  #236 = Utf8               org/apache/commons/compress/archivers/zip/UnicodeCommentExtraField\n+  #237 = Utf8               org/apache/commons/compress/archivers/zip/Zip64ExtendedInformationExtraField\n+  #238 = Utf8               org/apache/commons/compress/archivers/zip/X000A_NTFS\n+  #239 = Utf8               org/apache/commons/compress/archivers/zip/X0014_X509Certificates\n+  #240 = Utf8               org/apache/commons/compress/archivers/zip/X0015_CertificateIdForFile\n+  #241 = Utf8               org/apache/commons/compress/archivers/zip/X0016_CertificateIdForCentralDirectory\n+  #242 = Utf8               org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n+  #243 = Utf8               org/apache/commons/compress/archivers/zip/X0019_EncryptionRecipientCertificateList\n+  #244 = Utf8               org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n+  #245 = Utf8               java/lang/Object\n+  #246 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField\n+  #247 = Utf8               java/util/List\n+  #248 = Utf8               java/lang/ReflectiveOperationException\n+  #249 = Utf8               newInstance\n+  #250 = Utf8               ()Ljava/lang/Object;\n+  #251 = Utf8               getHeaderId\n+  #252 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #253 = Utf8               java/util/Map\n+  #254 = Utf8               put\n+  #255 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #256 = Utf8               append\n+  #257 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #258 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #259 = Utf8               toString\n+  #260 = Utf8               ()Ljava/lang/String;\n+  #261 = Utf8               (Ljava/lang/String;)V\n+  #262 = Utf8               setHeaderId\n+  #263 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #264 = Utf8               get\n+  #265 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #266 = Utf8               THROW\n+  #267 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField;)V\n+  #268 = Utf8               ([BI)V\n+  #269 = Utf8               getValue\n+  #270 = Utf8               ()I\n+  #271 = Utf8               org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior\n+  #272 = Utf8               onUnparseableExtraField\n+  #273 = Utf8               ([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+  #274 = Utf8               add\n+  #275 = Utf8               (Ljava/lang/Object;)Z\n+  #276 = Utf8               java/util/Objects\n+  #277 = Utf8               requireNonNull\n+  #278 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #279 = Utf8               fill\n+  #280 = Utf8               getMessage\n+  #281 = Utf8               initCause\n+  #282 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+  #283 = Utf8               toArray\n+  #284 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #285 = Utf8               getLocalFileDataLength\n+  #286 = Utf8               getBytes\n+  #287 = Utf8               ()[B\n+  #288 = Utf8               java/lang/System\n+  #289 = Utf8               arraycopy\n+  #290 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #291 = Utf8               getLocalFileDataData\n+  #292 = Utf8               getCentralDirectoryLength\n+  #293 = Utf8               getCentralDirectoryData\n+  #294 = Utf8               parseFromLocalFileData\n+  #295 = Utf8               ([BII)V\n+  #296 = Utf8               parseFromCentralDirectoryData\n+  #297 = Utf8               java/lang/Integer\n+  #298 = Utf8               toHexString\n+  #299 = Utf8               (I)Ljava/lang/String;\n {\n   private static final int WORD = 4;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 4\n \n   private static final java.util.Map<org.apache.commons.compress.archivers.zip.ZipShort, java.lang.Class<?>> IMPLEMENTATIONS;\n@@ -431,15 +422,15 @@\n         frame_type = 91 /* same_locals_1_stack_item */\n           stack = [ class java/lang/ClassCastException ]\n         frame_type = 91 /* same_locals_1_stack_item */\n           stack = [ class java/lang/InstantiationException ]\n         frame_type = 91 /* same_locals_1_stack_item */\n           stack = [ class java/lang/IllegalAccessException ]\n         frame_type = 27 /* same */\n-    Signature: #118                         // (Ljava/lang/Class<*>;)V\n+    Signature: #115                         // (Ljava/lang/Class<*>;)V\n \n   public static org.apache.commons.compress.archivers.zip.ZipExtraField createExtraField(org.apache.commons.compress.archivers.zip.ZipShort) throws java.lang.InstantiationException, java.lang.IllegalAccessException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n@@ -588,15 +579,15 @@\n         11: aload_0\n         12: arraylength\n         13: istore        5\n         15: iload         4\n         17: iload         5\n         19: iconst_4\n         20: isub\n-        21: if_icmpgt     185\n+        21: if_icmpgt     188\n         24: new           #34                 // class org/apache/commons/compress/archivers/zip/ZipShort\n         27: dup\n         28: aload_0\n         29: iload         4\n         31: invokespecial #35                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n         34: astore        6\n         36: new           #34                 // class org/apache/commons/compress/archivers/zip/ZipShort\n@@ -622,20 +613,20 @@\n         71: iload         4\n         73: isub\n         74: iload_1\n         75: iload         7\n         77: invokeinterface #37,  6           // InterfaceMethod org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior.onUnparseableExtraField:([BIIZI)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n         82: astore        8\n         84: aload         8\n-        86: ifnull        185\n+        86: ifnull        188\n         89: aload_3\n         90: aload         8\n         92: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         97: pop\n-        98: goto          185\n+        98: goto          188\n        101: aload_2\n        102: aload         6\n        104: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior.createExtraField:(Lorg/apache/commons/compress/archivers/zip/ZipShort;)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n        109: ldc           #40                 // String createExtraField must not return null\n        111: invokestatic  #41                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n        114: checkcast     #3                  // class org/apache/commons/compress/archivers/zip/ZipExtraField\n        117: astore        8\n@@ -647,86 +638,87 @@\n        126: iconst_4\n        127: iadd\n        128: iload         7\n        130: iload_1\n        131: invokeinterface #42,  6           // InterfaceMethod org/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior.fill:(Lorg/apache/commons/compress/archivers/zip/ZipExtraField;[BIIZ)Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n        136: ldc           #43                 // String fill must not return null\n        138: invokestatic  #41                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-       141: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n-       146: pop\n-       147: iload         4\n-       149: iload         7\n-       151: iconst_4\n-       152: iadd\n-       153: iadd\n-       154: istore        4\n-       156: goto          182\n-       159: astore        8\n-       161: new           #44                 // class java/util/zip/ZipException\n-       164: dup\n-       165: aload         8\n-       167: invokevirtual #45                 // Method java/lang/ReflectiveOperationException.getMessage:()Ljava/lang/String;\n-       170: invokespecial #46                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-       173: aload         8\n-       175: invokevirtual #47                 // Method java/util/zip/ZipException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-       178: checkcast     #44                 // class java/util/zip/ZipException\n-       181: athrow\n-       182: goto          15\n-       185: aload_3\n-       186: getstatic     #48                 // Field EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-       189: invokeinterface #49,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       194: checkcast     #50                 // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n-       197: areturn\n+       141: checkcast     #3                  // class org/apache/commons/compress/archivers/zip/ZipExtraField\n+       144: invokeinterface #38,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       149: pop\n+       150: iload         4\n+       152: iload         7\n+       154: iconst_4\n+       155: iadd\n+       156: iadd\n+       157: istore        4\n+       159: goto          185\n+       162: astore        8\n+       164: new           #44                 // class java/util/zip/ZipException\n+       167: dup\n+       168: aload         8\n+       170: invokevirtual #45                 // Method java/lang/ReflectiveOperationException.getMessage:()Ljava/lang/String;\n+       173: invokespecial #46                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+       176: aload         8\n+       178: invokevirtual #47                 // Method java/util/zip/ZipException.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+       181: checkcast     #44                 // class java/util/zip/ZipException\n+       184: athrow\n+       185: goto          15\n+       188: aload_3\n+       189: getstatic     #48                 // Field EMPTY_ZIP_EXTRA_FIELD_ARRAY:[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+       192: invokeinterface #49,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       197: checkcast     #50                 // class \"[Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\"\n+       200: areturn\n       Exception table:\n          from    to  target type\n-           101   156   159   Class java/lang/InstantiationException\n-           101   156   159   Class java/lang/IllegalAccessException\n+           101   159   162   Class java/lang/InstantiationException\n+           101   159   162   Class java/lang/IllegalAccessException\n       LineNumberTable:\n         line 194: 0\n         line 195: 8\n         line 196: 11\n         line 198: 15\n         line 199: 24\n         line 200: 36\n         line 201: 53\n         line 202: 65\n         line 204: 84\n         line 205: 89\n         line 213: 101\n         line 215: 119\n-        line 217: 147\n-        line 220: 156\n-        line 218: 159\n-        line 219: 161\n-        line 221: 182\n-        line 223: 185\n+        line 217: 150\n+        line 220: 159\n+        line 218: 162\n+        line 219: 164\n+        line 221: 185\n+        line 223: 188\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            84      17     8 field   Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-          119      37     8    ze   Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n-          161      21     8    ie   Ljava/lang/ReflectiveOperationException;\n-           36     146     6 headerId   Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-           53     129     7 length   I\n-            0     198     0  data   [B\n-            0     198     1 local   Z\n-            0     198     2 parsingBehavior   Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n-            8     190     3     v   Ljava/util/List;\n-           11     187     4 start   I\n-           15     183     5 dataLength   I\n+          119      40     8    ze   Lorg/apache/commons/compress/archivers/zip/ZipExtraField;\n+          164      21     8    ie   Ljava/lang/ReflectiveOperationException;\n+           36     149     6 headerId   Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+           53     132     7 length   I\n+            0     201     0  data   [B\n+            0     201     1 local   Z\n+            0     201     2 parsingBehavior   Lorg/apache/commons/compress/archivers/zip/ExtraFieldParsingBehavior;\n+            8     193     3     v   Ljava/util/List;\n+           11     190     4 start   I\n+           15     186     5 dataLength   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-            8     190     3     v   Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n+            8     193     3     v   Ljava/util/List<Lorg/apache/commons/compress/archivers/zip/ZipExtraField;>;\n       StackMapTable: number_of_entries = 5\n         frame_type = 254 /* append */\n           offset_delta = 15\n           locals = [ class java/util/List, int, int ]\n         frame_type = 253 /* append */\n           offset_delta = 85\n           locals = [ class org/apache/commons/compress/archivers/zip/ZipShort, int ]\n-        frame_type = 121 /* same_locals_1_stack_item */\n+        frame_type = 124 /* same_locals_1_stack_item */\n           stack = [ class java/lang/ReflectiveOperationException ]\n         frame_type = 249 /* chop */\n           offset_delta = 22\n         frame_type = 2 /* same */\n     Exceptions:\n       throws java.util.zip.ZipException\n \n@@ -858,15 +850,15 @@\n        225: arraylength\n        226: invokestatic  #54                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        229: aload         5\n        231: areturn\n       LineNumberTable:\n         line 232: 0\n         line 233: 3\n-        line 235: 24\n+        line 236: 24\n         line 238: 36\n         line 239: 41\n         line 240: 66\n         line 239: 81\n         line 243: 87\n         line 244: 93\n         line 245: 96\n@@ -1050,15 +1042,15 @@\n        225: arraylength\n        226: invokestatic  #54                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        229: aload         5\n        231: areturn\n       LineNumberTable:\n         line 272: 0\n         line 273: 3\n-        line 275: 24\n+        line 276: 24\n         line 278: 36\n         line 279: 41\n         line 280: 66\n         line 279: 81\n         line 282: 87\n         line 283: 93\n         line 284: 96\n@@ -1238,8 +1230,8 @@\n         line 55: 70\n         line 56: 75\n         line 420: 80\n }\n SourceFile: \"ExtraFieldUtils.java\"\n InnerClasses:\n   public static final #82= #81 of #33;    // UnparseableExtraField=class org/apache/commons/compress/archivers/zip/ExtraFieldUtils$UnparseableExtraField of class org/apache/commons/compress/archivers/zip/ExtraFieldUtils\n-  static #28;                             // class org/apache/commons/compress/archivers/zip/ExtraFieldUtils$1\n+  #28;                                    // class org/apache/commons/compress/archivers/zip/ExtraFieldUtils$1\n"}]}
