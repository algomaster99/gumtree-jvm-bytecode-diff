{"diffoscope-json-version": 1, "source1": "first/CodePointTranslator.class", "source2": "second/CodePointTranslator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,87 +1,89 @@\n-  SHA-256 checksum 6a0f5630b93aa804b9462e8a37989218a0d3dd2bd22438e4ea5f3d388679eeaa\n+  SHA-256 checksum aee6ce54288c1371222e2696166419ff0d49b83e5d5c84cb1b499078da0d792f\n   Compiled from \"CodePointTranslator.java\"\n public abstract class org.apache.commons.lang3.text.translate.CodePointTranslator extends org.apache.commons.lang3.text.translate.CharSequenceTranslator\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #14                         // org/apache/commons/lang3/text/translate/CodePointTranslator\n-  super_class: #2                         // org/apache/commons/lang3/text/translate/CharSequenceTranslator\n+  this_class: #1                          // org/apache/commons/lang3/text/translate/CodePointTranslator\n+  super_class: #3                         // org/apache/commons/lang3/text/translate/CharSequenceTranslator\n   interfaces: 0, fields: 0, methods: 3, attributes: 3\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/lang3/text/translate/CharSequenceTranslator.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/commons/lang3/text/translate/CharSequenceTranslator\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/lang3/text/translate/CodePointTranslator\n+   #2 = Utf8               org/apache/commons/lang3/text/translate/CodePointTranslator\n+   #3 = Class              #4             // org/apache/commons/lang3/text/translate/CharSequenceTranslator\n    #4 = Utf8               org/apache/commons/lang3/text/translate/CharSequenceTranslator\n    #5 = Utf8               <init>\n    #6 = Utf8               ()V\n-   #7 = Methodref          #8.#9          // java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I\n-   #8 = Class              #10            // java/lang/Character\n-   #9 = NameAndType        #11:#12        // codePointAt:(Ljava/lang/CharSequence;I)I\n-  #10 = Utf8               java/lang/Character\n-  #11 = Utf8               codePointAt\n-  #12 = Utf8               (Ljava/lang/CharSequence;I)I\n-  #13 = Methodref          #14.#15        // org/apache/commons/lang3/text/translate/CodePointTranslator.translate:(ILjava/io/Writer;)Z\n-  #14 = Class              #16            // org/apache/commons/lang3/text/translate/CodePointTranslator\n-  #15 = NameAndType        #17:#18        // translate:(ILjava/io/Writer;)Z\n-  #16 = Utf8               org/apache/commons/lang3/text/translate/CodePointTranslator\n-  #17 = Utf8               translate\n-  #18 = Utf8               (ILjava/io/Writer;)Z\n-  #19 = Utf8               Code\n-  #20 = Utf8               LineNumberTable\n-  #21 = Utf8               LocalVariableTable\n-  #22 = Utf8               this\n-  #23 = Utf8               Lorg/apache/commons/lang3/text/translate/CodePointTranslator;\n-  #24 = Utf8               (Ljava/lang/CharSequence;ILjava/io/Writer;)I\n-  #25 = Utf8               input\n-  #26 = Utf8               Ljava/lang/CharSequence;\n-  #27 = Utf8               index\n-  #28 = Utf8               I\n-  #29 = Utf8               out\n-  #30 = Utf8               Ljava/io/Writer;\n-  #31 = Utf8               codepoint\n-  #32 = Utf8               consumed\n-  #33 = Utf8               Z\n-  #34 = Utf8               StackMapTable\n-  #35 = Utf8               Exceptions\n-  #36 = Class              #37            // java/io/IOException\n-  #37 = Utf8               java/io/IOException\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // org/apache/commons/lang3/text/translate/CharSequenceTranslator.\"<init>\":()V\n+   #9 = NameAndType        #5:#6          // \"<init>\":()V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/lang3/text/translate/CodePointTranslator;\n+  #14 = Utf8               translate\n+  #15 = Utf8               (Ljava/lang/CharSequence;ILjava/io/Writer;)I\n+  #16 = Utf8               Exceptions\n+  #17 = Class              #18            // java/io/IOException\n+  #18 = Utf8               java/io/IOException\n+  #19 = Methodref          #20.#22        // java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I\n+  #20 = Class              #21            // java/lang/Character\n+  #21 = Utf8               java/lang/Character\n+  #22 = NameAndType        #23:#24        // codePointAt:(Ljava/lang/CharSequence;I)I\n+  #23 = Utf8               codePointAt\n+  #24 = Utf8               (Ljava/lang/CharSequence;I)I\n+  #25 = Methodref          #1.#26         // org/apache/commons/lang3/text/translate/CodePointTranslator.translate:(ILjava/io/Writer;)Z\n+  #26 = NameAndType        #14:#27        // translate:(ILjava/io/Writer;)Z\n+  #27 = Utf8               (ILjava/io/Writer;)Z\n+  #28 = Utf8               input\n+  #29 = Utf8               Ljava/lang/CharSequence;\n+  #30 = Utf8               index\n+  #31 = Utf8               I\n+  #32 = Utf8               out\n+  #33 = Utf8               Ljava/io/Writer;\n+  #34 = Utf8               codepoint\n+  #35 = Utf8               consumed\n+  #36 = Utf8               Z\n+  #37 = Utf8               StackMapTable\n   #38 = Utf8               SourceFile\n   #39 = Utf8               CodePointTranslator.java\n   #40 = Utf8               Deprecated\n   #41 = Utf8               RuntimeVisibleAnnotations\n   #42 = Utf8               Ljava/lang/Deprecated;\n {\n   public org.apache.commons.lang3.text.translate.CodePointTranslator();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/lang3/text/translate/CharSequenceTranslator.\"<init>\":()V\n+         1: invokespecial #8                  // Method org/apache/commons/lang3/text/translate/CharSequenceTranslator.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 32: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/text/translate/CodePointTranslator;\n \n   public final int translate(java.lang.CharSequence, int, java.io.Writer) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;ILjava/io/Writer;)I\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_1\n          1: iload_2\n-         2: invokestatic  #7                  // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I\n+         2: invokestatic  #19                 // Method java/lang/Character.codePointAt:(Ljava/lang/CharSequence;I)I\n          5: istore        4\n          7: aload_0\n          8: iload         4\n         10: aload_3\n-        11: invokevirtual #13                 // Method translate:(ILjava/io/Writer;)Z\n+        11: invokevirtual #25                 // Method translate:(ILjava/io/Writer;)Z\n         14: istore        5\n         16: iload         5\n         18: ifeq          25\n         21: iconst_1\n         22: goto          26\n         25: iconst_0\n         26: ireturn\n@@ -99,16 +101,14 @@\n            16      11     5 consumed   Z\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n           offset_delta = 25\n           locals = [ int, int ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public abstract boolean translate(int, java.io.Writer) throws java.io.IOException;\n     descriptor: (ILjava/io/Writer;)Z\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n }\n"}]}
