{"diffoscope-json-version": 1, "source1": "first/Property.class", "source2": "second/Property.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,111 +1,107 @@\n-  SHA-256 checksum 7b409f6d48db2ead2ad97d3cfdbde38015de4d5d064918e3ed11972da949ea84\n+  SHA-256 checksum 33ebbc66415a85b01110f59123131b8c9ca16c8a9aba29ee9ca5fe00f63be75f\n   Compiled from \"Property.java\"\n public class org.json.Property\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #22                         // org/json/Property\n   super_class: #23                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #23.#41        // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #42            // org/json/JSONObject\n-   #3 = Methodref          #2.#41         // org/json/JSONObject.\"<init>\":()V\n-   #4 = Methodref          #11.#43        // java/util/Properties.isEmpty:()Z\n-   #5 = Methodref          #11.#44        // java/util/Properties.propertyNames:()Ljava/util/Enumeration;\n-   #6 = InterfaceMethodref #45.#46        // java/util/Enumeration.hasMoreElements:()Z\n-   #7 = InterfaceMethodref #45.#47        // java/util/Enumeration.nextElement:()Ljava/lang/Object;\n-   #8 = Class              #48            // java/lang/String\n-   #9 = Methodref          #11.#49        // java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #10 = Methodref          #2.#50         // org/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-  #11 = Class              #51            // java/util/Properties\n-  #12 = Methodref          #11.#41        // java/util/Properties.\"<init>\":()V\n-  #13 = Methodref          #2.#52         // org/json/JSONObject.keySet:()Ljava/util/Set;\n-  #14 = InterfaceMethodref #53.#54        // java/util/Set.iterator:()Ljava/util/Iterator;\n-  #15 = InterfaceMethodref #55.#56        // java/util/Iterator.hasNext:()Z\n-  #16 = InterfaceMethodref #55.#57        // java/util/Iterator.next:()Ljava/lang/Object;\n-  #17 = Methodref          #2.#58         // org/json/JSONObject.opt:(Ljava/lang/String;)Ljava/lang/Object;\n-  #18 = Fieldref           #2.#59         // org/json/JSONObject.NULL:Ljava/lang/Object;\n-  #19 = Methodref          #23.#60        // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-  #20 = Methodref          #23.#61        // java/lang/Object.toString:()Ljava/lang/String;\n-  #21 = Methodref          #11.#62        // java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #22 = Class              #63            // org/json/Property\n-  #23 = Class              #64            // java/lang/Object\n+   #1 = Methodref          #23.#39        // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #40            // org/json/JSONObject\n+   #3 = Methodref          #2.#39         // org/json/JSONObject.\"<init>\":()V\n+   #4 = Methodref          #11.#41        // java/util/Properties.isEmpty:()Z\n+   #5 = Methodref          #11.#42        // java/util/Properties.propertyNames:()Ljava/util/Enumeration;\n+   #6 = InterfaceMethodref #31.#43        // java/util/Enumeration.hasMoreElements:()Z\n+   #7 = InterfaceMethodref #31.#44        // java/util/Enumeration.nextElement:()Ljava/lang/Object;\n+   #8 = Class              #45            // java/lang/String\n+   #9 = Methodref          #11.#46        // java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #10 = Methodref          #2.#47         // org/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+  #11 = Class              #48            // java/util/Properties\n+  #12 = Methodref          #11.#39        // java/util/Properties.\"<init>\":()V\n+  #13 = Methodref          #2.#49         // org/json/JSONObject.keySet:()Ljava/util/Set;\n+  #14 = InterfaceMethodref #50.#51        // java/util/Set.iterator:()Ljava/util/Iterator;\n+  #15 = InterfaceMethodref #36.#52        // java/util/Iterator.hasNext:()Z\n+  #16 = InterfaceMethodref #36.#53        // java/util/Iterator.next:()Ljava/lang/Object;\n+  #17 = Methodref          #2.#54         // org/json/JSONObject.opt:(Ljava/lang/String;)Ljava/lang/Object;\n+  #18 = Fieldref           #2.#55         // org/json/JSONObject.NULL:Ljava/lang/Object;\n+  #19 = Methodref          #23.#56        // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+  #20 = Methodref          #23.#57        // java/lang/Object.toString:()Ljava/lang/String;\n+  #21 = Methodref          #11.#58        // java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #22 = Class              #59            // org/json/Property\n+  #23 = Class              #60            // java/lang/Object\n   #24 = Utf8               <init>\n   #25 = Utf8               ()V\n   #26 = Utf8               Code\n   #27 = Utf8               LineNumberTable\n   #28 = Utf8               toJSONObject\n   #29 = Utf8               (Ljava/util/Properties;)Lorg/json/JSONObject;\n   #30 = Utf8               StackMapTable\n-  #31 = Class              #42            // org/json/JSONObject\n-  #32 = Class              #65            // java/util/Enumeration\n-  #33 = Utf8               Exceptions\n-  #34 = Class              #66            // org/json/JSONException\n-  #35 = Utf8               toProperties\n-  #36 = Utf8               (Lorg/json/JSONObject;)Ljava/util/Properties;\n-  #37 = Class              #51            // java/util/Properties\n-  #38 = Class              #67            // java/util/Iterator\n-  #39 = Utf8               SourceFile\n-  #40 = Utf8               Property.java\n-  #41 = NameAndType        #24:#25        // \"<init>\":()V\n-  #42 = Utf8               org/json/JSONObject\n-  #43 = NameAndType        #68:#69        // isEmpty:()Z\n-  #44 = NameAndType        #70:#71        // propertyNames:()Ljava/util/Enumeration;\n-  #45 = Class              #65            // java/util/Enumeration\n-  #46 = NameAndType        #72:#69        // hasMoreElements:()Z\n-  #47 = NameAndType        #73:#74        // nextElement:()Ljava/lang/Object;\n-  #48 = Utf8               java/lang/String\n-  #49 = NameAndType        #75:#76        // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #50 = NameAndType        #77:#78        // put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-  #51 = Utf8               java/util/Properties\n-  #52 = NameAndType        #79:#80        // keySet:()Ljava/util/Set;\n-  #53 = Class              #81            // java/util/Set\n-  #54 = NameAndType        #82:#83        // iterator:()Ljava/util/Iterator;\n-  #55 = Class              #67            // java/util/Iterator\n-  #56 = NameAndType        #84:#69        // hasNext:()Z\n-  #57 = NameAndType        #85:#74        // next:()Ljava/lang/Object;\n-  #58 = NameAndType        #86:#87        // opt:(Ljava/lang/String;)Ljava/lang/Object;\n-  #59 = NameAndType        #88:#89        // NULL:Ljava/lang/Object;\n-  #60 = NameAndType        #90:#91        // equals:(Ljava/lang/Object;)Z\n-  #61 = NameAndType        #92:#93        // toString:()Ljava/lang/String;\n-  #62 = NameAndType        #77:#94        // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #63 = Utf8               org/json/Property\n-  #64 = Utf8               java/lang/Object\n-  #65 = Utf8               java/util/Enumeration\n-  #66 = Utf8               org/json/JSONException\n-  #67 = Utf8               java/util/Iterator\n-  #68 = Utf8               isEmpty\n-  #69 = Utf8               ()Z\n-  #70 = Utf8               propertyNames\n-  #71 = Utf8               ()Ljava/util/Enumeration;\n-  #72 = Utf8               hasMoreElements\n-  #73 = Utf8               nextElement\n-  #74 = Utf8               ()Ljava/lang/Object;\n-  #75 = Utf8               getProperty\n-  #76 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #77 = Utf8               put\n-  #78 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-  #79 = Utf8               keySet\n-  #80 = Utf8               ()Ljava/util/Set;\n-  #81 = Utf8               java/util/Set\n-  #82 = Utf8               iterator\n-  #83 = Utf8               ()Ljava/util/Iterator;\n-  #84 = Utf8               hasNext\n-  #85 = Utf8               next\n-  #86 = Utf8               opt\n-  #87 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n-  #88 = Utf8               NULL\n-  #89 = Utf8               Ljava/lang/Object;\n-  #90 = Utf8               equals\n-  #91 = Utf8               (Ljava/lang/Object;)Z\n-  #92 = Utf8               toString\n-  #93 = Utf8               ()Ljava/lang/String;\n-  #94 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #31 = Class              #61            // java/util/Enumeration\n+  #32 = Utf8               Exceptions\n+  #33 = Class              #62            // org/json/JSONException\n+  #34 = Utf8               toProperties\n+  #35 = Utf8               (Lorg/json/JSONObject;)Ljava/util/Properties;\n+  #36 = Class              #63            // java/util/Iterator\n+  #37 = Utf8               SourceFile\n+  #38 = Utf8               Property.java\n+  #39 = NameAndType        #24:#25        // \"<init>\":()V\n+  #40 = Utf8               org/json/JSONObject\n+  #41 = NameAndType        #64:#65        // isEmpty:()Z\n+  #42 = NameAndType        #66:#67        // propertyNames:()Ljava/util/Enumeration;\n+  #43 = NameAndType        #68:#65        // hasMoreElements:()Z\n+  #44 = NameAndType        #69:#70        // nextElement:()Ljava/lang/Object;\n+  #45 = Utf8               java/lang/String\n+  #46 = NameAndType        #71:#72        // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #47 = NameAndType        #73:#74        // put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+  #48 = Utf8               java/util/Properties\n+  #49 = NameAndType        #75:#76        // keySet:()Ljava/util/Set;\n+  #50 = Class              #77            // java/util/Set\n+  #51 = NameAndType        #78:#79        // iterator:()Ljava/util/Iterator;\n+  #52 = NameAndType        #80:#65        // hasNext:()Z\n+  #53 = NameAndType        #81:#70        // next:()Ljava/lang/Object;\n+  #54 = NameAndType        #82:#83        // opt:(Ljava/lang/String;)Ljava/lang/Object;\n+  #55 = NameAndType        #84:#85        // NULL:Ljava/lang/Object;\n+  #56 = NameAndType        #86:#87        // equals:(Ljava/lang/Object;)Z\n+  #57 = NameAndType        #88:#89        // toString:()Ljava/lang/String;\n+  #58 = NameAndType        #73:#90        // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #59 = Utf8               org/json/Property\n+  #60 = Utf8               java/lang/Object\n+  #61 = Utf8               java/util/Enumeration\n+  #62 = Utf8               org/json/JSONException\n+  #63 = Utf8               java/util/Iterator\n+  #64 = Utf8               isEmpty\n+  #65 = Utf8               ()Z\n+  #66 = Utf8               propertyNames\n+  #67 = Utf8               ()Ljava/util/Enumeration;\n+  #68 = Utf8               hasMoreElements\n+  #69 = Utf8               nextElement\n+  #70 = Utf8               ()Ljava/lang/Object;\n+  #71 = Utf8               getProperty\n+  #72 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #73 = Utf8               put\n+  #74 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+  #75 = Utf8               keySet\n+  #76 = Utf8               ()Ljava/util/Set;\n+  #77 = Utf8               java/util/Set\n+  #78 = Utf8               iterator\n+  #79 = Utf8               ()Ljava/util/Iterator;\n+  #80 = Utf8               hasNext\n+  #81 = Utf8               next\n+  #82 = Utf8               opt\n+  #83 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n+  #84 = Utf8               NULL\n+  #85 = Utf8               Ljava/lang/Object;\n+  #86 = Utf8               equals\n+  #87 = Utf8               (Ljava/lang/Object;)Z\n+  #88 = Utf8               toString\n+  #89 = Utf8               ()Ljava/lang/String;\n+  #90 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n {\n   public org.json.Property();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
