{"diffoscope-json-version": 1, "source1": "first/HuffmanDecoder$HuffmanCodes.class", "source2": "second/HuffmanDecoder$HuffmanCodes.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,169 +1,169 @@\n-  SHA-256 checksum e987574ae4dbd8fb7c3a5ccf70ce8b882ae60028b27f9bdfef1e64f2f8df4042\n+  SHA-256 checksum b7223eefc861cfff79a0dec7fc84bb3baeaf63856796548fceb4cfe676b09dbd\n   Compiled from \"HuffmanDecoder.java\"\n class org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$HuffmanCodes extends org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecoderState\n   minor version: 0\n   major version: 53\n   flags: (0x0020) ACC_SUPER\n-  this_class: #25                         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n-  super_class: #26                        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n+  this_class: #2                          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n+  super_class: #8                         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n   interfaces: 0, fields: 8, methods: 7, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #25.#85       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-    #2 = Methodref          #26.#86       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n-    #3 = Fieldref           #87.#88       // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n-    #4 = Fieldref           #25.#89       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBuffer:[B\n-    #5 = Fieldref           #25.#90       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-    #6 = Methodref          #91.#92       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-    #7 = Fieldref           #25.#93       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-    #8 = Fieldref           #25.#94       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-    #9 = Fieldref           #25.#95       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.endOfBlock:Z\n-   #10 = Fieldref           #57.#96       // org/apache/commons/compress/compressors/deflate64/HuffmanState.INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-   #11 = Methodref          #25.#97       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.decodeNext:([BII)I\n-   #12 = Methodref          #25.#98       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.copyFromRunBuffer:([BII)I\n-   #13 = Methodref          #91.#99       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n-   #14 = Methodref          #91.#100      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n-   #15 = Methodref          #91.#101      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-   #16 = Methodref          #102.#103     // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n-   #17 = Methodref          #91.#104      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1000:()[S\n-   #18 = Methodref          #91.#105      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n-   #19 = Methodref          #91.#106      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1100:()[I\n-   #20 = Fieldref           #25.#107      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBufferLength:I\n-   #21 = Fieldref           #25.#108      // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBufferPos:I\n-   #22 = Methodref          #102.#109     // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.recordToBuffer:(II[B)V\n-   #23 = Methodref          #110.#111     // java/lang/Math.min:(II)I\n-   #24 = Methodref          #112.#113     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #25 = Class              #114          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n-   #26 = Class              #115          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n-   #27 = Utf8               endOfBlock\n-   #28 = Utf8               Z\n-   #29 = Utf8               state\n-   #30 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-   #31 = Utf8               lengthTree\n-   #32 = Class              #117          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode\n-   #33 = Utf8               BinaryTreeNode\n-   #34 = Utf8               InnerClasses\n+    #1 = Fieldref           #2.#3         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+    #2 = Class              #4            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n+    #3 = NameAndType        #5:#6         // this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+    #4 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n+    #5 = Utf8               this$0\n+    #6 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+    #7 = Methodref          #8.#9         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+    #8 = Class              #10           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n+    #9 = NameAndType        #11:#12       // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+   #10 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+   #13 = Fieldref           #14.#15       // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+   #14 = Class              #16           // org/apache/commons/compress/utils/ByteUtils\n+   #15 = NameAndType        #17:#18       // EMPTY_BYTE_ARRAY:[B\n+   #16 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+   #17 = Utf8               EMPTY_BYTE_ARRAY\n+   #18 = Utf8               [B\n+   #19 = Fieldref           #2.#20        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBuffer:[B\n+   #20 = NameAndType        #21:#18       // runBuffer:[B\n+   #21 = Utf8               runBuffer\n+   #22 = Fieldref           #2.#23        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+   #23 = NameAndType        #24:#25       // state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+   #24 = Utf8               state\n+   #25 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+   #26 = Methodref          #27.#28       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #27 = Class              #29           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+   #28 = NameAndType        #30:#31       // access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #29 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+   #30 = Utf8               access$800\n+   #31 = Utf8               ([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #32 = Fieldref           #2.#33        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #33 = NameAndType        #34:#35       // lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #34 = Utf8               lengthTree\n    #35 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-   #36 = Utf8               distanceTree\n-   #37 = Utf8               runBufferPos\n-   #38 = Utf8               I\n-   #39 = Utf8               runBuffer\n-   #40 = Utf8               [B\n-   #41 = Utf8               runBufferLength\n-   #42 = Utf8               this$0\n-   #43 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-   #44 = Utf8               <init>\n-   #45 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;[I[I)V\n-   #46 = Utf8               Code\n-   #47 = Utf8               LineNumberTable\n-   #48 = Utf8               LocalVariableTable\n-   #49 = Utf8               this\n-   #50 = Utf8               HuffmanCodes\n-   #51 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes;\n-   #52 = Utf8               lengths\n-   #53 = Utf8               [I\n-   #54 = Utf8               distance\n-   #55 = Utf8               ()Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-   #56 = Utf8               StackMapTable\n-   #57 = Class              #118          // org/apache/commons/compress/compressors/deflate64/HuffmanState\n-   #58 = Utf8               read\n-   #59 = Utf8               ([BII)I\n-   #60 = Utf8               b\n-   #61 = Utf8               off\n-   #62 = Utf8               len\n-   #63 = Utf8               Exceptions\n-   #64 = Class              #119          // java/io/IOException\n-   #65 = Utf8               decodeNext\n-   #66 = Utf8               runMask\n-   #67 = Utf8               run\n-   #68 = Utf8               runXtra\n-   #69 = Utf8               distSym\n-   #70 = Utf8               distMask\n-   #71 = Utf8               dist\n-   #72 = Utf8               distXtra\n-   #73 = Utf8               symbol\n-   #74 = Utf8               result\n-   #75 = Class              #40           // \"[B\"\n-   #76 = Utf8               copyFromRunBuffer\n-   #77 = Utf8               bytesInBuffer\n-   #78 = Utf8               copiedBytes\n-   #79 = Utf8               hasData\n-   #80 = Utf8               ()Z\n-   #81 = Utf8               available\n-   #82 = Utf8               ()I\n-   #83 = Utf8               SourceFile\n-   #84 = Utf8               HuffmanDecoder.java\n-   #85 = NameAndType        #42:#43       // this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-   #86 = NameAndType        #44:#121      // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n-   #87 = Class              #122          // org/apache/commons/compress/utils/ByteUtils\n-   #88 = NameAndType        #123:#40      // EMPTY_BYTE_ARRAY:[B\n-   #89 = NameAndType        #39:#40       // runBuffer:[B\n-   #90 = NameAndType        #29:#30       // state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-   #91 = Class              #124          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-   #92 = NameAndType        #125:#126     // access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-   #93 = NameAndType        #31:#35       // lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-   #94 = NameAndType        #36:#35       // distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-   #95 = NameAndType        #27:#28       // endOfBlock:Z\n-   #96 = NameAndType        #127:#30      // INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-   #97 = NameAndType        #65:#59       // decodeNext:([BII)I\n-   #98 = NameAndType        #76:#59       // copyFromRunBuffer:([BII)I\n-   #99 = NameAndType        #128:#129     // access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n-  #100 = NameAndType        #130:#131     // access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n-  #101 = NameAndType        #132:#134     // access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-  #102 = Class              #135          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-  #103 = NameAndType        #136:#137     // add:(B)B\n-  #104 = NameAndType        #138:#139     // access$1000:()[S\n-  #105 = NameAndType        #140:#141     // access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n-  #106 = NameAndType        #142:#143     // access$1100:()[I\n-  #107 = NameAndType        #41:#38       // runBufferLength:I\n-  #108 = NameAndType        #37:#38       // runBufferPos:I\n-  #109 = NameAndType        #144:#145     // recordToBuffer:(II[B)V\n-  #110 = Class              #146          // java/lang/Math\n-  #111 = NameAndType        #147:#148     // min:(II)I\n-  #112 = Class              #149          // java/lang/System\n-  #113 = NameAndType        #150:#151     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #114 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes\n-  #115 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n-  #116 = Utf8               DecoderState\n-  #117 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode\n-  #118 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanState\n-  #119 = Utf8               java/io/IOException\n-  #120 = Class              #152          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n-  #121 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n-  #122 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #123 = Utf8               EMPTY_BYTE_ARRAY\n-  #124 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  #125 = Utf8               access$800\n-  #126 = Utf8               ([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-  #127 = Utf8               INITIAL\n-  #128 = Utf8               access$400\n-  #129 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n-  #130 = Utf8               access$900\n-  #131 = Utf8               (Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n-  #132 = Utf8               access$600\n-  #133 = Utf8               DecodingMemory\n-  #134 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-  #135 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-  #136 = Utf8               add\n-  #137 = Utf8               (B)B\n-  #138 = Utf8               access$1000\n-  #139 = Utf8               ()[S\n-  #140 = Utf8               access$500\n-  #141 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n-  #142 = Utf8               access$1100\n-  #143 = Utf8               ()[I\n-  #144 = Utf8               recordToBuffer\n-  #145 = Utf8               (II[B)V\n-  #146 = Utf8               java/lang/Math\n-  #147 = Utf8               min\n-  #148 = Utf8               (II)I\n-  #149 = Utf8               java/lang/System\n-  #150 = Utf8               arraycopy\n-  #151 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #152 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+   #36 = Fieldref           #2.#37        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #37 = NameAndType        #38:#35       // distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+   #38 = Utf8               distanceTree\n+   #39 = Fieldref           #2.#40        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.endOfBlock:Z\n+   #40 = NameAndType        #41:#42       // endOfBlock:Z\n+   #41 = Utf8               endOfBlock\n+   #42 = Utf8               Z\n+   #43 = Fieldref           #44.#45       // org/apache/commons/compress/compressors/deflate64/HuffmanState.INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+   #44 = Class              #46           // org/apache/commons/compress/compressors/deflate64/HuffmanState\n+   #45 = NameAndType        #47:#25       // INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+   #46 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanState\n+   #47 = Utf8               INITIAL\n+   #48 = Methodref          #2.#49        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.decodeNext:([BII)I\n+   #49 = NameAndType        #50:#51       // decodeNext:([BII)I\n+   #50 = Utf8               decodeNext\n+   #51 = Utf8               ([BII)I\n+   #52 = Methodref          #2.#53        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.copyFromRunBuffer:([BII)I\n+   #53 = NameAndType        #54:#51       // copyFromRunBuffer:([BII)I\n+   #54 = Utf8               copyFromRunBuffer\n+   #55 = Methodref          #27.#56       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n+   #56 = NameAndType        #57:#58       // access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n+   #57 = Utf8               access$400\n+   #58 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n+   #59 = Methodref          #27.#60       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n+   #60 = NameAndType        #61:#62       // access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n+   #61 = Utf8               access$900\n+   #62 = Utf8               (Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n+   #63 = Methodref          #27.#64       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+   #64 = NameAndType        #65:#66       // access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+   #65 = Utf8               access$600\n+   #66 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+   #67 = Methodref          #68.#69       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n+   #68 = Class              #70           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+   #69 = NameAndType        #71:#72       // add:(B)B\n+   #70 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+   #71 = Utf8               add\n+   #72 = Utf8               (B)B\n+   #73 = Methodref          #27.#74       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1000:()[S\n+   #74 = NameAndType        #75:#76       // access$1000:()[S\n+   #75 = Utf8               access$1000\n+   #76 = Utf8               ()[S\n+   #77 = Methodref          #27.#78       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n+   #78 = NameAndType        #79:#80       // access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n+   #79 = Utf8               access$500\n+   #80 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n+   #81 = Methodref          #27.#82       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1100:()[I\n+   #82 = NameAndType        #83:#84       // access$1100:()[I\n+   #83 = Utf8               access$1100\n+   #84 = Utf8               ()[I\n+   #85 = Fieldref           #2.#86        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBufferLength:I\n+   #86 = NameAndType        #87:#88       // runBufferLength:I\n+   #87 = Utf8               runBufferLength\n+   #88 = Utf8               I\n+   #89 = Fieldref           #2.#90        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes.runBufferPos:I\n+   #90 = NameAndType        #91:#88       // runBufferPos:I\n+   #91 = Utf8               runBufferPos\n+   #92 = Methodref          #68.#93       // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.recordToBuffer:(II[B)V\n+   #93 = NameAndType        #94:#95       // recordToBuffer:(II[B)V\n+   #94 = Utf8               recordToBuffer\n+   #95 = Utf8               (II[B)V\n+   #96 = Methodref          #97.#98       // java/lang/Math.min:(II)I\n+   #97 = Class              #99           // java/lang/Math\n+   #98 = NameAndType        #100:#101     // min:(II)I\n+   #99 = Utf8               java/lang/Math\n+  #100 = Utf8               min\n+  #101 = Utf8               (II)I\n+  #102 = Methodref          #103.#104     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #103 = Class              #105          // java/lang/System\n+  #104 = NameAndType        #106:#107     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #105 = Utf8               java/lang/System\n+  #106 = Utf8               arraycopy\n+  #107 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #108 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;[I[I)V\n+  #109 = Utf8               Code\n+  #110 = Utf8               LineNumberTable\n+  #111 = Utf8               LocalVariableTable\n+  #112 = Utf8               this\n+  #113 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes;\n+  #114 = Utf8               lengths\n+  #115 = Utf8               [I\n+  #116 = Utf8               distance\n+  #117 = Utf8               ()Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+  #118 = Utf8               StackMapTable\n+  #119 = Utf8               read\n+  #120 = Utf8               b\n+  #121 = Utf8               off\n+  #122 = Utf8               len\n+  #123 = Utf8               Exceptions\n+  #124 = Class              #125          // java/io/IOException\n+  #125 = Utf8               java/io/IOException\n+  #126 = Utf8               runMask\n+  #127 = Utf8               run\n+  #128 = Utf8               runXtra\n+  #129 = Utf8               distSym\n+  #130 = Utf8               distMask\n+  #131 = Utf8               dist\n+  #132 = Utf8               distXtra\n+  #133 = Utf8               symbol\n+  #134 = Utf8               result\n+  #135 = Class              #18           // \"[B\"\n+  #136 = Utf8               bytesInBuffer\n+  #137 = Utf8               copiedBytes\n+  #138 = Utf8               hasData\n+  #139 = Utf8               ()Z\n+  #140 = Utf8               available\n+  #141 = Utf8               ()I\n+  #142 = Utf8               SourceFile\n+  #143 = Utf8               HuffmanDecoder.java\n+  #144 = Utf8               InnerClasses\n+  #145 = Utf8               HuffmanCodes\n+  #146 = Utf8               DecoderState\n+  #147 = Class              #148          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+  #148 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+  #149 = Class              #150          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode\n+  #150 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode\n+  #151 = Utf8               BinaryTreeNode\n+  #152 = Utf8               DecodingMemory\n {\n   private boolean endOfBlock;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private final org.apache.commons.compress.compressors.deflate64.HuffmanState state;\n     descriptor: Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n@@ -199,29 +199,29 @@\n     Code:\n       stack=2, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n          2: putfield      #1                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n          5: aload_0\n          6: aconst_null\n-         7: invokespecial #2                  // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+         7: invokespecial #7                  // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n         10: aload_0\n-        11: getstatic     #3                  // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n-        14: putfield      #4                  // Field runBuffer:[B\n+        11: getstatic     #13                 // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+        14: putfield      #19                 // Field runBuffer:[B\n         17: aload_0\n         18: aload_2\n-        19: putfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+        19: putfield      #22                 // Field state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n         22: aload_0\n         23: aload_3\n-        24: invokestatic  #6                  // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-        27: putfield      #7                  // Field lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+        24: invokestatic  #26                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+        27: putfield      #32                 // Field lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n         30: aload_0\n         31: aload         4\n-        33: invokestatic  #6                  // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-        36: putfield      #8                  // Field distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+        33: invokestatic  #26                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$800:([I)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+        36: putfield      #36                 // Field distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n         39: return\n       LineNumberTable:\n         line 295: 0\n         line 292: 10\n         line 296: 17\n         line 297: 22\n         line 298: 30\n@@ -235,20 +235,20 @@\n \n   org.apache.commons.compress.compressors.deflate64.HuffmanState state();\n     descriptor: ()Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field endOfBlock:Z\n+         1: getfield      #39                 // Field endOfBlock:Z\n          4: ifeq          13\n-         7: getstatic     #10                 // Field org/apache/commons/compress/compressors/deflate64/HuffmanState.INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+         7: getstatic     #43                 // Field org/apache/commons/compress/compressors/deflate64/HuffmanState.INITIAL:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n         10: goto          17\n         13: aload_0\n-        14: getfield      #5                  // Field state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+        14: getfield      #22                 // Field state:Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n         17: areturn\n       LineNumberTable:\n         line 303: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes;\n       StackMapTable: number_of_entries = 2\n@@ -265,15 +265,15 @@\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n          7: aload_1\n          8: iload_2\n          9: iload_3\n-        10: invokespecial #11                 // Method decodeNext:([BII)I\n+        10: invokespecial #48                 // Method decodeNext:([BII)I\n         13: ireturn\n       LineNumberTable:\n         line 308: 0\n         line 309: 4\n         line 311: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -288,54 +288,54 @@\n \n   private int decodeNext(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=13, args_size=4\n          0: aload_0\n-         1: getfield      #9                  // Field endOfBlock:Z\n+         1: getfield      #39                 // Field endOfBlock:Z\n          4: ifeq          9\n          7: iconst_m1\n          8: ireturn\n          9: aload_0\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokespecial #12                 // Method copyFromRunBuffer:([BII)I\n+        13: invokespecial #52                 // Method copyFromRunBuffer:([BII)I\n         16: istore        4\n         18: iload         4\n         20: iload_3\n         21: if_icmpge     254\n         24: aload_0\n         25: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-        28: invokestatic  #13                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n+        28: invokestatic  #55                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n         31: aload_0\n-        32: getfield      #7                  // Field lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-        35: invokestatic  #14                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n+        32: getfield      #32                 // Field lengthTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+        35: invokestatic  #59                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n         38: istore        5\n         40: iload         5\n         42: sipush        256\n         45: if_icmpge     73\n         48: aload_1\n         49: iload_2\n         50: iload         4\n         52: iinc          4, 1\n         55: iadd\n         56: aload_0\n         57: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-        60: invokestatic  #15                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+        60: invokestatic  #63                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n         63: iload         5\n         65: i2b\n-        66: invokevirtual #16                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n+        66: invokevirtual #67                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n         69: bastore\n         70: goto          251\n         73: iload         5\n         75: sipush        256\n         78: if_icmple     243\n-        81: invokestatic  #17                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1000:()[S\n+        81: invokestatic  #73                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1000:()[S\n         84: iload         5\n         86: sipush        257\n         89: isub\n         90: saload\n         91: istore        6\n         93: iload         6\n         95: iconst_5\n@@ -346,26 +346,26 @@\n        103: iand\n        104: istore        8\n        106: iload         7\n        108: i2l\n        109: aload_0\n        110: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n        113: iload         8\n-       115: invokestatic  #18                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n+       115: invokestatic  #77                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n        118: ladd\n        119: l2i\n        120: istore        7\n        122: aload_0\n        123: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-       126: invokestatic  #13                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n+       126: invokestatic  #55                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$400:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/utils/BitInputStream;\n        129: aload_0\n-       130: getfield      #8                  // Field distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n-       133: invokestatic  #14                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n+       130: getfield      #36                 // Field distanceTree:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;\n+       133: invokestatic  #59                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$900:(Lorg/apache/commons/compress/utils/BitInputStream;Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode;)I\n        136: istore        9\n-       138: invokestatic  #19                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1100:()[I\n+       138: invokestatic  #81                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$1100:()[I\n        141: iload         9\n        143: iaload\n        144: istore        10\n        146: iload         10\n        148: iconst_4\n        149: iushr\n        150: istore        11\n@@ -374,57 +374,57 @@\n        156: iand\n        157: istore        12\n        159: iload         11\n        161: i2l\n        162: aload_0\n        163: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n        166: iload         12\n-       168: invokestatic  #18                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n+       168: invokestatic  #77                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$500:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;I)J\n        171: ladd\n        172: l2i\n        173: istore        11\n        175: aload_0\n-       176: getfield      #4                  // Field runBuffer:[B\n+       176: getfield      #19                 // Field runBuffer:[B\n        179: arraylength\n        180: iload         7\n        182: if_icmpge     193\n        185: aload_0\n        186: iload         7\n        188: newarray       byte\n-       190: putfield      #4                  // Field runBuffer:[B\n+       190: putfield      #19                 // Field runBuffer:[B\n        193: aload_0\n        194: iload         7\n-       196: putfield      #20                 // Field runBufferLength:I\n+       196: putfield      #85                 // Field runBufferLength:I\n        199: aload_0\n        200: iconst_0\n-       201: putfield      #21                 // Field runBufferPos:I\n+       201: putfield      #89                 // Field runBufferPos:I\n        204: aload_0\n        205: getfield      #1                  // Field this$0:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-       208: invokestatic  #15                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+       208: invokestatic  #63                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.access$600:(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n        211: iload         11\n        213: iload         7\n        215: aload_0\n-       216: getfield      #4                  // Field runBuffer:[B\n-       219: invokevirtual #22                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.recordToBuffer:(II[B)V\n+       216: getfield      #19                 // Field runBuffer:[B\n+       219: invokevirtual #92                 // Method org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.recordToBuffer:(II[B)V\n        222: iload         4\n        224: aload_0\n        225: aload_1\n        226: iload_2\n        227: iload         4\n        229: iadd\n        230: iload_3\n        231: iload         4\n        233: isub\n-       234: invokespecial #12                 // Method copyFromRunBuffer:([BII)I\n+       234: invokespecial #52                 // Method copyFromRunBuffer:([BII)I\n        237: iadd\n        238: istore        4\n        240: goto          251\n        243: aload_0\n        244: iconst_1\n-       245: putfield      #9                  // Field endOfBlock:Z\n+       245: putfield      #39                 // Field endOfBlock:Z\n        248: iload         4\n        250: ireturn\n        251: goto          18\n        254: iload         4\n        256: ireturn\n       LineNumberTable:\n         line 315: 0\n@@ -494,41 +494,41 @@\n \n   private int copyFromRunBuffer(byte[], int, int);\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=6, args_size=4\n          0: aload_0\n-         1: getfield      #20                 // Field runBufferLength:I\n+         1: getfield      #85                 // Field runBufferLength:I\n          4: aload_0\n-         5: getfield      #21                 // Field runBufferPos:I\n+         5: getfield      #89                 // Field runBufferPos:I\n          8: isub\n          9: istore        4\n         11: iconst_0\n         12: istore        5\n         14: iload         4\n         16: ifle          53\n         19: iload_3\n         20: iload         4\n-        22: invokestatic  #23                 // Method java/lang/Math.min:(II)I\n+        22: invokestatic  #96                 // Method java/lang/Math.min:(II)I\n         25: istore        5\n         27: aload_0\n-        28: getfield      #4                  // Field runBuffer:[B\n+        28: getfield      #19                 // Field runBuffer:[B\n         31: aload_0\n-        32: getfield      #21                 // Field runBufferPos:I\n+        32: getfield      #89                 // Field runBufferPos:I\n         35: aload_1\n         36: iload_2\n         37: iload         5\n-        39: invokestatic  #24                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        39: invokestatic  #102                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         42: aload_0\n         43: dup\n-        44: getfield      #21                 // Field runBufferPos:I\n+        44: getfield      #89                 // Field runBufferPos:I\n         47: iload         5\n         49: iadd\n-        50: putfield      #21                 // Field runBufferPos:I\n+        50: putfield      #89                 // Field runBufferPos:I\n         53: iload         5\n         55: ireturn\n       LineNumberTable:\n         line 355: 0\n         line 356: 11\n         line 357: 14\n         line 358: 19\n@@ -550,15 +550,15 @@\n \n   boolean hasData();\n     descriptor: ()Z\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field endOfBlock:Z\n+         1: getfield      #39                 // Field endOfBlock:Z\n          4: ifne          11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 367: 0\n@@ -572,25 +572,25 @@\n \n   int available();\n     descriptor: ()I\n     flags: (0x0000)\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field runBufferLength:I\n+         1: getfield      #85                 // Field runBufferLength:I\n          4: aload_0\n-         5: getfield      #21                 // Field runBufferPos:I\n+         5: getfield      #89                 // Field runBufferPos:I\n          8: isub\n          9: ireturn\n       LineNumberTable:\n         line 372: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes;\n }\n SourceFile: \"HuffmanDecoder.java\"\n InnerClasses:\n-  private static #33= #32 of #91;         // BinaryTreeNode=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  private #50= #25 of #91;                // HuffmanCodes=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  private static abstract #116= #26 of #91; // DecoderState=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  static #120;                            // class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n-  private static #133= #102 of #91;       // DecodingMemory=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  private #145= #2 of #27;                // HuffmanCodes=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$HuffmanCodes of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  private static abstract #146= #8 of #27; // DecoderState=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  static #147;                            // class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+  private static #151= #149 of #27;       // BinaryTreeNode=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$BinaryTreeNode of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  private static #152= #68 of #27;        // DecodingMemory=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n"}]}
