{"diffoscope-json-version": 1, "source1": "first/ReturnInstruction.class", "source2": "second/ReturnInstruction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,21 +4,21 @@\n import org.apache.bcel.ExceptionConst;\n \n public abstract class ReturnInstruction extends Instruction implements ExceptionThrower, TypedInstruction, StackConsumer\n {\n     ReturnInstruction() {\n     }\n     \n-    protected ReturnInstruction(final short opcode) {\n-        super(opcode, (short)1);\n+    protected ReturnInstruction(final short n) {\n+        super(n, (short)1);\n     }\n     \n     public Type getType() {\n-        final short _opcode = super.getOpcode();\n-        switch (_opcode) {\n+        final short opcode = super.getOpcode();\n+        switch (opcode) {\n             case 172: {\n                 return (Type)Type.INT;\n             }\n             case 173: {\n                 return (Type)Type.LONG;\n             }\n             case 174: {\n@@ -30,20 +30,20 @@\n             case 176: {\n                 return (Type)Type.OBJECT;\n             }\n             case 177: {\n                 return (Type)Type.VOID;\n             }\n             default: {\n-                throw new ClassGenException(\"Unknown type \" + _opcode);\n+                throw new ClassGenException(\"Unknown type \" + opcode);\n             }\n         }\n     }\n     \n     public Class<?>[] getExceptions() {\n         return new Class[] { ExceptionConst.ILLEGAL_MONITOR_STATE };\n     }\n     \n-    public Type getType(final ConstantPoolGen cp) {\n+    public Type getType(final ConstantPoolGen constantPoolGen) {\n         return this.getType();\n     }\n }\n"}]}
