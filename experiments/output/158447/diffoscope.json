{"diffoscope-json-version": 1, "source1": "first/SevenZFile.class", "source2": "second/SevenZFile.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -229,14 +229,15 @@\n             input.get(property);\n         }\n     }\n     \n     private ByteBuffer readEncodedHeader(final ByteBuffer header, final Archive archive, final byte[] password) throws IOException {\n         this.readStreamsInfo(header, archive);\n         final Folder folder = archive.folders[0];\n+        final int firstPackStreamIndex = 0;\n         final long folderOffset = 32L + archive.packPos + 0L;\n         this.channel.position(folderOffset);\n         InputStream inputStreamStack = (InputStream)new BoundedSeekableByteChannelInputStream(this.channel, archive.packSizes[0]);\n         for (final Coder coder : folder.getOrderedCoders()) {\n             if (coder.numInStreams != 1L || coder.numOutStreams != 1L) {\n                 throw new IOException(\"Multi input/output stream coders are not yet supported\");\n             }\n"}]}
