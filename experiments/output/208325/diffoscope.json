{"diffoscope-json-version": 1, "source1": "first/CircularInputStream.class", "source2": "second/CircularInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,28 +7,28 @@\n public class CircularInputStream extends InputStream\n {\n     private long byteCount;\n     private int position;\n     private final byte[] repeatedContent;\n     private final long targetByteCount;\n     \n-    private static byte[] validate(final byte[] repeatContent) {\n-        Objects.requireNonNull(repeatContent, \"repeatContent\");\n-        for (final byte b : repeatContent) {\n-            if (b == -1) {\n+    private static byte[] validate(final byte[] obj) {\n+        Objects.requireNonNull(obj, \"repeatContent\");\n+        for (int length = obj.length, i = 0; i < length; ++i) {\n+            if (obj[i] == -1) {\n                 throw new IllegalArgumentException(\"repeatContent contains the end-of-stream marker -1\");\n             }\n         }\n-        return repeatContent;\n+        return obj;\n     }\n     \n-    public CircularInputStream(final byte[] repeatContent, final long targetByteCount) {\n+    public CircularInputStream(final byte[] array, final long targetByteCount) {\n         this.position = -1;\n-        this.repeatedContent = validate(repeatContent);\n-        if (repeatContent.length == 0) {\n+        this.repeatedContent = validate(array);\n+        if (array.length == 0) {\n             throw new IllegalArgumentException(\"repeatContent is empty.\");\n         }\n         this.targetByteCount = targetByteCount;\n     }\n     \n     @Override\n     public int read() {\n"}]}
