{"diffoscope-json-version": 1, "source1": "first/DefaultBackingStoreSupplier.class", "source2": "second/DefaultBackingStoreSupplier.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,98 +1,97 @@\n-  SHA-256 checksum 7fa2d016ba7ad60b21112ad73384e4d429bd993afee6379c459ad8ba5cb212bd\n+  SHA-256 checksum 3c2a50edfee02cb2e34575923fcd2cda93599c68a58e5dde9852e156f3691cd0\n   Compiled from \"DefaultBackingStoreSupplier.java\"\n public class org.apache.commons.compress.archivers.zip.DefaultBackingStoreSupplier implements org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #11                         // org/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #4             // java/lang/Object\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier\n+   #3 = Class              #4             // java/lang/Object\n    #4 = Utf8               java/lang/Object\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Class              #8             // java/util/concurrent/atomic/AtomicInteger\n-   #8 = Utf8               java/util/concurrent/atomic/AtomicInteger\n-   #9 = Methodref          #7.#3          // java/util/concurrent/atomic/AtomicInteger.\"<init>\":()V\n-  #10 = Fieldref           #11.#12        // org/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier.storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n-  #11 = Class              #13            // org/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier\n-  #12 = NameAndType        #14:#15        // storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n-  #13 = Utf8               org/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier\n-  #14 = Utf8               storeNum\n-  #15 = Utf8               Ljava/util/concurrent/atomic/AtomicInteger;\n-  #16 = Fieldref           #11.#17        // org/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier.dir:Ljava/nio/file/Path;\n-  #17 = NameAndType        #18:#19        // dir:Ljava/nio/file/Path;\n-  #18 = Utf8               dir\n-  #19 = Utf8               Ljava/nio/file/Path;\n-  #20 = Class              #21            // java/lang/StringBuilder\n-  #21 = Utf8               java/lang/StringBuilder\n-  #22 = Methodref          #20.#3         // java/lang/StringBuilder.\"<init>\":()V\n-  #23 = String             #24            // n\n-  #24 = Utf8               n\n-  #25 = Methodref          #20.#26        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #26 = NameAndType        #27:#28        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #27 = Utf8               append\n-  #28 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #29 = Methodref          #7.#30         // java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n-  #30 = NameAndType        #31:#32        // incrementAndGet:()I\n-  #31 = Utf8               incrementAndGet\n-  #32 = Utf8               ()I\n-  #33 = Methodref          #20.#34        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #34 = NameAndType        #27:#35        // append:(I)Ljava/lang/StringBuilder;\n-  #35 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #36 = Methodref          #20.#37        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #37 = NameAndType        #38:#39        // toString:()Ljava/lang/String;\n-  #38 = Utf8               toString\n-  #39 = Utf8               ()Ljava/lang/String;\n-  #40 = String             #41            // parallelscatter\n-  #41 = Utf8               parallelscatter\n-  #42 = Class              #43            // java/nio/file/attribute/FileAttribute\n-  #43 = Utf8               java/nio/file/attribute/FileAttribute\n-  #44 = Methodref          #45.#46        // java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #45 = Class              #47            // java/nio/file/Files\n-  #46 = NameAndType        #48:#49        // createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #47 = Utf8               java/nio/file/Files\n-  #48 = Utf8               createTempFile\n-  #49 = Utf8               (Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #50 = Methodref          #45.#51        // java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #51 = NameAndType        #48:#52        // createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #52 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #53 = Class              #54            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #54 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #55 = Methodref          #53.#56        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n-  #56 = NameAndType        #5:#57         // \"<init>\":(Ljava/nio/file/Path;)V\n-  #57 = Utf8               (Ljava/nio/file/Path;)V\n-  #58 = Class              #59            // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n-  #59 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n-  #60 = Utf8               PREFIX\n-  #61 = Utf8               Ljava/lang/String;\n-  #62 = Utf8               ConstantValue\n-  #63 = Utf8               Code\n-  #64 = Utf8               LineNumberTable\n-  #65 = Utf8               LocalVariableTable\n-  #66 = Utf8               this\n-  #67 = Utf8               Lorg/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier;\n-  #68 = Utf8               get\n-  #69 = Utf8               ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #70 = Utf8               suffix\n-  #71 = Utf8               tempFile\n-  #72 = Utf8               StackMapTable\n-  #73 = Class              #74            // java/lang/String\n-  #74 = Utf8               java/lang/String\n-  #75 = Class              #76            // java/nio/file/Path\n-  #76 = Utf8               java/nio/file/Path\n-  #77 = Utf8               Exceptions\n-  #78 = Class              #79            // java/io/IOException\n-  #79 = Utf8               java/io/IOException\n-  #80 = Utf8               SourceFile\n-  #81 = Utf8               DefaultBackingStoreSupplier.java\n+   #5 = Class              #6             // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n+   #6 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n+   #7 = Utf8               PREFIX\n+   #8 = Utf8               Ljava/lang/String;\n+   #9 = Utf8               ConstantValue\n+  #10 = String             #11            // parallelscatter\n+  #11 = Utf8               parallelscatter\n+  #12 = Utf8               storeNum\n+  #13 = Utf8               Ljava/util/concurrent/atomic/AtomicInteger;\n+  #14 = Utf8               dir\n+  #15 = Utf8               Ljava/nio/file/Path;\n+  #16 = Utf8               <init>\n+  #17 = Utf8               (Ljava/nio/file/Path;)V\n+  #18 = Utf8               Code\n+  #19 = Methodref          #3.#20         // java/lang/Object.\"<init>\":()V\n+  #20 = NameAndType        #16:#21        // \"<init>\":()V\n+  #21 = Utf8               ()V\n+  #22 = Class              #23            // java/util/concurrent/atomic/AtomicInteger\n+  #23 = Utf8               java/util/concurrent/atomic/AtomicInteger\n+  #24 = Methodref          #22.#20        // java/util/concurrent/atomic/AtomicInteger.\"<init>\":()V\n+  #25 = Fieldref           #1.#26         // org/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier.storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+  #26 = NameAndType        #12:#13        // storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+  #27 = Fieldref           #1.#28         // org/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier.dir:Ljava/nio/file/Path;\n+  #28 = NameAndType        #14:#15        // dir:Ljava/nio/file/Path;\n+  #29 = Utf8               LineNumberTable\n+  #30 = Utf8               LocalVariableTable\n+  #31 = Utf8               this\n+  #32 = Utf8               Lorg/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier;\n+  #33 = Utf8               get\n+  #34 = Utf8               ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+  #35 = Utf8               Exceptions\n+  #36 = Class              #37            // java/io/IOException\n+  #37 = Utf8               java/io/IOException\n+  #38 = Class              #39            // java/lang/StringBuilder\n+  #39 = Utf8               java/lang/StringBuilder\n+  #40 = String             #41            // n\n+  #41 = Utf8               n\n+  #42 = Methodref          #38.#43        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #43 = NameAndType        #16:#44        // \"<init>\":(Ljava/lang/String;)V\n+  #44 = Utf8               (Ljava/lang/String;)V\n+  #45 = Methodref          #22.#46        // java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n+  #46 = NameAndType        #47:#48        // incrementAndGet:()I\n+  #47 = Utf8               incrementAndGet\n+  #48 = Utf8               ()I\n+  #49 = Methodref          #38.#50        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #50 = NameAndType        #51:#52        // append:(I)Ljava/lang/StringBuilder;\n+  #51 = Utf8               append\n+  #52 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #53 = Methodref          #38.#54        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #54 = NameAndType        #55:#56        // toString:()Ljava/lang/String;\n+  #55 = Utf8               toString\n+  #56 = Utf8               ()Ljava/lang/String;\n+  #57 = Class              #58            // java/nio/file/attribute/FileAttribute\n+  #58 = Utf8               java/nio/file/attribute/FileAttribute\n+  #59 = Methodref          #60.#62        // java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #60 = Class              #61            // java/nio/file/Files\n+  #61 = Utf8               java/nio/file/Files\n+  #62 = NameAndType        #63:#64        // createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #63 = Utf8               createTempFile\n+  #64 = Utf8               (Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #65 = Methodref          #60.#66        // java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #66 = NameAndType        #63:#67        // createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #67 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #68 = Class              #69            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #69 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #70 = Methodref          #68.#71        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n+  #71 = NameAndType        #16:#17        // \"<init>\":(Ljava/nio/file/Path;)V\n+  #72 = Utf8               suffix\n+  #73 = Utf8               tempFile\n+  #74 = Utf8               StackMapTable\n+  #75 = Class              #76            // java/lang/String\n+  #76 = Utf8               java/lang/String\n+  #77 = Class              #78            // java/nio/file/Path\n+  #78 = Utf8               java/nio/file/Path\n+  #79 = Utf8               SourceFile\n+  #80 = Utf8               DefaultBackingStoreSupplier.java\n {\n   private static final java.lang.String PREFIX = \"parallelscatter\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String parallelscatter\n \n   private final java.util.concurrent.atomic.AtomicInteger storeNum;\n@@ -105,84 +104,83 @@\n \n   public org.apache.commons.compress.archivers.zip.DefaultBackingStoreSupplier(java.nio.file.Path);\n     descriptor: (Ljava/nio/file/Path;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #19                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #7                  // class java/util/concurrent/atomic/AtomicInteger\n+         5: new           #22                 // class java/util/concurrent/atomic/AtomicInteger\n          8: dup\n-         9: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicInteger.\"<init>\":()V\n-        12: putfield      #10                 // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+         9: invokespecial #24                 // Method java/util/concurrent/atomic/AtomicInteger.\"<init>\":()V\n+        12: putfield      #25                 // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n         15: aload_0\n         16: aload_1\n-        17: putfield      #16                 // Field dir:Ljava/nio/file/Path;\n+        17: putfield      #27                 // Field dir:Ljava/nio/file/Path;\n         20: return\n       LineNumberTable:\n         line 57: 0\n         line 49: 4\n         line 58: 15\n         line 59: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier;\n             0      21     1   dir   Ljava/nio/file/Path;\n \n   public org.apache.commons.compress.parallel.ScatterGatherBackingStore get() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=1\n-         0: new           #20                 // class java/lang/StringBuilder\n+         0: new           #38                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #22                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #23                 // String n\n-         9: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: aload_0\n-        13: getfield      #10                 // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n-        16: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n-        19: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        22: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        25: astore_1\n-        26: aload_0\n-        27: getfield      #16                 // Field dir:Ljava/nio/file/Path;\n-        30: ifnonnull     46\n-        33: ldc           #40                 // String parallelscatter\n-        35: aload_1\n-        36: iconst_0\n-        37: anewarray     #42                 // class java/nio/file/attribute/FileAttribute\n-        40: invokestatic  #44                 // Method java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-        43: goto          60\n-        46: aload_0\n-        47: getfield      #16                 // Field dir:Ljava/nio/file/Path;\n-        50: ldc           #40                 // String parallelscatter\n-        52: aload_1\n-        53: iconst_0\n-        54: anewarray     #42                 // class java/nio/file/attribute/FileAttribute\n-        57: invokestatic  #50                 // Method java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-        60: astore_2\n-        61: new           #53                 // class org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-        64: dup\n-        65: aload_2\n-        66: invokespecial #55                 // Method org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n-        69: areturn\n+         4: ldc           #40                 // String n\n+         6: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+         9: aload_0\n+        10: getfield      #25                 // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+        13: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n+        16: invokevirtual #49                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        19: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        22: astore_1\n+        23: aload_0\n+        24: getfield      #27                 // Field dir:Ljava/nio/file/Path;\n+        27: ifnonnull     43\n+        30: ldc           #10                 // String parallelscatter\n+        32: aload_1\n+        33: iconst_0\n+        34: anewarray     #57                 // class java/nio/file/attribute/FileAttribute\n+        37: invokestatic  #59                 // Method java/nio/file/Files.createTempFile:(Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+        40: goto          57\n+        43: aload_0\n+        44: getfield      #27                 // Field dir:Ljava/nio/file/Path;\n+        47: ldc           #10                 // String parallelscatter\n+        49: aload_1\n+        50: iconst_0\n+        51: anewarray     #57                 // class java/nio/file/attribute/FileAttribute\n+        54: invokestatic  #65                 // Method java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+        57: astore_2\n+        58: new           #68                 // class org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+        61: dup\n+        62: aload_2\n+        63: invokespecial #70                 // Method org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n+        66: areturn\n       LineNumberTable:\n         line 63: 0\n-        line 64: 26\n-        line 65: 61\n+        line 64: 23\n+        line 65: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      70     0  this   Lorg/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier;\n-           26      44     1 suffix   Ljava/lang/String;\n-           61       9     2 tempFile   Ljava/nio/file/Path;\n+            0      67     0  this   Lorg/apache/commons/compress/archivers/zip/DefaultBackingStoreSupplier;\n+           23      44     1 suffix   Ljava/lang/String;\n+           58       9     2 tempFile   Ljava/nio/file/Path;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n-          offset_delta = 46\n+          offset_delta = 43\n           locals = [ class java/lang/String ]\n         frame_type = 77 /* same_locals_1_stack_item */\n           stack = [ class java/nio/file/Path ]\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"DefaultBackingStoreSupplier.java\"\n"}]}
