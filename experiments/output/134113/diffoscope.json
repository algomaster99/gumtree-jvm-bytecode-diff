{"diffoscope-json-version": 1, "source1": "first/JsonParser$Feature.class", "source2": "second/JsonParser$Feature.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -29,29 +29,49 @@\n     public static final enum Feature STRICT_DUPLICATE_DETECTION;\n     public static final enum Feature IGNORE_UNDEFINED;\n     public static final enum Feature INCLUDE_SOURCE_IN_LOCATION;\n     public static final enum Feature USE_FAST_DOUBLE_PARSER;\n     private final boolean _defaultState;\n     private final int _mask;\n     \n-    public static Feature valueOf(final String name) {\n-        return Enum.valueOf(Feature.class, name);\n+    static {\n+        Feature.AUTO_CLOSE_SOURCE = new Feature(\"AUTO_CLOSE_SOURCE\", 0, true);\n+        Feature.ALLOW_COMMENTS = new Feature(\"ALLOW_COMMENTS\", 1, false);\n+        Feature.ALLOW_YAML_COMMENTS = new Feature(\"ALLOW_YAML_COMMENTS\", 2, false);\n+        Feature.ALLOW_UNQUOTED_FIELD_NAMES = new Feature(\"ALLOW_UNQUOTED_FIELD_NAMES\", 3, false);\n+        Feature.ALLOW_SINGLE_QUOTES = new Feature(\"ALLOW_SINGLE_QUOTES\", 4, false);\n+        Feature.ALLOW_UNQUOTED_CONTROL_CHARS = new Feature(\"ALLOW_UNQUOTED_CONTROL_CHARS\", 5, false);\n+        Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER = new Feature(\"ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER\", 6, false);\n+        Feature.ALLOW_NUMERIC_LEADING_ZEROS = new Feature(\"ALLOW_NUMERIC_LEADING_ZEROS\", 7, false);\n+        Feature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS = new Feature(\"ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS\", 8, false);\n+        Feature.ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS = new Feature(\"ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS\", 9, false);\n+        Feature.ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS = new Feature(\"ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS\", 10, false);\n+        Feature.ALLOW_NON_NUMERIC_NUMBERS = new Feature(\"ALLOW_NON_NUMERIC_NUMBERS\", 11, false);\n+        Feature.ALLOW_MISSING_VALUES = new Feature(\"ALLOW_MISSING_VALUES\", 12, false);\n+        Feature.ALLOW_TRAILING_COMMA = new Feature(\"ALLOW_TRAILING_COMMA\", 13, false);\n+        Feature.STRICT_DUPLICATE_DETECTION = new Feature(\"STRICT_DUPLICATE_DETECTION\", 14, false);\n+        Feature.IGNORE_UNDEFINED = new Feature(\"IGNORE_UNDEFINED\", 15, false);\n+        Feature.INCLUDE_SOURCE_IN_LOCATION = new Feature(\"INCLUDE_SOURCE_IN_LOCATION\", 16, true);\n+        Feature.USE_FAST_DOUBLE_PARSER = new Feature(\"USE_FAST_DOUBLE_PARSER\", 17, false);\n+        Feature.ENUM$VALUES = new Feature[] { Feature.AUTO_CLOSE_SOURCE, Feature.ALLOW_COMMENTS, Feature.ALLOW_YAML_COMMENTS, Feature.ALLOW_UNQUOTED_FIELD_NAMES, Feature.ALLOW_SINGLE_QUOTES, Feature.ALLOW_UNQUOTED_CONTROL_CHARS, Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER, Feature.ALLOW_NUMERIC_LEADING_ZEROS, Feature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS, Feature.ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS, Feature.ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS, Feature.ALLOW_NON_NUMERIC_NUMBERS, Feature.ALLOW_MISSING_VALUES, Feature.ALLOW_TRAILING_COMMA, Feature.STRICT_DUPLICATE_DETECTION, Feature.IGNORE_UNDEFINED, Feature.INCLUDE_SOURCE_IN_LOCATION, Feature.USE_FAST_DOUBLE_PARSER };\n     }\n     \n     public static int collectDefaults() {\n         int flags = 0;\n-        for (final Feature f : values()) {\n+        Feature[] values;\n+        for (int length = (values = values()).length, i = 0; i < length; ++i) {\n+            final Feature f = values[i];\n             if (f.enabledByDefault()) {\n                 flags |= f.getMask();\n             }\n         }\n         return flags;\n     }\n     \n-    private Feature(final boolean defaultState) {\n+    private Feature(final String name, final int ordinal, final boolean defaultState) {\n         this._mask = 1 << this.ordinal();\n         this._defaultState = defaultState;\n     }\n     \n     public boolean enabledByDefault() {\n         return this._defaultState;\n     }\n@@ -60,29 +80,11 @@\n         return (flags & this._mask) != 0x0;\n     }\n     \n     public int getMask() {\n         return this._mask;\n     }\n     \n-    static {\n-        Feature.AUTO_CLOSE_SOURCE = new Feature(\"AUTO_CLOSE_SOURCE\", 0, true);\n-        Feature.ALLOW_COMMENTS = new Feature(\"ALLOW_COMMENTS\", 1, false);\n-        Feature.ALLOW_YAML_COMMENTS = new Feature(\"ALLOW_YAML_COMMENTS\", 2, false);\n-        Feature.ALLOW_UNQUOTED_FIELD_NAMES = new Feature(\"ALLOW_UNQUOTED_FIELD_NAMES\", 3, false);\n-        Feature.ALLOW_SINGLE_QUOTES = new Feature(\"ALLOW_SINGLE_QUOTES\", 4, false);\n-        Feature.ALLOW_UNQUOTED_CONTROL_CHARS = new Feature(\"ALLOW_UNQUOTED_CONTROL_CHARS\", 5, false);\n-        Feature.ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER = new Feature(\"ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER\", 6, false);\n-        Feature.ALLOW_NUMERIC_LEADING_ZEROS = new Feature(\"ALLOW_NUMERIC_LEADING_ZEROS\", 7, false);\n-        Feature.ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS = new Feature(\"ALLOW_LEADING_PLUS_SIGN_FOR_NUMBERS\", 8, false);\n-        Feature.ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS = new Feature(\"ALLOW_LEADING_DECIMAL_POINT_FOR_NUMBERS\", 9, false);\n-        Feature.ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS = new Feature(\"ALLOW_TRAILING_DECIMAL_POINT_FOR_NUMBERS\", 10, false);\n-        Feature.ALLOW_NON_NUMERIC_NUMBERS = new Feature(\"ALLOW_NON_NUMERIC_NUMBERS\", 11, false);\n-        Feature.ALLOW_MISSING_VALUES = new Feature(\"ALLOW_MISSING_VALUES\", 12, false);\n-        Feature.ALLOW_TRAILING_COMMA = new Feature(\"ALLOW_TRAILING_COMMA\", 13, false);\n-        Feature.STRICT_DUPLICATE_DETECTION = new Feature(\"STRICT_DUPLICATE_DETECTION\", 14, false);\n-        Feature.IGNORE_UNDEFINED = new Feature(\"IGNORE_UNDEFINED\", 15, false);\n-        Feature.INCLUDE_SOURCE_IN_LOCATION = new Feature(\"INCLUDE_SOURCE_IN_LOCATION\", 16, true);\n-        Feature.USE_FAST_DOUBLE_PARSER = new Feature(\"USE_FAST_DOUBLE_PARSER\", 17, false);\n-        Feature.$VALUES = $values();\n+    public static Feature valueOf(final String name) {\n+        return Enum.valueOf(Feature.class, name);\n     }\n }\n"}]}
