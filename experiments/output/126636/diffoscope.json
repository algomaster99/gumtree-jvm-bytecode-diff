{"diffoscope-json-version": 1, "source1": "first/HuffmanDecoder$DecodingMemory.class", "source2": "second/HuffmanDecoder$DecodingMemory.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,108 +1,101 @@\n-  SHA-256 checksum 58e414e44279426a685eb6ff732b1a1e62bbf83a19829d17dd4a4722ce7f8522\n+  SHA-256 checksum ab24bb1129c6e2dc4db34e060c82ced847e8f0009fba4cbdc69c069a0f9634c6\n   Compiled from \"HuffmanDecoder.java\"\n class org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #2                          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-  super_class: #11                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 7, attributes: 2\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n-   #4 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Methodref          #2.#8          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.\"<init>\":(I)V\n-   #8 = NameAndType        #5:#9          // \"<init>\":(I)V\n-   #9 = Utf8               (I)V\n-  #10 = Methodref          #11.#3         // java/lang/Object.\"<init>\":()V\n-  #11 = Class              #12            // java/lang/Object\n-  #12 = Utf8               java/lang/Object\n-  #13 = Fieldref           #2.#14         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.memory:[B\n-  #14 = NameAndType        #15:#16        // memory:[B\n-  #15 = Utf8               memory\n-  #16 = Utf8               [B\n-  #17 = Fieldref           #2.#18         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.mask:I\n-  #18 = NameAndType        #19:#20        // mask:I\n-  #19 = Utf8               mask\n-  #20 = Utf8               I\n-  #21 = Fieldref           #2.#22         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.wHead:I\n-  #22 = NameAndType        #23:#20        // wHead:I\n-  #23 = Utf8               wHead\n-  #24 = Methodref          #2.#25         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.incCounter:(I)I\n-  #25 = NameAndType        #26:#27        // incCounter:(I)I\n-  #26 = Utf8               incCounter\n-  #27 = Utf8               (I)I\n-  #28 = Methodref          #2.#29         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n-  #29 = NameAndType        #30:#31        // add:(B)B\n-  #30 = Utf8               add\n-  #31 = Utf8               (B)B\n-  #32 = Fieldref           #2.#33         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.wrappedAround:Z\n-  #33 = NameAndType        #34:#35        // wrappedAround:Z\n-  #34 = Utf8               wrappedAround\n-  #35 = Utf8               Z\n-  #36 = Class              #37            // java/lang/IllegalStateException\n-  #37 = Utf8               java/lang/IllegalStateException\n-  #38 = Class              #39            // java/lang/StringBuilder\n-  #39 = Utf8               java/lang/StringBuilder\n-  #40 = Methodref          #38.#3         // java/lang/StringBuilder.\"<init>\":()V\n-  #41 = String             #42            // Illegal distance parameter:\n-  #42 = Utf8               Illegal distance parameter:\n-  #43 = Methodref          #38.#44        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #44 = NameAndType        #45:#46        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #45 = Utf8               append\n-  #46 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #47 = Methodref          #38.#48        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #48 = NameAndType        #45:#49        // append:(I)Ljava/lang/StringBuilder;\n-  #49 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #50 = Methodref          #38.#51        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #51 = NameAndType        #52:#53        // toString:()Ljava/lang/String;\n-  #52 = Utf8               toString\n-  #53 = Utf8               ()Ljava/lang/String;\n-  #54 = Methodref          #36.#55        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #55 = NameAndType        #5:#56         // \"<init>\":(Ljava/lang/String;)V\n-  #56 = Utf8               (Ljava/lang/String;)V\n-  #57 = String             #58            // Attempt to read beyond memory: dist=\n-  #58 = Utf8               Attempt to read beyond memory: dist=\n-  #59 = Utf8               Code\n-  #60 = Utf8               LineNumberTable\n-  #61 = Utf8               LocalVariableTable\n-  #62 = Utf8               this\n-  #63 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-  #64 = Utf8               bits\n-  #65 = Utf8               b\n-  #66 = Utf8               B\n-  #67 = Utf8               ([BII)V\n-  #68 = Utf8               i\n-  #69 = Utf8               off\n-  #70 = Utf8               len\n-  #71 = Utf8               StackMapTable\n-  #72 = Utf8               counter\n-  #73 = Utf8               newCounter\n-  #74 = Utf8               recordToBuffer\n-  #75 = Utf8               (II[B)V\n+   #1 = Class              #2             // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+   #2 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               memory\n+   #6 = Utf8               [B\n+   #7 = Utf8               mask\n+   #8 = Utf8               I\n+   #9 = Utf8               wHead\n+  #10 = Utf8               wrappedAround\n+  #11 = Utf8               Z\n+  #12 = Utf8               <init>\n+  #13 = Utf8               ()V\n+  #14 = Utf8               Code\n+  #15 = Methodref          #1.#16         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.\"<init>\":(I)V\n+  #16 = NameAndType        #12:#17        // \"<init>\":(I)V\n+  #17 = Utf8               (I)V\n+  #18 = Utf8               LineNumberTable\n+  #19 = Utf8               LocalVariableTable\n+  #20 = Utf8               this\n+  #21 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+  #22 = Methodref          #3.#23         // java/lang/Object.\"<init>\":()V\n+  #23 = NameAndType        #12:#13        // \"<init>\":()V\n+  #24 = Fieldref           #1.#25         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.memory:[B\n+  #25 = NameAndType        #5:#6          // memory:[B\n+  #26 = Fieldref           #1.#27         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.mask:I\n+  #27 = NameAndType        #7:#8          // mask:I\n+  #28 = Utf8               bits\n+  #29 = Utf8               add\n+  #30 = Utf8               (B)B\n+  #31 = Fieldref           #1.#32         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.wHead:I\n+  #32 = NameAndType        #9:#8          // wHead:I\n+  #33 = Methodref          #1.#34         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.incCounter:(I)I\n+  #34 = NameAndType        #35:#36        // incCounter:(I)I\n+  #35 = Utf8               incCounter\n+  #36 = Utf8               (I)I\n+  #37 = Utf8               b\n+  #38 = Utf8               B\n+  #39 = Utf8               ([BII)V\n+  #40 = Methodref          #1.#41         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n+  #41 = NameAndType        #29:#30        // add:(B)B\n+  #42 = Utf8               off\n+  #43 = Utf8               len\n+  #44 = Utf8               i\n+  #45 = Utf8               StackMapTable\n+  #46 = Fieldref           #1.#47         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.wrappedAround:Z\n+  #47 = NameAndType        #10:#11        // wrappedAround:Z\n+  #48 = Utf8               counter\n+  #49 = Utf8               newCounter\n+  #50 = Utf8               recordToBuffer\n+  #51 = Utf8               (II[B)V\n+  #52 = Class              #53            // java/lang/IllegalStateException\n+  #53 = Utf8               java/lang/IllegalStateException\n+  #54 = Class              #55            // java/lang/StringBuilder\n+  #55 = Utf8               java/lang/StringBuilder\n+  #56 = String             #57            // Illegal distance parameter:\n+  #57 = Utf8               Illegal distance parameter:\n+  #58 = Methodref          #54.#59        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #59 = NameAndType        #12:#60        // \"<init>\":(Ljava/lang/String;)V\n+  #60 = Utf8               (Ljava/lang/String;)V\n+  #61 = Methodref          #54.#62        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #62 = NameAndType        #63:#64        // append:(I)Ljava/lang/StringBuilder;\n+  #63 = Utf8               append\n+  #64 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #65 = Methodref          #54.#66        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #66 = NameAndType        #67:#68        // toString:()Ljava/lang/String;\n+  #67 = Utf8               toString\n+  #68 = Utf8               ()Ljava/lang/String;\n+  #69 = Methodref          #52.#59        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #70 = String             #71            // Attempt to read beyond memory: dist=\n+  #71 = Utf8               Attempt to read beyond memory: dist=\n+  #72 = Utf8               distance\n+  #73 = Utf8               length\n+  #74 = Utf8               buff\n+  #75 = Utf8               start\n   #76 = Utf8               pos\n-  #77 = Utf8               distance\n-  #78 = Utf8               length\n-  #79 = Utf8               buff\n-  #80 = Utf8               start\n-  #81 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n-  #82 = Utf8               x0\n-  #83 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;\n-  #84 = Utf8               SourceFile\n-  #85 = Utf8               HuffmanDecoder.java\n-  #86 = Utf8               InnerClasses\n-  #87 = Class              #88            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  #88 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  #89 = Utf8               DecodingMemory\n-  #90 = Class              #91            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n-  #91 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+  #77 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;)V\n+  #78 = Methodref          #1.#23         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.\"<init>\":()V\n+  #79 = Utf8               SourceFile\n+  #80 = Utf8               HuffmanDecoder.java\n+  #81 = Utf8               InnerClasses\n+  #82 = Class              #83            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  #83 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  #84 = Utf8               DecodingMemory\n {\n   private final byte[] memory;\n     descriptor: [B\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int mask;\n     descriptor: I\n@@ -119,43 +112,43 @@\n   private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        16\n-         3: invokespecial #7                  // Method \"<init>\":(I)V\n+         3: invokespecial #15                 // Method \"<init>\":(I)V\n          6: return\n       LineNumberTable:\n         line 86: 0\n         line 87: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n \n   private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #10                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #22                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: iload_1\n          7: ishl\n          8: newarray       byte\n-        10: putfield      #13                 // Field memory:[B\n+        10: putfield      #24                 // Field memory:[B\n         13: aload_0\n         14: aload_0\n-        15: getfield      #13                 // Field memory:[B\n+        15: getfield      #24                 // Field memory:[B\n         18: arraylength\n         19: iconst_1\n         20: isub\n-        21: putfield      #17                 // Field mask:I\n+        21: putfield      #26                 // Field mask:I\n         24: return\n       LineNumberTable:\n         line 89: 0\n         line 90: 4\n         line 91: 13\n         line 92: 24\n       LocalVariableTable:\n@@ -165,25 +158,25 @@\n \n   byte add(byte);\n     descriptor: (B)B\n     flags: (0x0000)\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #13                 // Field memory:[B\n+         1: getfield      #24                 // Field memory:[B\n          4: aload_0\n-         5: getfield      #21                 // Field wHead:I\n+         5: getfield      #31                 // Field wHead:I\n          8: iload_1\n          9: bastore\n         10: aload_0\n         11: aload_0\n         12: aload_0\n-        13: getfield      #21                 // Field wHead:I\n-        16: invokespecial #24                 // Method incCounter:(I)I\n-        19: putfield      #21                 // Field wHead:I\n+        13: getfield      #31                 // Field wHead:I\n+        16: invokespecial #33                 // Method incCounter:(I)I\n+        19: putfield      #31                 // Field wHead:I\n         22: iload_1\n         23: ireturn\n       LineNumberTable:\n         line 95: 0\n         line 96: 10\n         line 97: 22\n       LocalVariableTable:\n@@ -194,68 +187,67 @@\n   void add(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=5, args_size=4\n          0: iload_2\n          1: istore        4\n-         3: iload         4\n-         5: iload_2\n-         6: iload_3\n-         7: iadd\n-         8: if_icmpge     26\n-        11: aload_0\n-        12: aload_1\n-        13: iload         4\n-        15: baload\n-        16: invokevirtual #28                 // Method add:(B)B\n-        19: pop\n-        20: iinc          4, 1\n-        23: goto          3\n+         3: goto          18\n+         6: aload_0\n+         7: aload_1\n+         8: iload         4\n+        10: baload\n+        11: invokevirtual #40                 // Method add:(B)B\n+        14: pop\n+        15: iinc          4, 1\n+        18: iload         4\n+        20: iload_2\n+        21: iload_3\n+        22: iadd\n+        23: if_icmplt     6\n         26: return\n       LineNumberTable:\n         line 101: 0\n-        line 102: 11\n-        line 101: 20\n+        line 102: 6\n+        line 101: 15\n         line 104: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            3      23     4     i   I\n             0      27     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n             0      27     1     b   [B\n             0      27     2   off   I\n             0      27     3   len   I\n+            3      23     4     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n-          offset_delta = 3\n+          offset_delta = 6\n           locals = [ int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 22\n+        frame_type = 11 /* same */\n \n   private int incCounter(int);\n     descriptor: (I)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=2\n          0: iload_1\n          1: iconst_1\n          2: iadd\n          3: aload_0\n-         4: getfield      #17                 // Field mask:I\n+         4: getfield      #26                 // Field mask:I\n          7: iand\n          8: istore_2\n          9: aload_0\n-        10: getfield      #32                 // Field wrappedAround:Z\n+        10: getfield      #46                 // Field wrappedAround:Z\n         13: ifne          26\n         16: iload_2\n         17: iload_1\n         18: if_icmpge     26\n         21: aload_0\n         22: iconst_1\n-        23: putfield      #32                 // Field wrappedAround:Z\n+        23: putfield      #46                 // Field wrappedAround:Z\n         26: iload_2\n         27: ireturn\n       LineNumberTable:\n         line 107: 0\n         line 108: 9\n         line 109: 21\n         line 111: 26\n@@ -272,121 +264,115 @@\n   void recordToBuffer(int, int, byte[]);\n     descriptor: (II[B)V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=7, args_size=4\n          0: iload_1\n          1: aload_0\n-         2: getfield      #13                 // Field memory:[B\n+         2: getfield      #24                 // Field memory:[B\n          5: arraylength\n-         6: if_icmple     36\n-         9: new           #36                 // class java/lang/IllegalStateException\n+         6: if_icmple     33\n+         9: new           #52                 // class java/lang/IllegalStateException\n         12: dup\n-        13: new           #38                 // class java/lang/StringBuilder\n+        13: new           #54                 // class java/lang/StringBuilder\n         16: dup\n-        17: invokespecial #40                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        20: ldc           #41                 // String Illegal distance parameter:\n-        22: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        25: iload_1\n-        26: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        29: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        32: invokespecial #54                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-        35: athrow\n-        36: aload_0\n-        37: getfield      #21                 // Field wHead:I\n-        40: iload_1\n-        41: isub\n-        42: aload_0\n-        43: getfield      #17                 // Field mask:I\n-        46: iand\n-        47: istore        4\n-        49: aload_0\n-        50: getfield      #32                 // Field wrappedAround:Z\n-        53: ifne          92\n-        56: iload         4\n-        58: aload_0\n-        59: getfield      #21                 // Field wHead:I\n-        62: if_icmplt     92\n-        65: new           #36                 // class java/lang/IllegalStateException\n-        68: dup\n-        69: new           #38                 // class java/lang/StringBuilder\n-        72: dup\n-        73: invokespecial #40                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        76: ldc           #57                 // String Attempt to read beyond memory: dist=\n-        78: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        81: iload_1\n-        82: invokevirtual #47                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        85: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        88: invokespecial #54                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-        91: athrow\n-        92: iconst_0\n-        93: istore        5\n-        95: iload         4\n-        97: istore        6\n-        99: iload         5\n-       101: iload_2\n-       102: if_icmpge     134\n-       105: aload_3\n-       106: iload         5\n-       108: aload_0\n-       109: aload_0\n-       110: getfield      #13                 // Field memory:[B\n-       113: iload         6\n-       115: baload\n-       116: invokevirtual #28                 // Method add:(B)B\n-       119: bastore\n-       120: iinc          5, 1\n-       123: aload_0\n-       124: iload         6\n-       126: invokespecial #24                 // Method incCounter:(I)I\n-       129: istore        6\n-       131: goto          99\n-       134: return\n+        17: ldc           #56                 // String Illegal distance parameter:\n+        19: invokespecial #58                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        22: iload_1\n+        23: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        26: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        29: invokespecial #69                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        32: athrow\n+        33: aload_0\n+        34: getfield      #31                 // Field wHead:I\n+        37: iload_1\n+        38: isub\n+        39: aload_0\n+        40: getfield      #26                 // Field mask:I\n+        43: iand\n+        44: istore        4\n+        46: aload_0\n+        47: getfield      #46                 // Field wrappedAround:Z\n+        50: ifne          86\n+        53: iload         4\n+        55: aload_0\n+        56: getfield      #31                 // Field wHead:I\n+        59: if_icmplt     86\n+        62: new           #52                 // class java/lang/IllegalStateException\n+        65: dup\n+        66: new           #54                 // class java/lang/StringBuilder\n+        69: dup\n+        70: ldc           #70                 // String Attempt to read beyond memory: dist=\n+        72: invokespecial #58                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        75: iload_1\n+        76: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        79: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        82: invokespecial #69                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        85: athrow\n+        86: iconst_0\n+        87: istore        5\n+        89: iload         4\n+        91: istore        6\n+        93: goto          122\n+        96: aload_3\n+        97: iload         5\n+        99: aload_0\n+       100: aload_0\n+       101: getfield      #24                 // Field memory:[B\n+       104: iload         6\n+       106: baload\n+       107: invokevirtual #40                 // Method add:(B)B\n+       110: bastore\n+       111: iinc          5, 1\n+       114: aload_0\n+       115: iload         6\n+       117: invokespecial #33                 // Method incCounter:(I)I\n+       120: istore        6\n+       122: iload         5\n+       124: iload_2\n+       125: if_icmplt     96\n+       128: return\n       LineNumberTable:\n         line 115: 0\n         line 116: 9\n-        line 118: 36\n-        line 119: 49\n-        line 120: 65\n-        line 122: 92\n-        line 123: 105\n-        line 122: 120\n-        line 125: 134\n+        line 118: 33\n+        line 119: 46\n+        line 120: 62\n+        line 122: 86\n+        line 123: 96\n+        line 122: 111\n+        line 125: 128\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           95      39     5     i   I\n-           99      35     6   pos   I\n-            0     135     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-            0     135     1 distance   I\n-            0     135     2 length   I\n-            0     135     3  buff   [B\n-           49      86     4 start   I\n+            0     129     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+            0     129     1 distance   I\n+            0     129     2 length   I\n+            0     129     3  buff   [B\n+           46      83     4 start   I\n+           89      39     5     i   I\n+           93      35     6   pos   I\n       StackMapTable: number_of_entries = 4\n-        frame_type = 36 /* same */\n+        frame_type = 33 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 55\n+          offset_delta = 52\n           locals = [ int ]\n         frame_type = 253 /* append */\n-          offset_delta = 6\n+          offset_delta = 9\n           locals = [ int, int ]\n-        frame_type = 249 /* chop */\n-          offset_delta = 34\n+        frame_type = 25 /* same */\n \n-  org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory(org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$1);\n-    descriptor: (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+  org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory(org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory);\n+    descriptor: (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method \"<init>\":()V\n+         1: invokespecial #78                 // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n-        line 79: 0\n+        line 85: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-            0       5     1    x0   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;\n }\n SourceFile: \"HuffmanDecoder.java\"\n InnerClasses:\n-  private static #89= #2 of #87;          // DecodingMemory=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  static #90;                             // class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+  private static #84= #1 of #82;          // DecodingMemory=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n"}]}
