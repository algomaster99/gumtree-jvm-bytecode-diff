{"diffoscope-json-version": 1, "source1": "first/VariableDeclarationUsageDistanceCheck.class", "source2": "second/VariableDeclarationUsageDistanceCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -306,18 +306,18 @@\n         }\n         return firstNodeInsideBlock;\n     }\n     \n     private static List<DetailAST> getVariableUsageExpressionsInsideSwitchBlock(final DetailAST block, final DetailAST variable) {\n         final Optional<DetailAST> firstToken = TokenUtil.findFirstTokenByPredicate(block, child -> child.getType() == 208 || child.getType() == 33);\n         final List<DetailAST> variableUsageExpressions = new ArrayList<DetailAST>();\n-        firstToken.ifPresent(token -> TokenUtil.forEachChild(block, token.getType(), child -> {\n+        firstToken.ifPresent(token -> TokenUtil.forEachChild(detailAST, token.getType(), child -> {\n             final DetailAST lastNodeInCaseGroup = child.getLastChild();\n-            if (isChild(lastNodeInCaseGroup, variable)) {\n-                variableUsageExpressions.add(lastNodeInCaseGroup);\n+            if (isChild(lastNodeInCaseGroup, ast)) {\n+                list.add(lastNodeInCaseGroup);\n             }\n         }));\n         return variableUsageExpressions;\n     }\n     \n     private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(final DetailAST block, final DetailAST variable) {\n         DetailAST currentNode = block.getFirstChild();\n"}]}
