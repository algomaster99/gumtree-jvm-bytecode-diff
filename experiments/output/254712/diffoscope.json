{"diffoscope-json-version": 1, "source1": "first/HmacUtils.class", "source2": "second/HmacUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -16,318 +16,318 @@\n import javax.crypto.Mac;\n \n public final class HmacUtils\n {\n     private static final int STREAM_BUFFER_LENGTH = 1024;\n     private final Mac mac;\n     \n-    public static boolean isAvailable(final String name) {\n+    public static boolean isAvailable(final String algorithm) {\n         try {\n-            Mac.getInstance(name);\n+            Mac.getInstance(algorithm);\n             return true;\n         }\n-        catch (final NoSuchAlgorithmException e) {\n+        catch (final NoSuchAlgorithmException ex) {\n             return false;\n         }\n     }\n     \n-    public static boolean isAvailable(final HmacAlgorithms name) {\n+    public static boolean isAvailable(final HmacAlgorithms hmacAlgorithms) {\n         try {\n-            Mac.getInstance(name.getName());\n+            Mac.getInstance(hmacAlgorithms.getName());\n             return true;\n         }\n-        catch (final NoSuchAlgorithmException e) {\n+        catch (final NoSuchAlgorithmException ex) {\n             return false;\n         }\n     }\n     \n     @Deprecated\n-    public static Mac getHmacMd5(final byte[] key) {\n-        return getInitializedMac(HmacAlgorithms.HMAC_MD5, key);\n+    public static Mac getHmacMd5(final byte[] array) {\n+        return getInitializedMac(HmacAlgorithms.HMAC_MD5, array);\n     }\n     \n     @Deprecated\n-    public static Mac getHmacSha1(final byte[] key) {\n-        return getInitializedMac(HmacAlgorithms.HMAC_SHA_1, key);\n+    public static Mac getHmacSha1(final byte[] array) {\n+        return getInitializedMac(HmacAlgorithms.HMAC_SHA_1, array);\n     }\n     \n     @Deprecated\n-    public static Mac getHmacSha256(final byte[] key) {\n-        return getInitializedMac(HmacAlgorithms.HMAC_SHA_256, key);\n+    public static Mac getHmacSha256(final byte[] array) {\n+        return getInitializedMac(HmacAlgorithms.HMAC_SHA_256, array);\n     }\n     \n     @Deprecated\n-    public static Mac getHmacSha384(final byte[] key) {\n-        return getInitializedMac(HmacAlgorithms.HMAC_SHA_384, key);\n+    public static Mac getHmacSha384(final byte[] array) {\n+        return getInitializedMac(HmacAlgorithms.HMAC_SHA_384, array);\n     }\n     \n     @Deprecated\n-    public static Mac getHmacSha512(final byte[] key) {\n-        return getInitializedMac(HmacAlgorithms.HMAC_SHA_512, key);\n+    public static Mac getHmacSha512(final byte[] array) {\n+        return getInitializedMac(HmacAlgorithms.HMAC_SHA_512, array);\n     }\n     \n-    public static Mac getInitializedMac(final HmacAlgorithms algorithm, final byte[] key) {\n-        return getInitializedMac(algorithm.getName(), key);\n+    public static Mac getInitializedMac(final HmacAlgorithms hmacAlgorithms, final byte[] array) {\n+        return getInitializedMac(hmacAlgorithms.getName(), array);\n     }\n     \n-    public static Mac getInitializedMac(final String algorithm, final byte[] key) {\n+    public static Mac getInitializedMac(final String s, final byte[] key) {\n         if (key == null) {\n             throw new IllegalArgumentException(\"Null key\");\n         }\n         try {\n-            final SecretKeySpec keySpec = new SecretKeySpec(key, algorithm);\n-            final Mac mac = Mac.getInstance(algorithm);\n-            mac.init(keySpec);\n-            return mac;\n+            final SecretKeySpec key2 = new SecretKeySpec(key, s);\n+            final Mac instance = Mac.getInstance(s);\n+            instance.init(key2);\n+            return instance;\n         }\n-        catch (final NoSuchAlgorithmException e) {\n-            throw new IllegalArgumentException(e);\n+        catch (final NoSuchAlgorithmException cause) {\n+            throw new IllegalArgumentException(cause);\n         }\n-        catch (final InvalidKeyException e2) {\n-            throw new IllegalArgumentException(e2);\n+        catch (final InvalidKeyException cause2) {\n+            throw new IllegalArgumentException(cause2);\n         }\n     }\n     \n     @Deprecated\n-    public static byte[] hmacMd5(final byte[] key, final byte[] valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmac(valueToDigest);\n+    public static byte[] hmacMd5(final byte[] array, final byte[] array2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, array).hmac(array2);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacMd5(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmac(valueToDigest);\n+    public static byte[] hmacMd5(final byte[] array, final InputStream inputStream) throws IOException {\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, array).hmac(inputStream);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacMd5(final String key, final String valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmac(valueToDigest);\n+    public static byte[] hmacMd5(final String s, final String s2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, s).hmac(s2);\n     }\n     \n     @Deprecated\n-    public static String hmacMd5Hex(final byte[] key, final byte[] valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmacHex(valueToDigest);\n+    public static String hmacMd5Hex(final byte[] array, final byte[] array2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, array).hmacHex(array2);\n     }\n     \n     @Deprecated\n-    public static String hmacMd5Hex(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmacHex(valueToDigest);\n+    public static String hmacMd5Hex(final byte[] array, final InputStream inputStream) throws IOException {\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, array).hmacHex(inputStream);\n     }\n     \n     @Deprecated\n-    public static String hmacMd5Hex(final String key, final String valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_MD5, key).hmacHex(valueToDigest);\n+    public static String hmacMd5Hex(final String s, final String s2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_MD5, s).hmacHex(s2);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha1(final byte[] key, final byte[] valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmac(valueToDigest);\n+    public static byte[] hmacSha1(final byte[] array, final byte[] array2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, array).hmac(array2);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha1(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmac(valueToDigest);\n+    public static byte[] hmacSha1(final byte[] array, final InputStream inputStream) throws IOException {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, array).hmac(inputStream);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha1(final String key, final String valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmac(valueToDigest);\n+    public static byte[] hmacSha1(final String s, final String s2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, s).hmac(s2);\n     }\n     \n     @Deprecated\n-    public static String hmacSha1Hex(final byte[] key, final byte[] valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmacHex(valueToDigest);\n+    public static String hmacSha1Hex(final byte[] array, final byte[] array2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, array).hmacHex(array2);\n     }\n     \n     @Deprecated\n-    public static String hmacSha1Hex(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmacHex(valueToDigest);\n+    public static String hmacSha1Hex(final byte[] array, final InputStream inputStream) throws IOException {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, array).hmacHex(inputStream);\n     }\n     \n     @Deprecated\n-    public static String hmacSha1Hex(final String key, final String valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, key).hmacHex(valueToDigest);\n+    public static String hmacSha1Hex(final String s, final String s2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_1, s).hmacHex(s2);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha256(final byte[] key, final byte[] valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmac(valueToDigest);\n+    public static byte[] hmacSha256(final byte[] array, final byte[] array2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, array).hmac(array2);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha256(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmac(valueToDigest);\n+    public static byte[] hmacSha256(final byte[] array, final InputStream inputStream) throws IOException {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, array).hmac(inputStream);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha256(final String key, final String valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmac(valueToDigest);\n+    public static byte[] hmacSha256(final String s, final String s2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, s).hmac(s2);\n     }\n     \n     @Deprecated\n-    public static String hmacSha256Hex(final byte[] key, final byte[] valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmacHex(valueToDigest);\n+    public static String hmacSha256Hex(final byte[] array, final byte[] array2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, array).hmacHex(array2);\n     }\n     \n     @Deprecated\n-    public static String hmacSha256Hex(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmacHex(valueToDigest);\n+    public static String hmacSha256Hex(final byte[] array, final InputStream inputStream) throws IOException {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, array).hmacHex(inputStream);\n     }\n     \n     @Deprecated\n-    public static String hmacSha256Hex(final String key, final String valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, key).hmacHex(valueToDigest);\n+    public static String hmacSha256Hex(final String s, final String s2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_256, s).hmacHex(s2);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha384(final byte[] key, final byte[] valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmac(valueToDigest);\n+    public static byte[] hmacSha384(final byte[] array, final byte[] array2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, array).hmac(array2);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha384(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmac(valueToDigest);\n+    public static byte[] hmacSha384(final byte[] array, final InputStream inputStream) throws IOException {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, array).hmac(inputStream);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha384(final String key, final String valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmac(valueToDigest);\n+    public static byte[] hmacSha384(final String s, final String s2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, s).hmac(s2);\n     }\n     \n     @Deprecated\n-    public static String hmacSha384Hex(final byte[] key, final byte[] valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmacHex(valueToDigest);\n+    public static String hmacSha384Hex(final byte[] array, final byte[] array2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, array).hmacHex(array2);\n     }\n     \n     @Deprecated\n-    public static String hmacSha384Hex(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmacHex(valueToDigest);\n+    public static String hmacSha384Hex(final byte[] array, final InputStream inputStream) throws IOException {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, array).hmacHex(inputStream);\n     }\n     \n     @Deprecated\n-    public static String hmacSha384Hex(final String key, final String valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, key).hmacHex(valueToDigest);\n+    public static String hmacSha384Hex(final String s, final String s2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_384, s).hmacHex(s2);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha512(final byte[] key, final byte[] valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmac(valueToDigest);\n+    public static byte[] hmacSha512(final byte[] array, final byte[] array2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, array).hmac(array2);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha512(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmac(valueToDigest);\n+    public static byte[] hmacSha512(final byte[] array, final InputStream inputStream) throws IOException {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, array).hmac(inputStream);\n     }\n     \n     @Deprecated\n-    public static byte[] hmacSha512(final String key, final String valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmac(valueToDigest);\n+    public static byte[] hmacSha512(final String s, final String s2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, s).hmac(s2);\n     }\n     \n     @Deprecated\n-    public static String hmacSha512Hex(final byte[] key, final byte[] valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmacHex(valueToDigest);\n+    public static String hmacSha512Hex(final byte[] array, final byte[] array2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, array).hmacHex(array2);\n     }\n     \n     @Deprecated\n-    public static String hmacSha512Hex(final byte[] key, final InputStream valueToDigest) throws IOException {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmacHex(valueToDigest);\n+    public static String hmacSha512Hex(final byte[] array, final InputStream inputStream) throws IOException {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, array).hmacHex(inputStream);\n     }\n     \n     @Deprecated\n-    public static String hmacSha512Hex(final String key, final String valueToDigest) {\n-        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, key).hmacHex(valueToDigest);\n+    public static String hmacSha512Hex(final String s, final String s2) {\n+        return new HmacUtils(HmacAlgorithms.HMAC_SHA_512, s).hmacHex(s2);\n     }\n     \n-    public static Mac updateHmac(final Mac mac, final byte[] valueToDigest) {\n+    public static Mac updateHmac(final Mac mac, final byte[] input) {\n         mac.reset();\n-        mac.update(valueToDigest);\n+        mac.update(input);\n         return mac;\n     }\n     \n-    public static Mac updateHmac(final Mac mac, final InputStream valueToDigest) throws IOException {\n+    public static Mac updateHmac(final Mac mac, final InputStream inputStream) throws IOException {\n         mac.reset();\n-        final byte[] buffer = new byte[1024];\n-        for (int read = valueToDigest.read(buffer, 0, 1024); read > -1; read = valueToDigest.read(buffer, 0, 1024)) {\n-            mac.update(buffer, 0, read);\n+        final byte[] b = new byte[1024];\n+        for (int i = inputStream.read(b, 0, 1024); i > -1; i = inputStream.read(b, 0, 1024)) {\n+            mac.update(b, 0, i);\n         }\n         return mac;\n     }\n     \n-    public static Mac updateHmac(final Mac mac, final String valueToDigest) {\n+    public static Mac updateHmac(final Mac mac, final String s) {\n         mac.reset();\n-        mac.update(StringUtils.getBytesUtf8(valueToDigest));\n+        mac.update(StringUtils.getBytesUtf8(s));\n         return mac;\n     }\n     \n     @Deprecated\n     public HmacUtils() {\n         this(null);\n     }\n     \n     private HmacUtils(final Mac mac) {\n         this.mac = mac;\n     }\n     \n-    public HmacUtils(final String algorithm, final byte[] key) {\n-        this(getInitializedMac(algorithm, key));\n+    public HmacUtils(final String s, final byte[] array) {\n+        this(getInitializedMac(s, array));\n     }\n     \n-    public HmacUtils(final String algorithm, final String key) {\n-        this(algorithm, StringUtils.getBytesUtf8(key));\n+    public HmacUtils(final String s, final String s2) {\n+        this(s, StringUtils.getBytesUtf8(s2));\n     }\n     \n-    public HmacUtils(final HmacAlgorithms algorithm, final String key) {\n-        this(algorithm.getName(), StringUtils.getBytesUtf8(key));\n+    public HmacUtils(final HmacAlgorithms hmacAlgorithms, final String s) {\n+        this(hmacAlgorithms.getName(), StringUtils.getBytesUtf8(s));\n     }\n     \n-    public HmacUtils(final HmacAlgorithms algorithm, final byte[] key) {\n-        this(algorithm.getName(), key);\n+    public HmacUtils(final HmacAlgorithms hmacAlgorithms, final byte[] array) {\n+        this(hmacAlgorithms.getName(), array);\n     }\n     \n-    public byte[] hmac(final byte[] valueToDigest) {\n-        return this.mac.doFinal(valueToDigest);\n+    public byte[] hmac(final byte[] input) {\n+        return this.mac.doFinal(input);\n     }\n     \n-    public String hmacHex(final byte[] valueToDigest) {\n-        return Hex.encodeHexString(this.hmac(valueToDigest));\n+    public String hmacHex(final byte[] array) {\n+        return Hex.encodeHexString(this.hmac(array));\n     }\n     \n-    public byte[] hmac(final String valueToDigest) {\n-        return this.mac.doFinal(StringUtils.getBytesUtf8(valueToDigest));\n+    public byte[] hmac(final String s) {\n+        return this.mac.doFinal(StringUtils.getBytesUtf8(s));\n     }\n     \n-    public String hmacHex(final String valueToDigest) {\n-        return Hex.encodeHexString(this.hmac(valueToDigest));\n+    public String hmacHex(final String s) {\n+        return Hex.encodeHexString(this.hmac(s));\n     }\n     \n-    public byte[] hmac(final ByteBuffer valueToDigest) {\n-        this.mac.update(valueToDigest);\n+    public byte[] hmac(final ByteBuffer input) {\n+        this.mac.update(input);\n         return this.mac.doFinal();\n     }\n     \n-    public String hmacHex(final ByteBuffer valueToDigest) {\n-        return Hex.encodeHexString(this.hmac(valueToDigest));\n+    public String hmacHex(final ByteBuffer byteBuffer) {\n+        return Hex.encodeHexString(this.hmac(byteBuffer));\n     }\n     \n-    public byte[] hmac(final InputStream valueToDigest) throws IOException {\n-        final byte[] buffer = new byte[1024];\n+    public byte[] hmac(final InputStream inputStream) throws IOException {\n+        final byte[] array = new byte[1024];\n         int read;\n-        while ((read = valueToDigest.read(buffer, 0, 1024)) > -1) {\n-            this.mac.update(buffer, 0, read);\n+        while ((read = inputStream.read(array, 0, 1024)) > -1) {\n+            this.mac.update(array, 0, read);\n         }\n         return this.mac.doFinal();\n     }\n     \n-    public String hmacHex(final InputStream valueToDigest) throws IOException {\n-        return Hex.encodeHexString(this.hmac(valueToDigest));\n+    public String hmacHex(final InputStream inputStream) throws IOException {\n+        return Hex.encodeHexString(this.hmac(inputStream));\n     }\n     \n-    public byte[] hmac(final File valueToDigest) throws IOException {\n-        try (final BufferedInputStream stream = new BufferedInputStream(new FileInputStream(valueToDigest))) {\n-            return this.hmac(stream);\n+    public byte[] hmac(final File file) throws IOException {\n+        try (final BufferedInputStream bufferedInputStream = new BufferedInputStream(new FileInputStream(file))) {\n+            return this.hmac(bufferedInputStream);\n         }\n     }\n     \n-    public String hmacHex(final File valueToDigest) throws IOException {\n-        return Hex.encodeHexString(this.hmac(valueToDigest));\n+    public String hmacHex(final File file) throws IOException {\n+        return Hex.encodeHexString(this.hmac(file));\n     }\n }\n"}]}
