{"diffoscope-json-version": 1, "source1": "first/ZipArchiveOutputStream$EntryMetaData.class", "source2": "second/ZipArchiveOutputStream$EntryMetaData.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,58 +1,52 @@\n-  SHA-256 checksum a3e47630e53f30a03c3e6cb09d82df10ffad9e84d939efa433e42947109c7276\n+  SHA-256 checksum 6a6279fc2047a06d26035e06504f23939460fa21961ed5326bb0b005156436d1\n   Compiled from \"ZipArchiveOutputStream.java\"\n final class org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData\n   minor version: 0\n   major version: 53\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData\n-  super_class: #16                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 2, methods: 4, attributes: 2\n Constant pool:\n-   #1 = Fieldref           #2.#3          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.usesDataDescriptor:Z\n-   #2 = Class              #4             // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData\n-   #3 = NameAndType        #5:#6          // usesDataDescriptor:Z\n-   #4 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData\n-   #5 = Utf8               usesDataDescriptor\n-   #6 = Utf8               Z\n-   #7 = Fieldref           #2.#8          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.offset:J\n-   #8 = NameAndType        #9:#10         // offset:J\n-   #9 = Utf8               offset\n-  #10 = Utf8               J\n-  #11 = Methodref          #2.#12         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.\"<init>\":(JZ)V\n-  #12 = NameAndType        #13:#14        // \"<init>\":(JZ)V\n-  #13 = Utf8               <init>\n-  #14 = Utf8               (JZ)V\n-  #15 = Methodref          #16.#17        // java/lang/Object.\"<init>\":()V\n-  #16 = Class              #18            // java/lang/Object\n-  #17 = NameAndType        #13:#19        // \"<init>\":()V\n-  #18 = Utf8               java/lang/Object\n-  #19 = Utf8               ()V\n-  #20 = Utf8               Code\n-  #21 = Utf8               LineNumberTable\n-  #22 = Utf8               LocalVariableTable\n-  #23 = Utf8               this\n-  #24 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;\n-  #25 = Utf8               (JZLorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V\n-  #26 = Utf8               x0\n-  #27 = Utf8               x1\n-  #28 = Utf8               x2\n-  #29 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;\n-  #30 = Utf8               access$800\n-  #31 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)J\n-  #32 = Utf8               access$900\n-  #33 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)Z\n-  #34 = Utf8               SourceFile\n-  #35 = Utf8               ZipArchiveOutputStream.java\n-  #36 = Utf8               InnerClasses\n-  #37 = Class              #38            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #38 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #39 = Utf8               EntryMetaData\n-  #40 = Class              #41            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n-  #41 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               offset\n+   #6 = Utf8               J\n+   #7 = Utf8               usesDataDescriptor\n+   #8 = Utf8               Z\n+   #9 = Utf8               <init>\n+  #10 = Utf8               (JZ)V\n+  #11 = Utf8               Code\n+  #12 = Methodref          #3.#13         // java/lang/Object.\"<init>\":()V\n+  #13 = NameAndType        #9:#14         // \"<init>\":()V\n+  #14 = Utf8               ()V\n+  #15 = Fieldref           #1.#16         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.offset:J\n+  #16 = NameAndType        #5:#6          // offset:J\n+  #17 = Fieldref           #1.#18         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.usesDataDescriptor:Z\n+  #18 = NameAndType        #7:#8          // usesDataDescriptor:Z\n+  #19 = Utf8               LineNumberTable\n+  #20 = Utf8               LocalVariableTable\n+  #21 = Utf8               this\n+  #22 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;\n+  #23 = Utf8               (JZLorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)V\n+  #24 = Methodref          #1.#25         // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData.\"<init>\":(JZ)V\n+  #25 = NameAndType        #9:#10         // \"<init>\":(JZ)V\n+  #26 = Utf8               access$1\n+  #27 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)J\n+  #28 = Utf8               access$2\n+  #29 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)Z\n+  #30 = Utf8               SourceFile\n+  #31 = Utf8               ZipArchiveOutputStream.java\n+  #32 = Utf8               InnerClasses\n+  #33 = Class              #34            // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #34 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #35 = Utf8               EntryMetaData\n {\n   private final long offset;\n     descriptor: J\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean usesDataDescriptor;\n     descriptor: Z\n@@ -60,77 +54,70 @@\n \n   private org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData(long, boolean);\n     descriptor: (JZ)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n-         1: invokespecial #15                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #12                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: lload_1\n-         6: putfield      #7                  // Field offset:J\n+         6: putfield      #15                 // Field offset:J\n          9: aload_0\n         10: iload_3\n-        11: putfield      #1                  // Field usesDataDescriptor:Z\n+        11: putfield      #17                 // Field usesDataDescriptor:Z\n         14: return\n       LineNumberTable:\n         line 1923: 0\n         line 1924: 4\n         line 1925: 9\n         line 1926: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;\n             0      15     1 offset   J\n             0      15     3 usesDataDescriptor   Z\n \n-  org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData(long, boolean, org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$1);\n-    descriptor: (JZLorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;)V\n+  org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData(long, boolean, org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData);\n+    descriptor: (JZLorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: lload_1\n          2: iload_3\n-         3: invokespecial #11                 // Method \"<init>\":(JZ)V\n+         3: invokespecial #24                 // Method \"<init>\":(JZ)V\n          6: return\n       LineNumberTable:\n-        line 1920: 0\n+        line 1923: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       7     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;\n-            0       7     1    x0   J\n-            0       7     3    x1   Z\n-            0       7     4    x2   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1;\n \n-  static long access$800(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData);\n+  static long access$1(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field offset:J\n+         1: getfield      #15                 // Field offset:J\n          4: lreturn\n       LineNumberTable:\n-        line 1920: 0\n+        line 1921: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;\n \n-  static boolean access$900(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData);\n+  static boolean access$2(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$EntryMetaData);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #1                  // Field usesDataDescriptor:Z\n+         1: getfield      #17                 // Field usesDataDescriptor:Z\n          4: ireturn\n       LineNumberTable:\n-        line 1920: 0\n+        line 1922: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData;\n }\n SourceFile: \"ZipArchiveOutputStream.java\"\n InnerClasses:\n-  private static final #39= #2 of #37;    // EntryMetaData=class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData of class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  static #40;                             // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$1\n+  private static final #35= #1 of #33;    // EntryMetaData=class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream$EntryMetaData of class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n"}]}
