{"diffoscope-json-version": 1, "source1": "first/Unknown.class", "source2": "second/Unknown.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,23 +1,28 @@\n \n package org.apache.bcel.classfile;\n \n-import java.util.HashMap;\n import java.io.DataOutputStream;\n import java.io.IOException;\n import java.io.DataInput;\n+import java.util.HashMap;\n import java.util.Map;\n \n public final class Unknown extends Attribute\n {\n     private static final Unknown[] EMPTY_ARRAY;\n     private static final Map<String, Unknown> UNKNOWN_ATTRIBUTES;\n     private byte[] bytes;\n     private final String name;\n     \n+    static {\n+        EMPTY_ARRAY = new Unknown[0];\n+        UNKNOWN_ATTRIBUTES = new HashMap<String, Unknown>();\n+    }\n+    \n     static Unknown[] getUnknownAttributes() {\n         try {\n             return Unknown.UNKNOWN_ATTRIBUTES.values().toArray(Unknown.EMPTY_ARRAY);\n         }\n         finally {\n             Unknown.UNKNOWN_ATTRIBUTES.clear();\n         }\n@@ -78,20 +83,15 @@\n         if (super.getLength() == 0 || this.bytes == null) {\n             return \"(Unknown attribute \" + this.name + \")\";\n         }\n         String hex;\n         if (super.getLength() > 10) {\n             final byte[] tmp = new byte[10];\n             System.arraycopy(this.bytes, 0, tmp, 0, 10);\n-            hex = Utility.toHexString(tmp) + \"... (truncated)\";\n+            hex = String.valueOf(Utility.toHexString(tmp)) + \"... (truncated)\";\n         }\n         else {\n             hex = Utility.toHexString(this.bytes);\n         }\n         return \"(Unknown attribute \" + this.name + \": \" + hex + \")\";\n     }\n-    \n-    static {\n-        EMPTY_ARRAY = new Unknown[0];\n-        UNKNOWN_ATTRIBUTES = new HashMap<String, Unknown>();\n-    }\n }\n"}]}
