{"diffoscope-json-version": 1, "source1": "first/AnnotationElementValue.class", "source2": "second/AnnotationElementValue.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,87 +1,85 @@\n-  SHA-256 checksum 16cbbbbba297f4bd69b0d4bee13f8e27e121c655d1500b8f6b4fb1833f2d3856\n+  SHA-256 checksum 0ecf3ee481056b7ae88ffbb705a9df3b81483ffd1c0a50d145c66d83381bd07a\n   Compiled from \"AnnotationElementValue.java\"\n public class org.apache.bcel.classfile.AnnotationElementValue extends org.apache.bcel.classfile.ElementValue\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #17                         // org/apache/bcel/classfile/AnnotationElementValue\n   super_class: #2                         // org/apache/bcel/classfile/ElementValue\n   interfaces: 0, fields: 1, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#39         // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-   #2 = Class              #40            // org/apache/bcel/classfile/ElementValue\n-   #3 = Class              #41            // java/lang/IllegalArgumentException\n-   #4 = Class              #42            // java/lang/StringBuilder\n-   #5 = Methodref          #4.#43         // java/lang/StringBuilder.\"<init>\":()V\n-   #6 = String             #44            // Only element values of type annotation can be built with this ctor - type specified:\n-   #7 = Methodref          #4.#45         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #8 = Methodref          #4.#46         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #9 = Methodref          #4.#47         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #10 = Methodref          #3.#48         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #11 = Fieldref           #17.#49        // org/apache/bcel/classfile/AnnotationElementValue.annotationEntry:Lorg/apache/bcel/classfile/AnnotationEntry;\n-  #12 = Methodref          #2.#50         // org/apache/bcel/classfile/ElementValue.getType:()I\n-  #13 = Methodref          #51.#52        // java/io/DataOutputStream.writeByte:(I)V\n-  #14 = Methodref          #53.#54        // org/apache/bcel/classfile/AnnotationEntry.dump:(Ljava/io/DataOutputStream;)V\n-  #15 = Methodref          #53.#47        // org/apache/bcel/classfile/AnnotationEntry.toString:()Ljava/lang/String;\n-  #16 = Methodref          #17.#55        // org/apache/bcel/classfile/AnnotationElementValue.stringifyValue:()Ljava/lang/String;\n-  #17 = Class              #56            // org/apache/bcel/classfile/AnnotationElementValue\n+   #1 = Methodref          #2.#38         // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+   #2 = Class              #39            // org/apache/bcel/classfile/ElementValue\n+   #3 = Class              #40            // java/lang/IllegalArgumentException\n+   #4 = Class              #41            // java/lang/StringBuilder\n+   #5 = Methodref          #4.#42         // java/lang/StringBuilder.\"<init>\":()V\n+   #6 = String             #43            // Only element values of type annotation can be built with this ctor - type specified:\n+   #7 = Methodref          #4.#44         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #8 = Methodref          #4.#45         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #9 = Methodref          #4.#46         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #10 = Methodref          #3.#47         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #11 = Fieldref           #17.#48        // org/apache/bcel/classfile/AnnotationElementValue.annotationEntry:Lorg/apache/bcel/classfile/AnnotationEntry;\n+  #12 = Methodref          #2.#49         // org/apache/bcel/classfile/ElementValue.getType:()I\n+  #13 = Methodref          #50.#51        // java/io/DataOutputStream.writeByte:(I)V\n+  #14 = Methodref          #25.#52        // org/apache/bcel/classfile/AnnotationEntry.dump:(Ljava/io/DataOutputStream;)V\n+  #15 = Methodref          #25.#46        // org/apache/bcel/classfile/AnnotationEntry.toString:()Ljava/lang/String;\n+  #16 = Methodref          #17.#53        // org/apache/bcel/classfile/AnnotationElementValue.stringifyValue:()Ljava/lang/String;\n+  #17 = Class              #54            // org/apache/bcel/classfile/AnnotationElementValue\n   #18 = Utf8               annotationEntry\n   #19 = Utf8               Lorg/apache/bcel/classfile/AnnotationEntry;\n   #20 = Utf8               <init>\n   #21 = Utf8               (ILorg/apache/bcel/classfile/AnnotationEntry;Lorg/apache/bcel/classfile/ConstantPool;)V\n   #22 = Utf8               Code\n   #23 = Utf8               LineNumberTable\n   #24 = Utf8               StackMapTable\n-  #25 = Class              #56            // org/apache/bcel/classfile/AnnotationElementValue\n-  #26 = Class              #57            // org/apache/bcel/classfile/AnnotationEntry\n-  #27 = Class              #58            // org/apache/bcel/classfile/ConstantPool\n-  #28 = Utf8               dump\n-  #29 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #30 = Utf8               Exceptions\n-  #31 = Class              #59            // java/io/IOException\n-  #32 = Utf8               stringifyValue\n-  #33 = Utf8               ()Ljava/lang/String;\n-  #34 = Utf8               toString\n-  #35 = Utf8               getAnnotationEntry\n-  #36 = Utf8               ()Lorg/apache/bcel/classfile/AnnotationEntry;\n-  #37 = Utf8               SourceFile\n-  #38 = Utf8               AnnotationElementValue.java\n-  #39 = NameAndType        #20:#60        // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-  #40 = Utf8               org/apache/bcel/classfile/ElementValue\n-  #41 = Utf8               java/lang/IllegalArgumentException\n-  #42 = Utf8               java/lang/StringBuilder\n-  #43 = NameAndType        #20:#61        // \"<init>\":()V\n-  #44 = Utf8               Only element values of type annotation can be built with this ctor - type specified:\n-  #45 = NameAndType        #62:#63        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #46 = NameAndType        #62:#64        // append:(I)Ljava/lang/StringBuilder;\n-  #47 = NameAndType        #34:#33        // toString:()Ljava/lang/String;\n-  #48 = NameAndType        #20:#65        // \"<init>\":(Ljava/lang/String;)V\n-  #49 = NameAndType        #18:#19        // annotationEntry:Lorg/apache/bcel/classfile/AnnotationEntry;\n-  #50 = NameAndType        #66:#67        // getType:()I\n-  #51 = Class              #68            // java/io/DataOutputStream\n-  #52 = NameAndType        #69:#70        // writeByte:(I)V\n-  #53 = Class              #57            // org/apache/bcel/classfile/AnnotationEntry\n-  #54 = NameAndType        #28:#29        // dump:(Ljava/io/DataOutputStream;)V\n-  #55 = NameAndType        #32:#33        // stringifyValue:()Ljava/lang/String;\n-  #56 = Utf8               org/apache/bcel/classfile/AnnotationElementValue\n-  #57 = Utf8               org/apache/bcel/classfile/AnnotationEntry\n-  #58 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #59 = Utf8               java/io/IOException\n-  #60 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n-  #61 = Utf8               ()V\n-  #62 = Utf8               append\n-  #63 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #64 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #65 = Utf8               (Ljava/lang/String;)V\n-  #66 = Utf8               getType\n-  #67 = Utf8               ()I\n-  #68 = Utf8               java/io/DataOutputStream\n-  #69 = Utf8               writeByte\n-  #70 = Utf8               (I)V\n+  #25 = Class              #55            // org/apache/bcel/classfile/AnnotationEntry\n+  #26 = Class              #56            // org/apache/bcel/classfile/ConstantPool\n+  #27 = Utf8               dump\n+  #28 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #29 = Utf8               Exceptions\n+  #30 = Class              #57            // java/io/IOException\n+  #31 = Utf8               stringifyValue\n+  #32 = Utf8               ()Ljava/lang/String;\n+  #33 = Utf8               toString\n+  #34 = Utf8               getAnnotationEntry\n+  #35 = Utf8               ()Lorg/apache/bcel/classfile/AnnotationEntry;\n+  #36 = Utf8               SourceFile\n+  #37 = Utf8               AnnotationElementValue.java\n+  #38 = NameAndType        #20:#58        // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #39 = Utf8               org/apache/bcel/classfile/ElementValue\n+  #40 = Utf8               java/lang/IllegalArgumentException\n+  #41 = Utf8               java/lang/StringBuilder\n+  #42 = NameAndType        #20:#59        // \"<init>\":()V\n+  #43 = Utf8               Only element values of type annotation can be built with this ctor - type specified:\n+  #44 = NameAndType        #60:#61        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #45 = NameAndType        #60:#62        // append:(I)Ljava/lang/StringBuilder;\n+  #46 = NameAndType        #33:#32        // toString:()Ljava/lang/String;\n+  #47 = NameAndType        #20:#63        // \"<init>\":(Ljava/lang/String;)V\n+  #48 = NameAndType        #18:#19        // annotationEntry:Lorg/apache/bcel/classfile/AnnotationEntry;\n+  #49 = NameAndType        #64:#65        // getType:()I\n+  #50 = Class              #66            // java/io/DataOutputStream\n+  #51 = NameAndType        #67:#68        // writeByte:(I)V\n+  #52 = NameAndType        #27:#28        // dump:(Ljava/io/DataOutputStream;)V\n+  #53 = NameAndType        #31:#32        // stringifyValue:()Ljava/lang/String;\n+  #54 = Utf8               org/apache/bcel/classfile/AnnotationElementValue\n+  #55 = Utf8               org/apache/bcel/classfile/AnnotationEntry\n+  #56 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #57 = Utf8               java/io/IOException\n+  #58 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #59 = Utf8               ()V\n+  #60 = Utf8               append\n+  #61 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #62 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #63 = Utf8               (Ljava/lang/String;)V\n+  #64 = Utf8               getType\n+  #65 = Utf8               ()I\n+  #66 = Utf8               java/io/DataOutputStream\n+  #67 = Utf8               writeByte\n+  #68 = Utf8               (I)V\n {\n   private final org.apache.bcel.classfile.AnnotationEntry annotationEntry;\n     descriptor: Lorg/apache/bcel/classfile/AnnotationEntry;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.bcel.classfile.AnnotationElementValue(int, org.apache.bcel.classfile.AnnotationEntry, org.apache.bcel.classfile.ConstantPool);\n     descriptor: (ILorg/apache/bcel/classfile/AnnotationEntry;Lorg/apache/bcel/classfile/ConstantPool;)V\n"}]}
