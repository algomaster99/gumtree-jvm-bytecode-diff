{"diffoscope-json-version": 1, "source1": "first/Folder.class", "source2": "second/Folder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -12,35 +12,35 @@\n     long[] packedStreams;\n     long[] unpackSizes;\n     boolean hasCrc;\n     long crc;\n     int numUnpackSubStreams;\n     \n     Iterable<Coder> getOrderedCoders() {\n-        final LinkedList<Coder> l = new LinkedList<Coder>();\n-        int pair;\n-        for (int current = (int)this.packedStreams[0]; current != -1; current = ((pair != -1) ? ((int)this.bindPairs[pair].inIndex) : -1)) {\n-            l.addLast(this.coders[current]);\n-            pair = this.findBindPairForOutStream(current);\n+        final LinkedList list = new LinkedList();\n+        int bindPairForOutStream;\n+        for (int i = (int)this.packedStreams[0]; i != -1; i = ((bindPairForOutStream != -1) ? ((int)this.bindPairs[bindPairForOutStream].inIndex) : -1)) {\n+            list.addLast(this.coders[i]);\n+            bindPairForOutStream = this.findBindPairForOutStream(i);\n         }\n-        return l;\n+        return list;\n     }\n     \n-    int findBindPairForInStream(final int index) {\n+    int findBindPairForInStream(final int n) {\n         for (int i = 0; i < this.bindPairs.length; ++i) {\n-            if (this.bindPairs[i].inIndex == index) {\n+            if (this.bindPairs[i].inIndex == n) {\n                 return i;\n             }\n         }\n         return -1;\n     }\n     \n-    int findBindPairForOutStream(final int index) {\n+    int findBindPairForOutStream(final int n) {\n         for (int i = 0; i < this.bindPairs.length; ++i) {\n-            if (this.bindPairs[i].outIndex == index) {\n+            if (this.bindPairs[i].outIndex == n) {\n                 return i;\n             }\n         }\n         return -1;\n     }\n     \n     long getUnpackSize() {\n"}]}
