{"diffoscope-json-version": 1, "source1": "first/BeiderMorseEncoder.class", "source2": "second/BeiderMorseEncoder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,138 +1,138 @@\n-  SHA-256 checksum db0914d09372c60b0781a542d05c58deb94a8e0f9e3aee61c1143dd3bc0cf44b\n+  SHA-256 checksum 26ec6dacddeac78b623588445372f5abafc562acb9f7a7e56545db766894d16b\n   Compiled from \"BeiderMorseEncoder.java\"\n public class org.apache.commons.codec.language.bm.BeiderMorseEncoder implements org.apache.commons.codec.StringEncoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/codec/language/bm/BeiderMorseEncoder\n-  super_class: #19                        // java/lang/Object\n+  this_class: #25                         // org/apache/commons/codec/language/bm/BeiderMorseEncoder\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 1, methods: 10, attributes: 1\n Constant pool:\n-   #1 = Methodref          #19.#48        // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #49            // org/apache/commons/codec/language/bm/PhoneticEngine\n-   #3 = Fieldref           #50.#51        // org/apache/commons/codec/language/bm/NameType.GENERIC:Lorg/apache/commons/codec/language/bm/NameType;\n-   #4 = Fieldref           #52.#53        // org/apache/commons/codec/language/bm/RuleType.APPROX:Lorg/apache/commons/codec/language/bm/RuleType;\n-   #5 = Methodref          #2.#54         // org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Z)V\n-   #6 = Fieldref           #18.#55        // org/apache/commons/codec/language/bm/BeiderMorseEncoder.engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-   #7 = Class              #56            // java/lang/String\n-   #8 = Class              #57            // org/apache/commons/codec/EncoderException\n-   #9 = String             #58            // BeiderMorseEncoder encode parameter is not of type String\n-  #10 = Methodref          #8.#59         // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-  #11 = Methodref          #18.#60        // org/apache/commons/codec/language/bm/BeiderMorseEncoder.encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #12 = Methodref          #2.#60         // org/apache/commons/codec/language/bm/PhoneticEngine.encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #13 = Methodref          #2.#61         // org/apache/commons/codec/language/bm/PhoneticEngine.getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n-  #14 = Methodref          #2.#62         // org/apache/commons/codec/language/bm/PhoneticEngine.getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n-  #15 = Methodref          #2.#63         // org/apache/commons/codec/language/bm/PhoneticEngine.isConcat:()Z\n-  #16 = Methodref          #2.#64         // org/apache/commons/codec/language/bm/PhoneticEngine.getMaxPhonemes:()I\n-  #17 = Methodref          #2.#65         // org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n-  #18 = Class              #66            // org/apache/commons/codec/language/bm/BeiderMorseEncoder\n-  #19 = Class              #67            // java/lang/Object\n-  #20 = Class              #68            // org/apache/commons/codec/StringEncoder\n-  #21 = Utf8               engine\n-  #22 = Utf8               Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-  #23 = Utf8               <init>\n-  #24 = Utf8               ()V\n-  #25 = Utf8               Code\n-  #26 = Utf8               LineNumberTable\n-  #27 = Utf8               encode\n-  #28 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #29 = Utf8               StackMapTable\n-  #30 = Utf8               Exceptions\n-  #31 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #32 = Utf8               getNameType\n-  #33 = Utf8               ()Lorg/apache/commons/codec/language/bm/NameType;\n-  #34 = Utf8               getRuleType\n-  #35 = Utf8               ()Lorg/apache/commons/codec/language/bm/RuleType;\n-  #36 = Utf8               isConcat\n-  #37 = Utf8               ()Z\n-  #38 = Utf8               setConcat\n-  #39 = Utf8               (Z)V\n-  #40 = Utf8               setNameType\n-  #41 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;)V\n-  #42 = Utf8               setRuleType\n-  #43 = Utf8               (Lorg/apache/commons/codec/language/bm/RuleType;)V\n-  #44 = Utf8               setMaxPhonemes\n-  #45 = Utf8               (I)V\n-  #46 = Utf8               SourceFile\n-  #47 = Utf8               BeiderMorseEncoder.java\n-  #48 = NameAndType        #23:#24        // \"<init>\":()V\n-  #49 = Utf8               org/apache/commons/codec/language/bm/PhoneticEngine\n-  #50 = Class              #69            // org/apache/commons/codec/language/bm/NameType\n-  #51 = NameAndType        #70:#71        // GENERIC:Lorg/apache/commons/codec/language/bm/NameType;\n-  #52 = Class              #72            // org/apache/commons/codec/language/bm/RuleType\n-  #53 = NameAndType        #73:#74        // APPROX:Lorg/apache/commons/codec/language/bm/RuleType;\n-  #54 = NameAndType        #23:#75        // \"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Z)V\n-  #55 = NameAndType        #21:#22        // engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-  #56 = Utf8               java/lang/String\n-  #57 = Utf8               org/apache/commons/codec/EncoderException\n-  #58 = Utf8               BeiderMorseEncoder encode parameter is not of type String\n-  #59 = NameAndType        #23:#76        // \"<init>\":(Ljava/lang/String;)V\n-  #60 = NameAndType        #27:#31        // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #61 = NameAndType        #32:#33        // getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n-  #62 = NameAndType        #34:#35        // getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n-  #63 = NameAndType        #36:#37        // isConcat:()Z\n-  #64 = NameAndType        #77:#78        // getMaxPhonemes:()I\n-  #65 = NameAndType        #23:#79        // \"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n-  #66 = Utf8               org/apache/commons/codec/language/bm/BeiderMorseEncoder\n-  #67 = Utf8               java/lang/Object\n-  #68 = Utf8               org/apache/commons/codec/StringEncoder\n-  #69 = Utf8               org/apache/commons/codec/language/bm/NameType\n-  #70 = Utf8               GENERIC\n-  #71 = Utf8               Lorg/apache/commons/codec/language/bm/NameType;\n-  #72 = Utf8               org/apache/commons/codec/language/bm/RuleType\n-  #73 = Utf8               APPROX\n-  #74 = Utf8               Lorg/apache/commons/codec/language/bm/RuleType;\n-  #75 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Z)V\n-  #76 = Utf8               (Ljava/lang/String;)V\n-  #77 = Utf8               getMaxPhonemes\n-  #78 = Utf8               ()I\n-  #79 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // org/apache/commons/codec/language/bm/PhoneticEngine\n+   #8 = Utf8               org/apache/commons/codec/language/bm/PhoneticEngine\n+   #9 = Fieldref           #10.#11        // org/apache/commons/codec/language/bm/NameType.GENERIC:Lorg/apache/commons/codec/language/bm/NameType;\n+  #10 = Class              #12            // org/apache/commons/codec/language/bm/NameType\n+  #11 = NameAndType        #13:#14        // GENERIC:Lorg/apache/commons/codec/language/bm/NameType;\n+  #12 = Utf8               org/apache/commons/codec/language/bm/NameType\n+  #13 = Utf8               GENERIC\n+  #14 = Utf8               Lorg/apache/commons/codec/language/bm/NameType;\n+  #15 = Fieldref           #16.#17        // org/apache/commons/codec/language/bm/RuleType.APPROX:Lorg/apache/commons/codec/language/bm/RuleType;\n+  #16 = Class              #18            // org/apache/commons/codec/language/bm/RuleType\n+  #17 = NameAndType        #19:#20        // APPROX:Lorg/apache/commons/codec/language/bm/RuleType;\n+  #18 = Utf8               org/apache/commons/codec/language/bm/RuleType\n+  #19 = Utf8               APPROX\n+  #20 = Utf8               Lorg/apache/commons/codec/language/bm/RuleType;\n+  #21 = Methodref          #7.#22         // org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Z)V\n+  #22 = NameAndType        #5:#23         // \"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Z)V\n+  #23 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Z)V\n+  #24 = Fieldref           #25.#26        // org/apache/commons/codec/language/bm/BeiderMorseEncoder.engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+  #25 = Class              #27            // org/apache/commons/codec/language/bm/BeiderMorseEncoder\n+  #26 = NameAndType        #28:#29        // engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+  #27 = Utf8               org/apache/commons/codec/language/bm/BeiderMorseEncoder\n+  #28 = Utf8               engine\n+  #29 = Utf8               Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+  #30 = Class              #31            // java/lang/String\n+  #31 = Utf8               java/lang/String\n+  #32 = Class              #33            // org/apache/commons/codec/EncoderException\n+  #33 = Utf8               org/apache/commons/codec/EncoderException\n+  #34 = String             #35            // BeiderMorseEncoder encode parameter is not of type String\n+  #35 = Utf8               BeiderMorseEncoder encode parameter is not of type String\n+  #36 = Methodref          #32.#37        // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+  #37 = NameAndType        #5:#38         // \"<init>\":(Ljava/lang/String;)V\n+  #38 = Utf8               (Ljava/lang/String;)V\n+  #39 = Methodref          #25.#40        // org/apache/commons/codec/language/bm/BeiderMorseEncoder.encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #40 = NameAndType        #41:#42        // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #41 = Utf8               encode\n+  #42 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #43 = Methodref          #7.#40         // org/apache/commons/codec/language/bm/PhoneticEngine.encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #44 = Methodref          #7.#45         // org/apache/commons/codec/language/bm/PhoneticEngine.getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n+  #45 = NameAndType        #46:#47        // getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n+  #46 = Utf8               getNameType\n+  #47 = Utf8               ()Lorg/apache/commons/codec/language/bm/NameType;\n+  #48 = Methodref          #7.#49         // org/apache/commons/codec/language/bm/PhoneticEngine.getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n+  #49 = NameAndType        #50:#51        // getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n+  #50 = Utf8               getRuleType\n+  #51 = Utf8               ()Lorg/apache/commons/codec/language/bm/RuleType;\n+  #52 = Methodref          #7.#53         // org/apache/commons/codec/language/bm/PhoneticEngine.isConcat:()Z\n+  #53 = NameAndType        #54:#55        // isConcat:()Z\n+  #54 = Utf8               isConcat\n+  #55 = Utf8               ()Z\n+  #56 = Methodref          #7.#57         // org/apache/commons/codec/language/bm/PhoneticEngine.getMaxPhonemes:()I\n+  #57 = NameAndType        #58:#59        // getMaxPhonemes:()I\n+  #58 = Utf8               getMaxPhonemes\n+  #59 = Utf8               ()I\n+  #60 = Methodref          #7.#61         // org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n+  #61 = NameAndType        #5:#62         // \"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n+  #62 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n+  #63 = Class              #64            // org/apache/commons/codec/StringEncoder\n+  #64 = Utf8               org/apache/commons/codec/StringEncoder\n+  #65 = Utf8               Code\n+  #66 = Utf8               LineNumberTable\n+  #67 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #68 = Utf8               StackMapTable\n+  #69 = Utf8               Exceptions\n+  #70 = Utf8               setConcat\n+  #71 = Utf8               (Z)V\n+  #72 = Utf8               setNameType\n+  #73 = Utf8               (Lorg/apache/commons/codec/language/bm/NameType;)V\n+  #74 = Utf8               setRuleType\n+  #75 = Utf8               (Lorg/apache/commons/codec/language/bm/RuleType;)V\n+  #76 = Utf8               setMaxPhonemes\n+  #77 = Utf8               (I)V\n+  #78 = Utf8               SourceFile\n+  #79 = Utf8               BeiderMorseEncoder.java\n {\n   private org.apache.commons.codec.language.bm.PhoneticEngine engine;\n     descriptor: Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.codec.language.bm.BeiderMorseEncoder();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class org/apache/commons/codec/language/bm/PhoneticEngine\n+         5: new           #7                  // class org/apache/commons/codec/language/bm/PhoneticEngine\n          8: dup\n-         9: getstatic     #3                  // Field org/apache/commons/codec/language/bm/NameType.GENERIC:Lorg/apache/commons/codec/language/bm/NameType;\n-        12: getstatic     #4                  // Field org/apache/commons/codec/language/bm/RuleType.APPROX:Lorg/apache/commons/codec/language/bm/RuleType;\n+         9: getstatic     #9                  // Field org/apache/commons/codec/language/bm/NameType.GENERIC:Lorg/apache/commons/codec/language/bm/NameType;\n+        12: getstatic     #15                 // Field org/apache/commons/codec/language/bm/RuleType.APPROX:Lorg/apache/commons/codec/language/bm/RuleType;\n         15: iconst_1\n-        16: invokespecial #5                  // Method org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Z)V\n-        19: putfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        16: invokespecial #21                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Z)V\n+        19: putfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n         22: return\n       LineNumberTable:\n         line 78: 0\n         line 83: 4\n \n   public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #7                  // class java/lang/String\n+         1: instanceof    #30                 // class java/lang/String\n          4: ifne          17\n-         7: new           #8                  // class org/apache/commons/codec/EncoderException\n+         7: new           #32                 // class org/apache/commons/codec/EncoderException\n         10: dup\n-        11: ldc           #9                  // String BeiderMorseEncoder encode parameter is not of type String\n-        13: invokespecial #10                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #34                 // String BeiderMorseEncoder encode parameter is not of type String\n+        13: invokespecial #36                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: checkcast     #7                  // class java/lang/String\n-        22: invokevirtual #11                 // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n+        19: checkcast     #30                 // class java/lang/String\n+        22: invokevirtual #39                 // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n         25: areturn\n       LineNumberTable:\n         line 87: 0\n         line 88: 7\n         line 90: 17\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n@@ -145,17 +145,17 @@\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+         7: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n         10: aload_1\n-        11: invokevirtual #12                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.encode:(Ljava/lang/String;)Ljava/lang/String;\n+        11: invokevirtual #43                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.encode:(Ljava/lang/String;)Ljava/lang/String;\n         14: areturn\n       LineNumberTable:\n         line 95: 0\n         line 96: 4\n         line 98: 6\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n@@ -164,146 +164,146 @@\n \n   public org.apache.commons.codec.language.bm.NameType getNameType();\n     descriptor: ()Lorg/apache/commons/codec/language/bm/NameType;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-         4: invokevirtual #13                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n+         1: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+         4: invokevirtual #44                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n          7: areturn\n       LineNumberTable:\n         line 107: 0\n \n   public org.apache.commons.codec.language.bm.RuleType getRuleType();\n     descriptor: ()Lorg/apache/commons/codec/language/bm/RuleType;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-         4: invokevirtual #14                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n+         1: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+         4: invokevirtual #48                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n          7: areturn\n       LineNumberTable:\n         line 116: 0\n \n   public boolean isConcat();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-         4: invokevirtual #15                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.isConcat:()Z\n+         1: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+         4: invokevirtual #52                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.isConcat:()Z\n          7: ireturn\n       LineNumberTable:\n         line 125: 0\n \n   public void setConcat(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n-         1: new           #2                  // class org/apache/commons/codec/language/bm/PhoneticEngine\n+         1: new           #7                  // class org/apache/commons/codec/language/bm/PhoneticEngine\n          4: dup\n          5: aload_0\n-         6: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-         9: invokevirtual #13                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n+         6: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+         9: invokevirtual #44                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n         12: aload_0\n-        13: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-        16: invokevirtual #14                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n+        13: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        16: invokevirtual #48                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n         19: iload_1\n         20: aload_0\n-        21: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-        24: invokevirtual #16                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getMaxPhonemes:()I\n-        27: invokespecial #17                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n-        30: putfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        21: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        24: invokevirtual #56                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getMaxPhonemes:()I\n+        27: invokespecial #60                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n+        30: putfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n         33: return\n       LineNumberTable:\n         line 136: 0\n         line 137: 16\n         line 139: 24\n         line 140: 33\n \n   public void setNameType(org.apache.commons.codec.language.bm.NameType);\n     descriptor: (Lorg/apache/commons/codec/language/bm/NameType;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n-         1: new           #2                  // class org/apache/commons/codec/language/bm/PhoneticEngine\n+         1: new           #7                  // class org/apache/commons/codec/language/bm/PhoneticEngine\n          4: dup\n          5: aload_1\n          6: aload_0\n-         7: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-        10: invokevirtual #14                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n+         7: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        10: invokevirtual #48                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n         13: aload_0\n-        14: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-        17: invokevirtual #15                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.isConcat:()Z\n+        14: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        17: invokevirtual #52                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.isConcat:()Z\n         20: aload_0\n-        21: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-        24: invokevirtual #16                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getMaxPhonemes:()I\n-        27: invokespecial #17                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n-        30: putfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        21: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        24: invokevirtual #56                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getMaxPhonemes:()I\n+        27: invokespecial #60                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n+        30: putfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n         33: return\n       LineNumberTable:\n         line 150: 0\n         line 151: 10\n         line 152: 17\n         line 153: 24\n         line 154: 33\n \n   public void setRuleType(org.apache.commons.codec.language.bm.RuleType);\n     descriptor: (Lorg/apache/commons/codec/language/bm/RuleType;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n-         1: new           #2                  // class org/apache/commons/codec/language/bm/PhoneticEngine\n+         1: new           #7                  // class org/apache/commons/codec/language/bm/PhoneticEngine\n          4: dup\n          5: aload_0\n-         6: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-         9: invokevirtual #13                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n+         6: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+         9: invokevirtual #44                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n         12: aload_1\n         13: aload_0\n-        14: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-        17: invokevirtual #15                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.isConcat:()Z\n+        14: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        17: invokevirtual #52                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.isConcat:()Z\n         20: aload_0\n-        21: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-        24: invokevirtual #16                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getMaxPhonemes:()I\n-        27: invokespecial #17                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n-        30: putfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        21: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        24: invokevirtual #56                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getMaxPhonemes:()I\n+        27: invokespecial #60                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n+        30: putfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n         33: return\n       LineNumberTable:\n         line 163: 0\n         line 165: 17\n         line 166: 24\n         line 167: 33\n \n   public void setMaxPhonemes(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n-         1: new           #2                  // class org/apache/commons/codec/language/bm/PhoneticEngine\n+         1: new           #7                  // class org/apache/commons/codec/language/bm/PhoneticEngine\n          4: dup\n          5: aload_0\n-         6: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-         9: invokevirtual #13                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n+         6: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+         9: invokevirtual #44                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getNameType:()Lorg/apache/commons/codec/language/bm/NameType;\n         12: aload_0\n-        13: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-        16: invokevirtual #14                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n+        13: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        16: invokevirtual #48                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.getRuleType:()Lorg/apache/commons/codec/language/bm/RuleType;\n         19: aload_0\n-        20: getfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n-        23: invokevirtual #15                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.isConcat:()Z\n+        20: getfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        23: invokevirtual #52                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.isConcat:()Z\n         26: iload_1\n-        27: invokespecial #17                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n-        30: putfield      #6                  // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n+        27: invokespecial #60                 // Method org/apache/commons/codec/language/bm/PhoneticEngine.\"<init>\":(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V\n+        30: putfield      #24                 // Field engine:Lorg/apache/commons/codec/language/bm/PhoneticEngine;\n         33: return\n       LineNumberTable:\n         line 177: 0\n         line 178: 16\n         line 179: 23\n         line 181: 33\n }\n"}]}
