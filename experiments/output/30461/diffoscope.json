{"diffoscope-json-version": 1, "source1": "first/CSVFormat.class", "source2": "second/CSVFormat.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,670 +1,667 @@\n-  SHA-256 checksum d106558bdfdf319da34920adda70b9d3b45c593a1c8dc9f839ba4286d7419bf4\n+  SHA-256 checksum 66c9734967d311838131a962d83e8e592b6ce7b59765613a6d45ea6999dcb6bb\n   Compiled from \"CSVFormat.java\"\n public final class org.apache.commons.csv.CSVFormat implements java.io.Serializable\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #4                          // org/apache/commons/csv/CSVFormat\n-  super_class: #186                       // java/lang/Object\n+  this_class: #10                         // org/apache/commons/csv/CSVFormat\n+  super_class: #30                        // java/lang/Object\n   interfaces: 1, fields: 28, methods: 78, attributes: 2\n Constant pool:\n-    #1 = Class              #404          // org/apache/commons/csv/Constants\n-    #2 = Methodref          #251.#405     // java/lang/Character.charValue:()C\n-    #3 = Methodref          #4.#406       // org/apache/commons/csv/CSVFormat.isLineBreak:(C)Z\n-    #4 = Class              #407          // org/apache/commons/csv/CSVFormat\n-    #5 = Methodref          #4.#408       // org/apache/commons/csv/CSVFormat.\"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n-    #6 = Methodref          #190.#409     // org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-    #7 = Methodref          #190.#410     // org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n-    #8 = Methodref          #186.#411     // java/lang/Object.\"<init>\":()V\n-    #9 = Fieldref           #4.#412       // org/apache/commons/csv/CSVFormat.delimiter:C\n-   #10 = Fieldref           #4.#413       // org/apache/commons/csv/CSVFormat.quoteCharacter:Ljava/lang/Character;\n-   #11 = Fieldref           #4.#414       // org/apache/commons/csv/CSVFormat.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-   #12 = Fieldref           #4.#415       // org/apache/commons/csv/CSVFormat.commentMarker:Ljava/lang/Character;\n-   #13 = Fieldref           #4.#416       // org/apache/commons/csv/CSVFormat.escapeCharacter:Ljava/lang/Character;\n-   #14 = Fieldref           #4.#417       // org/apache/commons/csv/CSVFormat.ignoreSurroundingSpaces:Z\n-   #15 = Fieldref           #4.#418       // org/apache/commons/csv/CSVFormat.allowMissingColumnNames:Z\n-   #16 = Fieldref           #4.#419       // org/apache/commons/csv/CSVFormat.ignoreEmptyLines:Z\n-   #17 = Fieldref           #4.#420       // org/apache/commons/csv/CSVFormat.recordSeparator:Ljava/lang/String;\n-   #18 = Fieldref           #4.#421       // org/apache/commons/csv/CSVFormat.nullString:Ljava/lang/String;\n-   #19 = Methodref          #4.#422       // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-   #20 = Fieldref           #4.#423       // org/apache/commons/csv/CSVFormat.headerComments:[Ljava/lang/String;\n-   #21 = Methodref          #424.#425     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-   #22 = Class              #216          // \"[Ljava/lang/String;\"\n-   #23 = Fieldref           #4.#426       // org/apache/commons/csv/CSVFormat.header:[Ljava/lang/String;\n-   #24 = Fieldref           #4.#427       // org/apache/commons/csv/CSVFormat.skipHeaderRecord:Z\n-   #25 = Fieldref           #4.#428       // org/apache/commons/csv/CSVFormat.ignoreHeaderCase:Z\n-   #26 = Fieldref           #4.#429       // org/apache/commons/csv/CSVFormat.trailingDelimiter:Z\n-   #27 = Fieldref           #4.#430       // org/apache/commons/csv/CSVFormat.trim:Z\n-   #28 = Fieldref           #4.#431       // org/apache/commons/csv/CSVFormat.autoFlush:Z\n-   #29 = Methodref          #4.#432       // org/apache/commons/csv/CSVFormat.validate:()V\n-   #30 = Methodref          #186.#433     // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #31 = Methodref          #251.#434     // java/lang/Character.equals:(Ljava/lang/Object;)Z\n-   #32 = Methodref          #117.#434     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #33 = Methodref          #435.#436     // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-   #34 = Class              #437          // java/io/StringWriter\n-   #35 = Methodref          #34.#411      // java/io/StringWriter.\"<init>\":()V\n-   #36 = Class              #438          // org/apache/commons/csv/CSVPrinter\n-   #37 = Methodref          #36.#439      // org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n-   #38 = Methodref          #36.#440      // org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n-   #39 = Methodref          #34.#441      // java/io/StringWriter.toString:()Ljava/lang/String;\n-   #40 = Methodref          #117.#442     // java/lang/String.trim:()Ljava/lang/String;\n-   #41 = Methodref          #36.#443      // org/apache/commons/csv/CSVPrinter.close:()V\n-   #42 = Class              #444          // java/lang/Throwable\n-   #43 = Methodref          #42.#445      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #44 = Class              #446          // java/io/IOException\n-   #45 = Class              #447          // java/lang/IllegalStateException\n-   #46 = Methodref          #45.#448      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #47 = Methodref          #449.#425     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-   #48 = Methodref          #450.#425     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-   #49 = Methodref          #252.#451     // org/apache/commons/csv/QuoteMode.hashCode:()I\n-   #50 = Methodref          #251.#451     // java/lang/Character.hashCode:()I\n-   #51 = Methodref          #117.#451     // java/lang/String.hashCode:()I\n-   #52 = Methodref          #435.#452     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n-   #53 = Class              #453          // org/apache/commons/csv/CSVParser\n-   #54 = Methodref          #53.#454      // org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-   #55 = Class              #455          // java/io/OutputStreamWriter\n-   #56 = Class              #456          // java/io/FileOutputStream\n-   #57 = Methodref          #56.#457      // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-   #58 = Methodref          #55.#458      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #59 = String             #459          //\n-   #60 = Fieldref           #252.#460     // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n-   #61 = Class              #461          // java/lang/StringBuilder\n-   #62 = Methodref          #61.#411      // java/lang/StringBuilder.\"<init>\":()V\n-   #63 = Methodref          #61.#462      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #64 = Methodref          #61.#463      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #65 = Methodref          #61.#441      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #66 = Class              #464          // java/lang/CharSequence\n-   #67 = Methodref          #186.#441     // java/lang/Object.toString:()Ljava/lang/String;\n-   #68 = Methodref          #4.#465       // org/apache/commons/csv/CSVFormat.getTrim:()Z\n-   #69 = Methodref          #4.#466       // org/apache/commons/csv/CSVFormat.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-   #70 = InterfaceMethodref #66.#467      // java/lang/CharSequence.length:()I\n-   #71 = Methodref          #4.#468       // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n-   #72 = Methodref          #4.#469       // org/apache/commons/csv/CSVFormat.getDelimiter:()C\n-   #73 = InterfaceMethodref #328.#470     // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-   #74 = InterfaceMethodref #328.#471     // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #75 = Methodref          #4.#472       // org/apache/commons/csv/CSVFormat.isQuoteCharacterSet:()Z\n-   #76 = Methodref          #4.#473       // org/apache/commons/csv/CSVFormat.printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n-   #77 = Methodref          #4.#474       // org/apache/commons/csv/CSVFormat.isEscapeCharacterSet:()Z\n-   #78 = Methodref          #4.#475       // org/apache/commons/csv/CSVFormat.printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n-   #79 = InterfaceMethodref #328.#476     // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-   #80 = Class              #477          // java/nio/file/OpenOption\n-   #81 = Methodref          #478.#479     // java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-   #82 = Methodref          #4.#480       // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-   #83 = Methodref          #4.#481       // org/apache/commons/csv/CSVFormat.getEscapeCharacter:()Ljava/lang/Character;\n-   #84 = InterfaceMethodref #66.#482      // java/lang/CharSequence.charAt:(I)C\n-   #85 = Methodref          #4.#483       // org/apache/commons/csv/CSVFormat.getQuoteCharacter:()Ljava/lang/Character;\n-   #86 = Methodref          #4.#484       // org/apache/commons/csv/CSVFormat.getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n-   #87 = Fieldref           #252.#485     // org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-   #88 = Fieldref           #188.#486     // org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n-   #89 = Methodref          #252.#487     // org/apache/commons/csv/QuoteMode.ordinal:()I\n-   #90 = Class              #488          // java/lang/Number\n-   #91 = String             #489          // Unexpected Quote value:\n-   #92 = Methodref          #45.#490      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #93 = Fieldref           #491.#492     // java/lang/System.out:Ljava/io/PrintStream;\n-   #94 = Methodref          #4.#493       // org/apache/commons/csv/CSVFormat.getTrailingDelimiter:()Z\n-   #95 = Methodref          #4.#494       // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-   #96 = Methodref          #4.#495       // org/apache/commons/csv/CSVFormat.println:(Ljava/lang/Appendable;)V\n-   #97 = String             #496          // Delimiter=<\n-   #98 = Methodref          #61.#497      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #99 = String             #498          // Escape=<\n-  #100 = String             #499          // QuoteChar=<\n-  #101 = Methodref          #4.#500       // org/apache/commons/csv/CSVFormat.isCommentMarkerSet:()Z\n-  #102 = String             #501          // CommentStart=<\n-  #103 = Methodref          #4.#502       // org/apache/commons/csv/CSVFormat.isNullStringSet:()Z\n-  #104 = String             #503          // NullString=<\n-  #105 = String             #504          // RecordSeparator=<\n-  #106 = Methodref          #4.#505       // org/apache/commons/csv/CSVFormat.getIgnoreEmptyLines:()Z\n-  #107 = String             #506          //  EmptyLines:ignored\n-  #108 = Methodref          #4.#507       // org/apache/commons/csv/CSVFormat.getIgnoreSurroundingSpaces:()Z\n-  #109 = String             #508          //  SurroundingSpaces:ignored\n-  #110 = Methodref          #4.#509       // org/apache/commons/csv/CSVFormat.getIgnoreHeaderCase:()Z\n-  #111 = String             #510          //  IgnoreHeaderCase:ignored\n-  #112 = String             #511          //  SkipHeaderRecord:\n-  #113 = Methodref          #61.#512      // java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n-  #114 = String             #513          // HeaderComments:\n-  #115 = Methodref          #435.#514     // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-  #116 = String             #515          // Header:\n-  #117 = Class              #516          // java/lang/String\n-  #118 = InterfaceMethodref #66.#517      // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n-  #119 = Class              #518          // java/lang/IllegalArgumentException\n-  #120 = String             #519          // The delimiter cannot be a line break\n-  #121 = Methodref          #119.#490     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #122 = String             #520          // The quoteChar character and the delimiter cannot be the same (\\'\n-  #123 = String             #521          // \\')\n-  #124 = String             #522          // The escape character and the delimiter cannot be the same (\\'\n-  #125 = String             #523          // The comment start character and the delimiter cannot be the same (\\'\n-  #126 = String             #524          // The comment start character and the quoteChar cannot be the same (\\'\n-  #127 = String             #525          // The comment start and the escape character cannot be the same (\\'\n-  #128 = Fieldref           #252.#526     // org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n-  #129 = String             #527          // No quotes mode set but no escape character is set\n-  #130 = Class              #528          // java/util/HashSet\n-  #131 = Methodref          #130.#411     // java/util/HashSet.\"<init>\":()V\n-  #132 = InterfaceMethodref #355.#529     // java/util/Set.add:(Ljava/lang/Object;)Z\n-  #133 = String             #530          // The header contains a duplicate entry: \\'\n-  #134 = String             #531          // \\' in\n-  #135 = Methodref          #4.#532       // org/apache/commons/csv/CSVFormat.withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #136 = Methodref          #251.#533     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-  #137 = Methodref          #4.#534       // org/apache/commons/csv/CSVFormat.withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #138 = Methodref          #4.#535       // org/apache/commons/csv/CSVFormat.isLineBreak:(Ljava/lang/Character;)Z\n-  #139 = String             #536          // The comment start marker character cannot be a line break\n-  #140 = Methodref          #4.#537       // org/apache/commons/csv/CSVFormat.withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #141 = String             #538          // The escape character cannot be a line break\n-  #142 = Methodref          #4.#539       // org/apache/commons/csv/CSVFormat.withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #143 = Methodref          #4.#540       // org/apache/commons/csv/CSVFormat.withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n-  #144 = Methodref          #541.#542     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-  #145 = Class              #368          // \"[Ljava/lang/Enum;\"\n-  #146 = Methodref          #543.#544     // java/lang/Enum.name:()Ljava/lang/String;\n-  #147 = InterfaceMethodref #378.#545     // java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n-  #148 = Methodref          #4.#546       // org/apache/commons/csv/CSVFormat.withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n-  #149 = InterfaceMethodref #379.#547     // java/sql/ResultSetMetaData.getColumnCount:()I\n-  #150 = InterfaceMethodref #379.#548     // java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n-  #151 = Methodref          #4.#549       // org/apache/commons/csv/CSVFormat.withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #152 = Methodref          #4.#550       // org/apache/commons/csv/CSVFormat.withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #153 = Methodref          #4.#551       // org/apache/commons/csv/CSVFormat.withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #154 = Methodref          #4.#552       // org/apache/commons/csv/CSVFormat.withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #155 = String             #553          // The quoteChar cannot be a line break\n-  #156 = Methodref          #117.#554     // java/lang/String.valueOf:(C)Ljava/lang/String;\n-  #157 = Methodref          #4.#555       // org/apache/commons/csv/CSVFormat.withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #158 = Methodref          #4.#556       // org/apache/commons/csv/CSVFormat.withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #159 = String             #557          // line.separator\n-  #160 = Methodref          #491.#558     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #161 = Methodref          #4.#559       // org/apache/commons/csv/CSVFormat.withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #162 = Methodref          #4.#560       // org/apache/commons/csv/CSVFormat.withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #163 = Fieldref           #1.#561       // org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-  #164 = String             #562          // \\r\\n\n-  #165 = Fieldref           #4.#563       // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #166 = Methodref          #4.#564       // org/apache/commons/csv/CSVFormat.withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n-  #167 = Fieldref           #4.#565       // org/apache/commons/csv/CSVFormat.EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-  #168 = Methodref          #4.#566       // org/apache/commons/csv/CSVFormat.withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #169 = Methodref          #4.#567       // org/apache/commons/csv/CSVFormat.withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #170 = Methodref          #4.#568       // org/apache/commons/csv/CSVFormat.withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #171 = Fieldref           #4.#569       // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-  #172 = Fieldref           #4.#570       // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #173 = String             #571          // \\\\N\n-  #174 = Methodref          #4.#572       // org/apache/commons/csv/CSVFormat.withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #175 = Fieldref           #252.#573     // org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-  #176 = Methodref          #4.#574       // org/apache/commons/csv/CSVFormat.withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-  #177 = Fieldref           #4.#575       // org/apache/commons/csv/CSVFormat.MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-  #178 = Methodref          #4.#576       // org/apache/commons/csv/CSVFormat.withTrim:()Lorg/apache/commons/csv/CSVFormat;\n-  #179 = Methodref          #4.#577       // org/apache/commons/csv/CSVFormat.withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n-  #180 = Fieldref           #4.#578       // org/apache/commons/csv/CSVFormat.ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-  #181 = Fieldref           #4.#579       // org/apache/commons/csv/CSVFormat.POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #182 = Fieldref           #4.#580       // org/apache/commons/csv/CSVFormat.POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-  #183 = Fieldref           #4.#581       // org/apache/commons/csv/CSVFormat.RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-  #184 = Methodref          #4.#582       // org/apache/commons/csv/CSVFormat.withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n-  #185 = Fieldref           #4.#583       // org/apache/commons/csv/CSVFormat.TDF:Lorg/apache/commons/csv/CSVFormat;\n-  #186 = Class              #584          // java/lang/Object\n-  #187 = Class              #585          // java/io/Serializable\n-  #188 = Class              #586          // org/apache/commons/csv/CSVFormat$1\n-  #189 = Utf8               InnerClasses\n-  #190 = Class              #587          // org/apache/commons/csv/CSVFormat$Predefined\n-  #191 = Utf8               Predefined\n-  #192 = Utf8               DEFAULT\n-  #193 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n-  #194 = Utf8               EXCEL\n-  #195 = Utf8               INFORMIX_UNLOAD\n-  #196 = Utf8               INFORMIX_UNLOAD_CSV\n-  #197 = Utf8               MYSQL\n-  #198 = Utf8               ORACLE\n-  #199 = Utf8               POSTGRESQL_CSV\n-  #200 = Utf8               POSTGRESQL_TEXT\n-  #201 = Utf8               RFC4180\n-  #202 = Utf8               serialVersionUID\n-  #203 = Utf8               J\n-  #204 = Utf8               ConstantValue\n-  #205 = Long               1l\n-  #207 = Utf8               TDF\n-  #208 = Utf8               allowMissingColumnNames\n-  #209 = Utf8               Z\n-  #210 = Utf8               commentMarker\n-  #211 = Utf8               Ljava/lang/Character;\n-  #212 = Utf8               delimiter\n-  #213 = Utf8               C\n-  #214 = Utf8               escapeCharacter\n-  #215 = Utf8               header\n-  #216 = Utf8               [Ljava/lang/String;\n-  #217 = Utf8               headerComments\n-  #218 = Utf8               ignoreEmptyLines\n-  #219 = Utf8               ignoreHeaderCase\n-  #220 = Utf8               ignoreSurroundingSpaces\n-  #221 = Utf8               nullString\n-  #222 = Utf8               Ljava/lang/String;\n-  #223 = Utf8               quoteCharacter\n-  #224 = Utf8               quoteMode\n-  #225 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n-  #226 = Utf8               recordSeparator\n-  #227 = Utf8               skipHeaderRecord\n-  #228 = Utf8               trailingDelimiter\n-  #229 = Utf8               trim\n-  #230 = Utf8               autoFlush\n-  #231 = Utf8               isLineBreak\n-  #232 = Utf8               (C)Z\n-  #233 = Utf8               Code\n-  #234 = Utf8               LineNumberTable\n-  #235 = Utf8               LocalVariableTable\n-  #236 = Utf8               c\n-  #237 = Utf8               StackMapTable\n-  #238 = Utf8               (Ljava/lang/Character;)Z\n-  #239 = Utf8               newFormat\n-  #240 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n-  #241 = Utf8               valueOf\n-  #242 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #243 = Utf8               format\n-  #244 = Utf8               <init>\n-  #245 = Utf8               (CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n-  #246 = Utf8               this\n-  #247 = Utf8               quoteChar\n-  #248 = Utf8               commentStart\n-  #249 = Utf8               escape\n-  #250 = Utf8               [Ljava/lang/Object;\n-  #251 = Class              #588          // java/lang/Character\n-  #252 = Class              #589          // org/apache/commons/csv/QuoteMode\n-  #253 = Class              #250          // \"[Ljava/lang/Object;\"\n-  #254 = Utf8               equals\n-  #255 = Utf8               (Ljava/lang/Object;)Z\n-  #256 = Utf8               obj\n-  #257 = Utf8               Ljava/lang/Object;\n-  #258 = Utf8               other\n-  #259 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n-  #260 = Utf8               csvPrinter\n-  #261 = Utf8               Lorg/apache/commons/csv/CSVPrinter;\n-  #262 = Utf8               e\n-  #263 = Utf8               Ljava/io/IOException;\n-  #264 = Utf8               values\n-  #265 = Utf8               out\n-  #266 = Utf8               Ljava/io/StringWriter;\n-  #267 = Utf8               getAllowMissingColumnNames\n-  #268 = Utf8               ()Z\n-  #269 = Utf8               getAutoFlush\n-  #270 = Utf8               getCommentMarker\n-  #271 = Utf8               ()Ljava/lang/Character;\n-  #272 = Utf8               getDelimiter\n-  #273 = Utf8               ()C\n-  #274 = Utf8               getEscapeCharacter\n-  #275 = Utf8               getHeader\n-  #276 = Utf8               ()[Ljava/lang/String;\n-  #277 = Utf8               getHeaderComments\n-  #278 = Utf8               getIgnoreEmptyLines\n-  #279 = Utf8               getIgnoreHeaderCase\n-  #280 = Utf8               getIgnoreSurroundingSpaces\n-  #281 = Utf8               getNullString\n-  #282 = Utf8               ()Ljava/lang/String;\n-  #283 = Utf8               getQuoteCharacter\n-  #284 = Utf8               getQuoteMode\n-  #285 = Utf8               ()Lorg/apache/commons/csv/QuoteMode;\n-  #286 = Utf8               getRecordSeparator\n-  #287 = Utf8               getSkipHeaderRecord\n-  #288 = Utf8               getTrailingDelimiter\n-  #289 = Utf8               getTrim\n-  #290 = Utf8               hashCode\n-  #291 = Utf8               ()I\n-  #292 = Utf8               prime\n-  #293 = Utf8               I\n-  #294 = Utf8               result\n-  #295 = Utf8               isCommentMarkerSet\n-  #296 = Utf8               isEscapeCharacterSet\n-  #297 = Utf8               isNullStringSet\n-  #298 = Utf8               isQuoteCharacterSet\n-  #299 = Utf8               parse\n-  #300 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-  #301 = Utf8               in\n-  #302 = Utf8               Ljava/io/Reader;\n-  #303 = Utf8               Exceptions\n-  #304 = Utf8               print\n-  #305 = Utf8               (Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-  #306 = Utf8               Ljava/lang/Appendable;\n-  #307 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n-  #308 = Utf8               Ljava/io/File;\n-  #309 = Utf8               charset\n-  #310 = Utf8               Ljava/nio/charset/Charset;\n-  #311 = Utf8               (Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-  #312 = Utf8               charSequence\n-  #313 = Utf8               Ljava/lang/CharSequence;\n-  #314 = Utf8               value\n-  #315 = Utf8               newRecord\n-  #316 = Utf8               (Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n-  #317 = Utf8               object\n-  #318 = Utf8               offset\n-  #319 = Utf8               len\n-  #320 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n-  #321 = Utf8               Ljava/nio/file/Path;\n-  #322 = Utf8               printAndEscape\n-  #323 = Utf8               (Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n-  #324 = Utf8               start\n-  #325 = Utf8               pos\n-  #326 = Utf8               end\n-  #327 = Utf8               delim\n-  #328 = Class              #590          // java/lang/Appendable\n-  #329 = Utf8               printAndQuote\n-  #330 = Utf8               quote\n-  #331 = Utf8               delimChar\n-  #332 = Utf8               quoteModePolicy\n-  #333 = Utf8               printer\n-  #334 = Utf8               ()Lorg/apache/commons/csv/CSVPrinter;\n-  #335 = Utf8               println\n-  #336 = Utf8               (Ljava/lang/Appendable;)V\n-  #337 = Utf8               printRecord\n-  #338 = Utf8               (Ljava/lang/Appendable;[Ljava/lang/Object;)V\n-  #339 = Utf8               i\n-  #340 = Utf8               toString\n-  #341 = Utf8               sb\n-  #342 = Utf8               Ljava/lang/StringBuilder;\n-  #343 = Utf8               toStringArray\n-  #344 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n-  #345 = Utf8               strings\n-  #346 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #347 = Utf8               count\n-  #348 = Utf8               validate\n-  #349 = Utf8               ()V\n-  #350 = Utf8               hdr\n-  #351 = Utf8               dupCheck\n-  #352 = Utf8               Ljava/util/Set;\n-  #353 = Utf8               LocalVariableTypeTable\n-  #354 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n-  #355 = Class              #591          // java/util/Set\n-  #356 = Utf8               withAllowMissingColumnNames\n-  #357 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n-  #358 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat;\n-  #359 = Utf8               withAutoFlush\n-  #360 = Utf8               withCommentMarker\n-  #361 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #362 = Utf8               withDelimiter\n-  #363 = Utf8               withEscape\n-  #364 = Utf8               withFirstRecordAsHeader\n-  #365 = Utf8               withHeader\n-  #366 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;\n-  #367 = Utf8               enumValues\n-  #368 = Utf8               [Ljava/lang/Enum;\n-  #369 = Utf8               headerEnum\n-  #370 = Utf8               Ljava/lang/Class;\n-  #371 = Utf8               [Ljava/lang/Enum<*>;\n-  #372 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n-  #373 = Utf8               Signature\n-  #374 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n-  #375 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n-  #376 = Utf8               resultSet\n-  #377 = Utf8               Ljava/sql/ResultSet;\n-  #378 = Class              #592          // java/sql/ResultSet\n-  #379 = Class              #593          // java/sql/ResultSetMetaData\n-  #380 = Class              #594          // java/sql/SQLException\n-  #381 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n-  #382 = Utf8               columnCount\n-  #383 = Utf8               metaData\n-  #384 = Utf8               Ljava/sql/ResultSetMetaData;\n-  #385 = Utf8               labels\n-  #386 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #387 = Utf8               withHeaderComments\n-  #388 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;\n-  #389 = Utf8               withIgnoreEmptyLines\n-  #390 = Utf8               withIgnoreHeaderCase\n-  #391 = Utf8               withIgnoreSurroundingSpaces\n-  #392 = Utf8               withNullString\n-  #393 = Utf8               withQuote\n-  #394 = Utf8               withQuoteMode\n-  #395 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-  #396 = Utf8               withRecordSeparator\n-  #397 = Utf8               withSkipHeaderRecord\n-  #398 = Utf8               withSystemRecordSeparator\n-  #399 = Utf8               withTrailingDelimiter\n-  #400 = Utf8               withTrim\n-  #401 = Utf8               <clinit>\n-  #402 = Utf8               SourceFile\n-  #403 = Utf8               CSVFormat.java\n-  #404 = Utf8               org/apache/commons/csv/Constants\n-  #405 = NameAndType        #595:#273     // charValue:()C\n-  #406 = NameAndType        #231:#232     // isLineBreak:(C)Z\n-  #407 = Utf8               org/apache/commons/csv/CSVFormat\n-  #408 = NameAndType        #244:#245     // \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n-  #409 = NameAndType        #241:#596     // valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-  #410 = NameAndType        #597:#357     // getFormat:()Lorg/apache/commons/csv/CSVFormat;\n-  #411 = NameAndType        #244:#349     // \"<init>\":()V\n-  #412 = NameAndType        #212:#213     // delimiter:C\n-  #413 = NameAndType        #223:#211     // quoteCharacter:Ljava/lang/Character;\n-  #414 = NameAndType        #224:#225     // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-  #415 = NameAndType        #210:#211     // commentMarker:Ljava/lang/Character;\n-  #416 = NameAndType        #214:#211     // escapeCharacter:Ljava/lang/Character;\n-  #417 = NameAndType        #220:#209     // ignoreSurroundingSpaces:Z\n-  #418 = NameAndType        #208:#209     // allowMissingColumnNames:Z\n-  #419 = NameAndType        #218:#209     // ignoreEmptyLines:Z\n-  #420 = NameAndType        #226:#222     // recordSeparator:Ljava/lang/String;\n-  #421 = NameAndType        #221:#222     // nullString:Ljava/lang/String;\n-  #422 = NameAndType        #343:#344     // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-  #423 = NameAndType        #217:#216     // headerComments:[Ljava/lang/String;\n-  #424 = Class              #216          // \"[Ljava/lang/String;\"\n-  #425 = NameAndType        #598:#599     // clone:()Ljava/lang/Object;\n-  #426 = NameAndType        #215:#216     // header:[Ljava/lang/String;\n-  #427 = NameAndType        #227:#209     // skipHeaderRecord:Z\n-  #428 = NameAndType        #219:#209     // ignoreHeaderCase:Z\n-  #429 = NameAndType        #228:#209     // trailingDelimiter:Z\n-  #430 = NameAndType        #229:#209     // trim:Z\n-  #431 = NameAndType        #230:#209     // autoFlush:Z\n-  #432 = NameAndType        #348:#349     // validate:()V\n-  #433 = NameAndType        #600:#601     // getClass:()Ljava/lang/Class;\n-  #434 = NameAndType        #254:#255     // equals:(Ljava/lang/Object;)Z\n-  #435 = Class              #602          // java/util/Arrays\n-  #436 = NameAndType        #254:#603     // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #437 = Utf8               java/io/StringWriter\n-  #438 = Utf8               org/apache/commons/csv/CSVPrinter\n-  #439 = NameAndType        #244:#604     // \"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n-  #440 = NameAndType        #337:#605     // printRecord:([Ljava/lang/Object;)V\n-  #441 = NameAndType        #340:#282     // toString:()Ljava/lang/String;\n-  #442 = NameAndType        #229:#282     // trim:()Ljava/lang/String;\n-  #443 = NameAndType        #606:#349     // close:()V\n-  #444 = Utf8               java/lang/Throwable\n-  #445 = NameAndType        #607:#608     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #446 = Utf8               java/io/IOException\n-  #447 = Utf8               java/lang/IllegalStateException\n-  #448 = NameAndType        #244:#608     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #449 = Class              #216          // \"[Ljava/lang/String;\"\n-  #450 = Class              #216          // \"[Ljava/lang/String;\"\n-  #451 = NameAndType        #290:#291     // hashCode:()I\n-  #452 = NameAndType        #290:#609     // hashCode:([Ljava/lang/Object;)I\n-  #453 = Utf8               org/apache/commons/csv/CSVParser\n-  #454 = NameAndType        #244:#610     // \"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-  #455 = Utf8               java/io/OutputStreamWriter\n-  #456 = Utf8               java/io/FileOutputStream\n-  #457 = NameAndType        #244:#611     // \"<init>\":(Ljava/io/File;)V\n-  #458 = NameAndType        #244:#612     // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #459 = Utf8\n-  #460 = NameAndType        #613:#225     // ALL:Lorg/apache/commons/csv/QuoteMode;\n-  #461 = Utf8               java/lang/StringBuilder\n-  #462 = NameAndType        #614:#615     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #463 = NameAndType        #614:#616     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #464 = Utf8               java/lang/CharSequence\n-  #465 = NameAndType        #289:#268     // getTrim:()Z\n-  #466 = NameAndType        #229:#346     // trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #467 = NameAndType        #617:#291     // length:()I\n-  #468 = NameAndType        #304:#316     // print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n-  #469 = NameAndType        #272:#273     // getDelimiter:()C\n-  #470 = NameAndType        #614:#618     // append:(C)Ljava/lang/Appendable;\n-  #471 = NameAndType        #614:#619     // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #472 = NameAndType        #298:#268     // isQuoteCharacterSet:()Z\n-  #473 = NameAndType        #329:#316     // printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n-  #474 = NameAndType        #296:#268     // isEscapeCharacterSet:()Z\n-  #475 = NameAndType        #322:#323     // printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n-  #476 = NameAndType        #614:#620     // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #477 = Utf8               java/nio/file/OpenOption\n-  #478 = Class              #621          // java/nio/file/Files\n-  #479 = NameAndType        #622:#623     // newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-  #480 = NameAndType        #304:#305     // print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-  #481 = NameAndType        #274:#271     // getEscapeCharacter:()Ljava/lang/Character;\n-  #482 = NameAndType        #624:#625     // charAt:(I)C\n-  #483 = NameAndType        #283:#271     // getQuoteCharacter:()Ljava/lang/Character;\n-  #484 = NameAndType        #284:#285     // getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n-  #485 = NameAndType        #626:#225     // MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-  #486 = NameAndType        #627:#628     // $SwitchMap$org$apache$commons$csv$QuoteMode:[I\n-  #487 = NameAndType        #629:#291     // ordinal:()I\n-  #488 = Utf8               java/lang/Number\n-  #489 = Utf8               Unexpected Quote value:\n-  #490 = NameAndType        #244:#630     // \"<init>\":(Ljava/lang/String;)V\n-  #491 = Class              #631          // java/lang/System\n-  #492 = NameAndType        #265:#632     // out:Ljava/io/PrintStream;\n-  #493 = NameAndType        #288:#268     // getTrailingDelimiter:()Z\n-  #494 = NameAndType        #304:#311     // print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-  #495 = NameAndType        #335:#336     // println:(Ljava/lang/Appendable;)V\n-  #496 = Utf8               Delimiter=<\n-  #497 = NameAndType        #614:#633     // append:(C)Ljava/lang/StringBuilder;\n-  #498 = Utf8               Escape=<\n-  #499 = Utf8               QuoteChar=<\n-  #500 = NameAndType        #295:#268     // isCommentMarkerSet:()Z\n-  #501 = Utf8               CommentStart=<\n-  #502 = NameAndType        #297:#268     // isNullStringSet:()Z\n-  #503 = Utf8               NullString=<\n-  #504 = Utf8               RecordSeparator=<\n-  #505 = NameAndType        #278:#268     // getIgnoreEmptyLines:()Z\n-  #506 = Utf8                EmptyLines:ignored\n-  #507 = NameAndType        #280:#268     // getIgnoreSurroundingSpaces:()Z\n-  #508 = Utf8                SurroundingSpaces:ignored\n-  #509 = NameAndType        #279:#268     // getIgnoreHeaderCase:()Z\n-  #510 = Utf8                IgnoreHeaderCase:ignored\n-  #511 = Utf8                SkipHeaderRecord:\n-  #512 = NameAndType        #614:#634     // append:(Z)Ljava/lang/StringBuilder;\n-  #513 = Utf8               HeaderComments:\n-  #514 = NameAndType        #340:#259     // toString:([Ljava/lang/Object;)Ljava/lang/String;\n-  #515 = Utf8               Header:\n-  #516 = Utf8               java/lang/String\n-  #517 = NameAndType        #635:#636     // subSequence:(II)Ljava/lang/CharSequence;\n-  #518 = Utf8               java/lang/IllegalArgumentException\n-  #519 = Utf8               The delimiter cannot be a line break\n-  #520 = Utf8               The quoteChar character and the delimiter cannot be the same (\\'\n-  #521 = Utf8               \\')\n-  #522 = Utf8               The escape character and the delimiter cannot be the same (\\'\n-  #523 = Utf8               The comment start character and the delimiter cannot be the same (\\'\n-  #524 = Utf8               The comment start character and the quoteChar cannot be the same (\\'\n-  #525 = Utf8               The comment start and the escape character cannot be the same (\\'\n-  #526 = NameAndType        #637:#225     // NONE:Lorg/apache/commons/csv/QuoteMode;\n-  #527 = Utf8               No quotes mode set but no escape character is set\n-  #528 = Utf8               java/util/HashSet\n-  #529 = NameAndType        #638:#255     // add:(Ljava/lang/Object;)Z\n-  #530 = Utf8               The header contains a duplicate entry: \\'\n-  #531 = Utf8               \\' in\n-  #532 = NameAndType        #356:#358     // withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #533 = NameAndType        #241:#639     // valueOf:(C)Ljava/lang/Character;\n-  #534 = NameAndType        #360:#361     // withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #535 = NameAndType        #231:#238     // isLineBreak:(Ljava/lang/Character;)Z\n-  #536 = Utf8               The comment start marker character cannot be a line break\n-  #537 = NameAndType        #363:#361     // withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #538 = Utf8               The escape character cannot be a line break\n-  #539 = NameAndType        #365:#386     // withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #540 = NameAndType        #397:#357     // withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n-  #541 = Class              #640          // java/lang/Class\n-  #542 = NameAndType        #641:#642     // getEnumConstants:()[Ljava/lang/Object;\n-  #543 = Class              #643          // java/lang/Enum\n-  #544 = NameAndType        #644:#282     // name:()Ljava/lang/String;\n-  #545 = NameAndType        #645:#646     // getMetaData:()Ljava/sql/ResultSetMetaData;\n-  #546 = NameAndType        #365:#381     // withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n-  #547 = NameAndType        #647:#291     // getColumnCount:()I\n-  #548 = NameAndType        #648:#649     // getColumnLabel:(I)Ljava/lang/String;\n-  #549 = NameAndType        #389:#358     // withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #550 = NameAndType        #390:#358     // withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #551 = NameAndType        #391:#358     // withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #552 = NameAndType        #393:#361     // withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #553 = Utf8               The quoteChar cannot be a line break\n-  #554 = NameAndType        #241:#650     // valueOf:(C)Ljava/lang/String;\n-  #555 = NameAndType        #396:#242     // withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #556 = NameAndType        #397:#358     // withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #557 = Utf8               line.separator\n-  #558 = NameAndType        #651:#652     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #559 = NameAndType        #399:#358     // withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #560 = NameAndType        #400:#358     // withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #561 = NameAndType        #653:#211     // DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-  #562 = Utf8               \\r\\n\n-  #563 = NameAndType        #192:#193     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #564 = NameAndType        #356:#357     // withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n-  #565 = NameAndType        #194:#193     // EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-  #566 = NameAndType        #362:#240     // withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #567 = NameAndType        #363:#240     // withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #568 = NameAndType        #396:#240     // withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #569 = NameAndType        #195:#193     // INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-  #570 = NameAndType        #196:#193     // INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #571 = Utf8               \\\\N\n-  #572 = NameAndType        #392:#242     // withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #573 = NameAndType        #654:#225     // ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-  #574 = NameAndType        #394:#395     // withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-  #575 = NameAndType        #197:#193     // MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-  #576 = NameAndType        #400:#357     // withTrim:()Lorg/apache/commons/csv/CSVFormat;\n-  #577 = NameAndType        #398:#357     // withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n-  #578 = NameAndType        #198:#193     // ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-  #579 = NameAndType        #199:#193     // POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #580 = NameAndType        #200:#193     // POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-  #581 = NameAndType        #201:#193     // RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-  #582 = NameAndType        #391:#357     // withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n-  #583 = NameAndType        #207:#193     // TDF:Lorg/apache/commons/csv/CSVFormat;\n-  #584 = Utf8               java/lang/Object\n-  #585 = Utf8               java/io/Serializable\n-  #586 = Utf8               org/apache/commons/csv/CSVFormat$1\n-  #587 = Utf8               org/apache/commons/csv/CSVFormat$Predefined\n-  #588 = Utf8               java/lang/Character\n-  #589 = Utf8               org/apache/commons/csv/QuoteMode\n-  #590 = Utf8               java/lang/Appendable\n-  #591 = Utf8               java/util/Set\n-  #592 = Utf8               java/sql/ResultSet\n-  #593 = Utf8               java/sql/ResultSetMetaData\n-  #594 = Utf8               java/sql/SQLException\n-  #595 = Utf8               charValue\n-  #596 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-  #597 = Utf8               getFormat\n-  #598 = Utf8               clone\n-  #599 = Utf8               ()Ljava/lang/Object;\n-  #600 = Utf8               getClass\n-  #601 = Utf8               ()Ljava/lang/Class;\n-  #602 = Utf8               java/util/Arrays\n-  #603 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #604 = Utf8               (Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n-  #605 = Utf8               ([Ljava/lang/Object;)V\n-  #606 = Utf8               close\n-  #607 = Utf8               addSuppressed\n-  #608 = Utf8               (Ljava/lang/Throwable;)V\n-  #609 = Utf8               ([Ljava/lang/Object;)I\n-  #610 = Utf8               (Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-  #611 = Utf8               (Ljava/io/File;)V\n-  #612 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #613 = Utf8               ALL\n-  #614 = Utf8               append\n-  #615 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #616 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #617 = Utf8               length\n-  #618 = Utf8               (C)Ljava/lang/Appendable;\n-  #619 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #620 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #621 = Utf8               java/nio/file/Files\n-  #622 = Utf8               newBufferedWriter\n-  #623 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-  #624 = Utf8               charAt\n-  #625 = Utf8               (I)C\n-  #626 = Utf8               MINIMAL\n-  #627 = Utf8               $SwitchMap$org$apache$commons$csv$QuoteMode\n-  #628 = Utf8               [I\n-  #629 = Utf8               ordinal\n-  #630 = Utf8               (Ljava/lang/String;)V\n-  #631 = Utf8               java/lang/System\n-  #632 = Utf8               Ljava/io/PrintStream;\n-  #633 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #634 = Utf8               (Z)Ljava/lang/StringBuilder;\n-  #635 = Utf8               subSequence\n-  #636 = Utf8               (II)Ljava/lang/CharSequence;\n-  #637 = Utf8               NONE\n-  #638 = Utf8               add\n-  #639 = Utf8               (C)Ljava/lang/Character;\n-  #640 = Utf8               java/lang/Class\n-  #641 = Utf8               getEnumConstants\n-  #642 = Utf8               ()[Ljava/lang/Object;\n-  #643 = Utf8               java/lang/Enum\n-  #644 = Utf8               name\n-  #645 = Utf8               getMetaData\n-  #646 = Utf8               ()Ljava/sql/ResultSetMetaData;\n-  #647 = Utf8               getColumnCount\n-  #648 = Utf8               getColumnLabel\n-  #649 = Utf8               (I)Ljava/lang/String;\n-  #650 = Utf8               (C)Ljava/lang/String;\n-  #651 = Utf8               getProperty\n-  #652 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #653 = Utf8               DOUBLE_QUOTE_CHAR\n-  #654 = Utf8               ALL_NON_NULL\n+    #1 = Class              #2            // org/apache/commons/csv/Constants\n+    #2 = Utf8               org/apache/commons/csv/Constants\n+    #3 = Methodref          #4.#5         // java/lang/Character.charValue:()C\n+    #4 = Class              #6            // java/lang/Character\n+    #5 = NameAndType        #7:#8         // charValue:()C\n+    #6 = Utf8               java/lang/Character\n+    #7 = Utf8               charValue\n+    #8 = Utf8               ()C\n+    #9 = Methodref          #10.#11       // org/apache/commons/csv/CSVFormat.isLineBreak:(C)Z\n+   #10 = Class              #12           // org/apache/commons/csv/CSVFormat\n+   #11 = NameAndType        #13:#14       // isLineBreak:(C)Z\n+   #12 = Utf8               org/apache/commons/csv/CSVFormat\n+   #13 = Utf8               isLineBreak\n+   #14 = Utf8               (C)Z\n+   #15 = Methodref          #10.#16       // org/apache/commons/csv/CSVFormat.\"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+   #16 = NameAndType        #17:#18       // \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+   #17 = Utf8               <init>\n+   #18 = Utf8               (CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+   #19 = Methodref          #20.#21       // org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+   #20 = Class              #22           // org/apache/commons/csv/CSVFormat$Predefined\n+   #21 = NameAndType        #23:#24       // valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+   #22 = Utf8               org/apache/commons/csv/CSVFormat$Predefined\n+   #23 = Utf8               valueOf\n+   #24 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+   #25 = Methodref          #20.#26       // org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n+   #26 = NameAndType        #27:#28       // getFormat:()Lorg/apache/commons/csv/CSVFormat;\n+   #27 = Utf8               getFormat\n+   #28 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n+   #29 = Methodref          #30.#31       // java/lang/Object.\"<init>\":()V\n+   #30 = Class              #32           // java/lang/Object\n+   #31 = NameAndType        #17:#33       // \"<init>\":()V\n+   #32 = Utf8               java/lang/Object\n+   #33 = Utf8               ()V\n+   #34 = Fieldref           #10.#35       // org/apache/commons/csv/CSVFormat.delimiter:C\n+   #35 = NameAndType        #36:#37       // delimiter:C\n+   #36 = Utf8               delimiter\n+   #37 = Utf8               C\n+   #38 = Fieldref           #10.#39       // org/apache/commons/csv/CSVFormat.quoteCharacter:Ljava/lang/Character;\n+   #39 = NameAndType        #40:#41       // quoteCharacter:Ljava/lang/Character;\n+   #40 = Utf8               quoteCharacter\n+   #41 = Utf8               Ljava/lang/Character;\n+   #42 = Fieldref           #10.#43       // org/apache/commons/csv/CSVFormat.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+   #43 = NameAndType        #44:#45       // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+   #44 = Utf8               quoteMode\n+   #45 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n+   #46 = Fieldref           #10.#47       // org/apache/commons/csv/CSVFormat.commentMarker:Ljava/lang/Character;\n+   #47 = NameAndType        #48:#41       // commentMarker:Ljava/lang/Character;\n+   #48 = Utf8               commentMarker\n+   #49 = Fieldref           #10.#50       // org/apache/commons/csv/CSVFormat.escapeCharacter:Ljava/lang/Character;\n+   #50 = NameAndType        #51:#41       // escapeCharacter:Ljava/lang/Character;\n+   #51 = Utf8               escapeCharacter\n+   #52 = Fieldref           #10.#53       // org/apache/commons/csv/CSVFormat.ignoreSurroundingSpaces:Z\n+   #53 = NameAndType        #54:#55       // ignoreSurroundingSpaces:Z\n+   #54 = Utf8               ignoreSurroundingSpaces\n+   #55 = Utf8               Z\n+   #56 = Fieldref           #10.#57       // org/apache/commons/csv/CSVFormat.allowMissingColumnNames:Z\n+   #57 = NameAndType        #58:#55       // allowMissingColumnNames:Z\n+   #58 = Utf8               allowMissingColumnNames\n+   #59 = Fieldref           #10.#60       // org/apache/commons/csv/CSVFormat.ignoreEmptyLines:Z\n+   #60 = NameAndType        #61:#55       // ignoreEmptyLines:Z\n+   #61 = Utf8               ignoreEmptyLines\n+   #62 = Fieldref           #10.#63       // org/apache/commons/csv/CSVFormat.recordSeparator:Ljava/lang/String;\n+   #63 = NameAndType        #64:#65       // recordSeparator:Ljava/lang/String;\n+   #64 = Utf8               recordSeparator\n+   #65 = Utf8               Ljava/lang/String;\n+   #66 = Fieldref           #10.#67       // org/apache/commons/csv/CSVFormat.nullString:Ljava/lang/String;\n+   #67 = NameAndType        #68:#65       // nullString:Ljava/lang/String;\n+   #68 = Utf8               nullString\n+   #69 = Methodref          #10.#70       // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+   #70 = NameAndType        #71:#72       // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+   #71 = Utf8               toStringArray\n+   #72 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n+   #73 = Fieldref           #10.#74       // org/apache/commons/csv/CSVFormat.headerComments:[Ljava/lang/String;\n+   #74 = NameAndType        #75:#76       // headerComments:[Ljava/lang/String;\n+   #75 = Utf8               headerComments\n+   #76 = Utf8               [Ljava/lang/String;\n+   #77 = Methodref          #78.#79       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+   #78 = Class              #76           // \"[Ljava/lang/String;\"\n+   #79 = NameAndType        #80:#81       // clone:()Ljava/lang/Object;\n+   #80 = Utf8               clone\n+   #81 = Utf8               ()Ljava/lang/Object;\n+   #82 = Fieldref           #10.#83       // org/apache/commons/csv/CSVFormat.header:[Ljava/lang/String;\n+   #83 = NameAndType        #84:#76       // header:[Ljava/lang/String;\n+   #84 = Utf8               header\n+   #85 = Fieldref           #10.#86       // org/apache/commons/csv/CSVFormat.skipHeaderRecord:Z\n+   #86 = NameAndType        #87:#55       // skipHeaderRecord:Z\n+   #87 = Utf8               skipHeaderRecord\n+   #88 = Fieldref           #10.#89       // org/apache/commons/csv/CSVFormat.ignoreHeaderCase:Z\n+   #89 = NameAndType        #90:#55       // ignoreHeaderCase:Z\n+   #90 = Utf8               ignoreHeaderCase\n+   #91 = Fieldref           #10.#92       // org/apache/commons/csv/CSVFormat.trailingDelimiter:Z\n+   #92 = NameAndType        #93:#55       // trailingDelimiter:Z\n+   #93 = Utf8               trailingDelimiter\n+   #94 = Fieldref           #10.#95       // org/apache/commons/csv/CSVFormat.trim:Z\n+   #95 = NameAndType        #96:#55       // trim:Z\n+   #96 = Utf8               trim\n+   #97 = Fieldref           #10.#98       // org/apache/commons/csv/CSVFormat.autoFlush:Z\n+   #98 = NameAndType        #99:#55       // autoFlush:Z\n+   #99 = Utf8               autoFlush\n+  #100 = Methodref          #10.#101      // org/apache/commons/csv/CSVFormat.validate:()V\n+  #101 = NameAndType        #102:#33      // validate:()V\n+  #102 = Utf8               validate\n+  #103 = Methodref          #30.#104      // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #104 = NameAndType        #105:#106     // getClass:()Ljava/lang/Class;\n+  #105 = Utf8               getClass\n+  #106 = Utf8               ()Ljava/lang/Class;\n+  #107 = Methodref          #4.#108       // java/lang/Character.equals:(Ljava/lang/Object;)Z\n+  #108 = NameAndType        #109:#110     // equals:(Ljava/lang/Object;)Z\n+  #109 = Utf8               equals\n+  #110 = Utf8               (Ljava/lang/Object;)Z\n+  #111 = Methodref          #112.#108     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #112 = Class              #113          // java/lang/String\n+  #113 = Utf8               java/lang/String\n+  #114 = Methodref          #115.#116     // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #115 = Class              #117          // java/util/Arrays\n+  #116 = NameAndType        #109:#118     // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #117 = Utf8               java/util/Arrays\n+  #118 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #119 = Class              #120          // java/io/StringWriter\n+  #120 = Utf8               java/io/StringWriter\n+  #121 = Methodref          #119.#31      // java/io/StringWriter.\"<init>\":()V\n+  #122 = Class              #123          // org/apache/commons/csv/CSVPrinter\n+  #123 = Utf8               org/apache/commons/csv/CSVPrinter\n+  #124 = Methodref          #122.#125     // org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+  #125 = NameAndType        #17:#126      // \"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+  #126 = Utf8               (Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+  #127 = Methodref          #122.#128     // org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n+  #128 = NameAndType        #129:#130     // printRecord:([Ljava/lang/Object;)V\n+  #129 = Utf8               printRecord\n+  #130 = Utf8               ([Ljava/lang/Object;)V\n+  #131 = Methodref          #119.#132     // java/io/StringWriter.toString:()Ljava/lang/String;\n+  #132 = NameAndType        #133:#134     // toString:()Ljava/lang/String;\n+  #133 = Utf8               toString\n+  #134 = Utf8               ()Ljava/lang/String;\n+  #135 = Methodref          #112.#136     // java/lang/String.trim:()Ljava/lang/String;\n+  #136 = NameAndType        #96:#134      // trim:()Ljava/lang/String;\n+  #137 = Methodref          #122.#138     // org/apache/commons/csv/CSVPrinter.close:()V\n+  #138 = NameAndType        #139:#33      // close:()V\n+  #139 = Utf8               close\n+  #140 = Class              #141          // java/lang/Throwable\n+  #141 = Utf8               java/lang/Throwable\n+  #142 = Methodref          #140.#143     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #143 = NameAndType        #144:#145     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #144 = Utf8               addSuppressed\n+  #145 = Utf8               (Ljava/lang/Throwable;)V\n+  #146 = Class              #147          // java/io/IOException\n+  #147 = Utf8               java/io/IOException\n+  #148 = Class              #149          // java/lang/IllegalStateException\n+  #149 = Utf8               java/lang/IllegalStateException\n+  #150 = Methodref          #148.#151     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #151 = NameAndType        #17:#145      // \"<init>\":(Ljava/lang/Throwable;)V\n+  #152 = Methodref          #78.#79       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+  #153 = Methodref          #78.#79       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+  #154 = Methodref          #155.#156     // org/apache/commons/csv/QuoteMode.hashCode:()I\n+  #155 = Class              #157          // org/apache/commons/csv/QuoteMode\n+  #156 = NameAndType        #158:#159     // hashCode:()I\n+  #157 = Utf8               org/apache/commons/csv/QuoteMode\n+  #158 = Utf8               hashCode\n+  #159 = Utf8               ()I\n+  #160 = Methodref          #4.#156       // java/lang/Character.hashCode:()I\n+  #161 = Methodref          #112.#156     // java/lang/String.hashCode:()I\n+  #162 = Methodref          #115.#163     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+  #163 = NameAndType        #158:#164     // hashCode:([Ljava/lang/Object;)I\n+  #164 = Utf8               ([Ljava/lang/Object;)I\n+  #165 = Class              #166          // org/apache/commons/csv/CSVParser\n+  #166 = Utf8               org/apache/commons/csv/CSVParser\n+  #167 = Methodref          #165.#168     // org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #168 = NameAndType        #17:#169      // \"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #169 = Utf8               (Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #170 = Class              #171          // java/io/OutputStreamWriter\n+  #171 = Utf8               java/io/OutputStreamWriter\n+  #172 = Class              #173          // java/io/FileOutputStream\n+  #173 = Utf8               java/io/FileOutputStream\n+  #174 = Methodref          #172.#175     // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+  #175 = NameAndType        #17:#176      // \"<init>\":(Ljava/io/File;)V\n+  #176 = Utf8               (Ljava/io/File;)V\n+  #177 = Methodref          #170.#178     // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #178 = NameAndType        #17:#179      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #179 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #180 = String             #181          //\n+  #181 = Utf8\n+  #182 = Fieldref           #155.#183     // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n+  #183 = NameAndType        #184:#45      // ALL:Lorg/apache/commons/csv/QuoteMode;\n+  #184 = Utf8               ALL\n+  #185 = Class              #186          // java/lang/StringBuilder\n+  #186 = Utf8               java/lang/StringBuilder\n+  #187 = Methodref          #185.#31      // java/lang/StringBuilder.\"<init>\":()V\n+  #188 = Methodref          #185.#189     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #189 = NameAndType        #190:#191     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #190 = Utf8               append\n+  #191 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #192 = Methodref          #185.#193     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #193 = NameAndType        #190:#194     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #194 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #195 = Methodref          #185.#132     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #196 = Class              #197          // java/lang/CharSequence\n+  #197 = Utf8               java/lang/CharSequence\n+  #198 = Methodref          #30.#132      // java/lang/Object.toString:()Ljava/lang/String;\n+  #199 = Methodref          #10.#200      // org/apache/commons/csv/CSVFormat.getTrim:()Z\n+  #200 = NameAndType        #201:#202     // getTrim:()Z\n+  #201 = Utf8               getTrim\n+  #202 = Utf8               ()Z\n+  #203 = Methodref          #10.#204      // org/apache/commons/csv/CSVFormat.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #204 = NameAndType        #96:#205      // trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #205 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #206 = InterfaceMethodref #196.#207     // java/lang/CharSequence.length:()I\n+  #207 = NameAndType        #208:#159     // length:()I\n+  #208 = Utf8               length\n+  #209 = Methodref          #10.#210      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+  #210 = NameAndType        #211:#212     // print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+  #211 = Utf8               print\n+  #212 = Utf8               (Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+  #213 = Methodref          #10.#214      // org/apache/commons/csv/CSVFormat.getDelimiter:()C\n+  #214 = NameAndType        #215:#8       // getDelimiter:()C\n+  #215 = Utf8               getDelimiter\n+  #216 = InterfaceMethodref #217.#218     // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+  #217 = Class              #219          // java/lang/Appendable\n+  #218 = NameAndType        #190:#220     // append:(C)Ljava/lang/Appendable;\n+  #219 = Utf8               java/lang/Appendable\n+  #220 = Utf8               (C)Ljava/lang/Appendable;\n+  #221 = InterfaceMethodref #217.#222     // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #222 = NameAndType        #190:#223     // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #223 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #224 = Methodref          #10.#225      // org/apache/commons/csv/CSVFormat.isQuoteCharacterSet:()Z\n+  #225 = NameAndType        #226:#202     // isQuoteCharacterSet:()Z\n+  #226 = Utf8               isQuoteCharacterSet\n+  #227 = Methodref          #10.#228      // org/apache/commons/csv/CSVFormat.printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+  #228 = NameAndType        #229:#212     // printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+  #229 = Utf8               printAndQuote\n+  #230 = Methodref          #10.#231      // org/apache/commons/csv/CSVFormat.isEscapeCharacterSet:()Z\n+  #231 = NameAndType        #232:#202     // isEscapeCharacterSet:()Z\n+  #232 = Utf8               isEscapeCharacterSet\n+  #233 = Methodref          #10.#234      // org/apache/commons/csv/CSVFormat.printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n+  #234 = NameAndType        #235:#236     // printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n+  #235 = Utf8               printAndEscape\n+  #236 = Utf8               (Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n+  #237 = InterfaceMethodref #217.#238     // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #238 = NameAndType        #190:#239     // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #239 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #240 = Class              #241          // java/nio/file/OpenOption\n+  #241 = Utf8               java/nio/file/OpenOption\n+  #242 = Methodref          #243.#244     // java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #243 = Class              #245          // java/nio/file/Files\n+  #244 = NameAndType        #246:#247     // newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #245 = Utf8               java/nio/file/Files\n+  #246 = Utf8               newBufferedWriter\n+  #247 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #248 = Methodref          #10.#249      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #249 = NameAndType        #211:#250     // print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #250 = Utf8               (Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #251 = Methodref          #10.#252      // org/apache/commons/csv/CSVFormat.getEscapeCharacter:()Ljava/lang/Character;\n+  #252 = NameAndType        #253:#254     // getEscapeCharacter:()Ljava/lang/Character;\n+  #253 = Utf8               getEscapeCharacter\n+  #254 = Utf8               ()Ljava/lang/Character;\n+  #255 = InterfaceMethodref #196.#256     // java/lang/CharSequence.charAt:(I)C\n+  #256 = NameAndType        #257:#258     // charAt:(I)C\n+  #257 = Utf8               charAt\n+  #258 = Utf8               (I)C\n+  #259 = Methodref          #10.#260      // org/apache/commons/csv/CSVFormat.getQuoteCharacter:()Ljava/lang/Character;\n+  #260 = NameAndType        #261:#254     // getQuoteCharacter:()Ljava/lang/Character;\n+  #261 = Utf8               getQuoteCharacter\n+  #262 = Methodref          #10.#263      // org/apache/commons/csv/CSVFormat.getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+  #263 = NameAndType        #264:#265     // getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+  #264 = Utf8               getQuoteMode\n+  #265 = Utf8               ()Lorg/apache/commons/csv/QuoteMode;\n+  #266 = Fieldref           #155.#267     // org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+  #267 = NameAndType        #268:#45      // MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+  #268 = Utf8               MINIMAL\n+  #269 = Fieldref           #270.#271     // org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+  #270 = Class              #272          // org/apache/commons/csv/CSVFormat$1\n+  #271 = NameAndType        #273:#274     // $SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+  #272 = Utf8               org/apache/commons/csv/CSVFormat$1\n+  #273 = Utf8               $SwitchMap$org$apache$commons$csv$QuoteMode\n+  #274 = Utf8               [I\n+  #275 = Methodref          #155.#276     // org/apache/commons/csv/QuoteMode.ordinal:()I\n+  #276 = NameAndType        #277:#159     // ordinal:()I\n+  #277 = Utf8               ordinal\n+  #278 = Class              #279          // java/lang/Number\n+  #279 = Utf8               java/lang/Number\n+  #280 = String             #281          // Unexpected Quote value:\n+  #281 = Utf8               Unexpected Quote value:\n+  #282 = Methodref          #148.#283     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #283 = NameAndType        #17:#284      // \"<init>\":(Ljava/lang/String;)V\n+  #284 = Utf8               (Ljava/lang/String;)V\n+  #285 = Fieldref           #286.#287     // java/lang/System.out:Ljava/io/PrintStream;\n+  #286 = Class              #288          // java/lang/System\n+  #287 = NameAndType        #289:#290     // out:Ljava/io/PrintStream;\n+  #288 = Utf8               java/lang/System\n+  #289 = Utf8               out\n+  #290 = Utf8               Ljava/io/PrintStream;\n+  #291 = Methodref          #10.#292      // org/apache/commons/csv/CSVFormat.getTrailingDelimiter:()Z\n+  #292 = NameAndType        #293:#202     // getTrailingDelimiter:()Z\n+  #293 = Utf8               getTrailingDelimiter\n+  #294 = Methodref          #10.#295      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #295 = NameAndType        #211:#296     // print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #296 = Utf8               (Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #297 = Methodref          #10.#298      // org/apache/commons/csv/CSVFormat.println:(Ljava/lang/Appendable;)V\n+  #298 = NameAndType        #299:#300     // println:(Ljava/lang/Appendable;)V\n+  #299 = Utf8               println\n+  #300 = Utf8               (Ljava/lang/Appendable;)V\n+  #301 = String             #302          // Delimiter=<\n+  #302 = Utf8               Delimiter=<\n+  #303 = Methodref          #185.#304     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #304 = NameAndType        #190:#305     // append:(C)Ljava/lang/StringBuilder;\n+  #305 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #306 = String             #307          // Escape=<\n+  #307 = Utf8               Escape=<\n+  #308 = String             #309          // QuoteChar=<\n+  #309 = Utf8               QuoteChar=<\n+  #310 = Methodref          #10.#311      // org/apache/commons/csv/CSVFormat.isCommentMarkerSet:()Z\n+  #311 = NameAndType        #312:#202     // isCommentMarkerSet:()Z\n+  #312 = Utf8               isCommentMarkerSet\n+  #313 = String             #314          // CommentStart=<\n+  #314 = Utf8               CommentStart=<\n+  #315 = Methodref          #10.#316      // org/apache/commons/csv/CSVFormat.isNullStringSet:()Z\n+  #316 = NameAndType        #317:#202     // isNullStringSet:()Z\n+  #317 = Utf8               isNullStringSet\n+  #318 = String             #319          // NullString=<\n+  #319 = Utf8               NullString=<\n+  #320 = String             #321          // RecordSeparator=<\n+  #321 = Utf8               RecordSeparator=<\n+  #322 = Methodref          #10.#323      // org/apache/commons/csv/CSVFormat.getIgnoreEmptyLines:()Z\n+  #323 = NameAndType        #324:#202     // getIgnoreEmptyLines:()Z\n+  #324 = Utf8               getIgnoreEmptyLines\n+  #325 = String             #326          //  EmptyLines:ignored\n+  #326 = Utf8                EmptyLines:ignored\n+  #327 = Methodref          #10.#328      // org/apache/commons/csv/CSVFormat.getIgnoreSurroundingSpaces:()Z\n+  #328 = NameAndType        #329:#202     // getIgnoreSurroundingSpaces:()Z\n+  #329 = Utf8               getIgnoreSurroundingSpaces\n+  #330 = String             #331          //  SurroundingSpaces:ignored\n+  #331 = Utf8                SurroundingSpaces:ignored\n+  #332 = Methodref          #10.#333      // org/apache/commons/csv/CSVFormat.getIgnoreHeaderCase:()Z\n+  #333 = NameAndType        #334:#202     // getIgnoreHeaderCase:()Z\n+  #334 = Utf8               getIgnoreHeaderCase\n+  #335 = String             #336          //  IgnoreHeaderCase:ignored\n+  #336 = Utf8                IgnoreHeaderCase:ignored\n+  #337 = String             #338          //  SkipHeaderRecord:\n+  #338 = Utf8                SkipHeaderRecord:\n+  #339 = Methodref          #185.#340     // java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n+  #340 = NameAndType        #190:#341     // append:(Z)Ljava/lang/StringBuilder;\n+  #341 = Utf8               (Z)Ljava/lang/StringBuilder;\n+  #342 = String             #343          // HeaderComments:\n+  #343 = Utf8               HeaderComments:\n+  #344 = Methodref          #115.#345     // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+  #345 = NameAndType        #133:#346     // toString:([Ljava/lang/Object;)Ljava/lang/String;\n+  #346 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n+  #347 = String             #348          // Header:\n+  #348 = Utf8               Header:\n+  #349 = InterfaceMethodref #196.#350     // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+  #350 = NameAndType        #351:#352     // subSequence:(II)Ljava/lang/CharSequence;\n+  #351 = Utf8               subSequence\n+  #352 = Utf8               (II)Ljava/lang/CharSequence;\n+  #353 = Class              #354          // java/lang/IllegalArgumentException\n+  #354 = Utf8               java/lang/IllegalArgumentException\n+  #355 = String             #356          // The delimiter cannot be a line break\n+  #356 = Utf8               The delimiter cannot be a line break\n+  #357 = Methodref          #353.#283     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #358 = String             #359          // The quoteChar character and the delimiter cannot be the same (\\'\n+  #359 = Utf8               The quoteChar character and the delimiter cannot be the same (\\'\n+  #360 = String             #361          // \\')\n+  #361 = Utf8               \\')\n+  #362 = String             #363          // The escape character and the delimiter cannot be the same (\\'\n+  #363 = Utf8               The escape character and the delimiter cannot be the same (\\'\n+  #364 = String             #365          // The comment start character and the delimiter cannot be the same (\\'\n+  #365 = Utf8               The comment start character and the delimiter cannot be the same (\\'\n+  #366 = String             #367          // The comment start character and the quoteChar cannot be the same (\\'\n+  #367 = Utf8               The comment start character and the quoteChar cannot be the same (\\'\n+  #368 = String             #369          // The comment start and the escape character cannot be the same (\\'\n+  #369 = Utf8               The comment start and the escape character cannot be the same (\\'\n+  #370 = Fieldref           #155.#371     // org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n+  #371 = NameAndType        #372:#45      // NONE:Lorg/apache/commons/csv/QuoteMode;\n+  #372 = Utf8               NONE\n+  #373 = String             #374          // No quotes mode set but no escape character is set\n+  #374 = Utf8               No quotes mode set but no escape character is set\n+  #375 = Class              #376          // java/util/HashSet\n+  #376 = Utf8               java/util/HashSet\n+  #377 = Methodref          #375.#31      // java/util/HashSet.\"<init>\":()V\n+  #378 = InterfaceMethodref #379.#380     // java/util/Set.add:(Ljava/lang/Object;)Z\n+  #379 = Class              #381          // java/util/Set\n+  #380 = NameAndType        #382:#110     // add:(Ljava/lang/Object;)Z\n+  #381 = Utf8               java/util/Set\n+  #382 = Utf8               add\n+  #383 = String             #384          // The header contains a duplicate entry: \\'\n+  #384 = Utf8               The header contains a duplicate entry: \\'\n+  #385 = String             #386          // \\' in\n+  #386 = Utf8               \\' in\n+  #387 = Methodref          #10.#388      // org/apache/commons/csv/CSVFormat.withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #388 = NameAndType        #389:#390     // withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #389 = Utf8               withAllowMissingColumnNames\n+  #390 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat;\n+  #391 = Methodref          #4.#392       // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+  #392 = NameAndType        #23:#393      // valueOf:(C)Ljava/lang/Character;\n+  #393 = Utf8               (C)Ljava/lang/Character;\n+  #394 = Methodref          #10.#395      // org/apache/commons/csv/CSVFormat.withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #395 = NameAndType        #396:#397     // withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #396 = Utf8               withCommentMarker\n+  #397 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #398 = Methodref          #10.#399      // org/apache/commons/csv/CSVFormat.isLineBreak:(Ljava/lang/Character;)Z\n+  #399 = NameAndType        #13:#400      // isLineBreak:(Ljava/lang/Character;)Z\n+  #400 = Utf8               (Ljava/lang/Character;)Z\n+  #401 = String             #402          // The comment start marker character cannot be a line break\n+  #402 = Utf8               The comment start marker character cannot be a line break\n+  #403 = Methodref          #10.#404      // org/apache/commons/csv/CSVFormat.withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #404 = NameAndType        #405:#397     // withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #405 = Utf8               withEscape\n+  #406 = String             #407          // The escape character cannot be a line break\n+  #407 = Utf8               The escape character cannot be a line break\n+  #408 = Methodref          #10.#409      // org/apache/commons/csv/CSVFormat.withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #409 = NameAndType        #410:#411     // withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #410 = Utf8               withHeader\n+  #411 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #412 = Methodref          #10.#413      // org/apache/commons/csv/CSVFormat.withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n+  #413 = NameAndType        #414:#28      // withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n+  #414 = Utf8               withSkipHeaderRecord\n+  #415 = Methodref          #416.#417     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+  #416 = Class              #418          // java/lang/Class\n+  #417 = NameAndType        #419:#420     // getEnumConstants:()[Ljava/lang/Object;\n+  #418 = Utf8               java/lang/Class\n+  #419 = Utf8               getEnumConstants\n+  #420 = Utf8               ()[Ljava/lang/Object;\n+  #421 = Class              #422          // \"[Ljava/lang/Enum;\"\n+  #422 = Utf8               [Ljava/lang/Enum;\n+  #423 = Methodref          #424.#425     // java/lang/Enum.name:()Ljava/lang/String;\n+  #424 = Class              #426          // java/lang/Enum\n+  #425 = NameAndType        #427:#134     // name:()Ljava/lang/String;\n+  #426 = Utf8               java/lang/Enum\n+  #427 = Utf8               name\n+  #428 = InterfaceMethodref #429.#430     // java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n+  #429 = Class              #431          // java/sql/ResultSet\n+  #430 = NameAndType        #432:#433     // getMetaData:()Ljava/sql/ResultSetMetaData;\n+  #431 = Utf8               java/sql/ResultSet\n+  #432 = Utf8               getMetaData\n+  #433 = Utf8               ()Ljava/sql/ResultSetMetaData;\n+  #434 = Methodref          #10.#435      // org/apache/commons/csv/CSVFormat.withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n+  #435 = NameAndType        #410:#436     // withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n+  #436 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n+  #437 = InterfaceMethodref #438.#439     // java/sql/ResultSetMetaData.getColumnCount:()I\n+  #438 = Class              #440          // java/sql/ResultSetMetaData\n+  #439 = NameAndType        #441:#159     // getColumnCount:()I\n+  #440 = Utf8               java/sql/ResultSetMetaData\n+  #441 = Utf8               getColumnCount\n+  #442 = InterfaceMethodref #438.#443     // java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n+  #443 = NameAndType        #444:#445     // getColumnLabel:(I)Ljava/lang/String;\n+  #444 = Utf8               getColumnLabel\n+  #445 = Utf8               (I)Ljava/lang/String;\n+  #446 = Methodref          #10.#447      // org/apache/commons/csv/CSVFormat.withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #447 = NameAndType        #448:#390     // withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #448 = Utf8               withIgnoreEmptyLines\n+  #449 = Methodref          #10.#450      // org/apache/commons/csv/CSVFormat.withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #450 = NameAndType        #451:#390     // withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #451 = Utf8               withIgnoreHeaderCase\n+  #452 = Methodref          #10.#453      // org/apache/commons/csv/CSVFormat.withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #453 = NameAndType        #454:#390     // withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #454 = Utf8               withIgnoreSurroundingSpaces\n+  #455 = Methodref          #10.#456      // org/apache/commons/csv/CSVFormat.withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #456 = NameAndType        #457:#397     // withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #457 = Utf8               withQuote\n+  #458 = String             #459          // The quoteChar cannot be a line break\n+  #459 = Utf8               The quoteChar cannot be a line break\n+  #460 = Methodref          #112.#461     // java/lang/String.valueOf:(C)Ljava/lang/String;\n+  #461 = NameAndType        #23:#462      // valueOf:(C)Ljava/lang/String;\n+  #462 = Utf8               (C)Ljava/lang/String;\n+  #463 = Methodref          #10.#464      // org/apache/commons/csv/CSVFormat.withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #464 = NameAndType        #465:#466     // withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #465 = Utf8               withRecordSeparator\n+  #466 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #467 = Methodref          #10.#468      // org/apache/commons/csv/CSVFormat.withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #468 = NameAndType        #414:#390     // withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #469 = String             #470          // line.separator\n+  #470 = Utf8               line.separator\n+  #471 = Methodref          #286.#472     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #472 = NameAndType        #473:#474     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #473 = Utf8               getProperty\n+  #474 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #475 = Methodref          #10.#476      // org/apache/commons/csv/CSVFormat.withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #476 = NameAndType        #477:#390     // withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #477 = Utf8               withTrailingDelimiter\n+  #478 = Methodref          #10.#479      // org/apache/commons/csv/CSVFormat.withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #479 = NameAndType        #480:#390     // withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #480 = Utf8               withTrim\n+  #481 = Fieldref           #1.#482       // org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+  #482 = NameAndType        #483:#41      // DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+  #483 = Utf8               DOUBLE_QUOTE_CHAR\n+  #484 = String             #485          // \\r\\n\n+  #485 = Utf8               \\r\\n\n+  #486 = Fieldref           #10.#487      // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+  #487 = NameAndType        #488:#489     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+  #488 = Utf8               DEFAULT\n+  #489 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n+  #490 = Methodref          #10.#491      // org/apache/commons/csv/CSVFormat.withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n+  #491 = NameAndType        #389:#28      // withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n+  #492 = Fieldref           #10.#493      // org/apache/commons/csv/CSVFormat.EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+  #493 = NameAndType        #494:#489     // EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+  #494 = Utf8               EXCEL\n+  #495 = Methodref          #10.#496      // org/apache/commons/csv/CSVFormat.withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #496 = NameAndType        #497:#498     // withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #497 = Utf8               withDelimiter\n+  #498 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n+  #499 = Methodref          #10.#500      // org/apache/commons/csv/CSVFormat.withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #500 = NameAndType        #405:#498     // withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #501 = Methodref          #10.#502      // org/apache/commons/csv/CSVFormat.withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #502 = NameAndType        #465:#498     // withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #503 = Fieldref           #10.#504      // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+  #504 = NameAndType        #505:#489     // INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+  #505 = Utf8               INFORMIX_UNLOAD\n+  #506 = Fieldref           #10.#507      // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #507 = NameAndType        #508:#489     // INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #508 = Utf8               INFORMIX_UNLOAD_CSV\n+  #509 = String             #510          // \\\\N\n+  #510 = Utf8               \\\\N\n+  #511 = Methodref          #10.#512      // org/apache/commons/csv/CSVFormat.withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #512 = NameAndType        #513:#466     // withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #513 = Utf8               withNullString\n+  #514 = Fieldref           #155.#515     // org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+  #515 = NameAndType        #516:#45      // ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+  #516 = Utf8               ALL_NON_NULL\n+  #517 = Methodref          #10.#518      // org/apache/commons/csv/CSVFormat.withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+  #518 = NameAndType        #519:#520     // withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+  #519 = Utf8               withQuoteMode\n+  #520 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+  #521 = Fieldref           #10.#522      // org/apache/commons/csv/CSVFormat.MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+  #522 = NameAndType        #523:#489     // MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+  #523 = Utf8               MYSQL\n+  #524 = Methodref          #10.#525      // org/apache/commons/csv/CSVFormat.withTrim:()Lorg/apache/commons/csv/CSVFormat;\n+  #525 = NameAndType        #480:#28      // withTrim:()Lorg/apache/commons/csv/CSVFormat;\n+  #526 = Methodref          #10.#527      // org/apache/commons/csv/CSVFormat.withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n+  #527 = NameAndType        #528:#28      // withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n+  #528 = Utf8               withSystemRecordSeparator\n+  #529 = Fieldref           #10.#530      // org/apache/commons/csv/CSVFormat.ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+  #530 = NameAndType        #531:#489     // ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+  #531 = Utf8               ORACLE\n+  #532 = Fieldref           #10.#533      // org/apache/commons/csv/CSVFormat.POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #533 = NameAndType        #534:#489     // POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #534 = Utf8               POSTGRESQL_CSV\n+  #535 = Fieldref           #10.#536      // org/apache/commons/csv/CSVFormat.POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+  #536 = NameAndType        #537:#489     // POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+  #537 = Utf8               POSTGRESQL_TEXT\n+  #538 = Fieldref           #10.#539      // org/apache/commons/csv/CSVFormat.RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+  #539 = NameAndType        #540:#489     // RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+  #540 = Utf8               RFC4180\n+  #541 = Methodref          #10.#542      // org/apache/commons/csv/CSVFormat.withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n+  #542 = NameAndType        #454:#28      // withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n+  #543 = Fieldref           #10.#544      // org/apache/commons/csv/CSVFormat.TDF:Lorg/apache/commons/csv/CSVFormat;\n+  #544 = NameAndType        #545:#489     // TDF:Lorg/apache/commons/csv/CSVFormat;\n+  #545 = Utf8               TDF\n+  #546 = Class              #547          // java/io/Serializable\n+  #547 = Utf8               java/io/Serializable\n+  #548 = Utf8               serialVersionUID\n+  #549 = Utf8               J\n+  #550 = Utf8               ConstantValue\n+  #551 = Long               1l\n+  #553 = Utf8               Code\n+  #554 = Utf8               LineNumberTable\n+  #555 = Utf8               LocalVariableTable\n+  #556 = Utf8               c\n+  #557 = Utf8               StackMapTable\n+  #558 = Utf8               newFormat\n+  #559 = Utf8               format\n+  #560 = Utf8               this\n+  #561 = Utf8               quoteChar\n+  #562 = Utf8               commentStart\n+  #563 = Utf8               escape\n+  #564 = Utf8               [Ljava/lang/Object;\n+  #565 = Class              #564          // \"[Ljava/lang/Object;\"\n+  #566 = Utf8               obj\n+  #567 = Utf8               Ljava/lang/Object;\n+  #568 = Utf8               other\n+  #569 = Utf8               csvPrinter\n+  #570 = Utf8               Lorg/apache/commons/csv/CSVPrinter;\n+  #571 = Utf8               e\n+  #572 = Utf8               Ljava/io/IOException;\n+  #573 = Utf8               values\n+  #574 = Utf8               Ljava/io/StringWriter;\n+  #575 = Utf8               getAllowMissingColumnNames\n+  #576 = Utf8               getAutoFlush\n+  #577 = Utf8               getCommentMarker\n+  #578 = Utf8               getHeader\n+  #579 = Utf8               ()[Ljava/lang/String;\n+  #580 = Utf8               getHeaderComments\n+  #581 = Utf8               getNullString\n+  #582 = Utf8               getRecordSeparator\n+  #583 = Utf8               getSkipHeaderRecord\n+  #584 = Utf8               prime\n+  #585 = Utf8               I\n+  #586 = Utf8               result\n+  #587 = Utf8               parse\n+  #588 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+  #589 = Utf8               in\n+  #590 = Utf8               Ljava/io/Reader;\n+  #591 = Utf8               Exceptions\n+  #592 = Utf8               Ljava/lang/Appendable;\n+  #593 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n+  #594 = Utf8               Ljava/io/File;\n+  #595 = Utf8               charset\n+  #596 = Utf8               Ljava/nio/charset/Charset;\n+  #597 = Utf8               charSequence\n+  #598 = Utf8               Ljava/lang/CharSequence;\n+  #599 = Utf8               value\n+  #600 = Utf8               newRecord\n+  #601 = Utf8               object\n+  #602 = Utf8               offset\n+  #603 = Utf8               len\n+  #604 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n+  #605 = Utf8               Ljava/nio/file/Path;\n+  #606 = Utf8               start\n+  #607 = Utf8               pos\n+  #608 = Utf8               end\n+  #609 = Utf8               delim\n+  #610 = Utf8               quote\n+  #611 = Utf8               delimChar\n+  #612 = Utf8               quoteModePolicy\n+  #613 = Utf8               printer\n+  #614 = Utf8               ()Lorg/apache/commons/csv/CSVPrinter;\n+  #615 = Utf8               (Ljava/lang/Appendable;[Ljava/lang/Object;)V\n+  #616 = Utf8               i\n+  #617 = Utf8               sb\n+  #618 = Utf8               Ljava/lang/StringBuilder;\n+  #619 = Utf8               strings\n+  #620 = Utf8               count\n+  #621 = Utf8               hdr\n+  #622 = Utf8               dupCheck\n+  #623 = Utf8               Ljava/util/Set;\n+  #624 = Utf8               LocalVariableTypeTable\n+  #625 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n+  #626 = Utf8               withAutoFlush\n+  #627 = Utf8               withFirstRecordAsHeader\n+  #628 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;\n+  #629 = Utf8               enumValues\n+  #630 = Utf8               headerEnum\n+  #631 = Utf8               Ljava/lang/Class;\n+  #632 = Utf8               [Ljava/lang/Enum<*>;\n+  #633 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n+  #634 = Utf8               Signature\n+  #635 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n+  #636 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n+  #637 = Utf8               resultSet\n+  #638 = Utf8               Ljava/sql/ResultSet;\n+  #639 = Class              #640          // java/sql/SQLException\n+  #640 = Utf8               java/sql/SQLException\n+  #641 = Utf8               columnCount\n+  #642 = Utf8               metaData\n+  #643 = Utf8               Ljava/sql/ResultSetMetaData;\n+  #644 = Utf8               labels\n+  #645 = Utf8               withHeaderComments\n+  #646 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;\n+  #647 = Utf8               <clinit>\n+  #648 = Utf8               SourceFile\n+  #649 = Utf8               CSVFormat.java\n+  #650 = Utf8               InnerClasses\n+  #651 = Utf8               Predefined\n {\n   public static final org.apache.commons.csv.CSVFormat DEFAULT;\n     descriptor: Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final org.apache.commons.csv.CSVFormat EXCEL;\n     descriptor: Lorg/apache/commons/csv/CSVFormat;\n@@ -805,16 +802,16 @@\n     descriptor: (Ljava/lang/Character;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        18\n          4: aload_0\n-         5: invokevirtual #2                  // Method java/lang/Character.charValue:()C\n-         8: invokestatic  #3                  // Method isLineBreak:(C)Z\n+         5: invokevirtual #3                  // Method java/lang/Character.charValue:()C\n+         8: invokestatic  #9                  // Method isLineBreak:(C)Z\n         11: ifeq          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: ireturn\n       LineNumberTable:\n         line 564: 0\n@@ -827,15 +824,15 @@\n           stack = [ int ]\n \n   public static org.apache.commons.csv.CSVFormat newFormat(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=19, locals=1, args_size=1\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: iload_0\n          5: aconst_null\n          6: aconst_null\n          7: aconst_null\n          8: aconst_null\n          9: iconst_0\n@@ -846,105 +843,105 @@\n         14: aconst_null\n         15: iconst_0\n         16: iconst_0\n         17: iconst_0\n         18: iconst_0\n         19: iconst_0\n         20: iconst_0\n-        21: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        21: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         24: areturn\n       LineNumberTable:\n         line 588: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0 delimiter   C\n \n   public static org.apache.commons.csv.CSVFormat valueOf(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #6                  // Method org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-         4: invokevirtual #7                  // Method org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n+         1: invokestatic  #19                 // Method org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+         4: invokevirtual #25                 // Method org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n          7: areturn\n       LineNumberTable:\n         line 601: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 format   Ljava/lang/String;\n \n   private org.apache.commons.csv.CSVFormat(char, java.lang.Character, org.apache.commons.csv.QuoteMode, java.lang.Character, java.lang.Character, boolean, boolean, java.lang.String, java.lang.String, java.lang.Object[], java.lang.String[], boolean, boolean, boolean, boolean, boolean, boolean);\n     descriptor: (CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=18, args_size=18\n          0: aload_0\n-         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #29                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #9                  // Field delimiter:C\n+         6: putfield      #34                 // Field delimiter:C\n          9: aload_0\n         10: aload_2\n-        11: putfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+        11: putfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         14: aload_0\n         15: aload_3\n-        16: putfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        16: putfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         19: aload_0\n         20: aload         4\n-        22: putfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        22: putfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         25: aload_0\n         26: aload         5\n-        28: putfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        28: putfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         31: aload_0\n         32: iload         6\n-        34: putfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        34: putfield      #52                 // Field ignoreSurroundingSpaces:Z\n         37: aload_0\n         38: iload         13\n-        40: putfield      #15                 // Field allowMissingColumnNames:Z\n+        40: putfield      #56                 // Field allowMissingColumnNames:Z\n         43: aload_0\n         44: iload         7\n-        46: putfield      #16                 // Field ignoreEmptyLines:Z\n+        46: putfield      #59                 // Field ignoreEmptyLines:Z\n         49: aload_0\n         50: aload         8\n-        52: putfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        52: putfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         55: aload_0\n         56: aload         9\n-        58: putfield      #18                 // Field nullString:Ljava/lang/String;\n+        58: putfield      #66                 // Field nullString:Ljava/lang/String;\n         61: aload_0\n         62: aload_0\n         63: aload         10\n-        65: invokespecial #19                 // Method toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-        68: putfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        65: invokespecial #69                 // Method toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+        68: putfield      #73                 // Field headerComments:[Ljava/lang/String;\n         71: aload_0\n         72: aload         11\n         74: ifnonnull     81\n         77: aconst_null\n         78: goto          89\n         81: aload         11\n-        83: invokevirtual #21                 // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-        86: checkcast     #22                 // class \"[Ljava/lang/String;\"\n-        89: putfield      #23                 // Field header:[Ljava/lang/String;\n+        83: invokevirtual #77                 // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+        86: checkcast     #78                 // class \"[Ljava/lang/String;\"\n+        89: putfield      #82                 // Field header:[Ljava/lang/String;\n         92: aload_0\n         93: iload         12\n-        95: putfield      #24                 // Field skipHeaderRecord:Z\n+        95: putfield      #85                 // Field skipHeaderRecord:Z\n         98: aload_0\n         99: iload         14\n-       101: putfield      #25                 // Field ignoreHeaderCase:Z\n+       101: putfield      #88                 // Field ignoreHeaderCase:Z\n        104: aload_0\n        105: iload         16\n-       107: putfield      #26                 // Field trailingDelimiter:Z\n+       107: putfield      #91                 // Field trailingDelimiter:Z\n        110: aload_0\n        111: iload         15\n-       113: putfield      #27                 // Field trim:Z\n+       113: putfield      #94                 // Field trim:Z\n        116: aload_0\n        117: iload         17\n-       119: putfield      #28                 // Field autoFlush:Z\n+       119: putfield      #97                 // Field autoFlush:Z\n        122: aload_0\n-       123: invokespecial #29                 // Method validate:()V\n+       123: invokespecial #100                // Method validate:()V\n        126: return\n       LineNumberTable:\n         line 682: 0\n         line 683: 4\n         line 684: 9\n         line 685: 14\n         line 686: 19\n@@ -1004,143 +1001,143 @@\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n          8: ifnonnull     13\n         11: iconst_0\n         12: ireturn\n         13: aload_0\n-        14: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        14: invokevirtual #103                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         17: aload_1\n-        18: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        18: invokevirtual #103                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         21: if_acmpeq     26\n         24: iconst_0\n         25: ireturn\n         26: aload_1\n-        27: checkcast     #4                  // class org/apache/commons/csv/CSVFormat\n+        27: checkcast     #10                 // class org/apache/commons/csv/CSVFormat\n         30: astore_2\n         31: aload_0\n-        32: getfield      #9                  // Field delimiter:C\n+        32: getfield      #34                 // Field delimiter:C\n         35: aload_2\n-        36: getfield      #9                  // Field delimiter:C\n+        36: getfield      #34                 // Field delimiter:C\n         39: if_icmpeq     44\n         42: iconst_0\n         43: ireturn\n         44: aload_0\n-        45: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        45: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         48: aload_2\n-        49: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        49: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         52: if_acmpeq     57\n         55: iconst_0\n         56: ireturn\n         57: aload_0\n-        58: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+        58: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         61: ifnonnull     73\n         64: aload_2\n-        65: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+        65: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         68: ifnull        89\n         71: iconst_0\n         72: ireturn\n         73: aload_0\n-        74: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+        74: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         77: aload_2\n-        78: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-        81: invokevirtual #31                 // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n+        78: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+        81: invokevirtual #107                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n         84: ifne          89\n         87: iconst_0\n         88: ireturn\n         89: aload_0\n-        90: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        90: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         93: ifnonnull     105\n         96: aload_2\n-        97: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        97: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n        100: ifnull        121\n        103: iconst_0\n        104: ireturn\n        105: aload_0\n-       106: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+       106: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n        109: aload_2\n-       110: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-       113: invokevirtual #31                 // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n+       110: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+       113: invokevirtual #107                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n        116: ifne          121\n        119: iconst_0\n        120: ireturn\n        121: aload_0\n-       122: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+       122: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n        125: ifnonnull     137\n        128: aload_2\n-       129: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+       129: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n        132: ifnull        153\n        135: iconst_0\n        136: ireturn\n        137: aload_0\n-       138: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+       138: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n        141: aload_2\n-       142: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-       145: invokevirtual #31                 // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n+       142: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+       145: invokevirtual #107                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n        148: ifne          153\n        151: iconst_0\n        152: ireturn\n        153: aload_0\n-       154: getfield      #18                 // Field nullString:Ljava/lang/String;\n+       154: getfield      #66                 // Field nullString:Ljava/lang/String;\n        157: ifnonnull     169\n        160: aload_2\n-       161: getfield      #18                 // Field nullString:Ljava/lang/String;\n+       161: getfield      #66                 // Field nullString:Ljava/lang/String;\n        164: ifnull        185\n        167: iconst_0\n        168: ireturn\n        169: aload_0\n-       170: getfield      #18                 // Field nullString:Ljava/lang/String;\n+       170: getfield      #66                 // Field nullString:Ljava/lang/String;\n        173: aload_2\n-       174: getfield      #18                 // Field nullString:Ljava/lang/String;\n-       177: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       174: getfield      #66                 // Field nullString:Ljava/lang/String;\n+       177: invokevirtual #111                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n        180: ifne          185\n        183: iconst_0\n        184: ireturn\n        185: aload_0\n-       186: getfield      #23                 // Field header:[Ljava/lang/String;\n+       186: getfield      #82                 // Field header:[Ljava/lang/String;\n        189: aload_2\n-       190: getfield      #23                 // Field header:[Ljava/lang/String;\n-       193: invokestatic  #33                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+       190: getfield      #82                 // Field header:[Ljava/lang/String;\n+       193: invokestatic  #114                // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n        196: ifne          201\n        199: iconst_0\n        200: ireturn\n        201: aload_0\n-       202: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+       202: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n        205: aload_2\n-       206: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+       206: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n        209: if_icmpeq     214\n        212: iconst_0\n        213: ireturn\n        214: aload_0\n-       215: getfield      #16                 // Field ignoreEmptyLines:Z\n+       215: getfield      #59                 // Field ignoreEmptyLines:Z\n        218: aload_2\n-       219: getfield      #16                 // Field ignoreEmptyLines:Z\n+       219: getfield      #59                 // Field ignoreEmptyLines:Z\n        222: if_icmpeq     227\n        225: iconst_0\n        226: ireturn\n        227: aload_0\n-       228: getfield      #24                 // Field skipHeaderRecord:Z\n+       228: getfield      #85                 // Field skipHeaderRecord:Z\n        231: aload_2\n-       232: getfield      #24                 // Field skipHeaderRecord:Z\n+       232: getfield      #85                 // Field skipHeaderRecord:Z\n        235: if_icmpeq     240\n        238: iconst_0\n        239: ireturn\n        240: aload_0\n-       241: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+       241: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n        244: ifnonnull     256\n        247: aload_2\n-       248: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+       248: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n        251: ifnull        272\n        254: iconst_0\n        255: ireturn\n        256: aload_0\n-       257: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+       257: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n        260: aload_2\n-       261: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n-       264: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       261: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n+       264: invokevirtual #111                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n        267: ifne          272\n        270: iconst_0\n        271: ireturn\n        272: iconst_1\n        273: ireturn\n       LineNumberTable:\n         line 705: 0\n@@ -1217,50 +1214,50 @@\n         frame_type = 15 /* same */\n \n   public java.lang.String format(java.lang.Object...);\n     descriptor: ([Ljava/lang/Object;)Ljava/lang/String;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=4, locals=6, args_size=2\n-         0: new           #34                 // class java/io/StringWriter\n+         0: new           #119                // class java/io/StringWriter\n          3: dup\n-         4: invokespecial #35                 // Method java/io/StringWriter.\"<init>\":()V\n+         4: invokespecial #121                // Method java/io/StringWriter.\"<init>\":()V\n          7: astore_2\n-         8: new           #36                 // class org/apache/commons/csv/CSVPrinter\n+         8: new           #122                // class org/apache/commons/csv/CSVPrinter\n         11: dup\n         12: aload_2\n         13: aload_0\n-        14: invokespecial #37                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+        14: invokespecial #124                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n         17: astore_3\n         18: aload_3\n         19: aload_1\n-        20: invokevirtual #38                 // Method org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n+        20: invokevirtual #127                // Method org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n         23: aload_2\n-        24: invokevirtual #39                 // Method java/io/StringWriter.toString:()Ljava/lang/String;\n-        27: invokevirtual #40                 // Method java/lang/String.trim:()Ljava/lang/String;\n+        24: invokevirtual #131                // Method java/io/StringWriter.toString:()Ljava/lang/String;\n+        27: invokevirtual #135                // Method java/lang/String.trim:()Ljava/lang/String;\n         30: astore        4\n         32: aload_3\n-        33: invokevirtual #41                 // Method org/apache/commons/csv/CSVPrinter.close:()V\n+        33: invokevirtual #137                // Method org/apache/commons/csv/CSVPrinter.close:()V\n         36: aload         4\n         38: areturn\n         39: astore        4\n         41: aload_3\n-        42: invokevirtual #41                 // Method org/apache/commons/csv/CSVPrinter.close:()V\n+        42: invokevirtual #137                // Method org/apache/commons/csv/CSVPrinter.close:()V\n         45: goto          57\n         48: astore        5\n         50: aload         4\n         52: aload         5\n-        54: invokevirtual #43                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        54: invokevirtual #142                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         57: aload         4\n         59: athrow\n         60: astore_3\n-        61: new           #45                 // class java/lang/IllegalStateException\n+        61: new           #148                // class java/lang/IllegalStateException\n         64: dup\n         65: aload_3\n-        66: invokespecial #46                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+        66: invokespecial #150                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n         69: athrow\n       Exception table:\n          from    to  target type\n             18    32    39   Class java/lang/Throwable\n             41    45    48   Class java/lang/Throwable\n              8    36    60   Class java/io/IOException\n             39    60    60   Class java/io/IOException\n@@ -1298,90 +1295,90 @@\n \n   public boolean getAllowMissingColumnNames();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field allowMissingColumnNames:Z\n+         1: getfield      #56                 // Field allowMissingColumnNames:Z\n          4: ireturn\n       LineNumberTable:\n         line 797: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getAutoFlush();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #28                 // Field autoFlush:Z\n+         1: getfield      #97                 // Field autoFlush:Z\n          4: ireturn\n       LineNumberTable:\n         line 807: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.Character getCommentMarker();\n     descriptor: ()Ljava/lang/Character;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+         1: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 816: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public char getDelimiter();\n     descriptor: ()C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field delimiter:C\n+         1: getfield      #34                 // Field delimiter:C\n          4: ireturn\n       LineNumberTable:\n         line 825: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.Character getEscapeCharacter();\n     descriptor: ()Ljava/lang/Character;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+         1: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 834: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.String[] getHeader();\n     descriptor: ()[Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field header:[Ljava/lang/String;\n+         1: getfield      #82                 // Field header:[Ljava/lang/String;\n          4: ifnull        20\n          7: aload_0\n-         8: getfield      #23                 // Field header:[Ljava/lang/String;\n-        11: invokevirtual #47                 // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-        14: checkcast     #22                 // class \"[Ljava/lang/String;\"\n+         8: getfield      #82                 // Field header:[Ljava/lang/String;\n+        11: invokevirtual #152                // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+        14: checkcast     #78                 // class \"[Ljava/lang/String;\"\n         17: goto          21\n         20: aconst_null\n         21: areturn\n       LineNumberTable:\n         line 843: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1393,20 +1390,20 @@\n \n   public java.lang.String[] getHeaderComments();\n     descriptor: ()[Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+         1: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n          4: ifnull        20\n          7: aload_0\n-         8: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n-        11: invokevirtual #48                 // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-        14: checkcast     #22                 // class \"[Ljava/lang/String;\"\n+         8: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n+        11: invokevirtual #153                // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+        14: checkcast     #78                 // class \"[Ljava/lang/String;\"\n         17: goto          21\n         20: aconst_null\n         21: areturn\n       LineNumberTable:\n         line 852: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1418,141 +1415,141 @@\n \n   public boolean getIgnoreEmptyLines();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field ignoreEmptyLines:Z\n+         1: getfield      #59                 // Field ignoreEmptyLines:Z\n          4: ireturn\n       LineNumberTable:\n         line 862: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getIgnoreHeaderCase();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #25                 // Field ignoreHeaderCase:Z\n+         1: getfield      #88                 // Field ignoreHeaderCase:Z\n          4: ireturn\n       LineNumberTable:\n         line 872: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getIgnoreSurroundingSpaces();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+         1: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n          4: ireturn\n       LineNumberTable:\n         line 881: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.String getNullString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field nullString:Ljava/lang/String;\n+         1: getfield      #66                 // Field nullString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 895: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.Character getQuoteCharacter();\n     descriptor: ()Ljava/lang/Character;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         1: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 904: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.QuoteMode getQuoteMode();\n     descriptor: ()Lorg/apache/commons/csv/QuoteMode;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+         1: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n          4: areturn\n       LineNumberTable:\n         line 913: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.String getRecordSeparator();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+         1: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 922: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getSkipHeaderRecord();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field skipHeaderRecord:Z\n+         1: getfield      #85                 // Field skipHeaderRecord:Z\n          4: ireturn\n       LineNumberTable:\n         line 931: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getTrailingDelimiter();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field trailingDelimiter:Z\n+         1: getfield      #91                 // Field trailingDelimiter:Z\n          4: ireturn\n       LineNumberTable:\n         line 941: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getTrim();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #27                 // Field trim:Z\n+         1: getfield      #94                 // Field trim:Z\n          4: ireturn\n       LineNumberTable:\n         line 950: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -1565,145 +1562,145 @@\n          2: istore_1\n          3: iconst_1\n          4: istore_2\n          5: bipush        31\n          7: iload_2\n          8: imul\n          9: aload_0\n-        10: getfield      #9                  // Field delimiter:C\n+        10: getfield      #34                 // Field delimiter:C\n         13: iadd\n         14: istore_2\n         15: bipush        31\n         17: iload_2\n         18: imul\n         19: aload_0\n-        20: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        20: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         23: ifnonnull     30\n         26: iconst_0\n         27: goto          37\n         30: aload_0\n-        31: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-        34: invokevirtual #49                 // Method org/apache/commons/csv/QuoteMode.hashCode:()I\n+        31: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        34: invokevirtual #154                // Method org/apache/commons/csv/QuoteMode.hashCode:()I\n         37: iadd\n         38: istore_2\n         39: bipush        31\n         41: iload_2\n         42: imul\n         43: aload_0\n-        44: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+        44: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         47: ifnonnull     54\n         50: iconst_0\n         51: goto          61\n         54: aload_0\n-        55: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-        58: invokevirtual #50                 // Method java/lang/Character.hashCode:()I\n+        55: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+        58: invokevirtual #160                // Method java/lang/Character.hashCode:()I\n         61: iadd\n         62: istore_2\n         63: bipush        31\n         65: iload_2\n         66: imul\n         67: aload_0\n-        68: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        68: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         71: ifnonnull     78\n         74: iconst_0\n         75: goto          85\n         78: aload_0\n-        79: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-        82: invokevirtual #50                 // Method java/lang/Character.hashCode:()I\n+        79: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+        82: invokevirtual #160                // Method java/lang/Character.hashCode:()I\n         85: iadd\n         86: istore_2\n         87: bipush        31\n         89: iload_2\n         90: imul\n         91: aload_0\n-        92: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        92: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         95: ifnonnull     102\n         98: iconst_0\n         99: goto          109\n        102: aload_0\n-       103: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-       106: invokevirtual #50                 // Method java/lang/Character.hashCode:()I\n+       103: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+       106: invokevirtual #160                // Method java/lang/Character.hashCode:()I\n        109: iadd\n        110: istore_2\n        111: bipush        31\n        113: iload_2\n        114: imul\n        115: aload_0\n-       116: getfield      #18                 // Field nullString:Ljava/lang/String;\n+       116: getfield      #66                 // Field nullString:Ljava/lang/String;\n        119: ifnonnull     126\n        122: iconst_0\n        123: goto          133\n        126: aload_0\n-       127: getfield      #18                 // Field nullString:Ljava/lang/String;\n-       130: invokevirtual #51                 // Method java/lang/String.hashCode:()I\n+       127: getfield      #66                 // Field nullString:Ljava/lang/String;\n+       130: invokevirtual #161                // Method java/lang/String.hashCode:()I\n        133: iadd\n        134: istore_2\n        135: bipush        31\n        137: iload_2\n        138: imul\n        139: aload_0\n-       140: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+       140: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n        143: ifeq          152\n        146: sipush        1231\n        149: goto          155\n        152: sipush        1237\n        155: iadd\n        156: istore_2\n        157: bipush        31\n        159: iload_2\n        160: imul\n        161: aload_0\n-       162: getfield      #25                 // Field ignoreHeaderCase:Z\n+       162: getfield      #88                 // Field ignoreHeaderCase:Z\n        165: ifeq          174\n        168: sipush        1231\n        171: goto          177\n        174: sipush        1237\n        177: iadd\n        178: istore_2\n        179: bipush        31\n        181: iload_2\n        182: imul\n        183: aload_0\n-       184: getfield      #16                 // Field ignoreEmptyLines:Z\n+       184: getfield      #59                 // Field ignoreEmptyLines:Z\n        187: ifeq          196\n        190: sipush        1231\n        193: goto          199\n        196: sipush        1237\n        199: iadd\n        200: istore_2\n        201: bipush        31\n        203: iload_2\n        204: imul\n        205: aload_0\n-       206: getfield      #24                 // Field skipHeaderRecord:Z\n+       206: getfield      #85                 // Field skipHeaderRecord:Z\n        209: ifeq          218\n        212: sipush        1231\n        215: goto          221\n        218: sipush        1237\n        221: iadd\n        222: istore_2\n        223: bipush        31\n        225: iload_2\n        226: imul\n        227: aload_0\n-       228: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+       228: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n        231: ifnonnull     238\n        234: iconst_0\n        235: goto          245\n        238: aload_0\n-       239: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n-       242: invokevirtual #51                 // Method java/lang/String.hashCode:()I\n+       239: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n+       242: invokevirtual #161                // Method java/lang/String.hashCode:()I\n        245: iadd\n        246: istore_2\n        247: bipush        31\n        249: iload_2\n        250: imul\n        251: aload_0\n-       252: getfield      #23                 // Field header:[Ljava/lang/String;\n-       255: invokestatic  #52                 // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+       252: getfield      #82                 // Field header:[Ljava/lang/String;\n+       255: invokestatic  #162                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n        258: iadd\n        259: istore_2\n        260: iload_2\n        261: ireturn\n       LineNumberTable:\n         line 955: 0\n         line 956: 3\n@@ -1791,15 +1788,15 @@\n \n   public boolean isCommentMarkerSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+         1: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 981: 0\n@@ -1813,15 +1810,15 @@\n \n   public boolean isEscapeCharacterSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+         1: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 990: 0\n@@ -1835,15 +1832,15 @@\n \n   public boolean isNullStringSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field nullString:Ljava/lang/String;\n+         1: getfield      #66                 // Field nullString:Ljava/lang/String;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 999: 0\n@@ -1857,15 +1854,15 @@\n \n   public boolean isQuoteCharacterSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         1: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 1008: 0\n@@ -1878,19 +1875,19 @@\n           stack = [ int ]\n \n   public org.apache.commons.csv.CSVParser parse(java.io.Reader) throws java.io.IOException;\n     descriptor: (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #53                 // class org/apache/commons/csv/CSVParser\n+         0: new           #165                // class org/apache/commons/csv/CSVParser\n          3: dup\n          4: aload_1\n          5: aload_0\n-         6: invokespecial #54                 // Method org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+         6: invokespecial #167                // Method org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n          9: areturn\n       LineNumberTable:\n         line 1025: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      10     1    in   Ljava/io/Reader;\n@@ -1898,19 +1895,19 @@\n       throws java.io.IOException\n \n   public org.apache.commons.csv.CSVPrinter print(java.lang.Appendable) throws java.io.IOException;\n     descriptor: (Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #36                 // class org/apache/commons/csv/CSVPrinter\n+         0: new           #122                // class org/apache/commons/csv/CSVPrinter\n          3: dup\n          4: aload_1\n          5: aload_0\n-         6: invokespecial #37                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+         6: invokespecial #124                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n          9: areturn\n       LineNumberTable:\n         line 1042: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      10     1   out   Ljava/lang/Appendable;\n@@ -1918,26 +1915,26 @@\n       throws java.io.IOException\n \n   public org.apache.commons.csv.CSVPrinter print(java.io.File, java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=3, args_size=3\n-         0: new           #36                 // class org/apache/commons/csv/CSVPrinter\n+         0: new           #122                // class org/apache/commons/csv/CSVPrinter\n          3: dup\n-         4: new           #55                 // class java/io/OutputStreamWriter\n+         4: new           #170                // class java/io/OutputStreamWriter\n          7: dup\n-         8: new           #56                 // class java/io/FileOutputStream\n+         8: new           #172                // class java/io/FileOutputStream\n         11: dup\n         12: aload_1\n-        13: invokespecial #57                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+        13: invokespecial #174                // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n         16: aload_2\n-        17: invokespecial #58                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+        17: invokespecial #177                // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n         20: aload_0\n-        21: invokespecial #37                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+        21: invokespecial #124                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n         24: areturn\n       LineNumberTable:\n         line 1064: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      25     1   out   Ljava/io/File;\n@@ -1950,69 +1947,69 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=5, args_size=4\n          0: aload_1\n          1: ifnonnull     74\n          4: aconst_null\n          5: aload_0\n-         6: getfield      #18                 // Field nullString:Ljava/lang/String;\n+         6: getfield      #66                 // Field nullString:Ljava/lang/String;\n          9: if_acmpne     19\n-        12: ldc           #59                 // String\n+        12: ldc           #180                // String\n         14: astore        4\n         16: goto          94\n-        19: getstatic     #60                 // Field org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n+        19: getstatic     #182                // Field org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n         22: aload_0\n-        23: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        23: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         26: if_acmpne     65\n-        29: new           #61                 // class java/lang/StringBuilder\n+        29: new           #185                // class java/lang/StringBuilder\n         32: dup\n-        33: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        33: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n         36: aload_0\n-        37: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-        40: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        37: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+        40: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n         43: aload_0\n-        44: getfield      #18                 // Field nullString:Ljava/lang/String;\n-        47: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        44: getfield      #66                 // Field nullString:Ljava/lang/String;\n+        47: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         50: aload_0\n-        51: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-        54: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        57: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        51: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+        54: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        57: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         60: astore        4\n         62: goto          94\n         65: aload_0\n-        66: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        66: getfield      #66                 // Field nullString:Ljava/lang/String;\n         69: astore        4\n         71: goto          94\n         74: aload_1\n-        75: instanceof    #66                 // class java/lang/CharSequence\n+        75: instanceof    #196                // class java/lang/CharSequence\n         78: ifeq          88\n         81: aload_1\n-        82: checkcast     #66                 // class java/lang/CharSequence\n+        82: checkcast     #196                // class java/lang/CharSequence\n         85: goto          92\n         88: aload_1\n-        89: invokevirtual #67                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+        89: invokevirtual #198                // Method java/lang/Object.toString:()Ljava/lang/String;\n         92: astore        4\n         94: aload_0\n-        95: invokevirtual #68                 // Method getTrim:()Z\n+        95: invokevirtual #199                // Method getTrim:()Z\n         98: ifeq          110\n        101: aload_0\n        102: aload         4\n-       104: invokespecial #69                 // Method trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+       104: invokespecial #203                // Method trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n        107: goto          112\n        110: aload         4\n        112: astore        4\n        114: aload_0\n        115: aload_1\n        116: aload         4\n        118: iconst_0\n        119: aload         4\n-       121: invokeinterface #70,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+       121: invokeinterface #206,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n        126: aload_2\n        127: iload_3\n-       128: invokespecial #71                 // Method print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+       128: invokespecial #209                // Method print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n        131: return\n       LineNumberTable:\n         line 1085: 0\n         line 1087: 4\n         line 1088: 12\n         line 1090: 19\n         line 1091: 29\n@@ -2052,53 +2049,53 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=7, args_size=7\n          0: iload         6\n          2: ifne          17\n          5: aload         5\n          7: aload_0\n-         8: invokevirtual #72                 // Method getDelimiter:()C\n-        11: invokeinterface #73,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+         8: invokevirtual #213                // Method getDelimiter:()C\n+        11: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n         16: pop\n         17: aload_1\n         18: ifnonnull     33\n         21: aload         5\n         23: aload_2\n-        24: invokeinterface #74,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+        24: invokeinterface #221,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n         29: pop\n         30: goto          90\n         33: aload_0\n-        34: invokevirtual #75                 // Method isQuoteCharacterSet:()Z\n+        34: invokevirtual #224                // Method isQuoteCharacterSet:()Z\n         37: ifeq          56\n         40: aload_0\n         41: aload_1\n         42: aload_2\n         43: iload_3\n         44: iload         4\n         46: aload         5\n         48: iload         6\n-        50: invokespecial #76                 // Method printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+        50: invokespecial #227                // Method printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n         53: goto          90\n         56: aload_0\n-        57: invokevirtual #77                 // Method isEscapeCharacterSet:()Z\n+        57: invokevirtual #230                // Method isEscapeCharacterSet:()Z\n         60: ifeq          76\n         63: aload_0\n         64: aload_2\n         65: iload_3\n         66: iload         4\n         68: aload         5\n-        70: invokespecial #78                 // Method printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n+        70: invokespecial #233                // Method printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n         73: goto          90\n         76: aload         5\n         78: aload_2\n         79: iload_3\n         80: iload_3\n         81: iload         4\n         83: iadd\n-        84: invokeinterface #79,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+        84: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n         89: pop\n         90: return\n       LineNumberTable:\n         line 1105: 0\n         line 1106: 5\n         line 1108: 17\n         line 1109: 21\n@@ -2131,17 +2128,17 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: anewarray     #80                 // class java/nio/file/OpenOption\n-         7: invokestatic  #81                 // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-        10: invokevirtual #82                 // Method print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+         4: anewarray     #240                // class java/nio/file/OpenOption\n+         7: invokestatic  #242                // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+        10: invokevirtual #248                // Method print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n         13: areturn\n       LineNumberTable:\n         line 1137: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      14     1   out   Ljava/nio/file/Path;\n@@ -2159,26 +2156,26 @@\n          3: iload_2\n          4: istore        6\n          6: iload_2\n          7: iload_3\n          8: iadd\n          9: istore        7\n         11: aload_0\n-        12: invokevirtual #72                 // Method getDelimiter:()C\n+        12: invokevirtual #213                // Method getDelimiter:()C\n         15: istore        8\n         17: aload_0\n-        18: invokevirtual #83                 // Method getEscapeCharacter:()Ljava/lang/Character;\n-        21: invokevirtual #2                  // Method java/lang/Character.charValue:()C\n+        18: invokevirtual #251                // Method getEscapeCharacter:()Ljava/lang/Character;\n+        21: invokevirtual #3                  // Method java/lang/Character.charValue:()C\n         24: istore        9\n         26: iload         6\n         28: iload         7\n         30: if_icmpge     148\n         33: aload_1\n         34: iload         6\n-        36: invokeinterface #84,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        36: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         41: istore        10\n         43: iload         10\n         45: bipush        13\n         47: if_icmpeq     71\n         50: iload         10\n         52: bipush        10\n         54: if_icmpeq     71\n@@ -2191,49 +2188,49 @@\n         71: iload         6\n         73: iload         5\n         75: if_icmple     91\n         78: aload         4\n         80: aload_1\n         81: iload         5\n         83: iload         6\n-        85: invokeinterface #79,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+        85: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n         90: pop\n         91: iload         10\n         93: bipush        10\n         95: if_icmpne     105\n         98: bipush        110\n        100: istore        10\n        102: goto          116\n        105: iload         10\n        107: bipush        13\n        109: if_icmpne     116\n        112: bipush        114\n        114: istore        10\n        116: aload         4\n        118: iload         9\n-       120: invokeinterface #73,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       120: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        125: pop\n        126: aload         4\n        128: iload         10\n-       130: invokeinterface #73,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       130: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        135: pop\n        136: iload         6\n        138: iconst_1\n        139: iadd\n        140: istore        5\n        142: iinc          6, 1\n        145: goto          26\n        148: iload         6\n        150: iload         5\n        152: if_icmple     168\n        155: aload         4\n        157: aload_1\n        158: iload         5\n        160: iload         6\n-       162: invokeinterface #79,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       162: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        167: pop\n        168: return\n       LineNumberTable:\n         line 1145: 0\n         line 1146: 3\n         line 1147: 6\n         line 1149: 11\n@@ -2298,80 +2295,80 @@\n          6: iload_3\n          7: istore        9\n          9: iload_3\n         10: iload         4\n         12: iadd\n         13: istore        10\n         15: aload_0\n-        16: invokevirtual #72                 // Method getDelimiter:()C\n+        16: invokevirtual #213                // Method getDelimiter:()C\n         19: istore        11\n         21: aload_0\n-        22: invokevirtual #85                 // Method getQuoteCharacter:()Ljava/lang/Character;\n-        25: invokevirtual #2                  // Method java/lang/Character.charValue:()C\n+        22: invokevirtual #259                // Method getQuoteCharacter:()Ljava/lang/Character;\n+        25: invokevirtual #3                  // Method java/lang/Character.charValue:()C\n         28: istore        12\n         30: aload_0\n-        31: invokevirtual #86                 // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+        31: invokevirtual #262                // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n         34: astore        13\n         36: aload         13\n         38: ifnonnull     46\n-        41: getstatic     #87                 // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+        41: getstatic     #266                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n         44: astore        13\n-        46: getstatic     #88                 // Field org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+        46: getstatic     #269                // Field org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n         49: aload         13\n-        51: invokevirtual #89                 // Method org/apache/commons/csv/QuoteMode.ordinal:()I\n+        51: invokevirtual #275                // Method org/apache/commons/csv/QuoteMode.ordinal:()I\n         54: iaload\n         55: tableswitch   { // 1 to 5\n                        1: 88\n                        2: 88\n                        3: 94\n                        4: 111\n                        5: 122\n                  default: 268\n             }\n         88: iconst_1\n         89: istore        7\n-        91: goto          296\n+        91: goto          297\n         94: aload_1\n-        95: instanceof    #90                 // class java/lang/Number\n+        95: instanceof    #278                // class java/lang/Number\n         98: ifne          105\n        101: iconst_1\n        102: goto          106\n        105: iconst_0\n        106: istore        7\n-       108: goto          296\n+       108: goto          297\n        111: aload_0\n        112: aload_2\n        113: iload_3\n        114: iload         4\n        116: aload         5\n-       118: invokespecial #78                 // Method printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n+       118: invokespecial #233                // Method printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n        121: return\n        122: iload         4\n        124: ifgt          138\n        127: iload         6\n        129: ifeq          249\n        132: iconst_1\n        133: istore        7\n        135: goto          249\n        138: aload_2\n        139: iload         9\n-       141: invokeinterface #84,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       141: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        146: istore        14\n        148: iload         14\n        150: bipush        35\n        152: if_icmpgt     161\n        155: iconst_1\n        156: istore        7\n        158: goto          249\n        161: iload         9\n        163: iload         10\n        165: if_icmpge     218\n        168: aload_2\n        169: iload         9\n-       171: invokeinterface #84,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       171: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        176: istore        14\n        178: iload         14\n        180: bipush        10\n        182: if_icmpeq     206\n        185: iload         14\n        187: bipush        13\n        189: if_icmpeq     206\n@@ -2390,88 +2387,88 @@\n        220: ifne          249\n        223: iload         10\n        225: iconst_1\n        226: isub\n        227: istore        9\n        229: aload_2\n        230: iload         9\n-       232: invokeinterface #84,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       232: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        237: istore        14\n        239: iload         14\n        241: bipush        32\n        243: if_icmpgt     249\n        246: iconst_1\n        247: istore        7\n        249: iload         7\n-       251: ifne          296\n+       251: ifne          297\n        254: aload         5\n        256: aload_2\n        257: iload         8\n        259: iload         10\n-       261: invokeinterface #79,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       261: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        266: pop\n        267: return\n-       268: new           #45                 // class java/lang/IllegalStateException\n+       268: new           #148                // class java/lang/IllegalStateException\n        271: dup\n-       272: new           #61                 // class java/lang/StringBuilder\n+       272: new           #185                // class java/lang/StringBuilder\n        275: dup\n-       276: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       279: ldc           #91                 // String Unexpected Quote value:\n-       281: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       284: aload         13\n-       286: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       289: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       292: invokespecial #92                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       295: athrow\n-       296: iload         7\n-       298: ifne          315\n-       301: aload         5\n-       303: aload_2\n-       304: iload         8\n-       306: iload         10\n-       308: invokeinterface #79,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-       313: pop\n-       314: return\n-       315: aload         5\n-       317: iload         12\n-       319: invokeinterface #73,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-       324: pop\n-       325: iload         9\n-       327: iload         10\n-       329: if_icmpge     374\n-       332: aload_2\n-       333: iload         9\n-       335: invokeinterface #84,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n-       340: istore        14\n-       342: iload         14\n-       344: iload         12\n-       346: if_icmpne     368\n-       349: aload         5\n-       351: aload_2\n-       352: iload         8\n-       354: iload         9\n-       356: iconst_1\n-       357: iadd\n-       358: invokeinterface #79,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-       363: pop\n-       364: iload         9\n-       366: istore        8\n-       368: iinc          9, 1\n-       371: goto          325\n-       374: aload         5\n-       376: aload_2\n-       377: iload         8\n-       379: iload         9\n-       381: invokeinterface #79,  4           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-       386: pop\n-       387: aload         5\n-       389: iload         12\n-       391: invokeinterface #73,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-       396: pop\n-       397: return\n+       276: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n+       279: ldc_w         #280                // String Unexpected Quote value:\n+       282: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       285: aload         13\n+       287: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       290: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       293: invokespecial #282                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       296: athrow\n+       297: iload         7\n+       299: ifne          316\n+       302: aload         5\n+       304: aload_2\n+       305: iload         8\n+       307: iload         10\n+       309: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       314: pop\n+       315: return\n+       316: aload         5\n+       318: iload         12\n+       320: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       325: pop\n+       326: iload         9\n+       328: iload         10\n+       330: if_icmpge     375\n+       333: aload_2\n+       334: iload         9\n+       336: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       341: istore        14\n+       343: iload         14\n+       345: iload         12\n+       347: if_icmpne     369\n+       350: aload         5\n+       352: aload_2\n+       353: iload         8\n+       355: iload         9\n+       357: iconst_1\n+       358: iadd\n+       359: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       364: pop\n+       365: iload         9\n+       367: istore        8\n+       369: iinc          9, 1\n+       372: goto          326\n+       375: aload         5\n+       377: aload_2\n+       378: iload         8\n+       380: iload         9\n+       382: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       387: pop\n+       388: aload         5\n+       390: iload         12\n+       392: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       397: pop\n+       398: return\n       LineNumberTable:\n         line 1186: 0\n         line 1187: 3\n         line 1188: 6\n         line 1189: 9\n         line 1191: 15\n         line 1192: 21\n@@ -2502,46 +2499,46 @@\n         line 1239: 229\n         line 1242: 239\n         line 1243: 246\n         line 1249: 249\n         line 1251: 254\n         line 1252: 267\n         line 1256: 268\n-        line 1259: 296\n-        line 1261: 301\n-        line 1262: 314\n-        line 1266: 315\n-        line 1270: 325\n-        line 1271: 332\n-        line 1272: 342\n-        line 1276: 349\n-        line 1279: 364\n-        line 1281: 368\n-        line 1282: 371\n-        line 1285: 374\n-        line 1286: 387\n-        line 1287: 397\n+        line 1259: 297\n+        line 1261: 302\n+        line 1262: 315\n+        line 1266: 316\n+        line 1270: 326\n+        line 1271: 333\n+        line 1272: 343\n+        line 1276: 350\n+        line 1279: 365\n+        line 1281: 369\n+        line 1282: 372\n+        line 1285: 375\n+        line 1286: 388\n+        line 1287: 398\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n           148     101    14     c   C\n-          342      29    14     c   C\n-            0     398     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            0     398     1 object   Ljava/lang/Object;\n-            0     398     2 value   Ljava/lang/CharSequence;\n-            0     398     3 offset   I\n-            0     398     4   len   I\n-            0     398     5   out   Ljava/lang/Appendable;\n-            0     398     6 newRecord   Z\n-            3     395     7 quote   Z\n-            6     392     8 start   I\n-            9     389     9   pos   I\n-           15     383    10   end   I\n-           21     377    11 delimChar   C\n-           30     368    12 quoteChar   C\n-           36     362    13 quoteModePolicy   Lorg/apache/commons/csv/QuoteMode;\n+          343      29    14     c   C\n+            0     399     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            0     399     1 object   Ljava/lang/Object;\n+            0     399     2 value   Ljava/lang/CharSequence;\n+            0     399     3 offset   I\n+            0     399     4   len   I\n+            0     399     5   out   Ljava/lang/Appendable;\n+            0     399     6 newRecord   Z\n+            3     396     7 quote   Z\n+            6     393     8 start   I\n+            9     390     9   pos   I\n+           15     384    10   end   I\n+           21     378    11 delimChar   C\n+           30     369    12 quoteChar   C\n+           36     363    13 quoteModePolicy   Lorg/apache/commons/csv/QuoteMode;\n       StackMapTable: number_of_entries = 19\n         frame_type = 255 /* full_frame */\n           offset_delta = 46\n           locals = [ class org/apache/commons/csv/CSVFormat, class java/lang/Object, class java/lang/CharSequence, int, int, class java/lang/Appendable, int, int, int, int, int, int, int, class org/apache/commons/csv/QuoteMode ]\n           stack = []\n         frame_type = 41 /* same */\n         frame_type = 5 /* same */\n@@ -2556,15 +2553,15 @@\n           locals = [ int ]\n         frame_type = 44 /* same */\n         frame_type = 5 /* same */\n         frame_type = 5 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 30\n         frame_type = 18 /* same */\n-        frame_type = 27 /* same */\n+        frame_type = 28 /* same */\n         frame_type = 18 /* same */\n         frame_type = 9 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 42\n           locals = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 5\n@@ -2572,19 +2569,19 @@\n       throws java.io.IOException\n \n   public org.apache.commons.csv.CSVPrinter printer() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/csv/CSVPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #36                 // class org/apache/commons/csv/CSVPrinter\n+         0: new           #122                // class org/apache/commons/csv/CSVPrinter\n          3: dup\n-         4: getstatic     #93                 // Field java/lang/System.out:Ljava/io/PrintStream;\n+         4: getstatic     #285                // Field java/lang/System.out:Ljava/io/PrintStream;\n          7: aload_0\n-         8: invokespecial #37                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+         8: invokespecial #124                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n         11: areturn\n       LineNumberTable:\n         line 1302: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Exceptions:\n@@ -2592,28 +2589,28 @@\n \n   public void println(java.lang.Appendable) throws java.io.IOException;\n     descriptor: (Ljava/lang/Appendable;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #94                 // Method getTrailingDelimiter:()Z\n+         1: invokevirtual #291                // Method getTrailingDelimiter:()Z\n          4: ifeq          18\n          7: aload_1\n          8: aload_0\n-         9: invokevirtual #72                 // Method getDelimiter:()C\n-        12: invokeinterface #73,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+         9: invokevirtual #213                // Method getDelimiter:()C\n+        12: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n         17: pop\n         18: aload_0\n-        19: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        19: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         22: ifnull        36\n         25: aload_1\n         26: aload_0\n-        27: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n-        30: invokeinterface #74,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+        27: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n+        30: invokeinterface #221,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n         35: pop\n         36: return\n       LineNumberTable:\n         line 1315: 0\n         line 1316: 7\n         line 1318: 18\n         line 1319: 25\n@@ -2645,20 +2642,20 @@\n         11: aaload\n         12: aload_1\n         13: iload_3\n         14: ifne          21\n         17: iconst_1\n         18: goto          22\n         21: iconst_0\n-        22: invokevirtual #95                 // Method print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+        22: invokevirtual #294                // Method print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n         25: iinc          3, 1\n         28: goto          2\n         31: aload_0\n         32: aload_1\n-        33: invokevirtual #96                 // Method println:(Ljava/lang/Appendable;)V\n+        33: invokevirtual #297                // Method println:(Ljava/lang/Appendable;)V\n         36: return\n       LineNumberTable:\n         line 1341: 0\n         line 1342: 8\n         line 1341: 25\n         line 1344: 31\n         line 1345: 36\n@@ -2686,230 +2683,230 @@\n       throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n-         0: new           #61                 // class java/lang/StringBuilder\n+         0: new           #185                // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc           #97                 // String Delimiter=<\n-        11: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        14: aload_0\n-        15: getfield      #9                  // Field delimiter:C\n-        18: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        21: bipush        62\n-        23: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        26: pop\n-        27: aload_0\n-        28: invokevirtual #77                 // Method isEscapeCharacterSet:()Z\n-        31: ifeq          60\n-        34: aload_1\n-        35: bipush        32\n-        37: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        40: pop\n-        41: aload_1\n-        42: ldc           #99                 // String Escape=<\n-        44: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        47: aload_0\n-        48: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-        51: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        54: bipush        62\n-        56: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        59: pop\n-        60: aload_0\n-        61: invokevirtual #75                 // Method isQuoteCharacterSet:()Z\n-        64: ifeq          93\n-        67: aload_1\n-        68: bipush        32\n-        70: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        73: pop\n-        74: aload_1\n-        75: ldc           #100                // String QuoteChar=<\n-        77: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        80: aload_0\n-        81: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-        84: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        87: bipush        62\n-        89: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        92: pop\n-        93: aload_0\n-        94: invokevirtual #101                // Method isCommentMarkerSet:()Z\n-        97: ifeq          126\n-       100: aload_1\n-       101: bipush        32\n-       103: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       106: pop\n-       107: aload_1\n-       108: ldc           #102                // String CommentStart=<\n-       110: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       113: aload_0\n-       114: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-       117: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       120: bipush        62\n-       122: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       125: pop\n-       126: aload_0\n-       127: invokevirtual #103                // Method isNullStringSet:()Z\n-       130: ifeq          159\n-       133: aload_1\n-       134: bipush        32\n-       136: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       139: pop\n-       140: aload_1\n-       141: ldc           #104                // String NullString=<\n-       143: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       146: aload_0\n-       147: getfield      #18                 // Field nullString:Ljava/lang/String;\n-       150: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       153: bipush        62\n-       155: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       158: pop\n-       159: aload_0\n-       160: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n-       163: ifnull        192\n-       166: aload_1\n-       167: bipush        32\n-       169: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       172: pop\n-       173: aload_1\n-       174: ldc           #105                // String RecordSeparator=<\n-       176: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       179: aload_0\n-       180: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n-       183: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       186: bipush        62\n-       188: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       191: pop\n-       192: aload_0\n-       193: invokevirtual #106                // Method getIgnoreEmptyLines:()Z\n-       196: ifeq          206\n-       199: aload_1\n-       200: ldc           #107                // String  EmptyLines:ignored\n-       202: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       205: pop\n-       206: aload_0\n-       207: invokevirtual #108                // Method getIgnoreSurroundingSpaces:()Z\n-       210: ifeq          220\n-       213: aload_1\n-       214: ldc           #109                // String  SurroundingSpaces:ignored\n-       216: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       219: pop\n-       220: aload_0\n-       221: invokevirtual #110                // Method getIgnoreHeaderCase:()Z\n-       224: ifeq          234\n-       227: aload_1\n-       228: ldc           #111                // String  IgnoreHeaderCase:ignored\n-       230: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       233: pop\n-       234: aload_1\n-       235: ldc           #112                // String  SkipHeaderRecord:\n-       237: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       240: aload_0\n-       241: getfield      #24                 // Field skipHeaderRecord:Z\n-       244: invokevirtual #113                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n-       247: pop\n-       248: aload_0\n-       249: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n-       252: ifnull        279\n-       255: aload_1\n-       256: bipush        32\n-       258: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       261: pop\n-       262: aload_1\n-       263: ldc           #114                // String HeaderComments:\n-       265: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       268: aload_0\n-       269: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n-       272: invokestatic  #115                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       275: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       278: pop\n+         9: ldc_w         #301                // String Delimiter=<\n+        12: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        15: aload_0\n+        16: getfield      #34                 // Field delimiter:C\n+        19: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        22: bipush        62\n+        24: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        27: pop\n+        28: aload_0\n+        29: invokevirtual #230                // Method isEscapeCharacterSet:()Z\n+        32: ifeq          62\n+        35: aload_1\n+        36: bipush        32\n+        38: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        41: pop\n+        42: aload_1\n+        43: ldc_w         #306                // String Escape=<\n+        46: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        49: aload_0\n+        50: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+        53: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        56: bipush        62\n+        58: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        61: pop\n+        62: aload_0\n+        63: invokevirtual #224                // Method isQuoteCharacterSet:()Z\n+        66: ifeq          96\n+        69: aload_1\n+        70: bipush        32\n+        72: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        75: pop\n+        76: aload_1\n+        77: ldc_w         #308                // String QuoteChar=<\n+        80: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        83: aload_0\n+        84: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+        87: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        90: bipush        62\n+        92: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        95: pop\n+        96: aload_0\n+        97: invokevirtual #310                // Method isCommentMarkerSet:()Z\n+       100: ifeq          130\n+       103: aload_1\n+       104: bipush        32\n+       106: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       109: pop\n+       110: aload_1\n+       111: ldc_w         #313                // String CommentStart=<\n+       114: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       117: aload_0\n+       118: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+       121: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       124: bipush        62\n+       126: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       129: pop\n+       130: aload_0\n+       131: invokevirtual #315                // Method isNullStringSet:()Z\n+       134: ifeq          164\n+       137: aload_1\n+       138: bipush        32\n+       140: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       143: pop\n+       144: aload_1\n+       145: ldc_w         #318                // String NullString=<\n+       148: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       151: aload_0\n+       152: getfield      #66                 // Field nullString:Ljava/lang/String;\n+       155: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       158: bipush        62\n+       160: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       163: pop\n+       164: aload_0\n+       165: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n+       168: ifnull        198\n+       171: aload_1\n+       172: bipush        32\n+       174: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       177: pop\n+       178: aload_1\n+       179: ldc_w         #320                // String RecordSeparator=<\n+       182: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       185: aload_0\n+       186: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n+       189: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       192: bipush        62\n+       194: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       197: pop\n+       198: aload_0\n+       199: invokevirtual #322                // Method getIgnoreEmptyLines:()Z\n+       202: ifeq          213\n+       205: aload_1\n+       206: ldc_w         #325                // String  EmptyLines:ignored\n+       209: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       212: pop\n+       213: aload_0\n+       214: invokevirtual #327                // Method getIgnoreSurroundingSpaces:()Z\n+       217: ifeq          228\n+       220: aload_1\n+       221: ldc_w         #330                // String  SurroundingSpaces:ignored\n+       224: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       227: pop\n+       228: aload_0\n+       229: invokevirtual #332                // Method getIgnoreHeaderCase:()Z\n+       232: ifeq          243\n+       235: aload_1\n+       236: ldc_w         #335                // String  IgnoreHeaderCase:ignored\n+       239: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       242: pop\n+       243: aload_1\n+       244: ldc_w         #337                // String  SkipHeaderRecord:\n+       247: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       250: aload_0\n+       251: getfield      #85                 // Field skipHeaderRecord:Z\n+       254: invokevirtual #339                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n+       257: pop\n+       258: aload_0\n+       259: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n+       262: ifnull        290\n+       265: aload_1\n+       266: bipush        32\n+       268: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       271: pop\n+       272: aload_1\n+       273: ldc_w         #342                // String HeaderComments:\n+       276: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        279: aload_0\n-       280: getfield      #23                 // Field header:[Ljava/lang/String;\n-       283: ifnull        310\n-       286: aload_1\n-       287: bipush        32\n-       289: invokevirtual #98                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       292: pop\n-       293: aload_1\n-       294: ldc           #116                // String Header:\n-       296: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       299: aload_0\n-       300: getfield      #23                 // Field header:[Ljava/lang/String;\n-       303: invokestatic  #115                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       306: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       309: pop\n-       310: aload_1\n-       311: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       314: areturn\n+       280: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n+       283: invokestatic  #344                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       286: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       289: pop\n+       290: aload_0\n+       291: getfield      #82                 // Field header:[Ljava/lang/String;\n+       294: ifnull        322\n+       297: aload_1\n+       298: bipush        32\n+       300: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       303: pop\n+       304: aload_1\n+       305: ldc_w         #347                // String Header:\n+       308: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       311: aload_0\n+       312: getfield      #82                 // Field header:[Ljava/lang/String;\n+       315: invokestatic  #344                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       318: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       321: pop\n+       322: aload_1\n+       323: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       326: areturn\n       LineNumberTable:\n         line 1349: 0\n         line 1350: 8\n-        line 1351: 27\n-        line 1352: 34\n-        line 1353: 41\n-        line 1355: 60\n-        line 1356: 67\n-        line 1357: 74\n-        line 1359: 93\n-        line 1360: 100\n-        line 1361: 107\n-        line 1363: 126\n-        line 1364: 133\n-        line 1365: 140\n-        line 1367: 159\n-        line 1368: 166\n-        line 1369: 173\n-        line 1371: 192\n-        line 1372: 199\n-        line 1374: 206\n-        line 1375: 213\n-        line 1377: 220\n-        line 1378: 227\n-        line 1380: 234\n-        line 1381: 248\n-        line 1382: 255\n-        line 1383: 262\n-        line 1385: 279\n-        line 1386: 286\n-        line 1387: 293\n-        line 1389: 310\n+        line 1351: 28\n+        line 1352: 35\n+        line 1353: 42\n+        line 1355: 62\n+        line 1356: 69\n+        line 1357: 76\n+        line 1359: 96\n+        line 1360: 103\n+        line 1361: 110\n+        line 1363: 130\n+        line 1364: 137\n+        line 1365: 144\n+        line 1367: 164\n+        line 1368: 171\n+        line 1369: 178\n+        line 1371: 198\n+        line 1372: 205\n+        line 1374: 213\n+        line 1375: 220\n+        line 1377: 228\n+        line 1378: 235\n+        line 1380: 243\n+        line 1381: 258\n+        line 1382: 265\n+        line 1383: 272\n+        line 1385: 290\n+        line 1386: 297\n+        line 1387: 304\n+        line 1389: 322\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     315     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            8     307     1    sb   Ljava/lang/StringBuilder;\n+            0     327     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            8     319     1    sb   Ljava/lang/StringBuilder;\n       StackMapTable: number_of_entries = 10\n         frame_type = 252 /* append */\n-          offset_delta = 60\n+          offset_delta = 62\n           locals = [ class java/lang/StringBuilder ]\n-        frame_type = 32 /* same */\n-        frame_type = 32 /* same */\n-        frame_type = 32 /* same */\n-        frame_type = 32 /* same */\n-        frame_type = 13 /* same */\n-        frame_type = 13 /* same */\n-        frame_type = 13 /* same */\n-        frame_type = 44 /* same */\n-        frame_type = 30 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 14 /* same */\n+        frame_type = 14 /* same */\n+        frame_type = 14 /* same */\n+        frame_type = 46 /* same */\n+        frame_type = 31 /* same */\n \n   private java.lang.String[] toStringArray(java.lang.Object[]);\n     descriptor: ([Ljava/lang/Object;)[Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n          7: arraylength\n-         8: anewarray     #117                // class java/lang/String\n+         8: anewarray     #112                // class java/lang/String\n         11: astore_2\n         12: iconst_0\n         13: istore_3\n         14: iload_3\n         15: aload_1\n         16: arraylength\n         17: if_icmpge     48\n@@ -2920,15 +2917,15 @@\n         25: aload_2\n         26: iload_3\n         27: aload         4\n         29: ifnonnull     36\n         32: aconst_null\n         33: goto          41\n         36: aload         4\n-        38: invokevirtual #67                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+        38: invokevirtual #198                // Method java/lang/Object.toString:()Ljava/lang/String;\n         41: aastore\n         42: iinc          3, 1\n         45: goto          14\n         48: aload_2\n         49: areturn\n       LineNumberTable:\n         line 1393: 0\n@@ -2964,58 +2961,58 @@\n \n   private java.lang.CharSequence trim(java.lang.CharSequence);\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_1\n-         1: instanceof    #117                // class java/lang/String\n+         1: instanceof    #112                // class java/lang/String\n          4: ifeq          15\n          7: aload_1\n-         8: checkcast     #117                // class java/lang/String\n-        11: invokevirtual #40                 // Method java/lang/String.trim:()Ljava/lang/String;\n+         8: checkcast     #112                // class java/lang/String\n+        11: invokevirtual #135                // Method java/lang/String.trim:()Ljava/lang/String;\n         14: areturn\n         15: aload_1\n-        16: invokeinterface #70,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        16: invokeinterface #206,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         21: istore_2\n         22: iload_2\n         23: istore_3\n         24: iconst_0\n         25: istore        4\n         27: iload         4\n         29: iload_3\n         30: if_icmpge     52\n         33: aload_1\n         34: iload         4\n-        36: invokeinterface #84,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        36: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         41: bipush        32\n         43: if_icmpgt     52\n         46: iinc          4, 1\n         49: goto          27\n         52: iload         4\n         54: iload_3\n         55: if_icmpge     78\n         58: aload_1\n         59: iload_3\n         60: iconst_1\n         61: isub\n-        62: invokeinterface #84,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        62: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         67: bipush        32\n         69: if_icmpgt     78\n         72: iinc          3, -1\n         75: goto          52\n         78: iload         4\n         80: ifgt          88\n         83: iload_3\n         84: iload_2\n         85: if_icmpge     100\n         88: aload_1\n         89: iload         4\n         91: iload_3\n-        92: invokeinterface #118,  3          // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+        92: invokeinterface #349,  3          // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n         97: goto          101\n        100: aload_1\n        101: areturn\n       LineNumberTable:\n         line 1405: 0\n         line 1406: 7\n         line 1408: 15\n@@ -3047,358 +3044,358 @@\n \n   private void validate() throws java.lang.IllegalArgumentException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=6, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field delimiter:C\n-         4: invokestatic  #3                  // Method isLineBreak:(C)Z\n-         7: ifeq          20\n-        10: new           #119                // class java/lang/IllegalArgumentException\n+         1: getfield      #34                 // Field delimiter:C\n+         4: invokestatic  #9                  // Method isLineBreak:(C)Z\n+         7: ifeq          21\n+        10: new           #353                // class java/lang/IllegalArgumentException\n         13: dup\n-        14: ldc           #120                // String The delimiter cannot be a line break\n-        16: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        19: athrow\n-        20: aload_0\n-        21: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-        24: ifnull        76\n-        27: aload_0\n-        28: getfield      #9                  // Field delimiter:C\n-        31: aload_0\n-        32: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-        35: invokevirtual #2                  // Method java/lang/Character.charValue:()C\n-        38: if_icmpne     76\n-        41: new           #119                // class java/lang/IllegalArgumentException\n-        44: dup\n-        45: new           #61                 // class java/lang/StringBuilder\n-        48: dup\n-        49: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        52: ldc           #122                // String The quoteChar character and the delimiter cannot be the same (\\'\n-        54: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        57: aload_0\n-        58: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-        61: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        64: ldc           #123                // String \\')\n-        66: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        69: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        72: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        75: athrow\n-        76: aload_0\n-        77: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-        80: ifnull        132\n-        83: aload_0\n-        84: getfield      #9                  // Field delimiter:C\n-        87: aload_0\n-        88: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-        91: invokevirtual #2                  // Method java/lang/Character.charValue:()C\n-        94: if_icmpne     132\n-        97: new           #119                // class java/lang/IllegalArgumentException\n-       100: dup\n-       101: new           #61                 // class java/lang/StringBuilder\n-       104: dup\n-       105: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       108: ldc           #124                // String The escape character and the delimiter cannot be the same (\\'\n-       110: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       113: aload_0\n-       114: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-       117: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       120: ldc           #123                // String \\')\n-       122: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       125: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       128: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       131: athrow\n-       132: aload_0\n-       133: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-       136: ifnull        188\n-       139: aload_0\n-       140: getfield      #9                  // Field delimiter:C\n-       143: aload_0\n-       144: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-       147: invokevirtual #2                  // Method java/lang/Character.charValue:()C\n-       150: if_icmpne     188\n-       153: new           #119                // class java/lang/IllegalArgumentException\n-       156: dup\n-       157: new           #61                 // class java/lang/StringBuilder\n-       160: dup\n-       161: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       164: ldc           #125                // String The comment start character and the delimiter cannot be the same (\\'\n-       166: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       169: aload_0\n-       170: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-       173: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       176: ldc           #123                // String \\')\n-       178: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       181: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       184: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       187: athrow\n-       188: aload_0\n-       189: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-       192: ifnull        244\n+        14: ldc_w         #355                // String The delimiter cannot be a line break\n+        17: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: athrow\n+        21: aload_0\n+        22: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+        25: ifnull        79\n+        28: aload_0\n+        29: getfield      #34                 // Field delimiter:C\n+        32: aload_0\n+        33: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+        36: invokevirtual #3                  // Method java/lang/Character.charValue:()C\n+        39: if_icmpne     79\n+        42: new           #353                // class java/lang/IllegalArgumentException\n+        45: dup\n+        46: new           #185                // class java/lang/StringBuilder\n+        49: dup\n+        50: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n+        53: ldc_w         #358                // String The quoteChar character and the delimiter cannot be the same (\\'\n+        56: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        59: aload_0\n+        60: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+        63: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        66: ldc_w         #360                // String \\')\n+        69: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        72: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        75: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        78: athrow\n+        79: aload_0\n+        80: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+        83: ifnull        137\n+        86: aload_0\n+        87: getfield      #34                 // Field delimiter:C\n+        90: aload_0\n+        91: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+        94: invokevirtual #3                  // Method java/lang/Character.charValue:()C\n+        97: if_icmpne     137\n+       100: new           #353                // class java/lang/IllegalArgumentException\n+       103: dup\n+       104: new           #185                // class java/lang/StringBuilder\n+       107: dup\n+       108: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n+       111: ldc_w         #362                // String The escape character and the delimiter cannot be the same (\\'\n+       114: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       117: aload_0\n+       118: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+       121: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       124: ldc_w         #360                // String \\')\n+       127: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       130: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       133: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       136: athrow\n+       137: aload_0\n+       138: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+       141: ifnull        195\n+       144: aload_0\n+       145: getfield      #34                 // Field delimiter:C\n+       148: aload_0\n+       149: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+       152: invokevirtual #3                  // Method java/lang/Character.charValue:()C\n+       155: if_icmpne     195\n+       158: new           #353                // class java/lang/IllegalArgumentException\n+       161: dup\n+       162: new           #185                // class java/lang/StringBuilder\n+       165: dup\n+       166: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n+       169: ldc_w         #364                // String The comment start character and the delimiter cannot be the same (\\'\n+       172: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       175: aload_0\n+       176: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+       179: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       182: ldc_w         #360                // String \\')\n+       185: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       188: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       191: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       194: athrow\n        195: aload_0\n-       196: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-       199: aload_0\n-       200: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-       203: invokevirtual #31                 // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n-       206: ifeq          244\n-       209: new           #119                // class java/lang/IllegalArgumentException\n-       212: dup\n-       213: new           #61                 // class java/lang/StringBuilder\n-       216: dup\n-       217: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       220: ldc           #126                // String The comment start character and the quoteChar cannot be the same (\\'\n-       222: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       225: aload_0\n-       226: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-       229: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       232: ldc           #123                // String \\')\n-       234: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       237: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       240: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       243: athrow\n-       244: aload_0\n-       245: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-       248: ifnull        300\n-       251: aload_0\n-       252: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-       255: aload_0\n-       256: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-       259: invokevirtual #31                 // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n-       262: ifeq          300\n-       265: new           #119                // class java/lang/IllegalArgumentException\n-       268: dup\n-       269: new           #61                 // class java/lang/StringBuilder\n-       272: dup\n-       273: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       276: ldc           #127                // String The comment start and the escape character cannot be the same (\\'\n-       278: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       281: aload_0\n-       282: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-       285: invokevirtual #63                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       288: ldc           #123                // String \\')\n-       290: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       293: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       296: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       299: athrow\n-       300: aload_0\n-       301: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-       304: ifnonnull     327\n-       307: aload_0\n-       308: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-       311: getstatic     #128                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n-       314: if_acmpne     327\n-       317: new           #119                // class java/lang/IllegalArgumentException\n-       320: dup\n-       321: ldc           #129                // String No quotes mode set but no escape character is set\n-       323: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       326: athrow\n-       327: aload_0\n-       328: getfield      #23                 // Field header:[Ljava/lang/String;\n-       331: ifnull        425\n-       334: new           #130                // class java/util/HashSet\n-       337: dup\n-       338: invokespecial #131                // Method java/util/HashSet.\"<init>\":()V\n-       341: astore_1\n-       342: aload_0\n-       343: getfield      #23                 // Field header:[Ljava/lang/String;\n-       346: astore_2\n-       347: aload_2\n-       348: arraylength\n-       349: istore_3\n-       350: iconst_0\n-       351: istore        4\n-       353: iload         4\n-       355: iload_3\n-       356: if_icmpge     425\n+       196: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+       199: ifnull        253\n+       202: aload_0\n+       203: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+       206: aload_0\n+       207: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+       210: invokevirtual #107                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n+       213: ifeq          253\n+       216: new           #353                // class java/lang/IllegalArgumentException\n+       219: dup\n+       220: new           #185                // class java/lang/StringBuilder\n+       223: dup\n+       224: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n+       227: ldc_w         #366                // String The comment start character and the quoteChar cannot be the same (\\'\n+       230: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       233: aload_0\n+       234: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+       237: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       240: ldc_w         #360                // String \\')\n+       243: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       246: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       249: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       252: athrow\n+       253: aload_0\n+       254: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+       257: ifnull        311\n+       260: aload_0\n+       261: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+       264: aload_0\n+       265: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+       268: invokevirtual #107                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n+       271: ifeq          311\n+       274: new           #353                // class java/lang/IllegalArgumentException\n+       277: dup\n+       278: new           #185                // class java/lang/StringBuilder\n+       281: dup\n+       282: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n+       285: ldc_w         #368                // String The comment start and the escape character cannot be the same (\\'\n+       288: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       291: aload_0\n+       292: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+       295: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       298: ldc_w         #360                // String \\')\n+       301: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       304: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       307: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       310: athrow\n+       311: aload_0\n+       312: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+       315: ifnonnull     339\n+       318: aload_0\n+       319: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       322: getstatic     #370                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n+       325: if_acmpne     339\n+       328: new           #353                // class java/lang/IllegalArgumentException\n+       331: dup\n+       332: ldc_w         #373                // String No quotes mode set but no escape character is set\n+       335: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       338: athrow\n+       339: aload_0\n+       340: getfield      #82                 // Field header:[Ljava/lang/String;\n+       343: ifnull        439\n+       346: new           #375                // class java/util/HashSet\n+       349: dup\n+       350: invokespecial #377                // Method java/util/HashSet.\"<init>\":()V\n+       353: astore_1\n+       354: aload_0\n+       355: getfield      #82                 // Field header:[Ljava/lang/String;\n+       358: astore_2\n        359: aload_2\n-       360: iload         4\n-       362: aaload\n-       363: astore        5\n-       365: aload_1\n-       366: aload         5\n-       368: invokeinterface #132,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n-       373: ifne          419\n-       376: new           #119                // class java/lang/IllegalArgumentException\n-       379: dup\n-       380: new           #61                 // class java/lang/StringBuilder\n-       383: dup\n-       384: invokespecial #62                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       387: ldc           #133                // String The header contains a duplicate entry: \\'\n-       389: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       392: aload         5\n-       394: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       397: ldc           #134                // String \\' in\n-       399: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       402: aload_0\n-       403: getfield      #23                 // Field header:[Ljava/lang/String;\n-       406: invokestatic  #115                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       409: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       412: invokevirtual #65                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       415: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       418: athrow\n-       419: iinc          4, 1\n-       422: goto          353\n-       425: return\n+       360: arraylength\n+       361: istore_3\n+       362: iconst_0\n+       363: istore        4\n+       365: iload         4\n+       367: iload_3\n+       368: if_icmpge     439\n+       371: aload_2\n+       372: iload         4\n+       374: aaload\n+       375: astore        5\n+       377: aload_1\n+       378: aload         5\n+       380: invokeinterface #378,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n+       385: ifne          433\n+       388: new           #353                // class java/lang/IllegalArgumentException\n+       391: dup\n+       392: new           #185                // class java/lang/StringBuilder\n+       395: dup\n+       396: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n+       399: ldc_w         #383                // String The header contains a duplicate entry: \\'\n+       402: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       405: aload         5\n+       407: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       410: ldc_w         #385                // String \\' in\n+       413: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       416: aload_0\n+       417: getfield      #82                 // Field header:[Ljava/lang/String;\n+       420: invokestatic  #344                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       423: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       426: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       429: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       432: athrow\n+       433: iinc          4, 1\n+       436: goto          365\n+       439: return\n       LineNumberTable:\n         line 1427: 0\n         line 1428: 10\n-        line 1431: 20\n-        line 1432: 41\n-        line 1436: 76\n-        line 1437: 97\n-        line 1441: 132\n-        line 1442: 153\n-        line 1446: 188\n-        line 1447: 209\n-        line 1451: 244\n-        line 1452: 265\n-        line 1456: 300\n-        line 1457: 317\n-        line 1461: 327\n-        line 1462: 334\n-        line 1463: 342\n-        line 1464: 365\n-        line 1465: 376\n-        line 1466: 406\n-        line 1463: 419\n-        line 1470: 425\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          365      54     5   hdr   Ljava/lang/String;\n-          342      83     1 dupCheck   Ljava/util/Set;\n-            0     426     0  this   Lorg/apache/commons/csv/CSVFormat;\n+        line 1431: 21\n+        line 1432: 42\n+        line 1436: 79\n+        line 1437: 100\n+        line 1441: 137\n+        line 1442: 158\n+        line 1446: 195\n+        line 1447: 216\n+        line 1451: 253\n+        line 1452: 274\n+        line 1456: 311\n+        line 1457: 328\n+        line 1461: 339\n+        line 1462: 346\n+        line 1463: 354\n+        line 1464: 377\n+        line 1465: 388\n+        line 1466: 420\n+        line 1463: 433\n+        line 1470: 439\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+          377      56     5   hdr   Ljava/lang/String;\n+          354      85     1 dupCheck   Ljava/util/Set;\n+            0     440     0  this   Lorg/apache/commons/csv/CSVFormat;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-          342      83     1 dupCheck   Ljava/util/Set<Ljava/lang/String;>;\n+          354      85     1 dupCheck   Ljava/util/Set<Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 10\n-        frame_type = 20 /* same */\n-        frame_type = 55 /* same */\n-        frame_type = 55 /* same */\n-        frame_type = 55 /* same */\n-        frame_type = 55 /* same */\n-        frame_type = 55 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 21 /* same */\n+        frame_type = 57 /* same */\n+        frame_type = 57 /* same */\n+        frame_type = 57 /* same */\n+        frame_type = 57 /* same */\n+        frame_type = 57 /* same */\n+        frame_type = 27 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 25\n           locals = [ class org/apache/commons/csv/CSVFormat, class java/util/Set, class \"[Ljava/lang/String;\", int, int ]\n           stack = []\n         frame_type = 251 /* same_frame_extended */\n-          offset_delta = 65\n+          offset_delta = 67\n         frame_type = 255 /* full_frame */\n           offset_delta = 5\n           locals = [ class org/apache/commons/csv/CSVFormat ]\n           stack = []\n     Exceptions:\n       throws java.lang.IllegalArgumentException\n \n   public org.apache.commons.csv.CSVFormat withAllowMissingColumnNames();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #135                // Method withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #387                // Method withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 1480: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat withAllowMissingColumnNames(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: aload_0\n-        25: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        25: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         28: aload_0\n-        29: getfield      #16                 // Field ignoreEmptyLines:Z\n+        29: getfield      #59                 // Field ignoreEmptyLines:Z\n         32: aload_0\n-        33: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        33: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         36: aload_0\n-        37: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        37: getfield      #66                 // Field nullString:Ljava/lang/String;\n         40: aload_0\n-        41: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        41: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         44: aload_0\n-        45: getfield      #23                 // Field header:[Ljava/lang/String;\n+        45: getfield      #82                 // Field header:[Ljava/lang/String;\n         48: aload_0\n-        49: getfield      #24                 // Field skipHeaderRecord:Z\n+        49: getfield      #85                 // Field skipHeaderRecord:Z\n         52: iload_1\n         53: aload_0\n-        54: getfield      #25                 // Field ignoreHeaderCase:Z\n+        54: getfield      #88                 // Field ignoreHeaderCase:Z\n         57: aload_0\n-        58: getfield      #27                 // Field trim:Z\n+        58: getfield      #94                 // Field trim:Z\n         61: aload_0\n-        62: getfield      #26                 // Field trailingDelimiter:Z\n+        62: getfield      #91                 // Field trailingDelimiter:Z\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 1492: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 allowMissingColumnNames   Z\n \n   public org.apache.commons.csv.CSVFormat withAutoFlush(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: aload_0\n-        25: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        25: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         28: aload_0\n-        29: getfield      #16                 // Field ignoreEmptyLines:Z\n+        29: getfield      #59                 // Field ignoreEmptyLines:Z\n         32: aload_0\n-        33: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        33: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         36: aload_0\n-        37: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        37: getfield      #66                 // Field nullString:Ljava/lang/String;\n         40: aload_0\n-        41: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        41: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         44: aload_0\n-        45: getfield      #23                 // Field header:[Ljava/lang/String;\n+        45: getfield      #82                 // Field header:[Ljava/lang/String;\n         48: aload_0\n-        49: getfield      #24                 // Field skipHeaderRecord:Z\n+        49: getfield      #85                 // Field skipHeaderRecord:Z\n         52: aload_0\n-        53: getfield      #15                 // Field allowMissingColumnNames:Z\n+        53: getfield      #56                 // Field allowMissingColumnNames:Z\n         56: aload_0\n-        57: getfield      #25                 // Field ignoreHeaderCase:Z\n+        57: getfield      #88                 // Field ignoreHeaderCase:Z\n         60: aload_0\n-        61: getfield      #27                 // Field trim:Z\n+        61: getfield      #94                 // Field trim:Z\n         64: aload_0\n-        65: getfield      #26                 // Field trailingDelimiter:Z\n+        65: getfield      #91                 // Field trailingDelimiter:Z\n         68: iload_1\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 1507: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 autoFlush   Z\n@@ -3406,234 +3403,234 @@\n   public org.apache.commons.csv.CSVFormat withCommentMarker(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #136                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #137                // Method withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokestatic  #391                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #394                // Method withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n          8: areturn\n       LineNumberTable:\n         line 1524: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0       9     1 commentMarker   C\n \n   public org.apache.commons.csv.CSVFormat withCommentMarker(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #138                // Method isLineBreak:(Ljava/lang/Character;)Z\n-         4: ifeq          17\n-         7: new           #119                // class java/lang/IllegalArgumentException\n+         1: invokestatic  #398                // Method isLineBreak:(Ljava/lang/Character;)Z\n+         4: ifeq          18\n+         7: new           #353                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #139                // String The comment start marker character cannot be a line break\n-        13: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        16: athrow\n-        17: new           #4                  // class org/apache/commons/csv/CSVFormat\n-        20: dup\n-        21: aload_0\n-        22: getfield      #9                  // Field delimiter:C\n-        25: aload_0\n-        26: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-        29: aload_0\n-        30: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-        33: aload_1\n-        34: aload_0\n-        35: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-        38: aload_0\n-        39: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n-        42: aload_0\n-        43: getfield      #16                 // Field ignoreEmptyLines:Z\n-        46: aload_0\n-        47: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n-        50: aload_0\n-        51: getfield      #18                 // Field nullString:Ljava/lang/String;\n-        54: aload_0\n-        55: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n-        58: aload_0\n-        59: getfield      #23                 // Field header:[Ljava/lang/String;\n-        62: aload_0\n-        63: getfield      #24                 // Field skipHeaderRecord:Z\n-        66: aload_0\n-        67: getfield      #15                 // Field allowMissingColumnNames:Z\n-        70: aload_0\n-        71: getfield      #25                 // Field ignoreHeaderCase:Z\n-        74: aload_0\n-        75: getfield      #27                 // Field trim:Z\n-        78: aload_0\n-        79: getfield      #26                 // Field trailingDelimiter:Z\n-        82: aload_0\n-        83: getfield      #28                 // Field autoFlush:Z\n-        86: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n-        89: areturn\n+        11: ldc_w         #401                // String The comment start marker character cannot be a line break\n+        14: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        17: athrow\n+        18: new           #10                 // class org/apache/commons/csv/CSVFormat\n+        21: dup\n+        22: aload_0\n+        23: getfield      #34                 // Field delimiter:C\n+        26: aload_0\n+        27: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+        30: aload_0\n+        31: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        34: aload_1\n+        35: aload_0\n+        36: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+        39: aload_0\n+        40: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n+        43: aload_0\n+        44: getfield      #59                 // Field ignoreEmptyLines:Z\n+        47: aload_0\n+        48: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n+        51: aload_0\n+        52: getfield      #66                 // Field nullString:Ljava/lang/String;\n+        55: aload_0\n+        56: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n+        59: aload_0\n+        60: getfield      #82                 // Field header:[Ljava/lang/String;\n+        63: aload_0\n+        64: getfield      #85                 // Field skipHeaderRecord:Z\n+        67: aload_0\n+        68: getfield      #56                 // Field allowMissingColumnNames:Z\n+        71: aload_0\n+        72: getfield      #88                 // Field ignoreHeaderCase:Z\n+        75: aload_0\n+        76: getfield      #94                 // Field trim:Z\n+        79: aload_0\n+        80: getfield      #91                 // Field trailingDelimiter:Z\n+        83: aload_0\n+        84: getfield      #97                 // Field autoFlush:Z\n+        87: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        90: areturn\n       LineNumberTable:\n         line 1539: 0\n         line 1540: 7\n-        line 1542: 17\n+        line 1542: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      90     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            0      90     1 commentMarker   Ljava/lang/Character;\n+            0      91     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            0      91     1 commentMarker   Ljava/lang/Character;\n       StackMapTable: number_of_entries = 1\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n \n   public org.apache.commons.csv.CSVFormat withDelimiter(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n          0: iload_1\n-         1: invokestatic  #3                  // Method isLineBreak:(C)Z\n-         4: ifeq          17\n-         7: new           #119                // class java/lang/IllegalArgumentException\n+         1: invokestatic  #9                  // Method isLineBreak:(C)Z\n+         4: ifeq          18\n+         7: new           #353                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #120                // String The delimiter cannot be a line break\n-        13: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        16: athrow\n-        17: new           #4                  // class org/apache/commons/csv/CSVFormat\n-        20: dup\n-        21: iload_1\n-        22: aload_0\n-        23: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-        26: aload_0\n-        27: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-        30: aload_0\n-        31: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-        34: aload_0\n-        35: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-        38: aload_0\n-        39: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n-        42: aload_0\n-        43: getfield      #16                 // Field ignoreEmptyLines:Z\n-        46: aload_0\n-        47: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n-        50: aload_0\n-        51: getfield      #18                 // Field nullString:Ljava/lang/String;\n-        54: aload_0\n-        55: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n-        58: aload_0\n-        59: getfield      #23                 // Field header:[Ljava/lang/String;\n-        62: aload_0\n-        63: getfield      #24                 // Field skipHeaderRecord:Z\n-        66: aload_0\n-        67: getfield      #15                 // Field allowMissingColumnNames:Z\n-        70: aload_0\n-        71: getfield      #25                 // Field ignoreHeaderCase:Z\n-        74: aload_0\n-        75: getfield      #27                 // Field trim:Z\n-        78: aload_0\n-        79: getfield      #26                 // Field trailingDelimiter:Z\n-        82: aload_0\n-        83: getfield      #28                 // Field autoFlush:Z\n-        86: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n-        89: areturn\n+        11: ldc_w         #355                // String The delimiter cannot be a line break\n+        14: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        17: athrow\n+        18: new           #10                 // class org/apache/commons/csv/CSVFormat\n+        21: dup\n+        22: iload_1\n+        23: aload_0\n+        24: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+        27: aload_0\n+        28: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        31: aload_0\n+        32: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+        35: aload_0\n+        36: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+        39: aload_0\n+        40: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n+        43: aload_0\n+        44: getfield      #59                 // Field ignoreEmptyLines:Z\n+        47: aload_0\n+        48: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n+        51: aload_0\n+        52: getfield      #66                 // Field nullString:Ljava/lang/String;\n+        55: aload_0\n+        56: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n+        59: aload_0\n+        60: getfield      #82                 // Field header:[Ljava/lang/String;\n+        63: aload_0\n+        64: getfield      #85                 // Field skipHeaderRecord:Z\n+        67: aload_0\n+        68: getfield      #56                 // Field allowMissingColumnNames:Z\n+        71: aload_0\n+        72: getfield      #88                 // Field ignoreHeaderCase:Z\n+        75: aload_0\n+        76: getfield      #94                 // Field trim:Z\n+        79: aload_0\n+        80: getfield      #91                 // Field trailingDelimiter:Z\n+        83: aload_0\n+        84: getfield      #97                 // Field autoFlush:Z\n+        87: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        90: areturn\n       LineNumberTable:\n         line 1557: 0\n         line 1558: 7\n-        line 1560: 17\n+        line 1560: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      90     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            0      90     1 delimiter   C\n+            0      91     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            0      91     1 delimiter   C\n       StackMapTable: number_of_entries = 1\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n \n   public org.apache.commons.csv.CSVFormat withEscape(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #136                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #140                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokestatic  #391                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #403                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n          8: areturn\n       LineNumberTable:\n         line 1575: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0       9     1 escape   C\n \n   public org.apache.commons.csv.CSVFormat withEscape(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #138                // Method isLineBreak:(Ljava/lang/Character;)Z\n-         4: ifeq          17\n-         7: new           #119                // class java/lang/IllegalArgumentException\n+         1: invokestatic  #398                // Method isLineBreak:(Ljava/lang/Character;)Z\n+         4: ifeq          18\n+         7: new           #353                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #141                // String The escape character cannot be a line break\n-        13: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        16: athrow\n-        17: new           #4                  // class org/apache/commons/csv/CSVFormat\n-        20: dup\n-        21: aload_0\n-        22: getfield      #9                  // Field delimiter:C\n-        25: aload_0\n-        26: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n-        29: aload_0\n-        30: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-        33: aload_0\n-        34: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-        37: aload_1\n-        38: aload_0\n-        39: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n-        42: aload_0\n-        43: getfield      #16                 // Field ignoreEmptyLines:Z\n-        46: aload_0\n-        47: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n-        50: aload_0\n-        51: getfield      #18                 // Field nullString:Ljava/lang/String;\n-        54: aload_0\n-        55: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n-        58: aload_0\n-        59: getfield      #23                 // Field header:[Ljava/lang/String;\n-        62: aload_0\n-        63: getfield      #24                 // Field skipHeaderRecord:Z\n-        66: aload_0\n-        67: getfield      #15                 // Field allowMissingColumnNames:Z\n-        70: aload_0\n-        71: getfield      #25                 // Field ignoreHeaderCase:Z\n-        74: aload_0\n-        75: getfield      #27                 // Field trim:Z\n-        78: aload_0\n-        79: getfield      #26                 // Field trailingDelimiter:Z\n-        82: aload_0\n-        83: getfield      #28                 // Field autoFlush:Z\n-        86: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n-        89: areturn\n+        11: ldc_w         #406                // String The escape character cannot be a line break\n+        14: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        17: athrow\n+        18: new           #10                 // class org/apache/commons/csv/CSVFormat\n+        21: dup\n+        22: aload_0\n+        23: getfield      #34                 // Field delimiter:C\n+        26: aload_0\n+        27: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n+        30: aload_0\n+        31: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        34: aload_0\n+        35: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+        38: aload_1\n+        39: aload_0\n+        40: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n+        43: aload_0\n+        44: getfield      #59                 // Field ignoreEmptyLines:Z\n+        47: aload_0\n+        48: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n+        51: aload_0\n+        52: getfield      #66                 // Field nullString:Ljava/lang/String;\n+        55: aload_0\n+        56: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n+        59: aload_0\n+        60: getfield      #82                 // Field header:[Ljava/lang/String;\n+        63: aload_0\n+        64: getfield      #85                 // Field skipHeaderRecord:Z\n+        67: aload_0\n+        68: getfield      #56                 // Field allowMissingColumnNames:Z\n+        71: aload_0\n+        72: getfield      #88                 // Field ignoreHeaderCase:Z\n+        75: aload_0\n+        76: getfield      #94                 // Field trim:Z\n+        79: aload_0\n+        80: getfield      #91                 // Field trailingDelimiter:Z\n+        83: aload_0\n+        84: getfield      #97                 // Field autoFlush:Z\n+        87: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        90: areturn\n       LineNumberTable:\n         line 1588: 0\n         line 1589: 7\n-        line 1591: 17\n+        line 1591: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      90     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            0      90     1 escape   Ljava/lang/Character;\n+            0      91     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            0      91     1 escape   Ljava/lang/Character;\n       StackMapTable: number_of_entries = 1\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n \n   public org.apache.commons.csv.CSVFormat withFirstRecordAsHeader();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: anewarray     #117                // class java/lang/String\n-         5: invokevirtual #142                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-         8: invokevirtual #143                // Method withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n+         2: anewarray     #112                // class java/lang/String\n+         5: invokevirtual #408                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+         8: invokevirtual #412                // Method withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 1613: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -3643,39 +3640,39 @@\n     Code:\n       stack=4, locals=5, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: aload_1\n          3: ifnull        47\n          6: aload_1\n-         7: invokevirtual #144                // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-        10: checkcast     #145                // class \"[Ljava/lang/Enum;\"\n+         7: invokevirtual #415                // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+        10: checkcast     #421                // class \"[Ljava/lang/Enum;\"\n         13: astore_3\n         14: aload_3\n         15: arraylength\n-        16: anewarray     #117                // class java/lang/String\n+        16: anewarray     #112                // class java/lang/String\n         19: astore_2\n         20: iconst_0\n         21: istore        4\n         23: iload         4\n         25: aload_3\n         26: arraylength\n         27: if_icmpge     47\n         30: aload_2\n         31: iload         4\n         33: aload_3\n         34: iload         4\n         36: aaload\n-        37: invokevirtual #146                // Method java/lang/Enum.name:()Ljava/lang/String;\n+        37: invokevirtual #423                // Method java/lang/Enum.name:()Ljava/lang/String;\n         40: aastore\n         41: iinc          4, 1\n         44: goto          23\n         47: aload_0\n         48: aload_2\n-        49: invokevirtual #142                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+        49: invokevirtual #408                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n         52: areturn\n       LineNumberTable:\n         line 1643: 0\n         line 1644: 2\n         line 1645: 6\n         line 1646: 14\n         line 1647: 20\n@@ -3695,29 +3692,29 @@\n             0      53     1 headerEnum   Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 254 /* append */\n           offset_delta = 23\n           locals = [ class \"[Ljava/lang/String;\", class \"[Ljava/lang/Enum;\", int ]\n         frame_type = 249 /* chop */\n           offset_delta = 23\n-    Signature: #374                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n+    Signature: #635                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSet) throws java.sql.SQLException;\n     descriptor: (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnull        14\n          5: aload_1\n-         6: invokeinterface #147,  1          // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n+         6: invokeinterface #428,  1          // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n         11: goto          15\n         14: aconst_null\n-        15: invokevirtual #148                // Method withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n+        15: invokevirtual #434                // Method withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n         18: areturn\n       LineNumberTable:\n         line 1681: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      19     1 resultSet   Ljava/sql/ResultSet;\n@@ -3737,37 +3734,37 @@\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: aload_1\n          3: ifnull        47\n          6: aload_1\n-         7: invokeinterface #149,  1          // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I\n+         7: invokeinterface #437,  1          // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I\n         12: istore_3\n         13: iload_3\n-        14: anewarray     #117                // class java/lang/String\n+        14: anewarray     #112                // class java/lang/String\n         17: astore_2\n         18: iconst_0\n         19: istore        4\n         21: iload         4\n         23: iload_3\n         24: if_icmpge     47\n         27: aload_2\n         28: iload         4\n         30: aload_1\n         31: iload         4\n         33: iconst_1\n         34: iadd\n-        35: invokeinterface #150,  2          // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n+        35: invokeinterface #442,  2          // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n         40: aastore\n         41: iinc          4, 1\n         44: goto          21\n         47: aload_0\n         48: aload_2\n-        49: invokevirtual #142                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+        49: invokevirtual #408                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n         52: areturn\n       LineNumberTable:\n         line 1711: 0\n         line 1712: 2\n         line 1713: 6\n         line 1714: 13\n         line 1715: 18\n@@ -3791,99 +3788,99 @@\n       throws java.sql.SQLException\n \n   public org.apache.commons.csv.CSVFormat withHeader(java.lang.String...);\n     descriptor: ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: aload_0\n-        25: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        25: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         28: aload_0\n-        29: getfield      #16                 // Field ignoreEmptyLines:Z\n+        29: getfield      #59                 // Field ignoreEmptyLines:Z\n         32: aload_0\n-        33: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        33: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         36: aload_0\n-        37: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        37: getfield      #66                 // Field nullString:Ljava/lang/String;\n         40: aload_0\n-        41: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        41: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         44: aload_1\n         45: aload_0\n-        46: getfield      #24                 // Field skipHeaderRecord:Z\n+        46: getfield      #85                 // Field skipHeaderRecord:Z\n         49: aload_0\n-        50: getfield      #15                 // Field allowMissingColumnNames:Z\n+        50: getfield      #56                 // Field allowMissingColumnNames:Z\n         53: aload_0\n-        54: getfield      #25                 // Field ignoreHeaderCase:Z\n+        54: getfield      #88                 // Field ignoreHeaderCase:Z\n         57: aload_0\n-        58: getfield      #27                 // Field trim:Z\n+        58: getfield      #94                 // Field trim:Z\n         61: aload_0\n-        62: getfield      #26                 // Field trailingDelimiter:Z\n+        62: getfield      #91                 // Field trailingDelimiter:Z\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 1746: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 header   [Ljava/lang/String;\n \n   public org.apache.commons.csv.CSVFormat withHeaderComments(java.lang.Object...);\n     descriptor: ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: aload_0\n-        25: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        25: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         28: aload_0\n-        29: getfield      #16                 // Field ignoreEmptyLines:Z\n+        29: getfield      #59                 // Field ignoreEmptyLines:Z\n         32: aload_0\n-        33: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        33: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         36: aload_0\n-        37: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        37: getfield      #66                 // Field nullString:Ljava/lang/String;\n         40: aload_1\n         41: aload_0\n-        42: getfield      #23                 // Field header:[Ljava/lang/String;\n+        42: getfield      #82                 // Field header:[Ljava/lang/String;\n         45: aload_0\n-        46: getfield      #24                 // Field skipHeaderRecord:Z\n+        46: getfield      #85                 // Field skipHeaderRecord:Z\n         49: aload_0\n-        50: getfield      #15                 // Field allowMissingColumnNames:Z\n+        50: getfield      #56                 // Field allowMissingColumnNames:Z\n         53: aload_0\n-        54: getfield      #25                 // Field ignoreHeaderCase:Z\n+        54: getfield      #88                 // Field ignoreHeaderCase:Z\n         57: aload_0\n-        58: getfield      #27                 // Field trim:Z\n+        58: getfield      #94                 // Field trim:Z\n         61: aload_0\n-        62: getfield      #26                 // Field trailingDelimiter:Z\n+        62: getfield      #91                 // Field trailingDelimiter:Z\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 1767: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 headerComments   [Ljava/lang/Object;\n@@ -3891,63 +3888,63 @@\n   public org.apache.commons.csv.CSVFormat withIgnoreEmptyLines();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #151                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 1780: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat withIgnoreEmptyLines(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: aload_0\n-        25: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        25: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         28: iload_1\n         29: aload_0\n-        30: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        30: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         33: aload_0\n-        34: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        34: getfield      #66                 // Field nullString:Ljava/lang/String;\n         37: aload_0\n-        38: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        38: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         41: aload_0\n-        42: getfield      #23                 // Field header:[Ljava/lang/String;\n+        42: getfield      #82                 // Field header:[Ljava/lang/String;\n         45: aload_0\n-        46: getfield      #24                 // Field skipHeaderRecord:Z\n+        46: getfield      #85                 // Field skipHeaderRecord:Z\n         49: aload_0\n-        50: getfield      #15                 // Field allowMissingColumnNames:Z\n+        50: getfield      #56                 // Field allowMissingColumnNames:Z\n         53: aload_0\n-        54: getfield      #25                 // Field ignoreHeaderCase:Z\n+        54: getfield      #88                 // Field ignoreHeaderCase:Z\n         57: aload_0\n-        58: getfield      #27                 // Field trim:Z\n+        58: getfield      #94                 // Field trim:Z\n         61: aload_0\n-        62: getfield      #26                 // Field trailingDelimiter:Z\n+        62: getfield      #91                 // Field trailingDelimiter:Z\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 1792: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 ignoreEmptyLines   Z\n@@ -3955,63 +3952,63 @@\n   public org.apache.commons.csv.CSVFormat withIgnoreHeaderCase();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #152                // Method withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #449                // Method withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 1805: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat withIgnoreHeaderCase(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: aload_0\n-        25: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        25: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         28: aload_0\n-        29: getfield      #16                 // Field ignoreEmptyLines:Z\n+        29: getfield      #59                 // Field ignoreEmptyLines:Z\n         32: aload_0\n-        33: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        33: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         36: aload_0\n-        37: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        37: getfield      #66                 // Field nullString:Ljava/lang/String;\n         40: aload_0\n-        41: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        41: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         44: aload_0\n-        45: getfield      #23                 // Field header:[Ljava/lang/String;\n+        45: getfield      #82                 // Field header:[Ljava/lang/String;\n         48: aload_0\n-        49: getfield      #24                 // Field skipHeaderRecord:Z\n+        49: getfield      #85                 // Field skipHeaderRecord:Z\n         52: aload_0\n-        53: getfield      #15                 // Field allowMissingColumnNames:Z\n+        53: getfield      #56                 // Field allowMissingColumnNames:Z\n         56: iload_1\n         57: aload_0\n-        58: getfield      #27                 // Field trim:Z\n+        58: getfield      #94                 // Field trim:Z\n         61: aload_0\n-        62: getfield      #26                 // Field trailingDelimiter:Z\n+        62: getfield      #91                 // Field trailingDelimiter:Z\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 1818: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 ignoreHeaderCase   Z\n@@ -4019,112 +4016,112 @@\n   public org.apache.commons.csv.CSVFormat withIgnoreSurroundingSpaces();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #153                // Method withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #452                // Method withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 1831: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat withIgnoreSurroundingSpaces(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: iload_1\n         25: aload_0\n-        26: getfield      #16                 // Field ignoreEmptyLines:Z\n+        26: getfield      #59                 // Field ignoreEmptyLines:Z\n         29: aload_0\n-        30: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        30: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         33: aload_0\n-        34: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        34: getfield      #66                 // Field nullString:Ljava/lang/String;\n         37: aload_0\n-        38: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        38: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         41: aload_0\n-        42: getfield      #23                 // Field header:[Ljava/lang/String;\n+        42: getfield      #82                 // Field header:[Ljava/lang/String;\n         45: aload_0\n-        46: getfield      #24                 // Field skipHeaderRecord:Z\n+        46: getfield      #85                 // Field skipHeaderRecord:Z\n         49: aload_0\n-        50: getfield      #15                 // Field allowMissingColumnNames:Z\n+        50: getfield      #56                 // Field allowMissingColumnNames:Z\n         53: aload_0\n-        54: getfield      #25                 // Field ignoreHeaderCase:Z\n+        54: getfield      #88                 // Field ignoreHeaderCase:Z\n         57: aload_0\n-        58: getfield      #27                 // Field trim:Z\n+        58: getfield      #94                 // Field trim:Z\n         61: aload_0\n-        62: getfield      #26                 // Field trailingDelimiter:Z\n+        62: getfield      #91                 // Field trailingDelimiter:Z\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 1843: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 ignoreSurroundingSpaces   Z\n \n   public org.apache.commons.csv.CSVFormat withNullString(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: aload_0\n-        25: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        25: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         28: aload_0\n-        29: getfield      #16                 // Field ignoreEmptyLines:Z\n+        29: getfield      #59                 // Field ignoreEmptyLines:Z\n         32: aload_0\n-        33: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        33: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         36: aload_1\n         37: aload_0\n-        38: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        38: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         41: aload_0\n-        42: getfield      #23                 // Field header:[Ljava/lang/String;\n+        42: getfield      #82                 // Field header:[Ljava/lang/String;\n         45: aload_0\n-        46: getfield      #24                 // Field skipHeaderRecord:Z\n+        46: getfield      #85                 // Field skipHeaderRecord:Z\n         49: aload_0\n-        50: getfield      #15                 // Field allowMissingColumnNames:Z\n+        50: getfield      #56                 // Field allowMissingColumnNames:Z\n         53: aload_0\n-        54: getfield      #25                 // Field ignoreHeaderCase:Z\n+        54: getfield      #88                 // Field ignoreHeaderCase:Z\n         57: aload_0\n-        58: getfield      #27                 // Field trim:Z\n+        58: getfield      #94                 // Field trim:Z\n         61: aload_0\n-        62: getfield      #26                 // Field trailingDelimiter:Z\n+        62: getfield      #91                 // Field trailingDelimiter:Z\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 1862: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 nullString   Ljava/lang/String;\n@@ -4132,126 +4129,126 @@\n   public org.apache.commons.csv.CSVFormat withQuote(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #136                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #154                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokestatic  #391                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n          8: areturn\n       LineNumberTable:\n         line 1877: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0       9     1 quoteChar   C\n \n   public org.apache.commons.csv.CSVFormat withQuote(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #138                // Method isLineBreak:(Ljava/lang/Character;)Z\n-         4: ifeq          17\n-         7: new           #119                // class java/lang/IllegalArgumentException\n+         1: invokestatic  #398                // Method isLineBreak:(Ljava/lang/Character;)Z\n+         4: ifeq          18\n+         7: new           #353                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #155                // String The quoteChar cannot be a line break\n-        13: invokespecial #121                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        16: athrow\n-        17: new           #4                  // class org/apache/commons/csv/CSVFormat\n-        20: dup\n-        21: aload_0\n-        22: getfield      #9                  // Field delimiter:C\n-        25: aload_1\n-        26: aload_0\n-        27: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-        30: aload_0\n-        31: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n-        34: aload_0\n-        35: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n-        38: aload_0\n-        39: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n-        42: aload_0\n-        43: getfield      #16                 // Field ignoreEmptyLines:Z\n-        46: aload_0\n-        47: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n-        50: aload_0\n-        51: getfield      #18                 // Field nullString:Ljava/lang/String;\n-        54: aload_0\n-        55: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n-        58: aload_0\n-        59: getfield      #23                 // Field header:[Ljava/lang/String;\n-        62: aload_0\n-        63: getfield      #24                 // Field skipHeaderRecord:Z\n-        66: aload_0\n-        67: getfield      #15                 // Field allowMissingColumnNames:Z\n-        70: aload_0\n-        71: getfield      #25                 // Field ignoreHeaderCase:Z\n-        74: aload_0\n-        75: getfield      #27                 // Field trim:Z\n-        78: aload_0\n-        79: getfield      #26                 // Field trailingDelimiter:Z\n-        82: aload_0\n-        83: getfield      #28                 // Field autoFlush:Z\n-        86: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n-        89: areturn\n+        11: ldc_w         #458                // String The quoteChar cannot be a line break\n+        14: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        17: athrow\n+        18: new           #10                 // class org/apache/commons/csv/CSVFormat\n+        21: dup\n+        22: aload_0\n+        23: getfield      #34                 // Field delimiter:C\n+        26: aload_1\n+        27: aload_0\n+        28: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        31: aload_0\n+        32: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n+        35: aload_0\n+        36: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n+        39: aload_0\n+        40: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n+        43: aload_0\n+        44: getfield      #59                 // Field ignoreEmptyLines:Z\n+        47: aload_0\n+        48: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n+        51: aload_0\n+        52: getfield      #66                 // Field nullString:Ljava/lang/String;\n+        55: aload_0\n+        56: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n+        59: aload_0\n+        60: getfield      #82                 // Field header:[Ljava/lang/String;\n+        63: aload_0\n+        64: getfield      #85                 // Field skipHeaderRecord:Z\n+        67: aload_0\n+        68: getfield      #56                 // Field allowMissingColumnNames:Z\n+        71: aload_0\n+        72: getfield      #88                 // Field ignoreHeaderCase:Z\n+        75: aload_0\n+        76: getfield      #94                 // Field trim:Z\n+        79: aload_0\n+        80: getfield      #91                 // Field trailingDelimiter:Z\n+        83: aload_0\n+        84: getfield      #97                 // Field autoFlush:Z\n+        87: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        90: areturn\n       LineNumberTable:\n         line 1890: 0\n         line 1891: 7\n-        line 1893: 17\n+        line 1893: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      90     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            0      90     1 quoteChar   Ljava/lang/Character;\n+            0      91     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            0      91     1 quoteChar   Ljava/lang/Character;\n       StackMapTable: number_of_entries = 1\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n \n   public org.apache.commons.csv.CSVFormat withQuoteMode(org.apache.commons.csv.QuoteMode);\n     descriptor: (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_1\n         13: aload_0\n-        14: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        14: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         17: aload_0\n-        18: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        18: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         21: aload_0\n-        22: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        22: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         25: aload_0\n-        26: getfield      #16                 // Field ignoreEmptyLines:Z\n+        26: getfield      #59                 // Field ignoreEmptyLines:Z\n         29: aload_0\n-        30: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        30: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         33: aload_0\n-        34: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        34: getfield      #66                 // Field nullString:Ljava/lang/String;\n         37: aload_0\n-        38: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        38: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         41: aload_0\n-        42: getfield      #23                 // Field header:[Ljava/lang/String;\n+        42: getfield      #82                 // Field header:[Ljava/lang/String;\n         45: aload_0\n-        46: getfield      #24                 // Field skipHeaderRecord:Z\n+        46: getfield      #85                 // Field skipHeaderRecord:Z\n         49: aload_0\n-        50: getfield      #15                 // Field allowMissingColumnNames:Z\n+        50: getfield      #56                 // Field allowMissingColumnNames:Z\n         53: aload_0\n-        54: getfield      #25                 // Field ignoreHeaderCase:Z\n+        54: getfield      #88                 // Field ignoreHeaderCase:Z\n         57: aload_0\n-        58: getfield      #27                 // Field trim:Z\n+        58: getfield      #94                 // Field trim:Z\n         61: aload_0\n-        62: getfield      #26                 // Field trailingDelimiter:Z\n+        62: getfield      #91                 // Field trailingDelimiter:Z\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 1907: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 quoteModePolicy   Lorg/apache/commons/csv/QuoteMode;\n@@ -4259,65 +4256,65 @@\n   public org.apache.commons.csv.CSVFormat withRecordSeparator(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #156                // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n-         5: invokevirtual #157                // Method withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokestatic  #460                // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n+         5: invokevirtual #463                // Method withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n          8: areturn\n       LineNumberTable:\n         line 1926: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0       9     1 recordSeparator   C\n \n   public org.apache.commons.csv.CSVFormat withRecordSeparator(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: aload_0\n-        25: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        25: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         28: aload_0\n-        29: getfield      #16                 // Field ignoreEmptyLines:Z\n+        29: getfield      #59                 // Field ignoreEmptyLines:Z\n         32: aload_1\n         33: aload_0\n-        34: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        34: getfield      #66                 // Field nullString:Ljava/lang/String;\n         37: aload_0\n-        38: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        38: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         41: aload_0\n-        42: getfield      #23                 // Field header:[Ljava/lang/String;\n+        42: getfield      #82                 // Field header:[Ljava/lang/String;\n         45: aload_0\n-        46: getfield      #24                 // Field skipHeaderRecord:Z\n+        46: getfield      #85                 // Field skipHeaderRecord:Z\n         49: aload_0\n-        50: getfield      #15                 // Field allowMissingColumnNames:Z\n+        50: getfield      #56                 // Field allowMissingColumnNames:Z\n         53: aload_0\n-        54: getfield      #25                 // Field ignoreHeaderCase:Z\n+        54: getfield      #88                 // Field ignoreHeaderCase:Z\n         57: aload_0\n-        58: getfield      #27                 // Field trim:Z\n+        58: getfield      #94                 // Field trim:Z\n         61: aload_0\n-        62: getfield      #26                 // Field trailingDelimiter:Z\n+        62: getfield      #91                 // Field trailingDelimiter:Z\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 1945: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 recordSeparator   Ljava/lang/String;\n@@ -4325,143 +4322,143 @@\n   public org.apache.commons.csv.CSVFormat withSkipHeaderRecord();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #158                // Method withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #467                // Method withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 1959: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat withSkipHeaderRecord(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: aload_0\n-        25: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        25: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         28: aload_0\n-        29: getfield      #16                 // Field ignoreEmptyLines:Z\n+        29: getfield      #59                 // Field ignoreEmptyLines:Z\n         32: aload_0\n-        33: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        33: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         36: aload_0\n-        37: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        37: getfield      #66                 // Field nullString:Ljava/lang/String;\n         40: aload_0\n-        41: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        41: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         44: aload_0\n-        45: getfield      #23                 // Field header:[Ljava/lang/String;\n+        45: getfield      #82                 // Field header:[Ljava/lang/String;\n         48: iload_1\n         49: aload_0\n-        50: getfield      #15                 // Field allowMissingColumnNames:Z\n+        50: getfield      #56                 // Field allowMissingColumnNames:Z\n         53: aload_0\n-        54: getfield      #25                 // Field ignoreHeaderCase:Z\n+        54: getfield      #88                 // Field ignoreHeaderCase:Z\n         57: aload_0\n-        58: getfield      #27                 // Field trim:Z\n+        58: getfield      #94                 // Field trim:Z\n         61: aload_0\n-        62: getfield      #26                 // Field trailingDelimiter:Z\n+        62: getfield      #91                 // Field trailingDelimiter:Z\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 1972: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 skipHeaderRecord   Z\n \n   public org.apache.commons.csv.CSVFormat withSystemRecordSeparator();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #159                // String line.separator\n-         3: invokestatic  #160                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-         6: invokevirtual #157                // Method withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-         9: areturn\n+         1: ldc_w         #469                // String line.separator\n+         4: invokestatic  #471                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+         7: invokevirtual #463                // Method withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+        10: areturn\n       LineNumberTable:\n         line 1990: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      10     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            0      11     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat withTrailingDelimiter();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #161                // Method withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #475                // Method withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 2000: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat withTrailingDelimiter(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: aload_0\n-        25: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        25: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         28: aload_0\n-        29: getfield      #16                 // Field ignoreEmptyLines:Z\n+        29: getfield      #59                 // Field ignoreEmptyLines:Z\n         32: aload_0\n-        33: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        33: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         36: aload_0\n-        37: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        37: getfield      #66                 // Field nullString:Ljava/lang/String;\n         40: aload_0\n-        41: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        41: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         44: aload_0\n-        45: getfield      #23                 // Field header:[Ljava/lang/String;\n+        45: getfield      #82                 // Field header:[Ljava/lang/String;\n         48: aload_0\n-        49: getfield      #24                 // Field skipHeaderRecord:Z\n+        49: getfield      #85                 // Field skipHeaderRecord:Z\n         52: aload_0\n-        53: getfield      #15                 // Field allowMissingColumnNames:Z\n+        53: getfield      #56                 // Field allowMissingColumnNames:Z\n         56: aload_0\n-        57: getfield      #25                 // Field ignoreHeaderCase:Z\n+        57: getfield      #88                 // Field ignoreHeaderCase:Z\n         60: aload_0\n-        61: getfield      #27                 // Field trim:Z\n+        61: getfield      #94                 // Field trim:Z\n         64: iload_1\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 2013: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1 trailingDelimiter   Z\n@@ -4469,244 +4466,244 @@\n   public org.apache.commons.csv.CSVFormat withTrim();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #162                // Method withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #478                // Method withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 2025: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat withTrim(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n-         5: getfield      #9                  // Field delimiter:C\n+         5: getfield      #34                 // Field delimiter:C\n          8: aload_0\n-         9: getfield      #10                 // Field quoteCharacter:Ljava/lang/Character;\n+         9: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         12: aload_0\n-        13: getfield      #11                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        13: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         16: aload_0\n-        17: getfield      #12                 // Field commentMarker:Ljava/lang/Character;\n+        17: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         20: aload_0\n-        21: getfield      #13                 // Field escapeCharacter:Ljava/lang/Character;\n+        21: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         24: aload_0\n-        25: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        25: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n         28: aload_0\n-        29: getfield      #16                 // Field ignoreEmptyLines:Z\n+        29: getfield      #59                 // Field ignoreEmptyLines:Z\n         32: aload_0\n-        33: getfield      #17                 // Field recordSeparator:Ljava/lang/String;\n+        33: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         36: aload_0\n-        37: getfield      #18                 // Field nullString:Ljava/lang/String;\n+        37: getfield      #66                 // Field nullString:Ljava/lang/String;\n         40: aload_0\n-        41: getfield      #20                 // Field headerComments:[Ljava/lang/String;\n+        41: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n         44: aload_0\n-        45: getfield      #23                 // Field header:[Ljava/lang/String;\n+        45: getfield      #82                 // Field header:[Ljava/lang/String;\n         48: aload_0\n-        49: getfield      #24                 // Field skipHeaderRecord:Z\n+        49: getfield      #85                 // Field skipHeaderRecord:Z\n         52: aload_0\n-        53: getfield      #15                 // Field allowMissingColumnNames:Z\n+        53: getfield      #56                 // Field allowMissingColumnNames:Z\n         56: aload_0\n-        57: getfield      #25                 // Field ignoreHeaderCase:Z\n+        57: getfield      #88                 // Field ignoreHeaderCase:Z\n         60: iload_1\n         61: aload_0\n-        62: getfield      #26                 // Field trailingDelimiter:Z\n+        62: getfield      #91                 // Field trailingDelimiter:Z\n         65: aload_0\n-        66: getfield      #28                 // Field autoFlush:Z\n-        69: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        66: getfield      #97                 // Field autoFlush:Z\n+        69: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n         72: areturn\n       LineNumberTable:\n         line 2038: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      73     1  trim   Z\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=19, locals=0, args_size=0\n-         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n+         0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: bipush        44\n-         6: getstatic     #163                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+         6: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n          9: aconst_null\n         10: aconst_null\n         11: aconst_null\n         12: iconst_0\n         13: iconst_1\n-        14: ldc           #164                // String \\r\\n\n-        16: aconst_null\n+        14: ldc_w         #484                // String \\r\\n\n         17: aconst_null\n         18: aconst_null\n-        19: iconst_0\n+        19: aconst_null\n         20: iconst_0\n         21: iconst_0\n         22: iconst_0\n         23: iconst_0\n         24: iconst_0\n-        25: invokespecial #5                  // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n-        28: putstatic     #165                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        31: getstatic     #165                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        34: iconst_0\n-        35: invokevirtual #151                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-        38: invokevirtual #166                // Method withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n-        41: putstatic     #167                // Field EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-        44: getstatic     #165                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        47: bipush        124\n-        49: invokevirtual #168                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-        52: bipush        92\n-        54: invokevirtual #169                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n-        57: getstatic     #163                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-        60: invokevirtual #154                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-        63: bipush        10\n-        65: invokevirtual #170                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-        68: putstatic     #171                // Field INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-        71: getstatic     #165                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        74: bipush        44\n-        76: invokevirtual #168                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-        79: getstatic     #163                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-        82: invokevirtual #154                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-        85: bipush        10\n-        87: invokevirtual #170                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-        90: putstatic     #172                // Field INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-        93: getstatic     #165                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        96: bipush        9\n-        98: invokevirtual #168                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-       101: bipush        92\n-       103: invokevirtual #169                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n-       106: iconst_0\n-       107: invokevirtual #151                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-       110: aconst_null\n-       111: invokevirtual #154                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-       114: bipush        10\n-       116: invokevirtual #170                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-       119: ldc           #173                // String \\\\N\n-       121: invokevirtual #174                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-       124: getstatic     #175                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       127: invokevirtual #176                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-       130: putstatic     #177                // Field MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-       133: getstatic     #165                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       136: bipush        44\n-       138: invokevirtual #168                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-       141: bipush        92\n-       143: invokevirtual #169                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n-       146: iconst_0\n-       147: invokevirtual #151                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-       150: getstatic     #163                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       153: invokevirtual #154                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-       156: ldc           #173                // String \\\\N\n-       158: invokevirtual #174                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-       161: invokevirtual #178                // Method withTrim:()Lorg/apache/commons/csv/CSVFormat;\n-       164: invokevirtual #179                // Method withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n-       167: getstatic     #87                 // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-       170: invokevirtual #176                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-       173: putstatic     #180                // Field ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-       176: getstatic     #165                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       179: bipush        44\n-       181: invokevirtual #168                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-       184: getstatic     #163                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       187: invokevirtual #140                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-       190: iconst_0\n-       191: invokevirtual #151                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-       194: getstatic     #163                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       197: invokevirtual #154                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-       200: bipush        10\n-       202: invokevirtual #170                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-       205: ldc           #59                 // String\n-       207: invokevirtual #174                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-       210: getstatic     #175                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       213: invokevirtual #176                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-       216: putstatic     #181                // Field POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-       219: getstatic     #165                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       222: bipush        9\n-       224: invokevirtual #168                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-       227: getstatic     #163                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       230: invokevirtual #140                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-       233: iconst_0\n-       234: invokevirtual #151                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-       237: getstatic     #163                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       240: invokevirtual #154                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-       243: bipush        10\n-       245: invokevirtual #170                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-       248: ldc           #173                // String \\\\N\n-       250: invokevirtual #174                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-       253: getstatic     #175                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       256: invokevirtual #176                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-       259: putstatic     #182                // Field POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-       262: getstatic     #165                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       265: iconst_0\n-       266: invokevirtual #151                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-       269: putstatic     #183                // Field RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-       272: getstatic     #165                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       275: bipush        9\n-       277: invokevirtual #168                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-       280: invokevirtual #184                // Method withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n-       283: putstatic     #185                // Field TDF:Lorg/apache/commons/csv/CSVFormat;\n-       286: return\n+        25: iconst_0\n+        26: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n+        29: putstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        32: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        35: iconst_0\n+        36: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+        39: invokevirtual #490                // Method withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n+        42: putstatic     #492                // Field EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+        45: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        48: bipush        124\n+        50: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+        53: bipush        92\n+        55: invokevirtual #499                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n+        58: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+        61: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+        64: bipush        10\n+        66: invokevirtual #501                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+        69: putstatic     #503                // Field INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+        72: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        75: bipush        44\n+        77: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+        80: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+        83: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+        86: bipush        10\n+        88: invokevirtual #501                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+        91: putstatic     #506                // Field INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+        94: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        97: bipush        9\n+        99: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+       102: bipush        92\n+       104: invokevirtual #499                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n+       107: iconst_0\n+       108: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+       111: aconst_null\n+       112: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       115: bipush        10\n+       117: invokevirtual #501                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+       120: ldc_w         #509                // String \\\\N\n+       123: invokevirtual #511                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+       126: getstatic     #514                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       129: invokevirtual #517                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+       132: putstatic     #521                // Field MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+       135: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       138: bipush        44\n+       140: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+       143: bipush        92\n+       145: invokevirtual #499                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n+       148: iconst_0\n+       149: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+       152: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       155: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       158: ldc_w         #509                // String \\\\N\n+       161: invokevirtual #511                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+       164: invokevirtual #524                // Method withTrim:()Lorg/apache/commons/csv/CSVFormat;\n+       167: invokevirtual #526                // Method withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n+       170: getstatic     #266                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+       173: invokevirtual #517                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+       176: putstatic     #529                // Field ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+       179: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       182: bipush        44\n+       184: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+       187: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       190: invokevirtual #403                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       193: iconst_0\n+       194: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+       197: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       200: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       203: bipush        10\n+       205: invokevirtual #501                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+       208: ldc           #180                // String\n+       210: invokevirtual #511                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+       213: getstatic     #514                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       216: invokevirtual #517                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+       219: putstatic     #532                // Field POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+       222: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       225: bipush        9\n+       227: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+       230: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       233: invokevirtual #403                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       236: iconst_0\n+       237: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+       240: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       243: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       246: bipush        10\n+       248: invokevirtual #501                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+       251: ldc_w         #509                // String \\\\N\n+       254: invokevirtual #511                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+       257: getstatic     #514                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       260: invokevirtual #517                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+       263: putstatic     #535                // Field POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+       266: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       269: iconst_0\n+       270: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+       273: putstatic     #538                // Field RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+       276: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       279: bipush        9\n+       281: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+       284: invokevirtual #541                // Method withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n+       287: putstatic     #543                // Field TDF:Lorg/apache/commons/csv/CSVFormat;\n+       290: return\n       LineNumberTable:\n         line 254: 0\n-        line 287: 31\n-        line 288: 35\n-        line 289: 38\n-        line 317: 44\n-        line 318: 49\n-        line 319: 54\n-        line 320: 60\n-        line 321: 65\n-        line 348: 71\n-        line 349: 76\n-        line 350: 82\n-        line 351: 87\n-        line 380: 93\n-        line 381: 98\n-        line 382: 103\n-        line 383: 107\n-        line 384: 111\n-        line 385: 116\n-        line 386: 121\n-        line 387: 127\n-        line 418: 133\n-        line 419: 138\n-        line 420: 143\n-        line 421: 147\n-        line 422: 153\n-        line 423: 158\n-        line 424: 161\n-        line 425: 164\n-        line 426: 170\n-        line 456: 176\n-        line 457: 181\n-        line 458: 187\n-        line 459: 191\n-        line 460: 197\n-        line 461: 202\n-        line 462: 207\n-        line 463: 213\n-        line 493: 219\n-        line 494: 224\n-        line 495: 230\n-        line 496: 234\n-        line 497: 240\n-        line 498: 245\n-        line 499: 250\n-        line 500: 256\n-        line 518: 262\n-        line 538: 272\n-        line 539: 277\n-        line 540: 280\n-        line 538: 286\n+        line 287: 32\n+        line 288: 36\n+        line 289: 39\n+        line 317: 45\n+        line 318: 50\n+        line 319: 55\n+        line 320: 61\n+        line 321: 66\n+        line 348: 72\n+        line 349: 77\n+        line 350: 83\n+        line 351: 88\n+        line 380: 94\n+        line 381: 99\n+        line 382: 104\n+        line 383: 108\n+        line 384: 112\n+        line 385: 117\n+        line 386: 123\n+        line 387: 129\n+        line 418: 135\n+        line 419: 140\n+        line 420: 145\n+        line 421: 149\n+        line 422: 155\n+        line 423: 161\n+        line 424: 164\n+        line 425: 167\n+        line 426: 173\n+        line 456: 179\n+        line 457: 184\n+        line 458: 190\n+        line 459: 194\n+        line 460: 200\n+        line 461: 205\n+        line 462: 210\n+        line 463: 216\n+        line 493: 222\n+        line 494: 227\n+        line 495: 233\n+        line 496: 237\n+        line 497: 243\n+        line 498: 248\n+        line 499: 254\n+        line 500: 260\n+        line 518: 266\n+        line 538: 276\n+        line 539: 281\n+        line 540: 284\n+        line 538: 290\n }\n SourceFile: \"CSVFormat.java\"\n InnerClasses:\n-  static #188;                            // class org/apache/commons/csv/CSVFormat$1\n-  public static final #191= #190 of #4;   // Predefined=class org/apache/commons/csv/CSVFormat$Predefined of class org/apache/commons/csv/CSVFormat\n+  public static final #651= #20 of #10;   // Predefined=class org/apache/commons/csv/CSVFormat$Predefined of class org/apache/commons/csv/CSVFormat\n+  static #270;                            // class org/apache/commons/csv/CSVFormat$1\n"}]}
