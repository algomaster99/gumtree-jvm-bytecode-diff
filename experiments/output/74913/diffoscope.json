{"diffoscope-json-version": 1, "source1": "first/RandomAccessFileInputStream.class", "source2": "second/RandomAccessFileInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,110 +1,108 @@\n-  SHA-256 checksum f70574dd3489fa82dab0abf08055ddec9967e686aa9c327624c979fd2e40c2ac\n+  SHA-256 checksum 4167d6f19e3951b4cf7bfa804a7f0fcf443bfb78e4e01e4f9b5ac9b15a88b473\n   Compiled from \"RandomAccessFileInputStream.java\"\n public class org.apache.commons.io.input.RandomAccessFileInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/io/input/RandomAccessFileInputStream\n-  super_class: #8                         // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/io/input/RandomAccessFileInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 2, methods: 12, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/io/input/RandomAccessFileInputStream.\"<init>\":(Ljava/io/RandomAccessFile;Z)V\n-   #2 = Class              #4             // org/apache/commons/io/input/RandomAccessFileInputStream\n-   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/RandomAccessFile;Z)V\n-   #4 = Utf8               org/apache/commons/io/input/RandomAccessFileInputStream\n-   #5 = Utf8               <init>\n-   #6 = Utf8               (Ljava/io/RandomAccessFile;Z)V\n-   #7 = Methodref          #8.#9          // java/io/InputStream.\"<init>\":()V\n-   #8 = Class              #10            // java/io/InputStream\n-   #9 = NameAndType        #5:#11         // \"<init>\":()V\n-  #10 = Utf8               java/io/InputStream\n-  #11 = Utf8               ()V\n-  #12 = String             #13            // file\n-  #13 = Utf8               file\n-  #14 = Methodref          #15.#16        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #15 = Class              #17            // java/util/Objects\n-  #16 = NameAndType        #18:#19        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #17 = Utf8               java/util/Objects\n-  #18 = Utf8               requireNonNull\n-  #19 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #20 = Class              #21            // java/io/RandomAccessFile\n-  #21 = Utf8               java/io/RandomAccessFile\n-  #22 = Fieldref           #2.#23         // org/apache/commons/io/input/RandomAccessFileInputStream.randomAccessFile:Ljava/io/RandomAccessFile;\n-  #23 = NameAndType        #24:#25        // randomAccessFile:Ljava/io/RandomAccessFile;\n-  #24 = Utf8               randomAccessFile\n-  #25 = Utf8               Ljava/io/RandomAccessFile;\n-  #26 = Fieldref           #2.#27         // org/apache/commons/io/input/RandomAccessFileInputStream.closeOnClose:Z\n-  #27 = NameAndType        #28:#29        // closeOnClose:Z\n-  #28 = Utf8               closeOnClose\n-  #29 = Utf8               Z\n-  #30 = Methodref          #2.#31         // org/apache/commons/io/input/RandomAccessFileInputStream.availableLong:()J\n-  #31 = NameAndType        #32:#33        // availableLong:()J\n-  #32 = Utf8               availableLong\n-  #33 = Utf8               ()J\n-  #34 = Class              #35            // java/lang/Integer\n-  #35 = Utf8               java/lang/Integer\n-  #36 = Long               2147483647l\n-  #38 = Integer            2147483647\n-  #39 = Methodref          #20.#40        // java/io/RandomAccessFile.length:()J\n-  #40 = NameAndType        #41:#33        // length:()J\n-  #41 = Utf8               length\n-  #42 = Methodref          #20.#43        // java/io/RandomAccessFile.getFilePointer:()J\n-  #43 = NameAndType        #44:#33        // getFilePointer:()J\n-  #44 = Utf8               getFilePointer\n-  #45 = Methodref          #8.#46         // java/io/InputStream.close:()V\n-  #46 = NameAndType        #47:#11        // close:()V\n-  #47 = Utf8               close\n-  #48 = Methodref          #20.#46        // java/io/RandomAccessFile.close:()V\n-  #49 = Methodref          #20.#50        // java/io/RandomAccessFile.read:()I\n-  #50 = NameAndType        #51:#52        // read:()I\n-  #51 = Utf8               read\n-  #52 = Utf8               ()I\n-  #53 = Methodref          #20.#54        // java/io/RandomAccessFile.read:([B)I\n-  #54 = NameAndType        #51:#55        // read:([B)I\n-  #55 = Utf8               ([B)I\n-  #56 = Methodref          #20.#57        // java/io/RandomAccessFile.read:([BII)I\n-  #57 = NameAndType        #51:#58        // read:([BII)I\n-  #58 = Utf8               ([BII)I\n-  #59 = Methodref          #20.#60        // java/io/RandomAccessFile.seek:(J)V\n-  #60 = NameAndType        #61:#62        // seek:(J)V\n-  #61 = Utf8               seek\n-  #62 = Utf8               (J)V\n-  #63 = Methodref          #2.#60         // org/apache/commons/io/input/RandomAccessFileInputStream.seek:(J)V\n-  #64 = Utf8               (Ljava/io/RandomAccessFile;)V\n-  #65 = Utf8               Code\n-  #66 = Utf8               LineNumberTable\n-  #67 = Utf8               LocalVariableTable\n-  #68 = Utf8               this\n-  #69 = Utf8               Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n-  #70 = Utf8               available\n-  #71 = Utf8               avail\n-  #72 = Utf8               J\n-  #73 = Utf8               StackMapTable\n-  #74 = Utf8               Exceptions\n-  #75 = Class              #76            // java/io/IOException\n-  #76 = Utf8               java/io/IOException\n-  #77 = Utf8               getRandomAccessFile\n-  #78 = Utf8               ()Ljava/io/RandomAccessFile;\n-  #79 = Utf8               isCloseOnClose\n-  #80 = Utf8               ()Z\n-  #81 = Utf8               bytes\n-  #82 = Utf8               [B\n-  #83 = Utf8               offset\n-  #84 = Utf8               I\n-  #85 = Utf8               position\n-  #86 = Utf8               skip\n-  #87 = Utf8               (J)J\n-  #88 = Utf8               skipCount\n-  #89 = Utf8               filePointer\n-  #90 = Utf8               fileLength\n-  #91 = Utf8               targetPos\n-  #92 = Utf8               newPos\n-  #93 = Utf8               SourceFile\n-  #94 = Utf8               RandomAccessFileInputStream.java\n+   #1 = Class              #2             // org/apache/commons/io/input/RandomAccessFileInputStream\n+   #2 = Utf8               org/apache/commons/io/input/RandomAccessFileInputStream\n+   #3 = Class              #4             // java/io/InputStream\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               closeOnClose\n+   #6 = Utf8               Z\n+   #7 = Utf8               randomAccessFile\n+   #8 = Utf8               Ljava/io/RandomAccessFile;\n+   #9 = Utf8               <init>\n+  #10 = Utf8               (Ljava/io/RandomAccessFile;)V\n+  #11 = Utf8               Code\n+  #12 = Methodref          #1.#13         // org/apache/commons/io/input/RandomAccessFileInputStream.\"<init>\":(Ljava/io/RandomAccessFile;Z)V\n+  #13 = NameAndType        #9:#14         // \"<init>\":(Ljava/io/RandomAccessFile;Z)V\n+  #14 = Utf8               (Ljava/io/RandomAccessFile;Z)V\n+  #15 = Utf8               LineNumberTable\n+  #16 = Utf8               LocalVariableTable\n+  #17 = Utf8               this\n+  #18 = Utf8               Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n+  #19 = Utf8               file\n+  #20 = Methodref          #3.#21         // java/io/InputStream.\"<init>\":()V\n+  #21 = NameAndType        #9:#22         // \"<init>\":()V\n+  #22 = Utf8               ()V\n+  #23 = String             #19            // file\n+  #24 = Methodref          #25.#27        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #25 = Class              #26            // java/util/Objects\n+  #26 = Utf8               java/util/Objects\n+  #27 = NameAndType        #28:#29        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #28 = Utf8               requireNonNull\n+  #29 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #30 = Class              #31            // java/io/RandomAccessFile\n+  #31 = Utf8               java/io/RandomAccessFile\n+  #32 = Fieldref           #1.#33         // org/apache/commons/io/input/RandomAccessFileInputStream.randomAccessFile:Ljava/io/RandomAccessFile;\n+  #33 = NameAndType        #7:#8          // randomAccessFile:Ljava/io/RandomAccessFile;\n+  #34 = Fieldref           #1.#35         // org/apache/commons/io/input/RandomAccessFileInputStream.closeOnClose:Z\n+  #35 = NameAndType        #5:#6          // closeOnClose:Z\n+  #36 = Utf8               available\n+  #37 = Utf8               ()I\n+  #38 = Utf8               Exceptions\n+  #39 = Class              #40            // java/io/IOException\n+  #40 = Utf8               java/io/IOException\n+  #41 = Methodref          #1.#42         // org/apache/commons/io/input/RandomAccessFileInputStream.availableLong:()J\n+  #42 = NameAndType        #43:#44        // availableLong:()J\n+  #43 = Utf8               availableLong\n+  #44 = Utf8               ()J\n+  #45 = Long               2147483647l\n+  #47 = Integer            2147483647\n+  #48 = Utf8               avail\n+  #49 = Utf8               J\n+  #50 = Utf8               StackMapTable\n+  #51 = Methodref          #30.#52        // java/io/RandomAccessFile.length:()J\n+  #52 = NameAndType        #53:#44        // length:()J\n+  #53 = Utf8               length\n+  #54 = Methodref          #30.#55        // java/io/RandomAccessFile.getFilePointer:()J\n+  #55 = NameAndType        #56:#44        // getFilePointer:()J\n+  #56 = Utf8               getFilePointer\n+  #57 = Utf8               close\n+  #58 = Methodref          #3.#59         // java/io/InputStream.close:()V\n+  #59 = NameAndType        #57:#22        // close:()V\n+  #60 = Methodref          #30.#59        // java/io/RandomAccessFile.close:()V\n+  #61 = Utf8               getRandomAccessFile\n+  #62 = Utf8               ()Ljava/io/RandomAccessFile;\n+  #63 = Utf8               isCloseOnClose\n+  #64 = Utf8               ()Z\n+  #65 = Utf8               read\n+  #66 = Methodref          #30.#67        // java/io/RandomAccessFile.read:()I\n+  #67 = NameAndType        #65:#37        // read:()I\n+  #68 = Utf8               ([B)I\n+  #69 = Methodref          #30.#70        // java/io/RandomAccessFile.read:([B)I\n+  #70 = NameAndType        #65:#68        // read:([B)I\n+  #71 = Utf8               bytes\n+  #72 = Utf8               [B\n+  #73 = Utf8               ([BII)I\n+  #74 = Methodref          #30.#75        // java/io/RandomAccessFile.read:([BII)I\n+  #75 = NameAndType        #65:#73        // read:([BII)I\n+  #76 = Utf8               offset\n+  #77 = Utf8               I\n+  #78 = Utf8               seek\n+  #79 = Utf8               (J)V\n+  #80 = Methodref          #30.#81        // java/io/RandomAccessFile.seek:(J)V\n+  #81 = NameAndType        #78:#79        // seek:(J)V\n+  #82 = Utf8               position\n+  #83 = Utf8               skip\n+  #84 = Utf8               (J)J\n+  #85 = Methodref          #1.#81         // org/apache/commons/io/input/RandomAccessFileInputStream.seek:(J)V\n+  #86 = Utf8               skipCount\n+  #87 = Utf8               filePointer\n+  #88 = Utf8               fileLength\n+  #89 = Utf8               targetPos\n+  #90 = Utf8               newPos\n+  #91 = Utf8               SourceFile\n+  #92 = Utf8               RandomAccessFileInputStream.java\n {\n   private final boolean closeOnClose;\n     descriptor: Z\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.io.RandomAccessFile randomAccessFile;\n     descriptor: Ljava/io/RandomAccessFile;\n@@ -114,15 +112,15 @@\n     descriptor: (Ljava/io/RandomAccessFile;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #1                  // Method \"<init>\":(Ljava/io/RandomAccessFile;Z)V\n+         3: invokespecial #12                 // Method \"<init>\":(Ljava/io/RandomAccessFile;Z)V\n          6: return\n       LineNumberTable:\n         line 41: 0\n         line 42: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n@@ -130,24 +128,24 @@\n \n   public org.apache.commons.io.input.RandomAccessFileInputStream(java.io.RandomAccessFile, boolean);\n     descriptor: (Ljava/io/RandomAccessFile;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #7                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #20                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #12                 // String file\n-         8: invokestatic  #14                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #20                 // class java/io/RandomAccessFile\n-        14: putfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         6: ldc           #23                 // String file\n+         8: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #30                 // class java/io/RandomAccessFile\n+        14: putfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n         17: aload_0\n         18: iload_2\n-        19: putfield      #26                 // Field closeOnClose:Z\n+        19: putfield      #34                 // Field closeOnClose:Z\n         22: return\n       LineNumberTable:\n         line 50: 0\n         line 51: 4\n         line 52: 17\n         line 53: 22\n       LocalVariableTable:\n@@ -155,24 +153,26 @@\n             0      23     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n             0      23     1  file   Ljava/io/RandomAccessFile;\n             0      23     2 closeOnClose   Z\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #30                 // Method availableLong:()J\n+         1: invokevirtual #41                 // Method availableLong:()J\n          4: lstore_1\n          5: lload_1\n-         6: ldc2_w        #36                 // long 2147483647l\n+         6: ldc2_w        #45                 // long 2147483647l\n          9: lcmp\n         10: ifle          16\n-        13: ldc           #38                 // int 2147483647\n+        13: ldc           #47                 // int 2147483647\n         15: ireturn\n         16: lload_1\n         17: l2i\n         18: ireturn\n       LineNumberTable:\n         line 65: 0\n         line 66: 5\n@@ -182,190 +182,190 @@\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n             5      14     1 avail   J\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 16\n           locals = [ long ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long availableLong() throws java.io.IOException;\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-         4: invokevirtual #39                 // Method java/io/RandomAccessFile.length:()J\n+         1: getfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         4: invokevirtual #51                 // Method java/io/RandomAccessFile.length:()J\n          7: aload_0\n-         8: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-        11: invokevirtual #42                 // Method java/io/RandomAccessFile.getFilePointer:()J\n+         8: getfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+        11: invokevirtual #54                 // Method java/io/RandomAccessFile.getFilePointer:()J\n         14: lsub\n         15: lreturn\n       LineNumberTable:\n         line 79: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #45                 // Method java/io/InputStream.close:()V\n+         1: invokespecial #58                 // Method java/io/InputStream.close:()V\n          4: aload_0\n-         5: getfield      #26                 // Field closeOnClose:Z\n+         5: getfield      #34                 // Field closeOnClose:Z\n          8: ifeq          18\n         11: aload_0\n-        12: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-        15: invokevirtual #48                 // Method java/io/RandomAccessFile.close:()V\n+        12: getfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+        15: invokevirtual #60                 // Method java/io/RandomAccessFile.close:()V\n         18: return\n       LineNumberTable:\n         line 84: 0\n         line 85: 4\n         line 86: 11\n         line 88: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 18 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.io.RandomAccessFile getRandomAccessFile();\n     descriptor: ()Ljava/io/RandomAccessFile;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         1: getfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n          4: areturn\n       LineNumberTable:\n         line 96: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n \n   public boolean isCloseOnClose();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field closeOnClose:Z\n+         1: getfield      #34                 // Field closeOnClose:Z\n          4: ireturn\n       LineNumberTable:\n         line 105: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-         4: invokevirtual #49                 // Method java/io/RandomAccessFile.read:()I\n+         1: getfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         4: invokevirtual #66                 // Method java/io/RandomAccessFile.read:()I\n          7: ireturn\n       LineNumberTable:\n         line 110: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         1: getfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n          4: aload_1\n-         5: invokevirtual #53                 // Method java/io/RandomAccessFile.read:([B)I\n+         5: invokevirtual #69                 // Method java/io/RandomAccessFile.read:([B)I\n          8: ireturn\n       LineNumberTable:\n         line 115: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n             0       9     1 bytes   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         1: getfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #56                 // Method java/io/RandomAccessFile.read:([BII)I\n+         7: invokevirtual #74                 // Method java/io/RandomAccessFile.read:([BII)I\n         10: ireturn\n       LineNumberTable:\n         line 120: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n             0      11     1 bytes   [B\n             0      11     2 offset   I\n             0      11     3 length   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void seek(long) throws java.io.IOException;\n     descriptor: (J)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+         1: getfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n          4: lload_1\n-         5: invokevirtual #59                 // Method java/io/RandomAccessFile.seek:(J)V\n+         5: invokevirtual #80                 // Method java/io/RandomAccessFile.seek:(J)V\n          8: return\n       LineNumberTable:\n         line 131: 0\n         line 132: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/RandomAccessFileInputStream;\n             0       9     1 position   J\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=11, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n          3: ifgt          8\n          6: lconst_0\n          7: lreturn\n          8: aload_0\n-         9: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-        12: invokevirtual #42                 // Method java/io/RandomAccessFile.getFilePointer:()J\n+         9: getfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+        12: invokevirtual #54                 // Method java/io/RandomAccessFile.getFilePointer:()J\n         15: lstore_3\n         16: aload_0\n-        17: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-        20: invokevirtual #39                 // Method java/io/RandomAccessFile.length:()J\n+        17: getfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+        20: invokevirtual #51                 // Method java/io/RandomAccessFile.length:()J\n         23: lstore        5\n         25: lload_3\n         26: lload         5\n         28: lcmp\n         29: iflt          34\n         32: lconst_0\n         33: lreturn\n@@ -385,18 +385,18 @@\n         56: lstore        9\n         58: lload         9\n         60: lconst_0\n         61: lcmp\n         62: ifle          71\n         65: aload_0\n         66: lload         9\n-        68: invokespecial #63                 // Method seek:(J)V\n+        68: invokespecial #85                 // Method seek:(J)V\n         71: aload_0\n-        72: getfield      #22                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n-        75: invokevirtual #42                 // Method java/io/RandomAccessFile.getFilePointer:()J\n+        72: getfield      #32                 // Field randomAccessFile:Ljava/io/RandomAccessFile;\n+        75: invokevirtual #54                 // Method java/io/RandomAccessFile.getFilePointer:()J\n         78: lload_3\n         79: lsub\n         80: lreturn\n       LineNumberTable:\n         line 136: 0\n         line 137: 6\n         line 139: 8\n@@ -425,11 +425,9 @@\n           offset_delta = 19\n           locals = [ long ]\n         frame_type = 65 /* same_locals_1_stack_item */\n           stack = [ long ]\n         frame_type = 252 /* append */\n           offset_delta = 14\n           locals = [ long ]\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"RandomAccessFileInputStream.java\"\n"}]}
