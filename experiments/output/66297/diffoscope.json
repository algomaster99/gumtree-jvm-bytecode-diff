{"diffoscope-json-version": 1, "source1": "first/ConfigurationLogger.class", "source2": "second/ConfigurationLogger.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,237 +1,238 @@\n-  SHA-256 checksum f54bf1ba1499497a39169f6fcd663800723ecfda3cf9b33419a75dda8347e794\n+  SHA-256 checksum abc46bfcc50f2f28a0800e003aff6253c02ab3224cd9881742dd009f698cfe3a\n   Compiled from \"ConfigurationLogger.java\"\n public class org.apache.commons.configuration2.io.ConfigurationLogger\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/configuration2/io/ConfigurationLogger\n-  super_class: #25                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/configuration2/io/ConfigurationLogger\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 1, methods: 16, attributes: 1\n Constant pool:\n-    #1 = Methodref          #7.#72        // org/apache/commons/configuration2/io/ConfigurationLogger.createLoggerForName:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n-    #2 = Methodref          #7.#73        // org/apache/commons/configuration2/io/ConfigurationLogger.\"<init>\":(Lorg/apache/commons/logging/Log;)V\n-    #3 = Methodref          #7.#74        // org/apache/commons/configuration2/io/ConfigurationLogger.createLoggerForClass:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n-    #4 = Class              #75           // org/apache/commons/logging/Log\n-    #5 = Methodref          #25.#76       // java/lang/Object.\"<init>\":()V\n-    #6 = Fieldref           #7.#77        // org/apache/commons/configuration2/io/ConfigurationLogger.log:Lorg/apache/commons/logging/Log;\n-    #7 = Class              #78           // org/apache/commons/configuration2/io/ConfigurationLogger\n-    #8 = Class              #79           // org/apache/commons/logging/impl/NoOpLog\n-    #9 = Methodref          #8.#76        // org/apache/commons/logging/impl/NoOpLog.\"<init>\":()V\n-   #10 = Methodref          #7.#80        // org/apache/commons/configuration2/io/ConfigurationLogger.getLog:()Lorg/apache/commons/logging/Log;\n-   #11 = InterfaceMethodref #4.#81        // org/apache/commons/logging/Log.isDebugEnabled:()Z\n-   #12 = InterfaceMethodref #4.#82        // org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V\n-   #13 = InterfaceMethodref #4.#83        // org/apache/commons/logging/Log.isInfoEnabled:()Z\n-   #14 = InterfaceMethodref #4.#84        // org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V\n-   #15 = InterfaceMethodref #4.#85        // org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V\n-   #16 = InterfaceMethodref #4.#86        // org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n-   #17 = InterfaceMethodref #4.#87        // org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V\n-   #18 = InterfaceMethodref #4.#88        // org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n-   #19 = Class              #89           // java/lang/IllegalArgumentException\n-   #20 = String             #90           // Logger name must not be null!\n-   #21 = Methodref          #19.#91       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #22 = Methodref          #92.#93       // org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n-   #23 = String             #94           // Logger class must not be null!\n-   #24 = Methodref          #92.#95       // org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n-   #25 = Class              #96           // java/lang/Object\n-   #26 = Utf8               log\n-   #27 = Utf8               Lorg/apache/commons/logging/Log;\n-   #28 = Utf8               <init>\n-   #29 = Utf8               (Ljava/lang/String;)V\n-   #30 = Utf8               Code\n-   #31 = Utf8               LineNumberTable\n-   #32 = Utf8               LocalVariableTable\n-   #33 = Utf8               this\n-   #34 = Utf8               Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n-   #35 = Utf8               loggerName\n-   #36 = Utf8               Ljava/lang/String;\n-   #37 = Utf8               (Ljava/lang/Class;)V\n-   #38 = Utf8               logCls\n-   #39 = Utf8               Ljava/lang/Class;\n-   #40 = Utf8               LocalVariableTypeTable\n-   #41 = Utf8               Ljava/lang/Class<*>;\n-   #42 = Utf8               Signature\n-   #43 = Utf8               (Ljava/lang/Class<*>;)V\n-   #44 = Utf8               ()V\n-   #45 = Utf8               (Lorg/apache/commons/logging/Log;)V\n-   #46 = Utf8               wrapped\n-   #47 = Utf8               newDummyLogger\n-   #48 = Utf8               ()Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n-   #49 = Utf8               isDebugEnabled\n-   #50 = Utf8               ()Z\n-   #51 = Utf8               debug\n-   #52 = Utf8               msg\n-   #53 = Utf8               isInfoEnabled\n-   #54 = Utf8               info\n-   #55 = Utf8               warn\n-   #56 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #57 = Utf8               ex\n-   #58 = Utf8               Ljava/lang/Throwable;\n-   #59 = Utf8               error\n-   #60 = Utf8               getLog\n-   #61 = Utf8               ()Lorg/apache/commons/logging/Log;\n-   #62 = Utf8               createLoggerForName\n-   #63 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n-   #64 = Utf8               name\n-   #65 = Utf8               StackMapTable\n-   #66 = Utf8               createLoggerForClass\n-   #67 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n-   #68 = Utf8               cls\n-   #69 = Utf8               (Ljava/lang/Class<*>;)Lorg/apache/commons/logging/Log;\n-   #70 = Utf8               SourceFile\n-   #71 = Utf8               ConfigurationLogger.java\n-   #72 = NameAndType        #62:#63       // createLoggerForName:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n-   #73 = NameAndType        #28:#45       // \"<init>\":(Lorg/apache/commons/logging/Log;)V\n-   #74 = NameAndType        #66:#67       // createLoggerForClass:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n-   #75 = Utf8               org/apache/commons/logging/Log\n-   #76 = NameAndType        #28:#44       // \"<init>\":()V\n-   #77 = NameAndType        #26:#27       // log:Lorg/apache/commons/logging/Log;\n-   #78 = Utf8               org/apache/commons/configuration2/io/ConfigurationLogger\n-   #79 = Utf8               org/apache/commons/logging/impl/NoOpLog\n-   #80 = NameAndType        #60:#61       // getLog:()Lorg/apache/commons/logging/Log;\n-   #81 = NameAndType        #49:#50       // isDebugEnabled:()Z\n-   #82 = NameAndType        #51:#97       // debug:(Ljava/lang/Object;)V\n-   #83 = NameAndType        #53:#50       // isInfoEnabled:()Z\n-   #84 = NameAndType        #54:#97       // info:(Ljava/lang/Object;)V\n-   #85 = NameAndType        #55:#97       // warn:(Ljava/lang/Object;)V\n-   #86 = NameAndType        #55:#98       // warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n-   #87 = NameAndType        #59:#97       // error:(Ljava/lang/Object;)V\n-   #88 = NameAndType        #59:#98       // error:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n-   #89 = Utf8               java/lang/IllegalArgumentException\n-   #90 = Utf8               Logger name must not be null!\n-   #91 = NameAndType        #28:#29       // \"<init>\":(Ljava/lang/String;)V\n-   #92 = Class              #99           // org/apache/commons/logging/LogFactory\n-   #93 = NameAndType        #60:#63       // getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n+    #1 = Class              #2            // org/apache/commons/configuration2/io/ConfigurationLogger\n+    #2 = Utf8               org/apache/commons/configuration2/io/ConfigurationLogger\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               log\n+    #6 = Utf8               Lorg/apache/commons/logging/Log;\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (Ljava/lang/String;)V\n+    #9 = Utf8               Code\n+   #10 = Methodref          #1.#11        // org/apache/commons/configuration2/io/ConfigurationLogger.createLoggerForName:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n+   #11 = NameAndType        #12:#13       // createLoggerForName:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n+   #12 = Utf8               createLoggerForName\n+   #13 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n+   #14 = Methodref          #1.#15        // org/apache/commons/configuration2/io/ConfigurationLogger.\"<init>\":(Lorg/apache/commons/logging/Log;)V\n+   #15 = NameAndType        #7:#16        // \"<init>\":(Lorg/apache/commons/logging/Log;)V\n+   #16 = Utf8               (Lorg/apache/commons/logging/Log;)V\n+   #17 = Utf8               LineNumberTable\n+   #18 = Utf8               LocalVariableTable\n+   #19 = Utf8               this\n+   #20 = Utf8               Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n+   #21 = Utf8               loggerName\n+   #22 = Utf8               Ljava/lang/String;\n+   #23 = Utf8               (Ljava/lang/Class;)V\n+   #24 = Utf8               Signature\n+   #25 = Utf8               (Ljava/lang/Class<*>;)V\n+   #26 = Methodref          #1.#27        // org/apache/commons/configuration2/io/ConfigurationLogger.createLoggerForClass:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n+   #27 = NameAndType        #28:#29       // createLoggerForClass:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n+   #28 = Utf8               createLoggerForClass\n+   #29 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n+   #30 = Utf8               logCls\n+   #31 = Utf8               Ljava/lang/Class;\n+   #32 = Utf8               LocalVariableTypeTable\n+   #33 = Utf8               Ljava/lang/Class<*>;\n+   #34 = Utf8               ()V\n+   #35 = Methodref          #3.#36        // java/lang/Object.\"<init>\":()V\n+   #36 = NameAndType        #7:#34        // \"<init>\":()V\n+   #37 = Fieldref           #1.#38        // org/apache/commons/configuration2/io/ConfigurationLogger.log:Lorg/apache/commons/logging/Log;\n+   #38 = NameAndType        #5:#6         // log:Lorg/apache/commons/logging/Log;\n+   #39 = Utf8               wrapped\n+   #40 = Utf8               newDummyLogger\n+   #41 = Utf8               ()Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n+   #42 = Class              #43           // org/apache/commons/logging/impl/NoOpLog\n+   #43 = Utf8               org/apache/commons/logging/impl/NoOpLog\n+   #44 = Methodref          #42.#36       // org/apache/commons/logging/impl/NoOpLog.\"<init>\":()V\n+   #45 = Utf8               isDebugEnabled\n+   #46 = Utf8               ()Z\n+   #47 = Methodref          #1.#48        // org/apache/commons/configuration2/io/ConfigurationLogger.getLog:()Lorg/apache/commons/logging/Log;\n+   #48 = NameAndType        #49:#50       // getLog:()Lorg/apache/commons/logging/Log;\n+   #49 = Utf8               getLog\n+   #50 = Utf8               ()Lorg/apache/commons/logging/Log;\n+   #51 = InterfaceMethodref #52.#54       // org/apache/commons/logging/Log.isDebugEnabled:()Z\n+   #52 = Class              #53           // org/apache/commons/logging/Log\n+   #53 = Utf8               org/apache/commons/logging/Log\n+   #54 = NameAndType        #45:#46       // isDebugEnabled:()Z\n+   #55 = Utf8               debug\n+   #56 = InterfaceMethodref #52.#57       // org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V\n+   #57 = NameAndType        #55:#58       // debug:(Ljava/lang/Object;)V\n+   #58 = Utf8               (Ljava/lang/Object;)V\n+   #59 = Utf8               msg\n+   #60 = Utf8               isInfoEnabled\n+   #61 = InterfaceMethodref #52.#62       // org/apache/commons/logging/Log.isInfoEnabled:()Z\n+   #62 = NameAndType        #60:#46       // isInfoEnabled:()Z\n+   #63 = Utf8               info\n+   #64 = InterfaceMethodref #52.#65       // org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V\n+   #65 = NameAndType        #63:#58       // info:(Ljava/lang/Object;)V\n+   #66 = Utf8               warn\n+   #67 = InterfaceMethodref #52.#68       // org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V\n+   #68 = NameAndType        #66:#58       // warn:(Ljava/lang/Object;)V\n+   #69 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #70 = InterfaceMethodref #52.#71       // org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n+   #71 = NameAndType        #66:#72       // warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n+   #72 = Utf8               (Ljava/lang/Object;Ljava/lang/Throwable;)V\n+   #73 = Utf8               ex\n+   #74 = Utf8               Ljava/lang/Throwable;\n+   #75 = Utf8               error\n+   #76 = InterfaceMethodref #52.#77       // org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V\n+   #77 = NameAndType        #75:#58       // error:(Ljava/lang/Object;)V\n+   #78 = InterfaceMethodref #52.#79       // org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n+   #79 = NameAndType        #75:#72       // error:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n+   #80 = Class              #81           // java/lang/IllegalArgumentException\n+   #81 = Utf8               java/lang/IllegalArgumentException\n+   #82 = String             #83           // Logger name must not be null!\n+   #83 = Utf8               Logger name must not be null!\n+   #84 = Methodref          #80.#85       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #85 = NameAndType        #7:#8         // \"<init>\":(Ljava/lang/String;)V\n+   #86 = Methodref          #87.#89       // org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n+   #87 = Class              #88           // org/apache/commons/logging/LogFactory\n+   #88 = Utf8               org/apache/commons/logging/LogFactory\n+   #89 = NameAndType        #49:#13       // getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n+   #90 = Utf8               name\n+   #91 = Utf8               StackMapTable\n+   #92 = Utf8               (Ljava/lang/Class<*>;)Lorg/apache/commons/logging/Log;\n+   #93 = String             #94           // Logger class must not be null!\n    #94 = Utf8               Logger class must not be null!\n-   #95 = NameAndType        #60:#67       // getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n-   #96 = Utf8               java/lang/Object\n-   #97 = Utf8               (Ljava/lang/Object;)V\n-   #98 = Utf8               (Ljava/lang/Object;Ljava/lang/Throwable;)V\n-   #99 = Utf8               org/apache/commons/logging/LogFactory\n+   #95 = Methodref          #87.#96       // org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n+   #96 = NameAndType        #49:#29       // getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n+   #97 = Utf8               cls\n+   #98 = Utf8               SourceFile\n+   #99 = Utf8               ConfigurationLogger.java\n {\n   private final org.apache.commons.logging.Log log;\n     descriptor: Lorg/apache/commons/logging/Log;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.configuration2.io.ConfigurationLogger(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #1                  // Method createLoggerForName:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n-         5: invokespecial #2                  // Method \"<init>\":(Lorg/apache/commons/logging/Log;)V\n+         2: invokestatic  #10                 // Method createLoggerForName:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n+         5: invokespecial #14                 // Method \"<init>\":(Lorg/apache/commons/logging/Log;)V\n          8: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n             0       9     1 loggerName   Ljava/lang/String;\n \n   public org.apache.commons.configuration2.io.ConfigurationLogger(java.lang.Class<?>);\n     descriptor: (Ljava/lang/Class;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #25                          // (Ljava/lang/Class<*>;)V\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #3                  // Method createLoggerForClass:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n-         5: invokespecial #2                  // Method \"<init>\":(Lorg/apache/commons/logging/Log;)V\n+         2: invokestatic  #26                 // Method createLoggerForClass:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n+         5: invokespecial #14                 // Method \"<init>\":(Lorg/apache/commons/logging/Log;)V\n          8: return\n       LineNumberTable:\n         line 80: 0\n         line 81: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n             0       9     1 logCls   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     1 logCls   Ljava/lang/Class<*>;\n-    Signature: #43                          // (Ljava/lang/Class<*>;)V\n \n   protected org.apache.commons.configuration2.io.ConfigurationLogger();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: checkcast     #4                  // class org/apache/commons/logging/Log\n-         5: invokespecial #2                  // Method \"<init>\":(Lorg/apache/commons/logging/Log;)V\n-         8: return\n+         2: invokespecial #14                 // Method \"<init>\":(Lorg/apache/commons/logging/Log;)V\n+         5: return\n       LineNumberTable:\n         line 92: 0\n-        line 93: 8\n+        line 93: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       9     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n+            0       6     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n \n   org.apache.commons.configuration2.io.ConfigurationLogger(org.apache.commons.logging.Log);\n     descriptor: (Lorg/apache/commons/logging/Log;)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #5                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #35                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #6                  // Field log:Lorg/apache/commons/logging/Log;\n+         6: putfield      #37                 // Field log:Lorg/apache/commons/logging/Log;\n          9: return\n       LineNumberTable:\n-        line 102: 0\n+        line 101: 0\n         line 103: 4\n         line 104: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n             0      10     1 wrapped   Lorg/apache/commons/logging/Log;\n \n   public static org.apache.commons.configuration2.io.ConfigurationLogger newDummyLogger();\n     descriptor: ()Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n-         0: new           #7                  // class org/apache/commons/configuration2/io/ConfigurationLogger\n+         0: new           #1                  // class org/apache/commons/configuration2/io/ConfigurationLogger\n          3: dup\n-         4: new           #8                  // class org/apache/commons/logging/impl/NoOpLog\n+         4: new           #42                 // class org/apache/commons/logging/impl/NoOpLog\n          7: dup\n-         8: invokespecial #9                  // Method org/apache/commons/logging/impl/NoOpLog.\"<init>\":()V\n-        11: invokespecial #2                  // Method \"<init>\":(Lorg/apache/commons/logging/Log;)V\n+         8: invokespecial #44                 // Method org/apache/commons/logging/impl/NoOpLog.\"<init>\":()V\n+        11: invokespecial #14                 // Method \"<init>\":(Lorg/apache/commons/logging/Log;)V\n         14: areturn\n       LineNumberTable:\n         line 114: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n \n   public boolean isDebugEnabled();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #10                 // Method getLog:()Lorg/apache/commons/logging/Log;\n-         4: invokeinterface #11,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z\n+         1: invokevirtual #47                 // Method getLog:()Lorg/apache/commons/logging/Log;\n+         4: invokeinterface #51,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z\n          9: ireturn\n       LineNumberTable:\n         line 124: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n \n   public void debug(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #10                 // Method getLog:()Lorg/apache/commons/logging/Log;\n+         1: invokevirtual #47                 // Method getLog:()Lorg/apache/commons/logging/Log;\n          4: aload_1\n-         5: invokeinterface #12,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V\n+         5: invokeinterface #56,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V\n         10: return\n       LineNumberTable:\n         line 134: 0\n         line 135: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n@@ -239,32 +240,32 @@\n \n   public boolean isInfoEnabled();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #10                 // Method getLog:()Lorg/apache/commons/logging/Log;\n-         4: invokeinterface #13,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z\n+         1: invokevirtual #47                 // Method getLog:()Lorg/apache/commons/logging/Log;\n+         4: invokeinterface #61,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z\n          9: ireturn\n       LineNumberTable:\n         line 144: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n \n   public void info(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #10                 // Method getLog:()Lorg/apache/commons/logging/Log;\n+         1: invokevirtual #47                 // Method getLog:()Lorg/apache/commons/logging/Log;\n          4: aload_1\n-         5: invokeinterface #14,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V\n+         5: invokeinterface #64,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V\n         10: return\n       LineNumberTable:\n         line 154: 0\n         line 155: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n@@ -272,17 +273,17 @@\n \n   public void warn(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #10                 // Method getLog:()Lorg/apache/commons/logging/Log;\n+         1: invokevirtual #47                 // Method getLog:()Lorg/apache/commons/logging/Log;\n          4: aload_1\n-         5: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V\n+         5: invokeinterface #67,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V\n         10: return\n       LineNumberTable:\n         line 164: 0\n         line 165: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n@@ -290,18 +291,18 @@\n \n   public void warn(java.lang.String, java.lang.Throwable);\n     descriptor: (Ljava/lang/String;Ljava/lang/Throwable;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokevirtual #10                 // Method getLog:()Lorg/apache/commons/logging/Log;\n+         1: invokevirtual #47                 // Method getLog:()Lorg/apache/commons/logging/Log;\n          4: aload_1\n          5: aload_2\n-         6: invokeinterface #16,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n+         6: invokeinterface #70,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n         11: return\n       LineNumberTable:\n         line 175: 0\n         line 176: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n@@ -310,17 +311,17 @@\n \n   public void error(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #10                 // Method getLog:()Lorg/apache/commons/logging/Log;\n+         1: invokevirtual #47                 // Method getLog:()Lorg/apache/commons/logging/Log;\n          4: aload_1\n-         5: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V\n+         5: invokeinterface #76,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V\n         10: return\n       LineNumberTable:\n         line 185: 0\n         line 186: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n@@ -328,18 +329,18 @@\n \n   public void error(java.lang.String, java.lang.Throwable);\n     descriptor: (Ljava/lang/String;Ljava/lang/Throwable;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokevirtual #10                 // Method getLog:()Lorg/apache/commons/logging/Log;\n+         1: invokevirtual #47                 // Method getLog:()Lorg/apache/commons/logging/Log;\n          4: aload_1\n          5: aload_2\n-         6: invokeinterface #18,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n+         6: invokeinterface #78,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V\n         11: return\n       LineNumberTable:\n         line 196: 0\n         line 197: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n@@ -348,70 +349,72 @@\n \n   org.apache.commons.logging.Log getLog();\n     descriptor: ()Lorg/apache/commons/logging/Log;\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field log:Lorg/apache/commons/logging/Log;\n+         1: getfield      #37                 // Field log:Lorg/apache/commons/logging/Log;\n          4: areturn\n       LineNumberTable:\n         line 206: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/io/ConfigurationLogger;\n \n   private static org.apache.commons.logging.Log createLoggerForName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #19                 // class java/lang/IllegalArgumentException\n+         4: new           #80                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #20                 // String Logger name must not be null!\n-        10: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #82                 // String Logger name must not be null!\n+        10: invokespecial #84                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: invokestatic  #22                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n+        15: invokestatic  #86                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;\n         18: areturn\n       LineNumberTable:\n         line 219: 0\n         line 221: 4\n         line 223: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  name   Ljava/lang/String;\n       StackMapTable: number_of_entries = 1\n         frame_type = 14 /* same */\n \n   private static org.apache.commons.logging.Log createLoggerForClass(java.lang.Class<?>);\n     descriptor: (Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n+    Signature: #92                          // (Ljava/lang/Class<*>;)Lorg/apache/commons/logging/Log;\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #19                 // class java/lang/IllegalArgumentException\n+         4: new           #80                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #23                 // String Logger class must not be null!\n-        10: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #93                 // String Logger class must not be null!\n+        10: invokespecial #84                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: invokestatic  #24                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n+        15: invokestatic  #95                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;\n         18: areturn\n       LineNumberTable:\n         line 236: 0\n         line 238: 4\n+        line 239: 8\n+        line 238: 10\n         line 241: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0   cls   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0   cls   Ljava/lang/Class<*>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 14 /* same */\n-    Signature: #69                          // (Ljava/lang/Class<*>;)Lorg/apache/commons/logging/Log;\n }\n SourceFile: \"ConfigurationLogger.java\"\n"}]}
