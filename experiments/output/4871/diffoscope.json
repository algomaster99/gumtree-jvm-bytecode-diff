{"diffoscope-json-version": 1, "source1": "first/XmlStreamReader.class", "source2": "second/XmlStreamReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,149 +1,149 @@\n-  SHA-256 checksum 6a254bf9be87d5645fffcac64cf83c4e0b5fc1aefedd68dd199d6102ffc3aea1\n+  SHA-256 checksum fa31c41762954c571084b4ec6cb5377e7e7d9c3e489b9a481714208e8cb0c70f\n   Compiled from \"XmlStreamReader.java\"\n public class org.apache.commons.io.input.XmlStreamReader extends java.io.Reader\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #15                         // org/apache/commons/io/input/XmlStreamReader\n   super_class: #132                       // java/io/Reader\n   interfaces: 0, fields: 22, methods: 24, attributes: 1\n Constant pool:\n-    #1 = Class              #265          // org/apache/commons/io/IOUtils\n-    #2 = Fieldref           #15.#266      // org/apache/commons/io/input/XmlStreamReader.defaultEncoding:Ljava/lang/String;\n-    #3 = Class              #267          // java/io/FileInputStream\n-    #4 = Methodref          #268.#269     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-    #5 = Class              #270          // java/io/File\n-    #6 = Methodref          #3.#271       // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n-    #7 = Methodref          #15.#272      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;)V\n-    #8 = Methodref          #15.#273      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Z)V\n-    #9 = Methodref          #15.#274      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;ZLjava/lang/String;)V\n-   #10 = Methodref          #132.#275     // java/io/Reader.\"<init>\":()V\n+    #1 = Class              #259          // org/apache/commons/io/IOUtils\n+    #2 = Fieldref           #15.#260      // org/apache/commons/io/input/XmlStreamReader.defaultEncoding:Ljava/lang/String;\n+    #3 = Class              #261          // java/io/FileInputStream\n+    #4 = Methodref          #262.#263     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+    #5 = Class              #264          // java/io/File\n+    #6 = Methodref          #3.#265       // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+    #7 = Methodref          #15.#266      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;)V\n+    #8 = Methodref          #15.#267      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Z)V\n+    #9 = Methodref          #15.#268      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;ZLjava/lang/String;)V\n+   #10 = Methodref          #132.#269     // java/io/Reader.\"<init>\":()V\n    #11 = String             #175          // inputStream\n-   #12 = Methodref          #268.#276     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #13 = Class              #277          // org/apache/commons/io/input/BOMInputStream\n-   #14 = Class              #278          // java/io/BufferedInputStream\n-   #15 = Class              #279          // org/apache/commons/io/input/XmlStreamReader\n-   #16 = Methodref          #14.#280      // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #17 = Fieldref           #15.#281      // org/apache/commons/io/input/XmlStreamReader.BOMS:[Lorg/apache/commons/io/ByteOrderMark;\n-   #18 = Methodref          #13.#282      // org/apache/commons/io/input/BOMInputStream.\"<init>\":(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n-   #19 = Fieldref           #15.#283      // org/apache/commons/io/input/XmlStreamReader.XML_GUESS_BYTES:[Lorg/apache/commons/io/ByteOrderMark;\n-   #20 = Methodref          #15.#284      // org/apache/commons/io/input/XmlStreamReader.doRawStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n-   #21 = Fieldref           #15.#285      // org/apache/commons/io/input/XmlStreamReader.encoding:Ljava/lang/String;\n-   #22 = Class              #286          // java/io/InputStreamReader\n-   #23 = Methodref          #22.#287      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #24 = Fieldref           #15.#288      // org/apache/commons/io/input/XmlStreamReader.reader:Ljava/io/Reader;\n+   #12 = Methodref          #262.#270     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #13 = Class              #271          // org/apache/commons/io/input/BOMInputStream\n+   #14 = Class              #272          // java/io/BufferedInputStream\n+   #15 = Class              #273          // org/apache/commons/io/input/XmlStreamReader\n+   #16 = Methodref          #14.#274      // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #17 = Fieldref           #15.#275      // org/apache/commons/io/input/XmlStreamReader.BOMS:[Lorg/apache/commons/io/ByteOrderMark;\n+   #18 = Methodref          #13.#276      // org/apache/commons/io/input/BOMInputStream.\"<init>\":(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n+   #19 = Fieldref           #15.#277      // org/apache/commons/io/input/XmlStreamReader.XML_GUESS_BYTES:[Lorg/apache/commons/io/ByteOrderMark;\n+   #20 = Methodref          #15.#278      // org/apache/commons/io/input/XmlStreamReader.doRawStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n+   #21 = Fieldref           #15.#279      // org/apache/commons/io/input/XmlStreamReader.encoding:Ljava/lang/String;\n+   #22 = Class              #280          // java/io/InputStreamReader\n+   #23 = Methodref          #22.#281      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #24 = Fieldref           #15.#282      // org/apache/commons/io/input/XmlStreamReader.reader:Ljava/io/Reader;\n    #25 = String             #185          // url\n-   #26 = Class              #289          // java/net/URL\n-   #27 = Methodref          #26.#290      // java/net/URL.openConnection:()Ljava/net/URLConnection;\n-   #28 = Methodref          #15.#291      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/net/URLConnection;Ljava/lang/String;)V\n-   #29 = String             #292          // conm\n-   #30 = Methodref          #293.#294     // java/net/URLConnection.getContentType:()Ljava/lang/String;\n-   #31 = Methodref          #293.#295     // java/net/URLConnection.getInputStream:()Ljava/io/InputStream;\n-   #32 = Class              #296          // java/net/HttpURLConnection\n-   #33 = Methodref          #15.#297      // org/apache/commons/io/input/XmlStreamReader.doHttpStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n-   #34 = Methodref          #15.#298      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;Z)V\n-   #35 = Methodref          #15.#299      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n-   #36 = Methodref          #132.#300     // java/io/Reader.read:([CII)I\n-   #37 = Methodref          #132.#301     // java/io/Reader.close:()V\n-   #38 = Methodref          #13.#302      // org/apache/commons/io/input/BOMInputStream.getBOMCharsetName:()Ljava/lang/String;\n-   #39 = Methodref          #15.#303      // org/apache/commons/io/input/XmlStreamReader.getXmlProlog:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n-   #40 = Methodref          #15.#304      // org/apache/commons/io/input/XmlStreamReader.calculateRawEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #41 = Class              #305          // org/apache/commons/io/input/XmlStreamReaderException\n-   #42 = Methodref          #15.#306      // org/apache/commons/io/input/XmlStreamReader.doLenientDetection:(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n-   #43 = Methodref          #15.#307      // org/apache/commons/io/input/XmlStreamReader.calculateHttpEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n-   #44 = String             #308          // text/html\n-   #45 = Methodref          #92.#309      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #46 = Methodref          #92.#310      // java/lang/String.length:()I\n-   #47 = Methodref          #92.#311      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #48 = Class              #312          // java/lang/StringBuilder\n-   #49 = Methodref          #48.#275      // java/lang/StringBuilder.\"<init>\":()V\n-   #50 = String             #313          // text/xml\n-   #51 = Methodref          #48.#314      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #52 = Methodref          #48.#315      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #53 = Methodref          #41.#316      // org/apache/commons/io/input/XmlStreamReaderException.getBomEncoding:()Ljava/lang/String;\n-   #54 = Methodref          #41.#317      // org/apache/commons/io/input/XmlStreamReaderException.getXmlGuessEncoding:()Ljava/lang/String;\n-   #55 = Methodref          #41.#318      // org/apache/commons/io/input/XmlStreamReaderException.getXmlEncoding:()Ljava/lang/String;\n-   #56 = Methodref          #41.#319      // org/apache/commons/io/input/XmlStreamReaderException.getContentTypeEncoding:()Ljava/lang/String;\n-   #57 = String             #320          // UTF-8\n-   #58 = String             #321          // UTF-16\n-   #59 = Methodref          #92.#322      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #60 = String             #323          // UTF-16BE\n-   #61 = String             #324          // UTF-16LE\n-   #62 = String             #325          // Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch\n-   #63 = Class              #326          // java/lang/Object\n-   #64 = Methodref          #327.#328     // java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #65 = Methodref          #41.#329      // org/apache/commons/io/input/XmlStreamReaderException.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #66 = String             #330          // UTF-32BE\n-   #67 = String             #331          // UTF-32LE\n-   #68 = String             #332          // UTF-32\n-   #69 = String             #333          // Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] unknown BOM\n-   #70 = Methodref          #15.#334      // org/apache/commons/io/input/XmlStreamReader.getContentTypeMime:(Ljava/lang/String;)Ljava/lang/String;\n-   #71 = Methodref          #15.#335      // org/apache/commons/io/input/XmlStreamReader.getContentTypeEncoding:(Ljava/lang/String;)Ljava/lang/String;\n-   #72 = Methodref          #15.#336      // org/apache/commons/io/input/XmlStreamReader.isAppXml:(Ljava/lang/String;)Z\n-   #73 = Methodref          #15.#337      // org/apache/commons/io/input/XmlStreamReader.isTextXml:(Ljava/lang/String;)Z\n-   #74 = String             #338          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], Invalid MIME\n-   #75 = Methodref          #41.#339      // org/apache/commons/io/input/XmlStreamReaderException.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #76 = String             #340          // US-ASCII\n-   #77 = String             #341          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL\n-   #78 = String             #342          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch\n-   #79 = String             #343          // ;\n-   #80 = Methodref          #92.#344      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #81 = Methodref          #92.#345      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #82 = Methodref          #92.#346      // java/lang/String.trim:()Ljava/lang/String;\n-   #83 = Fieldref           #15.#347      // org/apache/commons/io/input/XmlStreamReader.CHARSET_PATTERN:Ljava/util/regex/Pattern;\n-   #84 = Methodref          #130.#348     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #85 = Methodref          #349.#350     // java/util/regex/Matcher.find:()Z\n-   #86 = Methodref          #349.#351     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-   #87 = Fieldref           #352.#353     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #88 = Methodref          #92.#354      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #89 = Methodref          #355.#356     // java/io/InputStream.mark:(I)V\n-   #90 = Methodref          #355.#357     // java/io/InputStream.read:([BII)I\n-   #91 = String             #358          //\n-   #92 = Class              #359          // java/lang/String\n-   #93 = Methodref          #92.#360      // java/lang/String.\"<init>\":([BIILjava/lang/String;)V\n-   #94 = Methodref          #92.#361      // java/lang/String.indexOf:(I)I\n-   #95 = Class              #362          // java/io/IOException\n-   #96 = String             #363          // Unexpected end of XML stream\n-   #97 = Methodref          #95.#364      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #98 = String             #365          // XML prolog or ROOT element not found on first\n-   #99 = Methodref          #48.#366      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #100 = String             #367          //  bytes\n-  #101 = Methodref          #355.#368     // java/io/InputStream.reset:()V\n-  #102 = Class              #369          // java/io/BufferedReader\n-  #103 = Class              #370          // java/io/StringReader\n-  #104 = Methodref          #103.#364     // java/io/StringReader.\"<init>\":(Ljava/lang/String;)V\n-  #105 = Methodref          #102.#371     // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-  #106 = Class              #372          // java/lang/StringBuffer\n-  #107 = Methodref          #106.#275     // java/lang/StringBuffer.\"<init>\":()V\n-  #108 = Methodref          #102.#373     // java/io/BufferedReader.readLine:()Ljava/lang/String;\n-  #109 = Methodref          #106.#374     // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #110 = Fieldref           #15.#375      // org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-  #111 = String             #376          // application/xml\n-  #112 = String             #377          // application/xml-dtd\n-  #113 = String             #378          // application/xml-external-parsed-entity\n-  #114 = String             #379          // application/\n-  #115 = String             #380          // +xml\n-  #116 = Methodref          #92.#381      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-  #117 = String             #382          // text/xml-external-parsed-entity\n-  #118 = String             #383          // text/\n-  #119 = Class              #384          // org/apache/commons/io/ByteOrderMark\n-  #120 = Fieldref           #119.#385     // org/apache/commons/io/ByteOrderMark.UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n-  #121 = Fieldref           #119.#386     // org/apache/commons/io/ByteOrderMark.UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n-  #122 = Fieldref           #119.#387     // org/apache/commons/io/ByteOrderMark.UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n-  #123 = Fieldref           #119.#388     // org/apache/commons/io/ByteOrderMark.UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n-  #124 = Fieldref           #119.#389     // org/apache/commons/io/ByteOrderMark.UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n-  #125 = Methodref          #119.#390     // org/apache/commons/io/ByteOrderMark.\"<init>\":(Ljava/lang/String;[I)V\n-  #126 = String             #391          // CP1047\n-  #127 = String             #392          // charset=[\\\"\\']?([.[^; \\\"\\']]*)[\\\"\\']?\n-  #128 = Methodref          #130.#393     // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #129 = String             #394          // <\\\\?xml.*encoding[\\\\s]*=[\\\\s]*((?:\\\".[^\\\"]*\\\")|(?:\\'.[^\\']*\\'))\n-  #130 = Class              #395          // java/util/regex/Pattern\n-  #131 = Methodref          #130.#396     // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-  #132 = Class              #397          // java/io/Reader\n+   #26 = Class              #283          // java/net/URL\n+   #27 = Methodref          #26.#284      // java/net/URL.openConnection:()Ljava/net/URLConnection;\n+   #28 = Methodref          #15.#285      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/net/URLConnection;Ljava/lang/String;)V\n+   #29 = String             #286          // conm\n+   #30 = Methodref          #192.#287     // java/net/URLConnection.getContentType:()Ljava/lang/String;\n+   #31 = Methodref          #192.#288     // java/net/URLConnection.getInputStream:()Ljava/io/InputStream;\n+   #32 = Class              #289          // java/net/HttpURLConnection\n+   #33 = Methodref          #15.#290      // org/apache/commons/io/input/XmlStreamReader.doHttpStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n+   #34 = Methodref          #15.#291      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;Z)V\n+   #35 = Methodref          #15.#292      // org/apache/commons/io/input/XmlStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n+   #36 = Methodref          #132.#293     // java/io/Reader.read:([CII)I\n+   #37 = Methodref          #132.#294     // java/io/Reader.close:()V\n+   #38 = Methodref          #13.#295      // org/apache/commons/io/input/BOMInputStream.getBOMCharsetName:()Ljava/lang/String;\n+   #39 = Methodref          #15.#296      // org/apache/commons/io/input/XmlStreamReader.getXmlProlog:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n+   #40 = Methodref          #15.#297      // org/apache/commons/io/input/XmlStreamReader.calculateRawEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #41 = Class              #298          // org/apache/commons/io/input/XmlStreamReaderException\n+   #42 = Methodref          #15.#299      // org/apache/commons/io/input/XmlStreamReader.doLenientDetection:(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n+   #43 = Methodref          #15.#300      // org/apache/commons/io/input/XmlStreamReader.calculateHttpEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n+   #44 = String             #301          // text/html\n+   #45 = Methodref          #92.#302      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #46 = Methodref          #92.#303      // java/lang/String.length:()I\n+   #47 = Methodref          #92.#304      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #48 = Class              #305          // java/lang/StringBuilder\n+   #49 = Methodref          #48.#269      // java/lang/StringBuilder.\"<init>\":()V\n+   #50 = String             #306          // text/xml\n+   #51 = Methodref          #48.#307      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #52 = Methodref          #48.#308      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #53 = Methodref          #41.#309      // org/apache/commons/io/input/XmlStreamReaderException.getBomEncoding:()Ljava/lang/String;\n+   #54 = Methodref          #41.#310      // org/apache/commons/io/input/XmlStreamReaderException.getXmlGuessEncoding:()Ljava/lang/String;\n+   #55 = Methodref          #41.#311      // org/apache/commons/io/input/XmlStreamReaderException.getXmlEncoding:()Ljava/lang/String;\n+   #56 = Methodref          #41.#312      // org/apache/commons/io/input/XmlStreamReaderException.getContentTypeEncoding:()Ljava/lang/String;\n+   #57 = String             #313          // UTF-8\n+   #58 = String             #314          // UTF-16\n+   #59 = Methodref          #92.#315      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #60 = String             #316          // UTF-16BE\n+   #61 = String             #317          // UTF-16LE\n+   #62 = String             #318          // Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch\n+   #63 = Class              #319          // java/lang/Object\n+   #64 = Methodref          #320.#321     // java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #65 = Methodref          #41.#322      // org/apache/commons/io/input/XmlStreamReaderException.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+   #66 = String             #323          // UTF-32BE\n+   #67 = String             #324          // UTF-32LE\n+   #68 = String             #325          // UTF-32\n+   #69 = String             #326          // Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] unknown BOM\n+   #70 = Methodref          #15.#327      // org/apache/commons/io/input/XmlStreamReader.getContentTypeMime:(Ljava/lang/String;)Ljava/lang/String;\n+   #71 = Methodref          #15.#328      // org/apache/commons/io/input/XmlStreamReader.getContentTypeEncoding:(Ljava/lang/String;)Ljava/lang/String;\n+   #72 = Methodref          #15.#329      // org/apache/commons/io/input/XmlStreamReader.isAppXml:(Ljava/lang/String;)Z\n+   #73 = Methodref          #15.#330      // org/apache/commons/io/input/XmlStreamReader.isTextXml:(Ljava/lang/String;)Z\n+   #74 = String             #331          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], Invalid MIME\n+   #75 = Methodref          #41.#332      // org/apache/commons/io/input/XmlStreamReaderException.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+   #76 = String             #333          // US-ASCII\n+   #77 = String             #334          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL\n+   #78 = String             #335          // Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch\n+   #79 = String             #336          // ;\n+   #80 = Methodref          #92.#337      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+   #81 = Methodref          #92.#338      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #82 = Methodref          #92.#339      // java/lang/String.trim:()Ljava/lang/String;\n+   #83 = Fieldref           #15.#340      // org/apache/commons/io/input/XmlStreamReader.CHARSET_PATTERN:Ljava/util/regex/Pattern;\n+   #84 = Methodref          #130.#341     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #85 = Methodref          #236.#342     // java/util/regex/Matcher.find:()Z\n+   #86 = Methodref          #236.#343     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+   #87 = Fieldref           #344.#345     // java/util/Locale.ROOT:Ljava/util/Locale;\n+   #88 = Methodref          #92.#346      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #89 = Methodref          #193.#347     // java/io/InputStream.mark:(I)V\n+   #90 = Methodref          #193.#348     // java/io/InputStream.read:([BII)I\n+   #91 = String             #349          //\n+   #92 = Class              #350          // java/lang/String\n+   #93 = Methodref          #92.#351      // java/lang/String.\"<init>\":([BIILjava/lang/String;)V\n+   #94 = Methodref          #92.#352      // java/lang/String.indexOf:(I)I\n+   #95 = Class              #353          // java/io/IOException\n+   #96 = String             #354          // Unexpected end of XML stream\n+   #97 = Methodref          #95.#355      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #98 = String             #356          // XML prolog or ROOT element not found on first\n+   #99 = Methodref          #48.#357      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #100 = String             #358          //  bytes\n+  #101 = Methodref          #193.#359     // java/io/InputStream.reset:()V\n+  #102 = Class              #360          // java/io/BufferedReader\n+  #103 = Class              #361          // java/io/StringReader\n+  #104 = Methodref          #103.#355     // java/io/StringReader.\"<init>\":(Ljava/lang/String;)V\n+  #105 = Methodref          #102.#362     // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+  #106 = Class              #363          // java/lang/StringBuffer\n+  #107 = Methodref          #106.#269     // java/lang/StringBuffer.\"<init>\":()V\n+  #108 = Methodref          #102.#364     // java/io/BufferedReader.readLine:()Ljava/lang/String;\n+  #109 = Methodref          #106.#365     // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+  #110 = Fieldref           #15.#366      // org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+  #111 = String             #367          // application/xml\n+  #112 = String             #368          // application/xml-dtd\n+  #113 = String             #369          // application/xml-external-parsed-entity\n+  #114 = String             #370          // application/\n+  #115 = String             #371          // +xml\n+  #116 = Methodref          #92.#372      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+  #117 = String             #373          // text/xml-external-parsed-entity\n+  #118 = String             #374          // text/\n+  #119 = Class              #375          // org/apache/commons/io/ByteOrderMark\n+  #120 = Fieldref           #119.#376     // org/apache/commons/io/ByteOrderMark.UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n+  #121 = Fieldref           #119.#377     // org/apache/commons/io/ByteOrderMark.UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n+  #122 = Fieldref           #119.#378     // org/apache/commons/io/ByteOrderMark.UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n+  #123 = Fieldref           #119.#379     // org/apache/commons/io/ByteOrderMark.UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n+  #124 = Fieldref           #119.#380     // org/apache/commons/io/ByteOrderMark.UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n+  #125 = Methodref          #119.#381     // org/apache/commons/io/ByteOrderMark.\"<init>\":(Ljava/lang/String;[I)V\n+  #126 = String             #382          // CP1047\n+  #127 = String             #383          // charset=[\\\"\\']?([.[^; \\\"\\']]*)[\\\"\\']?\n+  #128 = Methodref          #130.#384     // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #129 = String             #385          // <\\\\?xml.*encoding[\\\\s]*=[\\\\s]*((?:\\\".[^\\\"]*\\\")|(?:\\'.[^\\']*\\'))\n+  #130 = Class              #386          // java/util/regex/Pattern\n+  #131 = Methodref          #130.#387     // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+  #132 = Class              #388          // java/io/Reader\n   #133 = Utf8               BUFFER_SIZE\n   #134 = Utf8               I\n   #135 = Utf8               ConstantValue\n   #136 = Integer            8192\n   #137 = Utf8               UTF_8\n   #138 = Utf8               Ljava/lang/String;\n   #139 = Utf8               US_ASCII\n@@ -195,284 +195,275 @@\n   #185 = Utf8               url\n   #186 = Utf8               Ljava/net/URL;\n   #187 = Utf8               (Ljava/net/URLConnection;Ljava/lang/String;)V\n   #188 = Utf8               conn\n   #189 = Utf8               Ljava/net/URLConnection;\n   #190 = Utf8               contentType\n   #191 = Utf8               StackMapTable\n-  #192 = Class              #279          // org/apache/commons/io/input/XmlStreamReader\n-  #193 = Class              #398          // java/net/URLConnection\n-  #194 = Class              #359          // java/lang/String\n-  #195 = Class              #399          // java/io/InputStream\n-  #196 = Class              #277          // org/apache/commons/io/input/BOMInputStream\n-  #197 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #198 = Utf8               httpContentType\n-  #199 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n-  #200 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;Z)V\n-  #201 = Utf8               getEncoding\n-  #202 = Utf8               read\n-  #203 = Utf8               ([CII)I\n-  #204 = Utf8               buf\n-  #205 = Utf8               [C\n-  #206 = Utf8               offset\n-  #207 = Utf8               len\n-  #208 = Utf8               close\n-  #209 = Utf8               ()V\n-  #210 = Utf8               doRawStream\n-  #211 = Utf8               (Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n-  #212 = Utf8               ex\n-  #213 = Utf8               Lorg/apache/commons/io/input/XmlStreamReaderException;\n-  #214 = Utf8               bomEnc\n-  #215 = Utf8               xmlGuessEnc\n-  #216 = Utf8               xmlEnc\n-  #217 = Class              #305          // org/apache/commons/io/input/XmlStreamReaderException\n-  #218 = Utf8               doHttpStream\n-  #219 = Utf8               (Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n-  #220 = Utf8               doLenientDetection\n-  #221 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n-  #222 = Utf8               ex2\n-  #223 = Utf8               calculateRawEncoding\n-  #224 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #225 = Utf8               msg\n-  #226 = Utf8               calculateHttpEncoding\n-  #227 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n-  #228 = Utf8               cTMime\n-  #229 = Utf8               cTEnc\n-  #230 = Utf8               appXml\n-  #231 = Utf8               textXml\n-  #232 = Utf8               getContentTypeMime\n-  #233 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #234 = Utf8               i\n-  #235 = Utf8               mime\n-  #236 = Utf8               getContentTypeEncoding\n-  #237 = Utf8               postMime\n-  #238 = Utf8               m\n-  #239 = Utf8               Ljava/util/regex/Matcher;\n-  #240 = Class              #400          // java/util/regex/Matcher\n-  #241 = Utf8               getXmlProlog\n-  #242 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n-  #243 = Utf8               bReader\n-  #244 = Utf8               Ljava/io/BufferedReader;\n-  #245 = Utf8               prolog\n-  #246 = Utf8               Ljava/lang/StringBuffer;\n-  #247 = Utf8               line\n-  #248 = Utf8               bytes\n-  #249 = Utf8               [B\n-  #250 = Utf8               max\n-  #251 = Utf8               c\n-  #252 = Utf8               firstGT\n-  #253 = Utf8               xmlProlog\n-  #254 = Utf8               bytesRead\n-  #255 = Utf8               guessedEnc\n-  #256 = Class              #249          // \"[B\"\n-  #257 = Class              #369          // java/io/BufferedReader\n-  #258 = Class              #372          // java/lang/StringBuffer\n-  #259 = Utf8               isAppXml\n-  #260 = Utf8               (Ljava/lang/String;)Z\n-  #261 = Utf8               isTextXml\n-  #262 = Utf8               <clinit>\n-  #263 = Utf8               SourceFile\n-  #264 = Utf8               XmlStreamReader.java\n-  #265 = Utf8               org/apache/commons/io/IOUtils\n-  #266 = NameAndType        #153:#138     // defaultEncoding:Ljava/lang/String;\n-  #267 = Utf8               java/io/FileInputStream\n-  #268 = Class              #401          // java/util/Objects\n-  #269 = NameAndType        #402:#403     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #270 = Utf8               java/io/File\n-  #271 = NameAndType        #169:#170     // \"<init>\":(Ljava/io/File;)V\n-  #272 = NameAndType        #169:#174     // \"<init>\":(Ljava/io/InputStream;)V\n-  #273 = NameAndType        #169:#177     // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #274 = NameAndType        #169:#180     // \"<init>\":(Ljava/io/InputStream;ZLjava/lang/String;)V\n-  #275 = NameAndType        #169:#209     // \"<init>\":()V\n-  #276 = NameAndType        #402:#404     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #277 = Utf8               org/apache/commons/io/input/BOMInputStream\n-  #278 = Utf8               java/io/BufferedInputStream\n-  #279 = Utf8               org/apache/commons/io/input/XmlStreamReader\n-  #280 = NameAndType        #169:#405     // \"<init>\":(Ljava/io/InputStream;I)V\n-  #281 = NameAndType        #147:#148     // BOMS:[Lorg/apache/commons/io/ByteOrderMark;\n-  #282 = NameAndType        #169:#406     // \"<init>\":(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n-  #283 = NameAndType        #149:#148     // XML_GUESS_BYTES:[Lorg/apache/commons/io/ByteOrderMark;\n-  #284 = NameAndType        #210:#211     // doRawStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n-  #285 = NameAndType        #152:#138     // encoding:Ljava/lang/String;\n-  #286 = Utf8               java/io/InputStreamReader\n-  #287 = NameAndType        #169:#197     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #288 = NameAndType        #150:#151     // reader:Ljava/io/Reader;\n-  #289 = Utf8               java/net/URL\n-  #290 = NameAndType        #407:#408     // openConnection:()Ljava/net/URLConnection;\n-  #291 = NameAndType        #169:#187     // \"<init>\":(Ljava/net/URLConnection;Ljava/lang/String;)V\n-  #292 = Utf8               conm\n-  #293 = Class              #398          // java/net/URLConnection\n-  #294 = NameAndType        #409:#163     // getContentType:()Ljava/lang/String;\n-  #295 = NameAndType        #410:#411     // getInputStream:()Ljava/io/InputStream;\n-  #296 = Utf8               java/net/HttpURLConnection\n-  #297 = NameAndType        #218:#219     // doHttpStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n-  #298 = NameAndType        #169:#200     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;Z)V\n-  #299 = NameAndType        #169:#199     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n-  #300 = NameAndType        #202:#203     // read:([CII)I\n-  #301 = NameAndType        #208:#209     // close:()V\n-  #302 = NameAndType        #412:#163     // getBOMCharsetName:()Ljava/lang/String;\n-  #303 = NameAndType        #241:#242     // getXmlProlog:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n-  #304 = NameAndType        #223:#224     // calculateRawEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #305 = Utf8               org/apache/commons/io/input/XmlStreamReaderException\n-  #306 = NameAndType        #220:#221     // doLenientDetection:(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n-  #307 = NameAndType        #226:#227     // calculateHttpEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n-  #308 = Utf8               text/html\n-  #309 = NameAndType        #413:#260     // startsWith:(Ljava/lang/String;)Z\n-  #310 = NameAndType        #414:#415     // length:()I\n-  #311 = NameAndType        #416:#417     // substring:(I)Ljava/lang/String;\n-  #312 = Utf8               java/lang/StringBuilder\n-  #313 = Utf8               text/xml\n-  #314 = NameAndType        #418:#419     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #315 = NameAndType        #420:#163     // toString:()Ljava/lang/String;\n-  #316 = NameAndType        #421:#163     // getBomEncoding:()Ljava/lang/String;\n-  #317 = NameAndType        #422:#163     // getXmlGuessEncoding:()Ljava/lang/String;\n-  #318 = NameAndType        #423:#163     // getXmlEncoding:()Ljava/lang/String;\n-  #319 = NameAndType        #236:#163     // getContentTypeEncoding:()Ljava/lang/String;\n-  #320 = Utf8               UTF-8\n-  #321 = Utf8               UTF-16\n-  #322 = NameAndType        #424:#425     // equals:(Ljava/lang/Object;)Z\n-  #323 = Utf8               UTF-16BE\n-  #324 = Utf8               UTF-16LE\n-  #325 = Utf8               Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch\n-  #326 = Utf8               java/lang/Object\n-  #327 = Class              #426          // java/text/MessageFormat\n-  #328 = NameAndType        #427:#428     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #329 = NameAndType        #169:#429     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #330 = Utf8               UTF-32BE\n-  #331 = Utf8               UTF-32LE\n-  #332 = Utf8               UTF-32\n-  #333 = Utf8               Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] unknown BOM\n-  #334 = NameAndType        #232:#233     // getContentTypeMime:(Ljava/lang/String;)Ljava/lang/String;\n-  #335 = NameAndType        #236:#233     // getContentTypeEncoding:(Ljava/lang/String;)Ljava/lang/String;\n-  #336 = NameAndType        #259:#260     // isAppXml:(Ljava/lang/String;)Z\n-  #337 = NameAndType        #261:#260     // isTextXml:(Ljava/lang/String;)Z\n-  #338 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], Invalid MIME\n-  #339 = NameAndType        #169:#430     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #340 = Utf8               US-ASCII\n-  #341 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL\n-  #342 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch\n-  #343 = Utf8               ;\n-  #344 = NameAndType        #431:#432     // indexOf:(Ljava/lang/String;)I\n-  #345 = NameAndType        #416:#433     // substring:(II)Ljava/lang/String;\n-  #346 = NameAndType        #434:#163     // trim:()Ljava/lang/String;\n-  #347 = NameAndType        #154:#155     // CHARSET_PATTERN:Ljava/util/regex/Pattern;\n-  #348 = NameAndType        #435:#436     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #349 = Class              #400          // java/util/regex/Matcher\n-  #350 = NameAndType        #437:#438     // find:()Z\n-  #351 = NameAndType        #439:#417     // group:(I)Ljava/lang/String;\n-  #352 = Class              #440          // java/util/Locale\n-  #353 = NameAndType        #441:#442     // ROOT:Ljava/util/Locale;\n-  #354 = NameAndType        #443:#444     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #355 = Class              #399          // java/io/InputStream\n-  #356 = NameAndType        #445:#446     // mark:(I)V\n-  #357 = NameAndType        #202:#447     // read:([BII)I\n-  #358 = Utf8\n-  #359 = Utf8               java/lang/String\n-  #360 = NameAndType        #169:#448     // \"<init>\":([BIILjava/lang/String;)V\n-  #361 = NameAndType        #431:#449     // indexOf:(I)I\n-  #362 = Utf8               java/io/IOException\n-  #363 = Utf8               Unexpected end of XML stream\n-  #364 = NameAndType        #169:#450     // \"<init>\":(Ljava/lang/String;)V\n-  #365 = Utf8               XML prolog or ROOT element not found on first\n-  #366 = NameAndType        #418:#451     // append:(I)Ljava/lang/StringBuilder;\n-  #367 = Utf8                bytes\n-  #368 = NameAndType        #452:#209     // reset:()V\n-  #369 = Utf8               java/io/BufferedReader\n-  #370 = Utf8               java/io/StringReader\n-  #371 = NameAndType        #169:#453     // \"<init>\":(Ljava/io/Reader;)V\n-  #372 = Utf8               java/lang/StringBuffer\n-  #373 = NameAndType        #454:#163     // readLine:()Ljava/lang/String;\n-  #374 = NameAndType        #418:#455     // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #375 = NameAndType        #156:#155     // ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-  #376 = Utf8               application/xml\n-  #377 = Utf8               application/xml-dtd\n-  #378 = Utf8               application/xml-external-parsed-entity\n-  #379 = Utf8               application/\n-  #380 = Utf8               +xml\n-  #381 = NameAndType        #456:#260     // endsWith:(Ljava/lang/String;)Z\n-  #382 = Utf8               text/xml-external-parsed-entity\n-  #383 = Utf8               text/\n-  #384 = Utf8               org/apache/commons/io/ByteOrderMark\n-  #385 = NameAndType        #137:#457     // UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n-  #386 = NameAndType        #140:#457     // UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n-  #387 = NameAndType        #141:#457     // UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n-  #388 = NameAndType        #142:#457     // UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n-  #389 = NameAndType        #143:#457     // UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n-  #390 = NameAndType        #169:#458     // \"<init>\":(Ljava/lang/String;[I)V\n-  #391 = Utf8               CP1047\n-  #392 = Utf8               charset=[\\\"\\']?([.[^; \\\"\\']]*)[\\\"\\']?\n-  #393 = NameAndType        #459:#460     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #394 = Utf8               <\\\\?xml.*encoding[\\\\s]*=[\\\\s]*((?:\\\".[^\\\"]*\\\")|(?:\\'.[^\\']*\\'))\n-  #395 = Utf8               java/util/regex/Pattern\n-  #396 = NameAndType        #459:#461     // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-  #397 = Utf8               java/io/Reader\n-  #398 = Utf8               java/net/URLConnection\n-  #399 = Utf8               java/io/InputStream\n-  #400 = Utf8               java/util/regex/Matcher\n-  #401 = Utf8               java/util/Objects\n-  #402 = Utf8               requireNonNull\n-  #403 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #404 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #405 = Utf8               (Ljava/io/InputStream;I)V\n-  #406 = Utf8               (Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n-  #407 = Utf8               openConnection\n-  #408 = Utf8               ()Ljava/net/URLConnection;\n-  #409 = Utf8               getContentType\n-  #410 = Utf8               getInputStream\n-  #411 = Utf8               ()Ljava/io/InputStream;\n-  #412 = Utf8               getBOMCharsetName\n-  #413 = Utf8               startsWith\n-  #414 = Utf8               length\n-  #415 = Utf8               ()I\n-  #416 = Utf8               substring\n-  #417 = Utf8               (I)Ljava/lang/String;\n-  #418 = Utf8               append\n-  #419 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #420 = Utf8               toString\n-  #421 = Utf8               getBomEncoding\n-  #422 = Utf8               getXmlGuessEncoding\n-  #423 = Utf8               getXmlEncoding\n-  #424 = Utf8               equals\n-  #425 = Utf8               (Ljava/lang/Object;)Z\n-  #426 = Utf8               java/text/MessageFormat\n-  #427 = Utf8               format\n-  #428 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #429 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #430 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #431 = Utf8               indexOf\n-  #432 = Utf8               (Ljava/lang/String;)I\n-  #433 = Utf8               (II)Ljava/lang/String;\n-  #434 = Utf8               trim\n-  #435 = Utf8               matcher\n-  #436 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #437 = Utf8               find\n-  #438 = Utf8               ()Z\n-  #439 = Utf8               group\n-  #440 = Utf8               java/util/Locale\n-  #441 = Utf8               ROOT\n-  #442 = Utf8               Ljava/util/Locale;\n-  #443 = Utf8               toUpperCase\n-  #444 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #445 = Utf8               mark\n-  #446 = Utf8               (I)V\n-  #447 = Utf8               ([BII)I\n-  #448 = Utf8               ([BIILjava/lang/String;)V\n-  #449 = Utf8               (I)I\n-  #450 = Utf8               (Ljava/lang/String;)V\n-  #451 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #452 = Utf8               reset\n-  #453 = Utf8               (Ljava/io/Reader;)V\n-  #454 = Utf8               readLine\n-  #455 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #456 = Utf8               endsWith\n-  #457 = Utf8               Lorg/apache/commons/io/ByteOrderMark;\n-  #458 = Utf8               (Ljava/lang/String;[I)V\n-  #459 = Utf8               compile\n-  #460 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #461 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+  #192 = Class              #389          // java/net/URLConnection\n+  #193 = Class              #390          // java/io/InputStream\n+  #194 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #195 = Utf8               httpContentType\n+  #196 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n+  #197 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;Z)V\n+  #198 = Utf8               getEncoding\n+  #199 = Utf8               read\n+  #200 = Utf8               ([CII)I\n+  #201 = Utf8               buf\n+  #202 = Utf8               [C\n+  #203 = Utf8               offset\n+  #204 = Utf8               len\n+  #205 = Utf8               close\n+  #206 = Utf8               ()V\n+  #207 = Utf8               doRawStream\n+  #208 = Utf8               (Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n+  #209 = Utf8               ex\n+  #210 = Utf8               Lorg/apache/commons/io/input/XmlStreamReaderException;\n+  #211 = Utf8               bomEnc\n+  #212 = Utf8               xmlGuessEnc\n+  #213 = Utf8               xmlEnc\n+  #214 = Utf8               doHttpStream\n+  #215 = Utf8               (Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n+  #216 = Utf8               doLenientDetection\n+  #217 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n+  #218 = Utf8               ex2\n+  #219 = Utf8               calculateRawEncoding\n+  #220 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #221 = Utf8               msg\n+  #222 = Utf8               calculateHttpEncoding\n+  #223 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n+  #224 = Utf8               cTMime\n+  #225 = Utf8               cTEnc\n+  #226 = Utf8               appXml\n+  #227 = Utf8               textXml\n+  #228 = Utf8               getContentTypeMime\n+  #229 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #230 = Utf8               i\n+  #231 = Utf8               mime\n+  #232 = Utf8               getContentTypeEncoding\n+  #233 = Utf8               postMime\n+  #234 = Utf8               m\n+  #235 = Utf8               Ljava/util/regex/Matcher;\n+  #236 = Class              #391          // java/util/regex/Matcher\n+  #237 = Utf8               getXmlProlog\n+  #238 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n+  #239 = Utf8               bReader\n+  #240 = Utf8               Ljava/io/BufferedReader;\n+  #241 = Utf8               prolog\n+  #242 = Utf8               Ljava/lang/StringBuffer;\n+  #243 = Utf8               line\n+  #244 = Utf8               bytes\n+  #245 = Utf8               [B\n+  #246 = Utf8               max\n+  #247 = Utf8               c\n+  #248 = Utf8               firstGT\n+  #249 = Utf8               xmlProlog\n+  #250 = Utf8               bytesRead\n+  #251 = Utf8               guessedEnc\n+  #252 = Class              #245          // \"[B\"\n+  #253 = Utf8               isAppXml\n+  #254 = Utf8               (Ljava/lang/String;)Z\n+  #255 = Utf8               isTextXml\n+  #256 = Utf8               <clinit>\n+  #257 = Utf8               SourceFile\n+  #258 = Utf8               XmlStreamReader.java\n+  #259 = Utf8               org/apache/commons/io/IOUtils\n+  #260 = NameAndType        #153:#138     // defaultEncoding:Ljava/lang/String;\n+  #261 = Utf8               java/io/FileInputStream\n+  #262 = Class              #392          // java/util/Objects\n+  #263 = NameAndType        #393:#394     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #264 = Utf8               java/io/File\n+  #265 = NameAndType        #169:#170     // \"<init>\":(Ljava/io/File;)V\n+  #266 = NameAndType        #169:#174     // \"<init>\":(Ljava/io/InputStream;)V\n+  #267 = NameAndType        #169:#177     // \"<init>\":(Ljava/io/InputStream;Z)V\n+  #268 = NameAndType        #169:#180     // \"<init>\":(Ljava/io/InputStream;ZLjava/lang/String;)V\n+  #269 = NameAndType        #169:#206     // \"<init>\":()V\n+  #270 = NameAndType        #393:#395     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #271 = Utf8               org/apache/commons/io/input/BOMInputStream\n+  #272 = Utf8               java/io/BufferedInputStream\n+  #273 = Utf8               org/apache/commons/io/input/XmlStreamReader\n+  #274 = NameAndType        #169:#396     // \"<init>\":(Ljava/io/InputStream;I)V\n+  #275 = NameAndType        #147:#148     // BOMS:[Lorg/apache/commons/io/ByteOrderMark;\n+  #276 = NameAndType        #169:#397     // \"<init>\":(Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n+  #277 = NameAndType        #149:#148     // XML_GUESS_BYTES:[Lorg/apache/commons/io/ByteOrderMark;\n+  #278 = NameAndType        #207:#208     // doRawStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Z)Ljava/lang/String;\n+  #279 = NameAndType        #152:#138     // encoding:Ljava/lang/String;\n+  #280 = Utf8               java/io/InputStreamReader\n+  #281 = NameAndType        #169:#194     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #282 = NameAndType        #150:#151     // reader:Ljava/io/Reader;\n+  #283 = Utf8               java/net/URL\n+  #284 = NameAndType        #398:#399     // openConnection:()Ljava/net/URLConnection;\n+  #285 = NameAndType        #169:#187     // \"<init>\":(Ljava/net/URLConnection;Ljava/lang/String;)V\n+  #286 = Utf8               conm\n+  #287 = NameAndType        #400:#163     // getContentType:()Ljava/lang/String;\n+  #288 = NameAndType        #401:#402     // getInputStream:()Ljava/io/InputStream;\n+  #289 = Utf8               java/net/HttpURLConnection\n+  #290 = NameAndType        #214:#215     // doHttpStream:(Lorg/apache/commons/io/input/BOMInputStream;Lorg/apache/commons/io/input/BOMInputStream;Ljava/lang/String;Z)Ljava/lang/String;\n+  #291 = NameAndType        #169:#197     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;Z)V\n+  #292 = NameAndType        #169:#196     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;ZLjava/lang/String;)V\n+  #293 = NameAndType        #199:#200     // read:([CII)I\n+  #294 = NameAndType        #205:#206     // close:()V\n+  #295 = NameAndType        #403:#163     // getBOMCharsetName:()Ljava/lang/String;\n+  #296 = NameAndType        #237:#238     // getXmlProlog:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;\n+  #297 = NameAndType        #219:#220     // calculateRawEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #298 = Utf8               org/apache/commons/io/input/XmlStreamReaderException\n+  #299 = NameAndType        #216:#217     // doLenientDetection:(Ljava/lang/String;Lorg/apache/commons/io/input/XmlStreamReaderException;)Ljava/lang/String;\n+  #300 = NameAndType        #222:#223     // calculateHttpEncoding:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n+  #301 = Utf8               text/html\n+  #302 = NameAndType        #404:#254     // startsWith:(Ljava/lang/String;)Z\n+  #303 = NameAndType        #405:#406     // length:()I\n+  #304 = NameAndType        #407:#408     // substring:(I)Ljava/lang/String;\n+  #305 = Utf8               java/lang/StringBuilder\n+  #306 = Utf8               text/xml\n+  #307 = NameAndType        #409:#410     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #308 = NameAndType        #411:#163     // toString:()Ljava/lang/String;\n+  #309 = NameAndType        #412:#163     // getBomEncoding:()Ljava/lang/String;\n+  #310 = NameAndType        #413:#163     // getXmlGuessEncoding:()Ljava/lang/String;\n+  #311 = NameAndType        #414:#163     // getXmlEncoding:()Ljava/lang/String;\n+  #312 = NameAndType        #232:#163     // getContentTypeEncoding:()Ljava/lang/String;\n+  #313 = Utf8               UTF-8\n+  #314 = Utf8               UTF-16\n+  #315 = NameAndType        #415:#416     // equals:(Ljava/lang/Object;)Z\n+  #316 = Utf8               UTF-16BE\n+  #317 = Utf8               UTF-16LE\n+  #318 = Utf8               Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch\n+  #319 = Utf8               java/lang/Object\n+  #320 = Class              #417          // java/text/MessageFormat\n+  #321 = NameAndType        #418:#419     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #322 = NameAndType        #169:#420     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #323 = Utf8               UTF-32BE\n+  #324 = Utf8               UTF-32LE\n+  #325 = Utf8               UTF-32\n+  #326 = Utf8               Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] unknown BOM\n+  #327 = NameAndType        #228:#229     // getContentTypeMime:(Ljava/lang/String;)Ljava/lang/String;\n+  #328 = NameAndType        #232:#229     // getContentTypeEncoding:(Ljava/lang/String;)Ljava/lang/String;\n+  #329 = NameAndType        #253:#254     // isAppXml:(Ljava/lang/String;)Z\n+  #330 = NameAndType        #255:#254     // isTextXml:(Ljava/lang/String;)Z\n+  #331 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], Invalid MIME\n+  #332 = NameAndType        #169:#421     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #333 = Utf8               US-ASCII\n+  #334 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL\n+  #335 = Utf8               Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch\n+  #336 = Utf8               ;\n+  #337 = NameAndType        #422:#423     // indexOf:(Ljava/lang/String;)I\n+  #338 = NameAndType        #407:#424     // substring:(II)Ljava/lang/String;\n+  #339 = NameAndType        #425:#163     // trim:()Ljava/lang/String;\n+  #340 = NameAndType        #154:#155     // CHARSET_PATTERN:Ljava/util/regex/Pattern;\n+  #341 = NameAndType        #426:#427     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #342 = NameAndType        #428:#429     // find:()Z\n+  #343 = NameAndType        #430:#408     // group:(I)Ljava/lang/String;\n+  #344 = Class              #431          // java/util/Locale\n+  #345 = NameAndType        #432:#433     // ROOT:Ljava/util/Locale;\n+  #346 = NameAndType        #434:#435     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #347 = NameAndType        #436:#437     // mark:(I)V\n+  #348 = NameAndType        #199:#438     // read:([BII)I\n+  #349 = Utf8\n+  #350 = Utf8               java/lang/String\n+  #351 = NameAndType        #169:#439     // \"<init>\":([BIILjava/lang/String;)V\n+  #352 = NameAndType        #422:#440     // indexOf:(I)I\n+  #353 = Utf8               java/io/IOException\n+  #354 = Utf8               Unexpected end of XML stream\n+  #355 = NameAndType        #169:#441     // \"<init>\":(Ljava/lang/String;)V\n+  #356 = Utf8               XML prolog or ROOT element not found on first\n+  #357 = NameAndType        #409:#442     // append:(I)Ljava/lang/StringBuilder;\n+  #358 = Utf8                bytes\n+  #359 = NameAndType        #443:#206     // reset:()V\n+  #360 = Utf8               java/io/BufferedReader\n+  #361 = Utf8               java/io/StringReader\n+  #362 = NameAndType        #169:#444     // \"<init>\":(Ljava/io/Reader;)V\n+  #363 = Utf8               java/lang/StringBuffer\n+  #364 = NameAndType        #445:#163     // readLine:()Ljava/lang/String;\n+  #365 = NameAndType        #409:#446     // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+  #366 = NameAndType        #156:#155     // ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+  #367 = Utf8               application/xml\n+  #368 = Utf8               application/xml-dtd\n+  #369 = Utf8               application/xml-external-parsed-entity\n+  #370 = Utf8               application/\n+  #371 = Utf8               +xml\n+  #372 = NameAndType        #447:#254     // endsWith:(Ljava/lang/String;)Z\n+  #373 = Utf8               text/xml-external-parsed-entity\n+  #374 = Utf8               text/\n+  #375 = Utf8               org/apache/commons/io/ByteOrderMark\n+  #376 = NameAndType        #137:#448     // UTF_8:Lorg/apache/commons/io/ByteOrderMark;\n+  #377 = NameAndType        #140:#448     // UTF_16BE:Lorg/apache/commons/io/ByteOrderMark;\n+  #378 = NameAndType        #141:#448     // UTF_16LE:Lorg/apache/commons/io/ByteOrderMark;\n+  #379 = NameAndType        #142:#448     // UTF_32BE:Lorg/apache/commons/io/ByteOrderMark;\n+  #380 = NameAndType        #143:#448     // UTF_32LE:Lorg/apache/commons/io/ByteOrderMark;\n+  #381 = NameAndType        #169:#449     // \"<init>\":(Ljava/lang/String;[I)V\n+  #382 = Utf8               CP1047\n+  #383 = Utf8               charset=[\\\"\\']?([.[^; \\\"\\']]*)[\\\"\\']?\n+  #384 = NameAndType        #450:#451     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #385 = Utf8               <\\\\?xml.*encoding[\\\\s]*=[\\\\s]*((?:\\\".[^\\\"]*\\\")|(?:\\'.[^\\']*\\'))\n+  #386 = Utf8               java/util/regex/Pattern\n+  #387 = NameAndType        #450:#452     // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+  #388 = Utf8               java/io/Reader\n+  #389 = Utf8               java/net/URLConnection\n+  #390 = Utf8               java/io/InputStream\n+  #391 = Utf8               java/util/regex/Matcher\n+  #392 = Utf8               java/util/Objects\n+  #393 = Utf8               requireNonNull\n+  #394 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #395 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #396 = Utf8               (Ljava/io/InputStream;I)V\n+  #397 = Utf8               (Ljava/io/InputStream;Z[Lorg/apache/commons/io/ByteOrderMark;)V\n+  #398 = Utf8               openConnection\n+  #399 = Utf8               ()Ljava/net/URLConnection;\n+  #400 = Utf8               getContentType\n+  #401 = Utf8               getInputStream\n+  #402 = Utf8               ()Ljava/io/InputStream;\n+  #403 = Utf8               getBOMCharsetName\n+  #404 = Utf8               startsWith\n+  #405 = Utf8               length\n+  #406 = Utf8               ()I\n+  #407 = Utf8               substring\n+  #408 = Utf8               (I)Ljava/lang/String;\n+  #409 = Utf8               append\n+  #410 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #411 = Utf8               toString\n+  #412 = Utf8               getBomEncoding\n+  #413 = Utf8               getXmlGuessEncoding\n+  #414 = Utf8               getXmlEncoding\n+  #415 = Utf8               equals\n+  #416 = Utf8               (Ljava/lang/Object;)Z\n+  #417 = Utf8               java/text/MessageFormat\n+  #418 = Utf8               format\n+  #419 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #420 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #421 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #422 = Utf8               indexOf\n+  #423 = Utf8               (Ljava/lang/String;)I\n+  #424 = Utf8               (II)Ljava/lang/String;\n+  #425 = Utf8               trim\n+  #426 = Utf8               matcher\n+  #427 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #428 = Utf8               find\n+  #429 = Utf8               ()Z\n+  #430 = Utf8               group\n+  #431 = Utf8               java/util/Locale\n+  #432 = Utf8               ROOT\n+  #433 = Utf8               Ljava/util/Locale;\n+  #434 = Utf8               toUpperCase\n+  #435 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #436 = Utf8               mark\n+  #437 = Utf8               (I)V\n+  #438 = Utf8               ([BII)I\n+  #439 = Utf8               ([BIILjava/lang/String;)V\n+  #440 = Utf8               (I)I\n+  #441 = Utf8               (Ljava/lang/String;)V\n+  #442 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #443 = Utf8               reset\n+  #444 = Utf8               (Ljava/io/Reader;)V\n+  #445 = Utf8               readLine\n+  #446 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n+  #447 = Utf8               endsWith\n+  #448 = Utf8               Lorg/apache/commons/io/ByteOrderMark;\n+  #449 = Utf8               (Ljava/lang/String;[I)V\n+  #450 = Utf8               compile\n+  #451 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #452 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n {\n   private static final int BUFFER_SIZE = 8192;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 8192\n \n   private static final java.lang.String UTF_8 = \"UTF-8\";\n"}]}
