{"diffoscope-json-version": 1, "source1": "first/TypeLiteral.class", "source2": "second/TypeLiteral.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,14 +7,18 @@\n \n public abstract class TypeLiteral<T> implements Typed<T>\n {\n     private static final TypeVariable<Class<TypeLiteral>> T;\n     public final Type value;\n     private final String toString;\n     \n+    static {\n+        T = TypeLiteral.class.getTypeParameters()[0];\n+    }\n+    \n     protected TypeLiteral() {\n         this.value = (Type)Validate.notNull((Object)(Type)TypeUtils.getTypeArguments((Type)this.getClass(), (Class)TypeLiteral.class).get(TypeLiteral.T), \"%s does not assign type parameter %s\", new Object[] { this.getClass(), TypeUtils.toLongString((TypeVariable)TypeLiteral.T) });\n         this.toString = String.format(\"%s<%s>\", TypeLiteral.class.getSimpleName(), TypeUtils.toString(this.value));\n     }\n     \n     @Override\n     public final boolean equals(final Object obj) {\n@@ -37,12 +41,8 @@\n     public String toString() {\n         return this.toString;\n     }\n     \n     public Type getType() {\n         return this.value;\n     }\n-    \n-    static {\n-        T = TypeLiteral.class.getTypeParameters()[0];\n-    }\n }\n"}]}
