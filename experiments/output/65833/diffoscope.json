{"diffoscope-json-version": 1, "source1": "first/FixedLengthBlockOutputStream.class", "source2": "second/FixedLengthBlockOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -21,15 +21,15 @@\n         this.closed = new AtomicBoolean(false);\n         if (os instanceof FileOutputStream) {\n             final FileOutputStream fileOutputStream = (FileOutputStream)os;\n             this.out = fileOutputStream.getChannel();\n             this.buffer = ByteBuffer.allocateDirect(blockSize);\n         }\n         else {\n-            this.out = (WritableByteChannel)new FixedLengthBlockOutputStream.BufferAtATimeOutputChannel(os, (FixedLengthBlockOutputStream.FixedLengthBlockOutputStream$1)null);\n+            this.out = (WritableByteChannel)new FixedLengthBlockOutputStream.BufferAtATimeOutputChannel(os, (FixedLengthBlockOutputStream.BufferAtATimeOutputChannel)null);\n             this.buffer = ByteBuffer.allocate(blockSize);\n         }\n         this.blockSize = blockSize;\n     }\n     \n     public FixedLengthBlockOutputStream(final WritableByteChannel out, final int blockSize) {\n         this.closed = new AtomicBoolean(false);\n@@ -127,14 +127,15 @@\n         if (this.closed.compareAndSet(false, true)) {\n             try {\n                 this.flushBlock();\n             }\n             finally {\n                 this.out.close();\n             }\n+            this.out.close();\n         }\n     }\n     \n     private void padBlock() {\n         this.buffer.order(ByteOrder.nativeOrder());\n         int bytesToWrite = this.buffer.remaining();\n         if (bytesToWrite > 8) {\n"}]}
