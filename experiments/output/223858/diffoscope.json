{"diffoscope-json-version": 1, "source1": "first/LocalVariableNameCheck.class", "source2": "second/LocalVariableNameCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,42 +8,39 @@\n {\n     private boolean allowOneCharVarInForLoop;\n     \n     public LocalVariableNameCheck() {\n         super(\"^[a-z][a-zA-Z0-9]*$\");\n     }\n     \n-    public final void setAllowOneCharVarInForLoop(final boolean allow) {\n-        this.allowOneCharVarInForLoop = allow;\n+    public final void setAllowOneCharVarInForLoop(final boolean allowOneCharVarInForLoop) {\n+        this.allowOneCharVarInForLoop = allowOneCharVarInForLoop;\n     }\n     \n     public int[] getDefaultTokens() {\n         return this.getRequiredTokens();\n     }\n     \n     public int[] getAcceptableTokens() {\n         return this.getRequiredTokens();\n     }\n     \n     public int[] getRequiredTokens() {\n         return new int[] { 10 };\n     }\n     \n-    protected final boolean mustCheckName(final DetailAST ast) {\n-        boolean result;\n-        if (this.allowOneCharVarInForLoop && isForLoopVariable(ast)) {\n-            final String variableName = ast.findFirstToken(58).getText();\n-            result = (variableName.length() != 1);\n+    protected final boolean mustCheckName(final DetailAST detailAST) {\n+        boolean b;\n+        if (this.allowOneCharVarInForLoop && isForLoopVariable(detailAST)) {\n+            b = (detailAST.findFirstToken(58).getText().length() != 1);\n         }\n         else {\n-            final DetailAST modifiersAST = ast.findFirstToken(5);\n-            final boolean isFinal = modifiersAST.findFirstToken(39) != null;\n-            result = (!isFinal && ScopeUtil.isLocalVariableDef(ast));\n+            b = (detailAST.findFirstToken(5).findFirstToken(39) == null && ScopeUtil.isLocalVariableDef(detailAST));\n         }\n-        return result;\n+        return b;\n     }\n     \n-    private static boolean isForLoopVariable(final DetailAST variableDef) {\n-        final int parentType = variableDef.getParent().getType();\n-        return parentType == 35 || parentType == 156;\n+    private static boolean isForLoopVariable(final DetailAST detailAST) {\n+        final int type = detailAST.getParent().getType();\n+        return type == 35 || type == 156;\n     }\n }\n"}]}
