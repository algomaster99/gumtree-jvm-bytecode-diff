{"diffoscope-json-version": 1, "source1": "first/IEEE754rUtils.class", "source2": "second/IEEE754rUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,91 +1,91 @@\n-  SHA-256 checksum be1f563d66ab2e56777442004cb1ddcf5ab19667ea313bbd0242902f21911b85\n+  SHA-256 checksum fefa10fac9104bfa68c9ef4348547f7efaa13101831bd75be021504f87ae2d6b\n   Compiled from \"IEEE754rUtils.java\"\n public class org.apache.commons.lang3.math.IEEE754rUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #17                         // org/apache/commons/lang3/math/IEEE754rUtils\n-  super_class: #3                         // java/lang/Object\n+  this_class: #22                         // org/apache/commons/lang3/math/IEEE754rUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 13, attributes: 1\n Constant pool:\n-   #1 = Methodref          #3.#47         // java/lang/Object.\"<init>\":()V\n-   #2 = String             #48            // The Array must not be null\n-   #3 = Class              #49            // java/lang/Object\n-   #4 = Methodref          #50.#51        // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #5 = String             #52            // Array cannot be empty.\n-   #6 = Methodref          #50.#53        // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #7 = Methodref          #17.#54        // org/apache/commons/lang3/math/IEEE754rUtils.min:(DD)D\n-   #8 = Methodref          #17.#55        // org/apache/commons/lang3/math/IEEE754rUtils.min:(FF)F\n-   #9 = Methodref          #56.#57        // java/lang/Double.isNaN:(D)Z\n-  #10 = Methodref          #58.#54        // java/lang/Math.min:(DD)D\n-  #11 = Methodref          #59.#60        // java/lang/Float.isNaN:(F)Z\n-  #12 = Methodref          #58.#55        // java/lang/Math.min:(FF)F\n-  #13 = Methodref          #17.#61        // org/apache/commons/lang3/math/IEEE754rUtils.max:(DD)D\n-  #14 = Methodref          #17.#62        // org/apache/commons/lang3/math/IEEE754rUtils.max:(FF)F\n-  #15 = Methodref          #58.#61        // java/lang/Math.max:(DD)D\n-  #16 = Methodref          #58.#62        // java/lang/Math.max:(FF)F\n-  #17 = Class              #63            // org/apache/commons/lang3/math/IEEE754rUtils\n-  #18 = Utf8               <init>\n-  #19 = Utf8               ()V\n-  #20 = Utf8               Code\n-  #21 = Utf8               LineNumberTable\n-  #22 = Utf8               LocalVariableTable\n-  #23 = Utf8               this\n-  #24 = Utf8               Lorg/apache/commons/lang3/math/IEEE754rUtils;\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = String             #8             // The Array must not be null\n+   #8 = Utf8               The Array must not be null\n+   #9 = Methodref          #10.#11        // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #10 = Class              #12            // org/apache/commons/lang3/Validate\n+  #11 = NameAndType        #13:#14        // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #12 = Utf8               org/apache/commons/lang3/Validate\n+  #13 = Utf8               notNull\n+  #14 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #15 = String             #16            // Array cannot be empty.\n+  #16 = Utf8               Array cannot be empty.\n+  #17 = Methodref          #10.#18        // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #18 = NameAndType        #19:#20        // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #19 = Utf8               isTrue\n+  #20 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #21 = Methodref          #22.#23        // org/apache/commons/lang3/math/IEEE754rUtils.min:(DD)D\n+  #22 = Class              #24            // org/apache/commons/lang3/math/IEEE754rUtils\n+  #23 = NameAndType        #25:#26        // min:(DD)D\n+  #24 = Utf8               org/apache/commons/lang3/math/IEEE754rUtils\n   #25 = Utf8               min\n-  #26 = Utf8               ([D)D\n-  #27 = Utf8               i\n-  #28 = Utf8               I\n-  #29 = Utf8               array\n-  #30 = Utf8               [D\n-  #31 = Utf8               D\n-  #32 = Utf8               StackMapTable\n-  #33 = Utf8               ([F)F\n-  #34 = Utf8               [F\n-  #35 = Utf8               F\n-  #36 = Utf8               (DDD)D\n-  #37 = Utf8               a\n-  #38 = Utf8               b\n-  #39 = Utf8               c\n-  #40 = Utf8               (DD)D\n-  #41 = Utf8               (FFF)F\n-  #42 = Utf8               (FF)F\n-  #43 = Utf8               max\n-  #44 = Utf8               j\n-  #45 = Utf8               SourceFile\n-  #46 = Utf8               IEEE754rUtils.java\n-  #47 = NameAndType        #18:#19        // \"<init>\":()V\n-  #48 = Utf8               The Array must not be null\n-  #49 = Utf8               java/lang/Object\n-  #50 = Class              #64            // org/apache/commons/lang3/Validate\n-  #51 = NameAndType        #65:#66        // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #52 = Utf8               Array cannot be empty.\n-  #53 = NameAndType        #67:#68        // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #54 = NameAndType        #25:#40        // min:(DD)D\n-  #55 = NameAndType        #25:#42        // min:(FF)F\n-  #56 = Class              #69            // java/lang/Double\n-  #57 = NameAndType        #70:#71        // isNaN:(D)Z\n-  #58 = Class              #72            // java/lang/Math\n-  #59 = Class              #73            // java/lang/Float\n-  #60 = NameAndType        #70:#74        // isNaN:(F)Z\n-  #61 = NameAndType        #43:#40        // max:(DD)D\n-  #62 = NameAndType        #43:#42        // max:(FF)F\n-  #63 = Utf8               org/apache/commons/lang3/math/IEEE754rUtils\n-  #64 = Utf8               org/apache/commons/lang3/Validate\n-  #65 = Utf8               notNull\n-  #66 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #67 = Utf8               isTrue\n-  #68 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #69 = Utf8               java/lang/Double\n-  #70 = Utf8               isNaN\n-  #71 = Utf8               (D)Z\n-  #72 = Utf8               java/lang/Math\n-  #73 = Utf8               java/lang/Float\n-  #74 = Utf8               (F)Z\n+  #26 = Utf8               (DD)D\n+  #27 = Methodref          #22.#28        // org/apache/commons/lang3/math/IEEE754rUtils.min:(FF)F\n+  #28 = NameAndType        #25:#29        // min:(FF)F\n+  #29 = Utf8               (FF)F\n+  #30 = Methodref          #31.#32        // java/lang/Double.isNaN:(D)Z\n+  #31 = Class              #33            // java/lang/Double\n+  #32 = NameAndType        #34:#35        // isNaN:(D)Z\n+  #33 = Utf8               java/lang/Double\n+  #34 = Utf8               isNaN\n+  #35 = Utf8               (D)Z\n+  #36 = Methodref          #37.#23        // java/lang/Math.min:(DD)D\n+  #37 = Class              #38            // java/lang/Math\n+  #38 = Utf8               java/lang/Math\n+  #39 = Methodref          #40.#41        // java/lang/Float.isNaN:(F)Z\n+  #40 = Class              #42            // java/lang/Float\n+  #41 = NameAndType        #34:#43        // isNaN:(F)Z\n+  #42 = Utf8               java/lang/Float\n+  #43 = Utf8               (F)Z\n+  #44 = Methodref          #37.#28        // java/lang/Math.min:(FF)F\n+  #45 = Methodref          #22.#46        // org/apache/commons/lang3/math/IEEE754rUtils.max:(DD)D\n+  #46 = NameAndType        #47:#26        // max:(DD)D\n+  #47 = Utf8               max\n+  #48 = Methodref          #22.#49        // org/apache/commons/lang3/math/IEEE754rUtils.max:(FF)F\n+  #49 = NameAndType        #47:#29        // max:(FF)F\n+  #50 = Methodref          #37.#46        // java/lang/Math.max:(DD)D\n+  #51 = Methodref          #37.#49        // java/lang/Math.max:(FF)F\n+  #52 = Utf8               Code\n+  #53 = Utf8               LineNumberTable\n+  #54 = Utf8               LocalVariableTable\n+  #55 = Utf8               this\n+  #56 = Utf8               Lorg/apache/commons/lang3/math/IEEE754rUtils;\n+  #57 = Utf8               ([D)D\n+  #58 = Utf8               i\n+  #59 = Utf8               I\n+  #60 = Utf8               array\n+  #61 = Utf8               [D\n+  #62 = Utf8               D\n+  #63 = Utf8               StackMapTable\n+  #64 = Utf8               ([F)F\n+  #65 = Utf8               [F\n+  #66 = Utf8               F\n+  #67 = Utf8               (DDD)D\n+  #68 = Utf8               a\n+  #69 = Utf8               b\n+  #70 = Utf8               c\n+  #71 = Utf8               (FFF)F\n+  #72 = Utf8               j\n+  #73 = Utf8               SourceFile\n+  #74 = Utf8               IEEE754rUtils.java\n {\n   public org.apache.commons.lang3.math.IEEE754rUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -99,44 +99,44 @@\n \n   public static double min(double...);\n     descriptor: ([D)D\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: ldc           #2                  // String The Array must not be null\n+         1: ldc           #7                  // String The Array must not be null\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n         10: pop\n         11: aload_0\n         12: arraylength\n         13: ifeq          20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n-        21: ldc           #5                  // String Array cannot be empty.\n+        21: ldc           #15                 // String Array cannot be empty.\n         23: iconst_0\n-        24: anewarray     #3                  // class java/lang/Object\n-        27: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        24: anewarray     #2                  // class java/lang/Object\n+        27: invokestatic  #17                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         30: aload_0\n         31: iconst_0\n         32: daload\n         33: dstore_1\n         34: iconst_1\n         35: istore_3\n         36: iload_3\n         37: aload_0\n         38: arraylength\n         39: if_icmpge     56\n         42: aload_0\n         43: iload_3\n         44: daload\n         45: dload_1\n-        46: invokestatic  #7                  // Method min:(DD)D\n+        46: invokestatic  #21                 // Method min:(DD)D\n         49: dstore_1\n         50: iinc          3, 1\n         53: goto          36\n         56: dload_1\n         57: dreturn\n       LineNumberTable:\n         line 40: 0\n@@ -163,44 +163,44 @@\n \n   public static float min(float...);\n     descriptor: ([F)F\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: ldc           #2                  // String The Array must not be null\n+         1: ldc           #7                  // String The Array must not be null\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n         10: pop\n         11: aload_0\n         12: arraylength\n         13: ifeq          20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n-        21: ldc           #5                  // String Array cannot be empty.\n+        21: ldc           #15                 // String Array cannot be empty.\n         23: iconst_0\n-        24: anewarray     #3                  // class java/lang/Object\n-        27: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        24: anewarray     #2                  // class java/lang/Object\n+        27: invokestatic  #17                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         30: aload_0\n         31: iconst_0\n         32: faload\n         33: fstore_1\n         34: iconst_1\n         35: istore_2\n         36: iload_2\n         37: aload_0\n         38: arraylength\n         39: if_icmpge     56\n         42: aload_0\n         43: iload_2\n         44: faload\n         45: fload_1\n-        46: invokestatic  #8                  // Method min:(FF)F\n+        46: invokestatic  #27                 // Method min:(FF)F\n         49: fstore_1\n         50: iinc          2, 1\n         53: goto          36\n         56: fload_1\n         57: freturn\n       LineNumberTable:\n         line 62: 0\n@@ -228,17 +228,17 @@\n   public static double min(double, double, double);\n     descriptor: (DDD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=3\n          0: dload_0\n          1: dload_2\n-         2: invokestatic  #7                  // Method min:(DD)D\n+         2: invokestatic  #21                 // Method min:(DD)D\n          5: dload         4\n-         7: invokestatic  #7                  // Method min:(DD)D\n+         7: invokestatic  #21                 // Method min:(DD)D\n         10: dreturn\n       LineNumberTable:\n         line 85: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0     a   D\n             0      11     2     b   D\n@@ -246,26 +246,26 @@\n \n   public static double min(double, double);\n     descriptor: (DD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: dload_0\n-         1: invokestatic  #9                  // Method java/lang/Double.isNaN:(D)Z\n+         1: invokestatic  #30                 // Method java/lang/Double.isNaN:(D)Z\n          4: ifeq          9\n          7: dload_2\n          8: dreturn\n          9: dload_2\n-        10: invokestatic  #9                  // Method java/lang/Double.isNaN:(D)Z\n+        10: invokestatic  #30                 // Method java/lang/Double.isNaN:(D)Z\n         13: ifeq          18\n         16: dload_0\n         17: dreturn\n         18: dload_0\n         19: dload_2\n-        20: invokestatic  #10                 // Method java/lang/Math.min:(DD)D\n+        20: invokestatic  #36                 // Method java/lang/Math.min:(DD)D\n         23: dreturn\n       LineNumberTable:\n         line 98: 0\n         line 99: 7\n         line 101: 9\n         line 102: 16\n         line 104: 18\n@@ -280,17 +280,17 @@\n   public static float min(float, float, float);\n     descriptor: (FFF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: fload_0\n          1: fload_1\n-         2: invokestatic  #8                  // Method min:(FF)F\n+         2: invokestatic  #27                 // Method min:(FF)F\n          5: fload_2\n-         6: invokestatic  #8                  // Method min:(FF)F\n+         6: invokestatic  #27                 // Method min:(FF)F\n          9: freturn\n       LineNumberTable:\n         line 119: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0     a   F\n             0      10     1     b   F\n@@ -298,26 +298,26 @@\n \n   public static float min(float, float);\n     descriptor: (FF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: fload_0\n-         1: invokestatic  #11                 // Method java/lang/Float.isNaN:(F)Z\n+         1: invokestatic  #39                 // Method java/lang/Float.isNaN:(F)Z\n          4: ifeq          9\n          7: fload_1\n          8: freturn\n          9: fload_1\n-        10: invokestatic  #11                 // Method java/lang/Float.isNaN:(F)Z\n+        10: invokestatic  #39                 // Method java/lang/Float.isNaN:(F)Z\n         13: ifeq          18\n         16: fload_0\n         17: freturn\n         18: fload_0\n         19: fload_1\n-        20: invokestatic  #12                 // Method java/lang/Math.min:(FF)F\n+        20: invokestatic  #44                 // Method java/lang/Math.min:(FF)F\n         23: freturn\n       LineNumberTable:\n         line 132: 0\n         line 133: 7\n         line 135: 9\n         line 136: 16\n         line 138: 18\n@@ -331,44 +331,44 @@\n \n   public static double max(double...);\n     descriptor: ([D)D\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: ldc           #2                  // String The Array must not be null\n+         1: ldc           #7                  // String The Array must not be null\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n         10: pop\n         11: aload_0\n         12: arraylength\n         13: ifeq          20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n-        21: ldc           #5                  // String Array cannot be empty.\n+        21: ldc           #15                 // String Array cannot be empty.\n         23: iconst_0\n-        24: anewarray     #3                  // class java/lang/Object\n-        27: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        24: anewarray     #2                  // class java/lang/Object\n+        27: invokestatic  #17                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         30: aload_0\n         31: iconst_0\n         32: daload\n         33: dstore_1\n         34: iconst_1\n         35: istore_3\n         36: iload_3\n         37: aload_0\n         38: arraylength\n         39: if_icmpge     56\n         42: aload_0\n         43: iload_3\n         44: daload\n         45: dload_1\n-        46: invokestatic  #13                 // Method max:(DD)D\n+        46: invokestatic  #45                 // Method max:(DD)D\n         49: dstore_1\n         50: iinc          3, 1\n         53: goto          36\n         56: dload_1\n         57: dreturn\n       LineNumberTable:\n         line 152: 0\n@@ -395,44 +395,44 @@\n \n   public static float max(float...);\n     descriptor: ([F)F\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: ldc           #2                  // String The Array must not be null\n+         1: ldc           #7                  // String The Array must not be null\n          3: iconst_0\n-         4: anewarray     #3                  // class java/lang/Object\n-         7: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+         4: anewarray     #2                  // class java/lang/Object\n+         7: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n         10: pop\n         11: aload_0\n         12: arraylength\n         13: ifeq          20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n-        21: ldc           #5                  // String Array cannot be empty.\n+        21: ldc           #15                 // String Array cannot be empty.\n         23: iconst_0\n-        24: anewarray     #3                  // class java/lang/Object\n-        27: invokestatic  #6                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        24: anewarray     #2                  // class java/lang/Object\n+        27: invokestatic  #17                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         30: aload_0\n         31: iconst_0\n         32: faload\n         33: fstore_1\n         34: iconst_1\n         35: istore_2\n         36: iload_2\n         37: aload_0\n         38: arraylength\n         39: if_icmpge     56\n         42: aload_0\n         43: iload_2\n         44: faload\n         45: fload_1\n-        46: invokestatic  #14                 // Method max:(FF)F\n+        46: invokestatic  #48                 // Method max:(FF)F\n         49: fstore_1\n         50: iinc          2, 1\n         53: goto          36\n         56: fload_1\n         57: freturn\n       LineNumberTable:\n         line 174: 0\n@@ -460,17 +460,17 @@\n   public static double max(double, double, double);\n     descriptor: (DDD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=3\n          0: dload_0\n          1: dload_2\n-         2: invokestatic  #13                 // Method max:(DD)D\n+         2: invokestatic  #45                 // Method max:(DD)D\n          5: dload         4\n-         7: invokestatic  #13                 // Method max:(DD)D\n+         7: invokestatic  #45                 // Method max:(DD)D\n         10: dreturn\n       LineNumberTable:\n         line 197: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0     a   D\n             0      11     2     b   D\n@@ -478,26 +478,26 @@\n \n   public static double max(double, double);\n     descriptor: (DD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: dload_0\n-         1: invokestatic  #9                  // Method java/lang/Double.isNaN:(D)Z\n+         1: invokestatic  #30                 // Method java/lang/Double.isNaN:(D)Z\n          4: ifeq          9\n          7: dload_2\n          8: dreturn\n          9: dload_2\n-        10: invokestatic  #9                  // Method java/lang/Double.isNaN:(D)Z\n+        10: invokestatic  #30                 // Method java/lang/Double.isNaN:(D)Z\n         13: ifeq          18\n         16: dload_0\n         17: dreturn\n         18: dload_0\n         19: dload_2\n-        20: invokestatic  #15                 // Method java/lang/Math.max:(DD)D\n+        20: invokestatic  #50                 // Method java/lang/Math.max:(DD)D\n         23: dreturn\n       LineNumberTable:\n         line 210: 0\n         line 211: 7\n         line 213: 9\n         line 214: 16\n         line 216: 18\n@@ -512,17 +512,17 @@\n   public static float max(float, float, float);\n     descriptor: (FFF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: fload_0\n          1: fload_1\n-         2: invokestatic  #14                 // Method max:(FF)F\n+         2: invokestatic  #48                 // Method max:(FF)F\n          5: fload_2\n-         6: invokestatic  #14                 // Method max:(FF)F\n+         6: invokestatic  #48                 // Method max:(FF)F\n          9: freturn\n       LineNumberTable:\n         line 231: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0     a   F\n             0      10     1     b   F\n@@ -530,26 +530,26 @@\n \n   public static float max(float, float);\n     descriptor: (FF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: fload_0\n-         1: invokestatic  #11                 // Method java/lang/Float.isNaN:(F)Z\n+         1: invokestatic  #39                 // Method java/lang/Float.isNaN:(F)Z\n          4: ifeq          9\n          7: fload_1\n          8: freturn\n          9: fload_1\n-        10: invokestatic  #11                 // Method java/lang/Float.isNaN:(F)Z\n+        10: invokestatic  #39                 // Method java/lang/Float.isNaN:(F)Z\n         13: ifeq          18\n         16: fload_0\n         17: freturn\n         18: fload_0\n         19: fload_1\n-        20: invokestatic  #16                 // Method java/lang/Math.max:(FF)F\n+        20: invokestatic  #51                 // Method java/lang/Math.max:(FF)F\n         23: freturn\n       LineNumberTable:\n         line 244: 0\n         line 245: 7\n         line 247: 9\n         line 248: 16\n         line 250: 18\n"}]}
