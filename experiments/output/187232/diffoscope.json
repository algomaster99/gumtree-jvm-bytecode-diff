{"diffoscope-json-version": 1, "source1": "first/BinaryTree.class", "source2": "second/BinaryTree.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,170 +1,170 @@\n-  SHA-256 checksum 0ebf48abea452a793a36806e461ae2aae6a32227c761211db1bdaaa90973a4fd\n+  SHA-256 checksum 5c354794a0117b5621597cb4e2f78d731a28670c167a24400b17a2d9c6d163fa\n   Compiled from \"BinaryTree.java\"\n class org.apache.commons.compress.archivers.zip.BinaryTree\n   minor version: 0\n   major version: 53\n   flags: (0x0020) ACC_SUPER\n-  this_class: #6                          // org/apache/commons/compress/archivers/zip/BinaryTree\n-  super_class: #24                        // java/lang/Object\n+  this_class: #17                         // org/apache/commons/compress/archivers/zip/BinaryTree\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 3, methods: 4, attributes: 3\n Constant pool:\n-    #1 = Methodref          #24.#87       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #88           // java/lang/IllegalArgumentException\n-    #3 = InvokeDynamic      #0:#92        // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-    #4 = Methodref          #2.#93        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #5 = Fieldref           #6.#94        // org/apache/commons/compress/archivers/zip/BinaryTree.tree:[I\n-    #6 = Class              #95           // org/apache/commons/compress/archivers/zip/BinaryTree\n-    #7 = Methodref          #96.#97       // java/util/Arrays.fill:([II)V\n-    #8 = InvokeDynamic      #1:#99        // #1:makeConcatWithConstants:(II)Ljava/lang/String;\n-    #9 = Methodref          #6.#100       // org/apache/commons/compress/archivers/zip/BinaryTree.addLeaf:(IIII)V\n-   #10 = Methodref          #101.#102     // org/apache/commons/compress/archivers/zip/BitStream.nextBit:()I\n-   #11 = Class              #103          // java/io/IOException\n-   #12 = InvokeDynamic      #2:#99        // #2:makeConcatWithConstants:(II)Ljava/lang/String;\n-   #13 = Methodref          #11.#93       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #14 = InvokeDynamic      #3:#92        // #3:makeConcatWithConstants:(I)Ljava/lang/String;\n-   #15 = Methodref          #83.#106      // java/io/InputStream.read:()I\n-   #16 = String             #107          // Cannot read the size of the encoded tree, unexpected end of stream\n-   #17 = Methodref          #108.#109     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #18 = Class              #110          // java/io/EOFException\n-   #19 = Methodref          #18.#87       // java/io/EOFException.\"<init>\":()V\n-   #20 = String             #111          // Number of values exceeds given total number of values\n-   #21 = Methodref          #112.#113     // java/lang/Math.max:(II)I\n-   #22 = Methodref          #6.#114       // org/apache/commons/compress/archivers/zip/BinaryTree.\"<init>\":(I)V\n-   #23 = Methodref          #115.#116     // java/lang/Integer.reverse:(I)I\n-   #24 = Class              #117          // java/lang/Object\n-   #25 = Utf8               UNDEFINED\n-   #26 = Utf8               I\n-   #27 = Utf8               ConstantValue\n-   #28 = Integer            -1\n-   #29 = Utf8               NODE\n-   #30 = Integer            -2\n-   #31 = Utf8               tree\n-   #32 = Utf8               [I\n-   #33 = Utf8               <init>\n-   #34 = Utf8               (I)V\n-   #35 = Utf8               Code\n-   #36 = Utf8               LineNumberTable\n-   #37 = Utf8               LocalVariableTable\n-   #38 = Utf8               this\n-   #39 = Utf8               Lorg/apache/commons/compress/archivers/zip/BinaryTree;\n-   #40 = Utf8               depth\n-   #41 = Utf8               StackMapTable\n-   #42 = Utf8               addLeaf\n-   #43 = Utf8               (IIII)V\n-   #44 = Utf8               nextChild\n-   #45 = Utf8               node\n-   #46 = Utf8               path\n-   #47 = Utf8               value\n-   #48 = Utf8               read\n-   #49 = Utf8               (Lorg/apache/commons/compress/archivers/zip/BitStream;)I\n-   #50 = Utf8               bit\n-   #51 = Utf8               childIndex\n-   #52 = Utf8               stream\n-   #53 = Utf8               Lorg/apache/commons/compress/archivers/zip/BitStream;\n-   #54 = Utf8               currentIndex\n-   #55 = Utf8               Exceptions\n-   #56 = Utf8               decode\n-   #57 = Utf8               (Ljava/io/InputStream;I)Lorg/apache/commons/compress/archivers/zip/BinaryTree;\n-   #58 = Utf8               j\n-   #59 = Utf8               numberOfValues\n-   #60 = Utf8               bitLength\n-   #61 = Utf8               b\n-   #62 = Utf8               B\n-   #63 = Utf8               k\n-   #64 = Utf8               l\n-   #65 = Utf8               i\n-   #66 = Utf8               inputStream\n-   #67 = Utf8               Ljava/io/InputStream;\n-   #68 = Utf8               totalNumberOfValues\n-   #69 = Utf8               size\n-   #70 = Utf8               encodedTree\n-   #71 = Utf8               [B\n-   #72 = Utf8               maxLength\n-   #73 = Utf8               originalBitLengths\n-   #74 = Utf8               pos\n-   #75 = Utf8               permutation\n-   #76 = Utf8               c\n-   #77 = Utf8               sortedBitLengths\n-   #78 = Utf8               code\n-   #79 = Utf8               codeIncrement\n-   #80 = Utf8               lastBitLength\n-   #81 = Utf8               codes\n-   #82 = Class              #71           // \"[B\"\n-   #83 = Class              #118          // java/io/InputStream\n-   #84 = Class              #32           // \"[I\"\n-   #85 = Utf8               SourceFile\n-   #86 = Utf8               BinaryTree.java\n-   #87 = NameAndType        #33:#119      // \"<init>\":()V\n-   #88 = Utf8               java/lang/IllegalArgumentException\n-   #89 = Utf8               BootstrapMethods\n-   #90 = MethodHandle       6:#120        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-   #91 = String             #121          // depth must be bigger than 0 and not bigger than 30 but is \\u0001\n-   #92 = NameAndType        #122:#123     // makeConcatWithConstants:(I)Ljava/lang/String;\n-   #93 = NameAndType        #33:#124      // \"<init>\":(Ljava/lang/String;)V\n-   #94 = NameAndType        #31:#32       // tree:[I\n-   #95 = Utf8               org/apache/commons/compress/archivers/zip/BinaryTree\n-   #96 = Class              #125          // java/util/Arrays\n-   #97 = NameAndType        #126:#127     // fill:([II)V\n-   #98 = String             #128          // Tree value at index \\u0001 has already been assigned (\\u0001)\n-   #99 = NameAndType        #122:#129     // makeConcatWithConstants:(II)Ljava/lang/String;\n-  #100 = NameAndType        #42:#43       // addLeaf:(IIII)V\n-  #101 = Class              #130          // org/apache/commons/compress/archivers/zip/BitStream\n-  #102 = NameAndType        #131:#132     // nextBit:()I\n-  #103 = Utf8               java/io/IOException\n-  #104 = String             #133          // The child \\u0001 of node at index \\u0001 is not defined\n-  #105 = String             #134          // totalNumberOfValues must be bigger than 0, is \\u0001\n-  #106 = NameAndType        #48:#132      // read:()I\n-  #107 = Utf8               Cannot read the size of the encoded tree, unexpected end of stream\n-  #108 = Class              #135          // org/apache/commons/compress/utils/IOUtils\n-  #109 = NameAndType        #136:#137     // readFully:(Ljava/io/InputStream;[B)I\n-  #110 = Utf8               java/io/EOFException\n-  #111 = Utf8               Number of values exceeds given total number of values\n-  #112 = Class              #138          // java/lang/Math\n-  #113 = NameAndType        #139:#140     // max:(II)I\n-  #114 = NameAndType        #33:#34       // \"<init>\":(I)V\n-  #115 = Class              #141          // java/lang/Integer\n-  #116 = NameAndType        #142:#143     // reverse:(I)I\n-  #117 = Utf8               java/lang/Object\n-  #118 = Utf8               java/io/InputStream\n-  #119 = Utf8               ()V\n-  #120 = Methodref          #144.#145     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #121 = Utf8               depth must be bigger than 0 and not bigger than 30 but is \\u0001\n-  #122 = Utf8               makeConcatWithConstants\n-  #123 = Utf8               (I)Ljava/lang/String;\n-  #124 = Utf8               (Ljava/lang/String;)V\n-  #125 = Utf8               java/util/Arrays\n-  #126 = Utf8               fill\n-  #127 = Utf8               ([II)V\n-  #128 = Utf8               Tree value at index \\u0001 has already been assigned (\\u0001)\n-  #129 = Utf8               (II)Ljava/lang/String;\n-  #130 = Utf8               org/apache/commons/compress/archivers/zip/BitStream\n-  #131 = Utf8               nextBit\n-  #132 = Utf8               ()I\n-  #133 = Utf8               The child \\u0001 of node at index \\u0001 is not defined\n-  #134 = Utf8               totalNumberOfValues must be bigger than 0, is \\u0001\n-  #135 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #136 = Utf8               readFully\n-  #137 = Utf8               (Ljava/io/InputStream;[B)I\n-  #138 = Utf8               java/lang/Math\n-  #139 = Utf8               max\n-  #140 = Utf8               (II)I\n-  #141 = Utf8               java/lang/Integer\n-  #142 = Utf8               reverse\n-  #143 = Utf8               (I)I\n-  #144 = Class              #146          // java/lang/invoke/StringConcatFactory\n-  #145 = NameAndType        #122:#150     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #146 = Utf8               java/lang/invoke/StringConcatFactory\n-  #147 = Class              #152          // java/lang/invoke/MethodHandles$Lookup\n-  #148 = Utf8               Lookup\n-  #149 = Utf8               InnerClasses\n-  #150 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #151 = Class              #153          // java/lang/invoke/MethodHandles\n-  #152 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #153 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/lang/IllegalArgumentException\n+    #8 = Utf8               java/lang/IllegalArgumentException\n+    #9 = InvokeDynamic      #0:#10        // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #10 = NameAndType        #11:#12       // makeConcatWithConstants:(I)Ljava/lang/String;\n+   #11 = Utf8               makeConcatWithConstants\n+   #12 = Utf8               (I)Ljava/lang/String;\n+   #13 = Methodref          #7.#14        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #14 = NameAndType        #5:#15        // \"<init>\":(Ljava/lang/String;)V\n+   #15 = Utf8               (Ljava/lang/String;)V\n+   #16 = Fieldref           #17.#18       // org/apache/commons/compress/archivers/zip/BinaryTree.tree:[I\n+   #17 = Class              #19           // org/apache/commons/compress/archivers/zip/BinaryTree\n+   #18 = NameAndType        #20:#21       // tree:[I\n+   #19 = Utf8               org/apache/commons/compress/archivers/zip/BinaryTree\n+   #20 = Utf8               tree\n+   #21 = Utf8               [I\n+   #22 = Methodref          #23.#24       // java/util/Arrays.fill:([II)V\n+   #23 = Class              #25           // java/util/Arrays\n+   #24 = NameAndType        #26:#27       // fill:([II)V\n+   #25 = Utf8               java/util/Arrays\n+   #26 = Utf8               fill\n+   #27 = Utf8               ([II)V\n+   #28 = InvokeDynamic      #1:#29        // #1:makeConcatWithConstants:(II)Ljava/lang/String;\n+   #29 = NameAndType        #11:#30       // makeConcatWithConstants:(II)Ljava/lang/String;\n+   #30 = Utf8               (II)Ljava/lang/String;\n+   #31 = Methodref          #17.#32       // org/apache/commons/compress/archivers/zip/BinaryTree.addLeaf:(IIII)V\n+   #32 = NameAndType        #33:#34       // addLeaf:(IIII)V\n+   #33 = Utf8               addLeaf\n+   #34 = Utf8               (IIII)V\n+   #35 = Methodref          #36.#37       // org/apache/commons/compress/archivers/zip/BitStream.nextBit:()I\n+   #36 = Class              #38           // org/apache/commons/compress/archivers/zip/BitStream\n+   #37 = NameAndType        #39:#40       // nextBit:()I\n+   #38 = Utf8               org/apache/commons/compress/archivers/zip/BitStream\n+   #39 = Utf8               nextBit\n+   #40 = Utf8               ()I\n+   #41 = Class              #42           // java/io/IOException\n+   #42 = Utf8               java/io/IOException\n+   #43 = InvokeDynamic      #2:#29        // #2:makeConcatWithConstants:(II)Ljava/lang/String;\n+   #44 = Methodref          #41.#14       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #45 = InvokeDynamic      #3:#10        // #3:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #46 = Methodref          #47.#48       // java/io/InputStream.read:()I\n+   #47 = Class              #49           // java/io/InputStream\n+   #48 = NameAndType        #50:#40       // read:()I\n+   #49 = Utf8               java/io/InputStream\n+   #50 = Utf8               read\n+   #51 = String             #52           // Cannot read the size of the encoded tree, unexpected end of stream\n+   #52 = Utf8               Cannot read the size of the encoded tree, unexpected end of stream\n+   #53 = Methodref          #54.#55       // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+   #54 = Class              #56           // org/apache/commons/compress/utils/IOUtils\n+   #55 = NameAndType        #57:#58       // readFully:(Ljava/io/InputStream;[B)I\n+   #56 = Utf8               org/apache/commons/compress/utils/IOUtils\n+   #57 = Utf8               readFully\n+   #58 = Utf8               (Ljava/io/InputStream;[B)I\n+   #59 = Class              #60           // java/io/EOFException\n+   #60 = Utf8               java/io/EOFException\n+   #61 = Methodref          #59.#3        // java/io/EOFException.\"<init>\":()V\n+   #62 = String             #63           // Number of values exceeds given total number of values\n+   #63 = Utf8               Number of values exceeds given total number of values\n+   #64 = Methodref          #65.#66       // java/lang/Math.max:(II)I\n+   #65 = Class              #67           // java/lang/Math\n+   #66 = NameAndType        #68:#69       // max:(II)I\n+   #67 = Utf8               java/lang/Math\n+   #68 = Utf8               max\n+   #69 = Utf8               (II)I\n+   #70 = Methodref          #17.#71       // org/apache/commons/compress/archivers/zip/BinaryTree.\"<init>\":(I)V\n+   #71 = NameAndType        #5:#72        // \"<init>\":(I)V\n+   #72 = Utf8               (I)V\n+   #73 = Methodref          #74.#75       // java/lang/Integer.reverse:(I)I\n+   #74 = Class              #76           // java/lang/Integer\n+   #75 = NameAndType        #77:#78       // reverse:(I)I\n+   #76 = Utf8               java/lang/Integer\n+   #77 = Utf8               reverse\n+   #78 = Utf8               (I)I\n+   #79 = Utf8               UNDEFINED\n+   #80 = Utf8               I\n+   #81 = Utf8               ConstantValue\n+   #82 = Integer            -1\n+   #83 = Utf8               NODE\n+   #84 = Integer            -2\n+   #85 = Utf8               Code\n+   #86 = Utf8               LineNumberTable\n+   #87 = Utf8               LocalVariableTable\n+   #88 = Utf8               this\n+   #89 = Utf8               Lorg/apache/commons/compress/archivers/zip/BinaryTree;\n+   #90 = Utf8               depth\n+   #91 = Utf8               StackMapTable\n+   #92 = Utf8               nextChild\n+   #93 = Utf8               node\n+   #94 = Utf8               path\n+   #95 = Utf8               value\n+   #96 = Utf8               (Lorg/apache/commons/compress/archivers/zip/BitStream;)I\n+   #97 = Utf8               bit\n+   #98 = Utf8               childIndex\n+   #99 = Utf8               stream\n+  #100 = Utf8               Lorg/apache/commons/compress/archivers/zip/BitStream;\n+  #101 = Utf8               currentIndex\n+  #102 = Utf8               Exceptions\n+  #103 = Utf8               decode\n+  #104 = Utf8               (Ljava/io/InputStream;I)Lorg/apache/commons/compress/archivers/zip/BinaryTree;\n+  #105 = Utf8               j\n+  #106 = Utf8               numberOfValues\n+  #107 = Utf8               bitLength\n+  #108 = Utf8               b\n+  #109 = Utf8               B\n+  #110 = Utf8               k\n+  #111 = Utf8               l\n+  #112 = Utf8               i\n+  #113 = Utf8               inputStream\n+  #114 = Utf8               Ljava/io/InputStream;\n+  #115 = Utf8               totalNumberOfValues\n+  #116 = Utf8               size\n+  #117 = Utf8               encodedTree\n+  #118 = Utf8               [B\n+  #119 = Utf8               maxLength\n+  #120 = Utf8               originalBitLengths\n+  #121 = Utf8               pos\n+  #122 = Utf8               permutation\n+  #123 = Utf8               c\n+  #124 = Utf8               sortedBitLengths\n+  #125 = Utf8               code\n+  #126 = Utf8               codeIncrement\n+  #127 = Utf8               lastBitLength\n+  #128 = Utf8               codes\n+  #129 = Class              #118          // \"[B\"\n+  #130 = Class              #21           // \"[I\"\n+  #131 = Utf8               SourceFile\n+  #132 = Utf8               BinaryTree.java\n+  #133 = Utf8               BootstrapMethods\n+  #134 = MethodHandle       6:#135        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #135 = Methodref          #136.#137     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #136 = Class              #138          // java/lang/invoke/StringConcatFactory\n+  #137 = NameAndType        #11:#139      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #138 = Utf8               java/lang/invoke/StringConcatFactory\n+  #139 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #140 = String             #141          // depth must be bigger than 0 and not bigger than 30 but is \\u0001\n+  #141 = Utf8               depth must be bigger than 0 and not bigger than 30 but is \\u0001\n+  #142 = String             #143          // Tree value at index \\u0001 has already been assigned (\\u0001)\n+  #143 = Utf8               Tree value at index \\u0001 has already been assigned (\\u0001)\n+  #144 = String             #145          // The child \\u0001 of node at index \\u0001 is not defined\n+  #145 = Utf8               The child \\u0001 of node at index \\u0001 is not defined\n+  #146 = String             #147          // totalNumberOfValues must be bigger than 0, is \\u0001\n+  #147 = Utf8               totalNumberOfValues must be bigger than 0, is \\u0001\n+  #148 = Utf8               InnerClasses\n+  #149 = Class              #150          // java/lang/invoke/MethodHandles$Lookup\n+  #150 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #151 = Class              #152          // java/lang/invoke/MethodHandles\n+  #152 = Utf8               java/lang/invoke/MethodHandles\n+  #153 = Utf8               Lookup\n {\n   private static final int UNDEFINED = -1;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   private static final int NODE = -2;\n@@ -184,35 +184,35 @@\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: iload_1\n          5: iflt          14\n          8: iload_1\n          9: bipush        30\n         11: if_icmple     28\n-        14: new           #2                  // class java/lang/IllegalArgumentException\n+        14: new           #7                  // class java/lang/IllegalArgumentException\n         17: dup\n         18: iload_1\n-        19: invokedynamic #3,  0              // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-        24: invokespecial #4                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        19: invokedynamic #9,  0              // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+        24: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n         28: aload_0\n         29: lconst_1\n         30: iload_1\n         31: iconst_1\n         32: iadd\n         33: lshl\n         34: lconst_1\n         35: lsub\n         36: l2i\n         37: newarray       int\n-        39: putfield      #5                  // Field tree:[I\n+        39: putfield      #16                 // Field tree:[I\n         42: aload_0\n-        43: getfield      #5                  // Field tree:[I\n+        43: getfield      #16                 // Field tree:[I\n         46: iconst_m1\n-        47: invokestatic  #7                  // Method java/util/Arrays.fill:([II)V\n+        47: invokestatic  #22                 // Method java/util/Arrays.fill:([II)V\n         50: return\n       LineNumberTable:\n         line 49: 0\n         line 50: 4\n         line 51: 14\n         line 54: 28\n         line 55: 42\n@@ -232,37 +232,37 @@\n     descriptor: (IIII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=6, args_size=5\n          0: iload_3\n          1: ifne          45\n          4: aload_0\n-         5: getfield      #5                  // Field tree:[I\n+         5: getfield      #16                 // Field tree:[I\n          8: iload_1\n          9: iaload\n         10: iconst_m1\n         11: if_icmpne     25\n         14: aload_0\n-        15: getfield      #5                  // Field tree:[I\n+        15: getfield      #16                 // Field tree:[I\n         18: iload_1\n         19: iload         4\n         21: iastore\n         22: goto          78\n-        25: new           #2                  // class java/lang/IllegalArgumentException\n+        25: new           #7                  // class java/lang/IllegalArgumentException\n         28: dup\n         29: iload_1\n         30: aload_0\n-        31: getfield      #5                  // Field tree:[I\n+        31: getfield      #16                 // Field tree:[I\n         34: iload_1\n         35: iaload\n-        36: invokedynamic #8,  0              // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;\n-        41: invokespecial #4                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        36: invokedynamic #28,  0             // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;\n+        41: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         44: athrow\n         45: aload_0\n-        46: getfield      #5                  // Field tree:[I\n+        46: getfield      #16                 // Field tree:[I\n         49: iload_1\n         50: bipush        -2\n         52: iastore\n         53: iconst_2\n         54: iload_1\n         55: imul\n         56: iconst_1\n@@ -277,15 +277,15 @@\n         67: iload_2\n         68: iconst_1\n         69: iushr\n         70: iload_3\n         71: iconst_1\n         72: isub\n         73: iload         4\n-        75: invokevirtual #9                  // Method addLeaf:(IIII)V\n+        75: invokevirtual #31                 // Method addLeaf:(IIII)V\n         78: return\n       LineNumberTable:\n         line 67: 0\n         line 69: 4\n         line 70: 14\n         line 72: 25\n         line 76: 45\n@@ -309,15 +309,15 @@\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/BitStream;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=2\n          0: iconst_0\n          1: istore_2\n          2: aload_1\n-         3: invokevirtual #10                 // Method org/apache/commons/compress/archivers/zip/BitStream.nextBit:()I\n+         3: invokevirtual #35                 // Method org/apache/commons/compress/archivers/zip/BitStream.nextBit:()I\n          6: istore_3\n          7: iload_3\n          8: iconst_m1\n          9: if_icmpne     14\n         12: iconst_m1\n         13: ireturn\n         14: iconst_2\n@@ -325,35 +325,35 @@\n         16: imul\n         17: iconst_1\n         18: iadd\n         19: iload_3\n         20: iadd\n         21: istore        4\n         23: aload_0\n-        24: getfield      #5                  // Field tree:[I\n+        24: getfield      #16                 // Field tree:[I\n         27: iload         4\n         29: iaload\n         30: istore        5\n         32: iload         5\n         34: bipush        -2\n         36: if_icmpne     45\n         39: iload         4\n         41: istore_2\n         42: goto          69\n         45: iload         5\n         47: iconst_m1\n         48: if_icmpeq     54\n         51: iload         5\n         53: ireturn\n-        54: new           #11                 // class java/io/IOException\n+        54: new           #41                 // class java/io/IOException\n         57: dup\n         58: iload_3\n         59: iload_2\n-        60: invokedynamic #12,  0             // InvokeDynamic #2:makeConcatWithConstants:(II)Ljava/lang/String;\n-        65: invokespecial #13                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        60: invokedynamic #43,  0             // InvokeDynamic #2:makeConcatWithConstants:(II)Ljava/lang/String;\n+        65: invokespecial #44                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         68: athrow\n         69: goto          2\n       LineNumberTable:\n         line 91: 0\n         line 94: 2\n         line 95: 7\n         line 96: 12\n@@ -392,45 +392,45 @@\n   static org.apache.commons.compress.archivers.zip.BinaryTree decode(java.io.InputStream, int) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;I)Lorg/apache/commons/compress/archivers/zip/BinaryTree;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=5, locals=18, args_size=2\n          0: iload_1\n          1: ifge          18\n-         4: new           #2                  // class java/lang/IllegalArgumentException\n+         4: new           #7                  // class java/lang/IllegalArgumentException\n          7: dup\n          8: iload_1\n-         9: invokedynamic #14,  0             // InvokeDynamic #3:makeConcatWithConstants:(I)Ljava/lang/String;\n-        14: invokespecial #4                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         9: invokedynamic #45,  0             // InvokeDynamic #3:makeConcatWithConstants:(I)Ljava/lang/String;\n+        14: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n-        19: invokevirtual #15                 // Method java/io/InputStream.read:()I\n+        19: invokevirtual #46                 // Method java/io/InputStream.read:()I\n         22: iconst_1\n         23: iadd\n         24: istore_2\n         25: iload_2\n         26: ifne          39\n-        29: new           #11                 // class java/io/IOException\n+        29: new           #41                 // class java/io/IOException\n         32: dup\n-        33: ldc           #16                 // String Cannot read the size of the encoded tree, unexpected end of stream\n-        35: invokespecial #13                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        33: ldc           #51                 // String Cannot read the size of the encoded tree, unexpected end of stream\n+        35: invokespecial #44                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         38: athrow\n         39: iload_2\n         40: newarray       byte\n         42: astore_3\n         43: aload_0\n         44: aload_3\n-        45: invokestatic  #17                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        45: invokestatic  #53                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         48: istore        4\n         50: iload         4\n         52: iload_2\n         53: if_icmpeq     64\n-        56: new           #18                 // class java/io/EOFException\n+        56: new           #59                 // class java/io/EOFException\n         59: dup\n-        60: invokespecial #19                 // Method java/io/EOFException.\"<init>\":()V\n+        60: invokespecial #61                 // Method java/io/EOFException.\"<init>\":()V\n         63: athrow\n         64: iconst_0\n         65: istore        5\n         67: iload_1\n         68: newarray       int\n         70: astore        6\n         72: iconst_0\n@@ -458,18 +458,18 @@\n        109: iadd\n        110: istore        12\n        112: iload         7\n        114: iload         12\n        116: iadd\n        117: iload_1\n        118: if_icmple     131\n-       121: new           #11                 // class java/io/IOException\n+       121: new           #41                 // class java/io/IOException\n        124: dup\n-       125: ldc           #20                 // String Number of values exceeds given total number of values\n-       127: invokespecial #13                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       125: ldc           #62                 // String Number of values exceeds given total number of values\n+       127: invokespecial #44                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        130: athrow\n        131: iload         11\n        133: bipush        15\n        135: iand\n        136: iconst_1\n        137: iadd\n        138: istore        13\n@@ -483,15 +483,15 @@\n        154: iinc          7, 1\n        157: iload         13\n        159: iastore\n        160: iinc          14, 1\n        163: goto          143\n        166: iload         5\n        168: iload         13\n-       170: invokestatic  #21                 // Method java/lang/Math.max:(II)I\n+       170: invokestatic  #64                 // Method java/lang/Math.max:(II)I\n        173: istore        5\n        175: iinc          10, 1\n        178: goto          86\n        181: aload         6\n        183: arraylength\n        184: newarray       int\n        186: astore        8\n@@ -581,18 +581,18 @@\n        342: aload         8\n        344: iload         15\n        346: iaload\n        347: iload         11\n        349: iastore\n        350: iinc          15, -1\n        353: goto          302\n-       356: new           #6                  // class org/apache/commons/compress/archivers/zip/BinaryTree\n+       356: new           #17                 // class org/apache/commons/compress/archivers/zip/BinaryTree\n        359: dup\n        360: iload         5\n-       362: invokespecial #22                 // Method \"<init>\":(I)V\n+       362: invokespecial #70                 // Method \"<init>\":(I)V\n        365: astore        15\n        367: iconst_0\n        368: istore        16\n        370: iload         16\n        372: aload         14\n        374: arraylength\n        375: if_icmpge     417\n@@ -605,18 +605,18 @@\n        390: aload         15\n        392: iconst_0\n        393: aload         14\n        395: iload         16\n        397: iaload\n        398: bipush        16\n        400: ishl\n-       401: invokestatic  #23                 // Method java/lang/Integer.reverse:(I)I\n+       401: invokestatic  #73                 // Method java/lang/Integer.reverse:(I)I\n        404: iload         17\n        406: iload         16\n-       408: invokevirtual #9                  // Method addLeaf:(IIII)V\n+       408: invokevirtual #31                 // Method addLeaf:(IIII)V\n        411: iinc          16, 1\n        414: goto          370\n        417: aload         15\n        419: areturn\n       LineNumberTable:\n         line 117: 0\n         line 118: 4\n@@ -753,22 +753,22 @@\n         frame_type = 40 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"BinaryTree.java\"\n-InnerClasses:\n-  public static final #148= #147 of #151; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #90 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #134 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #91 depth must be bigger than 0 and not bigger than 30 but is \\u0001\n-  1: #90 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #140 depth must be bigger than 0 and not bigger than 30 but is \\u0001\n+  1: #134 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #98 Tree value at index \\u0001 has already been assigned (\\u0001)\n-  2: #90 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #142 Tree value at index \\u0001 has already been assigned (\\u0001)\n+  2: #134 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #104 The child \\u0001 of node at index \\u0001 is not defined\n-  3: #90 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #144 The child \\u0001 of node at index \\u0001 is not defined\n+  3: #134 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #105 totalNumberOfValues must be bigger than 0, is \\u0001\n+      #146 totalNumberOfValues must be bigger than 0, is \\u0001\n+InnerClasses:\n+  public static final #153= #149 of #151; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
