{"diffoscope-json-version": 1, "source1": "first/ArArchiveInputStream.class", "source2": "second/ArArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,342 +1,342 @@\n-  SHA-256 checksum d6be359229c9c1b4206a3d75a32c5091e81882cc32120f59631bdf67540a415e\n+  SHA-256 checksum 7c3324b4df4ea0538117d8290ffb97893ad32e6c50f0c56154e7931c08c2dee0\n   Compiled from \"ArArchiveInputStream.java\"\n public class org.apache.commons.compress.archivers.ar.ArArchiveInputStream extends org.apache.commons.compress.archivers.ArchiveInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-  super_class: #86                        // org/apache/commons/compress/archivers/ArchiveInputStream\n+  super_class: #4                         // org/apache/commons/compress/archivers/ArchiveInputStream\n   interfaces: 0, fields: 24, methods: 19, attributes: 1\n Constant pool:\n-    #1 = Class              #193          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-    #2 = Methodref          #86.#194      // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n-    #3 = Long               -1l\n-    #5 = Fieldref           #1.#195       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.entryOffset:J\n-    #6 = Fieldref           #1.#196       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.metaData:[B\n-    #7 = Fieldref           #1.#197       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.input:Ljava/io/InputStream;\n-    #8 = Fieldref           #1.#198       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.closed:Z\n-    #9 = Fieldref           #1.#199       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-   #10 = Methodref          #14.#200      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n-   #11 = Fieldref           #1.#201       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.offset:J\n-   #12 = Methodref          #202.#203     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #13 = Methodref          #1.#204       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.trackReadBytes:(J)V\n-   #14 = Class              #205          // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-   #15 = String             #206          // !<arch>\\n\n-   #16 = Methodref          #207.#208     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n-   #17 = Methodref          #202.#209     // org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n-   #18 = Class              #210          // java/io/IOException\n-   #19 = Class              #211          // java/lang/StringBuilder\n-   #20 = Methodref          #19.#194      // java/lang/StringBuilder.\"<init>\":()V\n-   #21 = String             #212          // Failed to read header. Occurred at byte:\n-   #22 = Methodref          #19.#213      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = Methodref          #1.#214       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getBytesRead:()J\n-   #24 = Methodref          #19.#215      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #19.#216      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #26 = Methodref          #18.#217      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Methodref          #218.#219     // java/util/Arrays.equals:([B[B)Z\n-   #28 = String             #220          // Invalid header\n-   #29 = Methodref          #207.#221     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n-   #30 = Long               2l\n-   #32 = Methodref          #222.#223     // java/io/InputStream.read:()I\n-   #33 = Methodref          #202.#224     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #34 = String             #225          // Truncated ar archive\n-   #35 = String             #226          // `\\n\n-   #36 = String             #227          // Failed to read entry trailer. Occurred at byte:\n-   #37 = String             #228          // Invalid entry trailer. not read the content? Occurred at byte:\n-   #38 = Methodref          #207.#229     // org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n-   #39 = Methodref          #150.#230     // java/lang/String.trim:()Ljava/lang/String;\n-   #40 = Methodref          #1.#231       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isGNUStringTable:(Ljava/lang/String;)Z\n-   #41 = Methodref          #1.#232       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.readGNUStringTable:([BII)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-   #42 = Methodref          #1.#233       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-   #43 = Methodref          #1.#234       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asLong:([BII)J\n-   #44 = String             #235          // /\n-   #45 = Methodref          #150.#236     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #46 = Methodref          #150.#237     // java/lang/String.length:()I\n-   #47 = Methodref          #150.#238     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #48 = Methodref          #1.#239       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isGNULongName:(Ljava/lang/String;)Z\n-   #49 = Methodref          #150.#240     // java/lang/String.substring:(I)Ljava/lang/String;\n-   #50 = Methodref          #241.#242     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #51 = Methodref          #1.#243       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getExtendedName:(I)Ljava/lang/String;\n-   #52 = Methodref          #1.#244       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isBSDLongName:(Ljava/lang/String;)Z\n-   #53 = Methodref          #1.#245       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n-   #54 = String             #246          // broken archive, entry with negative size\n-   #55 = Methodref          #1.#247       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BIIZ)I\n-   #56 = Methodref          #1.#248       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BIII)I\n-   #57 = Methodref          #14.#249      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n-   #58 = Fieldref           #1.#250       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.namebuffer:[B\n-   #59 = String             #251          // Cannot process GNU long filename as no // record was found\n-   #60 = String             #252          // Failed to read entry:\n-   #61 = Methodref          #19.#253      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #62 = Methodref          #254.#255     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n-   #63 = Methodref          #1.#256       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BIIIZ)I\n-   #64 = Methodref          #150.#257     // java/lang/String.isEmpty:()Z\n-   #65 = Methodref          #241.#258     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-   #66 = Methodref          #222.#259     // java/io/InputStream.close:()V\n-   #67 = Class              #260          // java/lang/IllegalStateException\n-   #68 = String             #261          // No current ar entry\n-   #69 = Methodref          #67.#217      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #70 = Methodref          #262.#263     // java/lang/Math.min:(JJ)J\n-   #71 = Methodref          #222.#264     // java/io/InputStream.read:([BII)I\n-   #72 = String             #265          // ^#1/\\\\d+\n-   #73 = Methodref          #150.#266     // java/lang/String.matches:(Ljava/lang/String;)Z\n-   #74 = Fieldref           #1.#267       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.BSD_LONGNAME_PREFIX_LEN:I\n-   #75 = Class              #268          // java/io/EOFException\n-   #76 = Methodref          #75.#194      // java/io/EOFException.\"<init>\":()V\n-   #77 = String             #269          // //\n-   #78 = Methodref          #150.#270     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #79 = Methodref          #1.#271       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.count:(J)V\n-   #80 = Methodref          #1.#272       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BII)I\n-   #81 = String             #273          // Failed to read complete // record: expected=\n-   #82 = String             #274          //  read=\n-   #83 = Methodref          #14.#275      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;J)V\n-   #84 = String             #276          // ^/\\\\d+\n-   #85 = String             #277          // #1/\n-   #86 = Class              #278          // org/apache/commons/compress/archivers/ArchiveInputStream\n-   #87 = Utf8               input\n-   #88 = Utf8               Ljava/io/InputStream;\n-   #89 = Utf8               offset\n-   #90 = Utf8               J\n-   #91 = Utf8               closed\n-   #92 = Utf8               Z\n-   #93 = Utf8               currentEntry\n-   #94 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-   #95 = Utf8               namebuffer\n-   #96 = Utf8               [B\n-   #97 = Utf8               entryOffset\n-   #98 = Utf8               NAME_OFFSET\n-   #99 = Utf8               I\n-  #100 = Utf8               ConstantValue\n-  #101 = Integer            0\n-  #102 = Utf8               NAME_LEN\n-  #103 = Integer            16\n-  #104 = Utf8               LAST_MODIFIED_OFFSET\n-  #105 = Utf8               LAST_MODIFIED_LEN\n-  #106 = Integer            12\n-  #107 = Utf8               USER_ID_OFFSET\n-  #108 = Integer            28\n-  #109 = Utf8               USER_ID_LEN\n-  #110 = Integer            6\n-  #111 = Utf8               GROUP_ID_OFFSET\n-  #112 = Integer            34\n-  #113 = Utf8               GROUP_ID_LEN\n-  #114 = Utf8               FILE_MODE_OFFSET\n-  #115 = Integer            40\n-  #116 = Utf8               FILE_MODE_LEN\n-  #117 = Integer            8\n-  #118 = Utf8               LENGTH_OFFSET\n-  #119 = Integer            48\n-  #120 = Utf8               LENGTH_LEN\n-  #121 = Integer            10\n-  #122 = Utf8               metaData\n-  #123 = Utf8               BSD_LONGNAME_PREFIX\n-  #124 = Utf8               Ljava/lang/String;\n-  #125 = Utf8               BSD_LONGNAME_PREFIX_LEN\n-  #126 = Utf8               BSD_LONGNAME_PATTERN\n-  #127 = Utf8               GNU_STRING_TABLE_NAME\n-  #128 = Utf8               GNU_LONGNAME_PATTERN\n-  #129 = Utf8               <init>\n-  #130 = Utf8               (Ljava/io/InputStream;)V\n-  #131 = Utf8               Code\n-  #132 = Utf8               LineNumberTable\n-  #133 = Utf8               LocalVariableTable\n-  #134 = Utf8               this\n-  #135 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n-  #136 = Utf8               pInput\n-  #137 = Utf8               getNextArEntry\n-  #138 = Utf8               ()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #139 = Utf8               entryEnd\n-  #140 = Utf8               skipped\n-  #141 = Utf8               expected\n-  #142 = Utf8               realized\n-  #143 = Utf8               read\n-  #144 = Utf8               off\n-  #145 = Utf8               nameLen\n-  #146 = Utf8               temp\n-  #147 = Utf8               len\n-  #148 = Utf8               StackMapTable\n-  #149 = Class              #96           // \"[B\"\n-  #150 = Class              #279          // java/lang/String\n-  #151 = Utf8               Exceptions\n-  #152 = Utf8               getExtendedName\n-  #153 = Utf8               (I)Ljava/lang/String;\n-  #154 = Utf8               i\n-  #155 = Utf8               asLong\n-  #156 = Utf8               ([BII)J\n-  #157 = Utf8               byteArray\n-  #158 = Utf8               asInt\n-  #159 = Utf8               ([BII)I\n-  #160 = Utf8               ([BIIZ)I\n-  #161 = Utf8               treatBlankAsZero\n-  #162 = Utf8               ([BIII)I\n-  #163 = Utf8               base\n-  #164 = Utf8               ([BIIIZ)I\n-  #165 = Utf8               string\n-  #166 = Utf8               getNextEntry\n-  #167 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #168 = Utf8               close\n-  #169 = Utf8               ()V\n-  #170 = Utf8               b\n-  #171 = Utf8               toRead\n-  #172 = Utf8               ret\n-  #173 = Utf8               matches\n-  #174 = Utf8               ([BI)Z\n-  #175 = Utf8               signature\n-  #176 = Utf8               length\n-  #177 = Utf8               isBSDLongName\n-  #178 = Utf8               (Ljava/lang/String;)Z\n-  #179 = Utf8               name\n-  #180 = Utf8               getBSDLongName\n-  #181 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #182 = Utf8               bsdLongName\n-  #183 = Utf8               isGNUStringTable\n-  #184 = Utf8               trackReadBytes\n-  #185 = Utf8               (J)V\n-  #186 = Utf8               readGNUStringTable\n-  #187 = Utf8               ([BII)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #188 = Utf8               bufflen\n-  #189 = Utf8               isGNULongName\n-  #190 = Utf8               <clinit>\n-  #191 = Utf8               SourceFile\n-  #192 = Utf8               ArArchiveInputStream.java\n-  #193 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-  #194 = NameAndType        #129:#169     // \"<init>\":()V\n-  #195 = NameAndType        #97:#90       // entryOffset:J\n-  #196 = NameAndType        #122:#96      // metaData:[B\n-  #197 = NameAndType        #87:#88       // input:Ljava/io/InputStream;\n-  #198 = NameAndType        #91:#92       // closed:Z\n-  #199 = NameAndType        #93:#94       // currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #200 = NameAndType        #280:#281     // getLength:()J\n-  #201 = NameAndType        #89:#90       // offset:J\n-  #202 = Class              #282          // org/apache/commons/compress/utils/IOUtils\n-  #203 = NameAndType        #283:#284     // skip:(Ljava/io/InputStream;J)J\n-  #204 = NameAndType        #184:#185     // trackReadBytes:(J)V\n-  #205 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-  #206 = Utf8               !<arch>\\n\n-  #207 = Class              #285          // org/apache/commons/compress/utils/ArchiveUtils\n-  #208 = NameAndType        #286:#287     // toAsciiBytes:(Ljava/lang/String;)[B\n-  #209 = NameAndType        #288:#289     // readRange:(Ljava/io/InputStream;I)[B\n-  #210 = Utf8               java/io/IOException\n-  #211 = Utf8               java/lang/StringBuilder\n-  #212 = Utf8               Failed to read header. Occurred at byte:\n-  #213 = NameAndType        #290:#291     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #214 = NameAndType        #292:#281     // getBytesRead:()J\n-  #215 = NameAndType        #290:#293     // append:(J)Ljava/lang/StringBuilder;\n-  #216 = NameAndType        #294:#295     // toString:()Ljava/lang/String;\n-  #217 = NameAndType        #129:#296     // \"<init>\":(Ljava/lang/String;)V\n-  #218 = Class              #297          // java/util/Arrays\n-  #219 = NameAndType        #298:#299     // equals:([B[B)Z\n-  #220 = Utf8               Invalid header\n-  #221 = NameAndType        #300:#301     // toAsciiString:([B)Ljava/lang/String;\n-  #222 = Class              #302          // java/io/InputStream\n-  #223 = NameAndType        #143:#303     // read:()I\n-  #224 = NameAndType        #304:#305     // readFully:(Ljava/io/InputStream;[B)I\n-  #225 = Utf8               Truncated ar archive\n-  #226 = Utf8               `\\n\n-  #227 = Utf8               Failed to read entry trailer. Occurred at byte:\n-  #228 = Utf8               Invalid entry trailer. not read the content? Occurred at byte:\n-  #229 = NameAndType        #300:#306     // toAsciiString:([BII)Ljava/lang/String;\n-  #230 = NameAndType        #307:#295     // trim:()Ljava/lang/String;\n-  #231 = NameAndType        #183:#178     // isGNUStringTable:(Ljava/lang/String;)Z\n-  #232 = NameAndType        #186:#187     // readGNUStringTable:([BII)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #233 = NameAndType        #137:#138     // getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-  #234 = NameAndType        #155:#156     // asLong:([BII)J\n-  #235 = Utf8               /\n-  #236 = NameAndType        #308:#178     // endsWith:(Ljava/lang/String;)Z\n-  #237 = NameAndType        #176:#303     // length:()I\n-  #238 = NameAndType        #309:#310     // substring:(II)Ljava/lang/String;\n-  #239 = NameAndType        #189:#178     // isGNULongName:(Ljava/lang/String;)Z\n-  #240 = NameAndType        #309:#153     // substring:(I)Ljava/lang/String;\n-  #241 = Class              #311          // java/lang/Integer\n-  #242 = NameAndType        #312:#313     // parseInt:(Ljava/lang/String;)I\n-  #243 = NameAndType        #152:#153     // getExtendedName:(I)Ljava/lang/String;\n-  #244 = NameAndType        #177:#178     // isBSDLongName:(Ljava/lang/String;)Z\n-  #245 = NameAndType        #180:#181     // getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n-  #246 = Utf8               broken archive, entry with negative size\n-  #247 = NameAndType        #158:#160     // asInt:([BIIZ)I\n-  #248 = NameAndType        #158:#162     // asInt:([BIII)I\n-  #249 = NameAndType        #129:#314     // \"<init>\":(Ljava/lang/String;JIIIJ)V\n-  #250 = NameAndType        #95:#96       // namebuffer:[B\n-  #251 = Utf8               Cannot process GNU long filename as no // record was found\n-  #252 = Utf8               Failed to read entry:\n-  #253 = NameAndType        #290:#315     // append:(I)Ljava/lang/StringBuilder;\n-  #254 = Class              #316          // java/lang/Long\n-  #255 = NameAndType        #317:#318     // parseLong:(Ljava/lang/String;)J\n-  #256 = NameAndType        #158:#164     // asInt:([BIIIZ)I\n-  #257 = NameAndType        #319:#320     // isEmpty:()Z\n-  #258 = NameAndType        #312:#321     // parseInt:(Ljava/lang/String;I)I\n-  #259 = NameAndType        #168:#169     // close:()V\n-  #260 = Utf8               java/lang/IllegalStateException\n-  #261 = Utf8               No current ar entry\n-  #262 = Class              #322          // java/lang/Math\n-  #263 = NameAndType        #323:#324     // min:(JJ)J\n-  #264 = NameAndType        #143:#159     // read:([BII)I\n-  #265 = Utf8               ^#1/\\\\d+\n-  #266 = NameAndType        #173:#178     // matches:(Ljava/lang/String;)Z\n-  #267 = NameAndType        #125:#99      // BSD_LONGNAME_PREFIX_LEN:I\n-  #268 = Utf8               java/io/EOFException\n-  #269 = Utf8               //\n-  #270 = NameAndType        #298:#325     // equals:(Ljava/lang/Object;)Z\n-  #271 = NameAndType        #326:#185     // count:(J)V\n-  #272 = NameAndType        #158:#159     // asInt:([BII)I\n-  #273 = Utf8               Failed to read complete // record: expected=\n-  #274 = Utf8                read=\n-  #275 = NameAndType        #129:#327     // \"<init>\":(Ljava/lang/String;J)V\n-  #276 = Utf8               ^/\\\\d+\n-  #277 = Utf8               #1/\n-  #278 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n-  #279 = Utf8               java/lang/String\n-  #280 = Utf8               getLength\n-  #281 = Utf8               ()J\n-  #282 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #283 = Utf8               skip\n-  #284 = Utf8               (Ljava/io/InputStream;J)J\n-  #285 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n-  #286 = Utf8               toAsciiBytes\n-  #287 = Utf8               (Ljava/lang/String;)[B\n-  #288 = Utf8               readRange\n-  #289 = Utf8               (Ljava/io/InputStream;I)[B\n-  #290 = Utf8               append\n-  #291 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #292 = Utf8               getBytesRead\n-  #293 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #294 = Utf8               toString\n-  #295 = Utf8               ()Ljava/lang/String;\n-  #296 = Utf8               (Ljava/lang/String;)V\n-  #297 = Utf8               java/util/Arrays\n-  #298 = Utf8               equals\n-  #299 = Utf8               ([B[B)Z\n-  #300 = Utf8               toAsciiString\n-  #301 = Utf8               ([B)Ljava/lang/String;\n-  #302 = Utf8               java/io/InputStream\n-  #303 = Utf8               ()I\n-  #304 = Utf8               readFully\n-  #305 = Utf8               (Ljava/io/InputStream;[B)I\n-  #306 = Utf8               ([BII)Ljava/lang/String;\n-  #307 = Utf8               trim\n-  #308 = Utf8               endsWith\n-  #309 = Utf8               substring\n-  #310 = Utf8               (II)Ljava/lang/String;\n-  #311 = Utf8               java/lang/Integer\n-  #312 = Utf8               parseInt\n-  #313 = Utf8               (Ljava/lang/String;)I\n-  #314 = Utf8               (Ljava/lang/String;JIIIJ)V\n-  #315 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #316 = Utf8               java/lang/Long\n-  #317 = Utf8               parseLong\n-  #318 = Utf8               (Ljava/lang/String;)J\n-  #319 = Utf8               isEmpty\n-  #320 = Utf8               ()Z\n-  #321 = Utf8               (Ljava/lang/String;I)I\n-  #322 = Utf8               java/lang/Math\n-  #323 = Utf8               min\n-  #324 = Utf8               (JJ)J\n-  #325 = Utf8               (Ljava/lang/Object;)Z\n-  #326 = Utf8               count\n-  #327 = Utf8               (Ljava/lang/String;J)V\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+    #2 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+    #3 = Methodref          #4.#5         // org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n+    #4 = Class              #6            // org/apache/commons/compress/archivers/ArchiveInputStream\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = Long               -1l\n+   #11 = Fieldref           #1.#12        // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.entryOffset:J\n+   #12 = NameAndType        #13:#14       // entryOffset:J\n+   #13 = Utf8               entryOffset\n+   #14 = Utf8               J\n+   #15 = Fieldref           #1.#16        // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.metaData:[B\n+   #16 = NameAndType        #17:#18       // metaData:[B\n+   #17 = Utf8               metaData\n+   #18 = Utf8               [B\n+   #19 = Fieldref           #1.#20        // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.input:Ljava/io/InputStream;\n+   #20 = NameAndType        #21:#22       // input:Ljava/io/InputStream;\n+   #21 = Utf8               input\n+   #22 = Utf8               Ljava/io/InputStream;\n+   #23 = Fieldref           #1.#24        // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.closed:Z\n+   #24 = NameAndType        #25:#26       // closed:Z\n+   #25 = Utf8               closed\n+   #26 = Utf8               Z\n+   #27 = Fieldref           #1.#28        // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+   #28 = NameAndType        #29:#30       // currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+   #29 = Utf8               currentEntry\n+   #30 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+   #31 = Methodref          #32.#33       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n+   #32 = Class              #34           // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+   #33 = NameAndType        #35:#36       // getLength:()J\n+   #34 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+   #35 = Utf8               getLength\n+   #36 = Utf8               ()J\n+   #37 = Fieldref           #1.#38        // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.offset:J\n+   #38 = NameAndType        #39:#14       // offset:J\n+   #39 = Utf8               offset\n+   #40 = Methodref          #41.#42       // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+   #41 = Class              #43           // org/apache/commons/compress/utils/IOUtils\n+   #42 = NameAndType        #44:#45       // skip:(Ljava/io/InputStream;J)J\n+   #43 = Utf8               org/apache/commons/compress/utils/IOUtils\n+   #44 = Utf8               skip\n+   #45 = Utf8               (Ljava/io/InputStream;J)J\n+   #46 = Methodref          #1.#47        // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.trackReadBytes:(J)V\n+   #47 = NameAndType        #48:#49       // trackReadBytes:(J)V\n+   #48 = Utf8               trackReadBytes\n+   #49 = Utf8               (J)V\n+   #50 = String             #51           // !<arch>\\n\n+   #51 = Utf8               !<arch>\\n\n+   #52 = Methodref          #53.#54       // org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+   #53 = Class              #55           // org/apache/commons/compress/utils/ArchiveUtils\n+   #54 = NameAndType        #56:#57       // toAsciiBytes:(Ljava/lang/String;)[B\n+   #55 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n+   #56 = Utf8               toAsciiBytes\n+   #57 = Utf8               (Ljava/lang/String;)[B\n+   #58 = Methodref          #41.#59       // org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n+   #59 = NameAndType        #60:#61       // readRange:(Ljava/io/InputStream;I)[B\n+   #60 = Utf8               readRange\n+   #61 = Utf8               (Ljava/io/InputStream;I)[B\n+   #62 = Class              #63           // java/io/IOException\n+   #63 = Utf8               java/io/IOException\n+   #64 = Class              #65           // java/lang/StringBuilder\n+   #65 = Utf8               java/lang/StringBuilder\n+   #66 = Methodref          #64.#5        // java/lang/StringBuilder.\"<init>\":()V\n+   #67 = String             #68           // Failed to read header. Occurred at byte:\n+   #68 = Utf8               Failed to read header. Occurred at byte:\n+   #69 = Methodref          #64.#70       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #70 = NameAndType        #71:#72       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #71 = Utf8               append\n+   #72 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #73 = Methodref          #1.#74        // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getBytesRead:()J\n+   #74 = NameAndType        #75:#36       // getBytesRead:()J\n+   #75 = Utf8               getBytesRead\n+   #76 = Methodref          #64.#77       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #77 = NameAndType        #71:#78       // append:(J)Ljava/lang/StringBuilder;\n+   #78 = Utf8               (J)Ljava/lang/StringBuilder;\n+   #79 = Methodref          #64.#80       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #80 = NameAndType        #81:#82       // toString:()Ljava/lang/String;\n+   #81 = Utf8               toString\n+   #82 = Utf8               ()Ljava/lang/String;\n+   #83 = Methodref          #62.#84       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #84 = NameAndType        #7:#85        // \"<init>\":(Ljava/lang/String;)V\n+   #85 = Utf8               (Ljava/lang/String;)V\n+   #86 = Methodref          #87.#88       // java/util/Arrays.equals:([B[B)Z\n+   #87 = Class              #89           // java/util/Arrays\n+   #88 = NameAndType        #90:#91       // equals:([B[B)Z\n+   #89 = Utf8               java/util/Arrays\n+   #90 = Utf8               equals\n+   #91 = Utf8               ([B[B)Z\n+   #92 = String             #93           // Invalid header\n+   #93 = Utf8               Invalid header\n+   #94 = Methodref          #53.#95       // org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n+   #95 = NameAndType        #96:#97       // toAsciiString:([B)Ljava/lang/String;\n+   #96 = Utf8               toAsciiString\n+   #97 = Utf8               ([B)Ljava/lang/String;\n+   #98 = Long               2l\n+  #100 = Methodref          #101.#102     // java/io/InputStream.read:()I\n+  #101 = Class              #103          // java/io/InputStream\n+  #102 = NameAndType        #104:#105     // read:()I\n+  #103 = Utf8               java/io/InputStream\n+  #104 = Utf8               read\n+  #105 = Utf8               ()I\n+  #106 = Methodref          #41.#107      // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+  #107 = NameAndType        #108:#109     // readFully:(Ljava/io/InputStream;[B)I\n+  #108 = Utf8               readFully\n+  #109 = Utf8               (Ljava/io/InputStream;[B)I\n+  #110 = String             #111          // Truncated ar archive\n+  #111 = Utf8               Truncated ar archive\n+  #112 = String             #113          // `\\n\n+  #113 = Utf8               `\\n\n+  #114 = String             #115          // Failed to read entry trailer. Occurred at byte:\n+  #115 = Utf8               Failed to read entry trailer. Occurred at byte:\n+  #116 = String             #117          // Invalid entry trailer. not read the content? Occurred at byte:\n+  #117 = Utf8               Invalid entry trailer. not read the content? Occurred at byte:\n+  #118 = Methodref          #53.#119      // org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n+  #119 = NameAndType        #96:#120      // toAsciiString:([BII)Ljava/lang/String;\n+  #120 = Utf8               ([BII)Ljava/lang/String;\n+  #121 = Methodref          #122.#123     // java/lang/String.trim:()Ljava/lang/String;\n+  #122 = Class              #124          // java/lang/String\n+  #123 = NameAndType        #125:#82      // trim:()Ljava/lang/String;\n+  #124 = Utf8               java/lang/String\n+  #125 = Utf8               trim\n+  #126 = Methodref          #1.#127       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isGNUStringTable:(Ljava/lang/String;)Z\n+  #127 = NameAndType        #128:#129     // isGNUStringTable:(Ljava/lang/String;)Z\n+  #128 = Utf8               isGNUStringTable\n+  #129 = Utf8               (Ljava/lang/String;)Z\n+  #130 = Methodref          #1.#131       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.readGNUStringTable:([BII)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #131 = NameAndType        #132:#133     // readGNUStringTable:([BII)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #132 = Utf8               readGNUStringTable\n+  #133 = Utf8               ([BII)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #134 = Methodref          #1.#135       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #135 = NameAndType        #136:#137     // getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #136 = Utf8               getNextArEntry\n+  #137 = Utf8               ()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+  #138 = Methodref          #1.#139       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asLong:([BII)J\n+  #139 = NameAndType        #140:#141     // asLong:([BII)J\n+  #140 = Utf8               asLong\n+  #141 = Utf8               ([BII)J\n+  #142 = String             #143          // /\n+  #143 = Utf8               /\n+  #144 = Methodref          #122.#145     // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+  #145 = NameAndType        #146:#129     // endsWith:(Ljava/lang/String;)Z\n+  #146 = Utf8               endsWith\n+  #147 = Methodref          #122.#148     // java/lang/String.length:()I\n+  #148 = NameAndType        #149:#105     // length:()I\n+  #149 = Utf8               length\n+  #150 = Methodref          #122.#151     // java/lang/String.substring:(II)Ljava/lang/String;\n+  #151 = NameAndType        #152:#153     // substring:(II)Ljava/lang/String;\n+  #152 = Utf8               substring\n+  #153 = Utf8               (II)Ljava/lang/String;\n+  #154 = Methodref          #1.#155       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isGNULongName:(Ljava/lang/String;)Z\n+  #155 = NameAndType        #156:#129     // isGNULongName:(Ljava/lang/String;)Z\n+  #156 = Utf8               isGNULongName\n+  #157 = Methodref          #122.#158     // java/lang/String.substring:(I)Ljava/lang/String;\n+  #158 = NameAndType        #152:#159     // substring:(I)Ljava/lang/String;\n+  #159 = Utf8               (I)Ljava/lang/String;\n+  #160 = Methodref          #161.#162     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+  #161 = Class              #163          // java/lang/Integer\n+  #162 = NameAndType        #164:#165     // parseInt:(Ljava/lang/String;)I\n+  #163 = Utf8               java/lang/Integer\n+  #164 = Utf8               parseInt\n+  #165 = Utf8               (Ljava/lang/String;)I\n+  #166 = Methodref          #1.#167       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getExtendedName:(I)Ljava/lang/String;\n+  #167 = NameAndType        #168:#159     // getExtendedName:(I)Ljava/lang/String;\n+  #168 = Utf8               getExtendedName\n+  #169 = Methodref          #1.#170       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.isBSDLongName:(Ljava/lang/String;)Z\n+  #170 = NameAndType        #171:#129     // isBSDLongName:(Ljava/lang/String;)Z\n+  #171 = Utf8               isBSDLongName\n+  #172 = Methodref          #1.#173       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n+  #173 = NameAndType        #174:#175     // getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n+  #174 = Utf8               getBSDLongName\n+  #175 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #176 = String             #177          // broken archive, entry with negative size\n+  #177 = Utf8               broken archive, entry with negative size\n+  #178 = Methodref          #1.#179       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BIIZ)I\n+  #179 = NameAndType        #180:#181     // asInt:([BIIZ)I\n+  #180 = Utf8               asInt\n+  #181 = Utf8               ([BIIZ)I\n+  #182 = Methodref          #1.#183       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BIII)I\n+  #183 = NameAndType        #180:#184     // asInt:([BIII)I\n+  #184 = Utf8               ([BIII)I\n+  #185 = Methodref          #32.#186      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n+  #186 = NameAndType        #7:#187       // \"<init>\":(Ljava/lang/String;JIIIJ)V\n+  #187 = Utf8               (Ljava/lang/String;JIIIJ)V\n+  #188 = Fieldref           #1.#189       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.namebuffer:[B\n+  #189 = NameAndType        #190:#18      // namebuffer:[B\n+  #190 = Utf8               namebuffer\n+  #191 = String             #192          // Cannot process GNU long filename as no // record was found\n+  #192 = Utf8               Cannot process GNU long filename as no // record was found\n+  #193 = String             #194          // Failed to read entry:\n+  #194 = Utf8               Failed to read entry:\n+  #195 = Methodref          #64.#196      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #196 = NameAndType        #71:#197      // append:(I)Ljava/lang/StringBuilder;\n+  #197 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #198 = Methodref          #199.#200     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n+  #199 = Class              #201          // java/lang/Long\n+  #200 = NameAndType        #202:#203     // parseLong:(Ljava/lang/String;)J\n+  #201 = Utf8               java/lang/Long\n+  #202 = Utf8               parseLong\n+  #203 = Utf8               (Ljava/lang/String;)J\n+  #204 = Methodref          #1.#205       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BIIIZ)I\n+  #205 = NameAndType        #180:#206     // asInt:([BIIIZ)I\n+  #206 = Utf8               ([BIIIZ)I\n+  #207 = Methodref          #122.#208     // java/lang/String.isEmpty:()Z\n+  #208 = NameAndType        #209:#210     // isEmpty:()Z\n+  #209 = Utf8               isEmpty\n+  #210 = Utf8               ()Z\n+  #211 = Methodref          #161.#212     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+  #212 = NameAndType        #164:#213     // parseInt:(Ljava/lang/String;I)I\n+  #213 = Utf8               (Ljava/lang/String;I)I\n+  #214 = Methodref          #101.#215     // java/io/InputStream.close:()V\n+  #215 = NameAndType        #216:#8       // close:()V\n+  #216 = Utf8               close\n+  #217 = Class              #218          // java/lang/IllegalStateException\n+  #218 = Utf8               java/lang/IllegalStateException\n+  #219 = String             #220          // No current ar entry\n+  #220 = Utf8               No current ar entry\n+  #221 = Methodref          #217.#84      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #222 = Methodref          #223.#224     // java/lang/Math.min:(JJ)J\n+  #223 = Class              #225          // java/lang/Math\n+  #224 = NameAndType        #226:#227     // min:(JJ)J\n+  #225 = Utf8               java/lang/Math\n+  #226 = Utf8               min\n+  #227 = Utf8               (JJ)J\n+  #228 = Methodref          #101.#229     // java/io/InputStream.read:([BII)I\n+  #229 = NameAndType        #104:#230     // read:([BII)I\n+  #230 = Utf8               ([BII)I\n+  #231 = String             #232          // ^#1/\\\\d+\n+  #232 = Utf8               ^#1/\\\\d+\n+  #233 = Methodref          #122.#234     // java/lang/String.matches:(Ljava/lang/String;)Z\n+  #234 = NameAndType        #235:#129     // matches:(Ljava/lang/String;)Z\n+  #235 = Utf8               matches\n+  #236 = Fieldref           #1.#237       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.BSD_LONGNAME_PREFIX_LEN:I\n+  #237 = NameAndType        #238:#239     // BSD_LONGNAME_PREFIX_LEN:I\n+  #238 = Utf8               BSD_LONGNAME_PREFIX_LEN\n+  #239 = Utf8               I\n+  #240 = Class              #241          // java/io/EOFException\n+  #241 = Utf8               java/io/EOFException\n+  #242 = Methodref          #240.#5       // java/io/EOFException.\"<init>\":()V\n+  #243 = String             #244          // //\n+  #244 = Utf8               //\n+  #245 = Methodref          #122.#246     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #246 = NameAndType        #90:#247      // equals:(Ljava/lang/Object;)Z\n+  #247 = Utf8               (Ljava/lang/Object;)Z\n+  #248 = Methodref          #1.#249       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.count:(J)V\n+  #249 = NameAndType        #250:#49      // count:(J)V\n+  #250 = Utf8               count\n+  #251 = Methodref          #1.#252       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.asInt:([BII)I\n+  #252 = NameAndType        #180:#230     // asInt:([BII)I\n+  #253 = String             #254          // Failed to read complete // record: expected=\n+  #254 = Utf8               Failed to read complete // record: expected=\n+  #255 = String             #256          //  read=\n+  #256 = Utf8                read=\n+  #257 = Methodref          #32.#258      // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;J)V\n+  #258 = NameAndType        #7:#259       // \"<init>\":(Ljava/lang/String;J)V\n+  #259 = Utf8               (Ljava/lang/String;J)V\n+  #260 = String             #261          // ^/\\\\d+\n+  #261 = Utf8               ^/\\\\d+\n+  #262 = String             #263          // #1/\n+  #263 = Utf8               #1/\n+  #264 = Utf8               NAME_OFFSET\n+  #265 = Utf8               ConstantValue\n+  #266 = Integer            0\n+  #267 = Utf8               NAME_LEN\n+  #268 = Integer            16\n+  #269 = Utf8               LAST_MODIFIED_OFFSET\n+  #270 = Utf8               LAST_MODIFIED_LEN\n+  #271 = Integer            12\n+  #272 = Utf8               USER_ID_OFFSET\n+  #273 = Integer            28\n+  #274 = Utf8               USER_ID_LEN\n+  #275 = Integer            6\n+  #276 = Utf8               GROUP_ID_OFFSET\n+  #277 = Integer            34\n+  #278 = Utf8               GROUP_ID_LEN\n+  #279 = Utf8               FILE_MODE_OFFSET\n+  #280 = Integer            40\n+  #281 = Utf8               FILE_MODE_LEN\n+  #282 = Integer            8\n+  #283 = Utf8               LENGTH_OFFSET\n+  #284 = Integer            48\n+  #285 = Utf8               LENGTH_LEN\n+  #286 = Integer            10\n+  #287 = Utf8               BSD_LONGNAME_PREFIX\n+  #288 = Utf8               Ljava/lang/String;\n+  #289 = Utf8               BSD_LONGNAME_PATTERN\n+  #290 = Utf8               GNU_STRING_TABLE_NAME\n+  #291 = Utf8               GNU_LONGNAME_PATTERN\n+  #292 = Utf8               (Ljava/io/InputStream;)V\n+  #293 = Utf8               Code\n+  #294 = Utf8               LineNumberTable\n+  #295 = Utf8               LocalVariableTable\n+  #296 = Utf8               this\n+  #297 = Utf8               Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n+  #298 = Utf8               pInput\n+  #299 = Utf8               entryEnd\n+  #300 = Utf8               skipped\n+  #301 = Utf8               expected\n+  #302 = Utf8               realized\n+  #303 = Utf8               off\n+  #304 = Utf8               nameLen\n+  #305 = Utf8               temp\n+  #306 = Utf8               len\n+  #307 = Utf8               StackMapTable\n+  #308 = Class              #18           // \"[B\"\n+  #309 = Utf8               Exceptions\n+  #310 = Utf8               i\n+  #311 = Utf8               byteArray\n+  #312 = Utf8               treatBlankAsZero\n+  #313 = Utf8               base\n+  #314 = Utf8               string\n+  #315 = Utf8               getNextEntry\n+  #316 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #317 = Utf8               b\n+  #318 = Utf8               toRead\n+  #319 = Utf8               ret\n+  #320 = Utf8               ([BI)Z\n+  #321 = Utf8               signature\n+  #322 = Utf8               name\n+  #323 = Utf8               bsdLongName\n+  #324 = Utf8               bufflen\n+  #325 = Utf8               <clinit>\n+  #326 = Utf8               SourceFile\n+  #327 = Utf8               ArArchiveInputStream.java\n {\n   private final java.io.InputStream input;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private long offset;\n     descriptor: J\n@@ -448,28 +448,28 @@\n \n   public org.apache.commons.compress.archivers.ar.ArArchiveInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n+         1: invokespecial #3                  // Method org/apache/commons/compress/archivers/ArchiveInputStream.\"<init>\":()V\n          4: aload_0\n-         5: ldc2_w        #3                  // long -1l\n-         8: putfield      #5                  // Field entryOffset:J\n+         5: ldc2_w        #9                  // long -1l\n+         8: putfield      #11                 // Field entryOffset:J\n         11: aload_0\n         12: bipush        58\n         14: newarray       byte\n-        16: putfield      #6                  // Field metaData:[B\n+        16: putfield      #15                 // Field metaData:[B\n         19: aload_0\n         20: aload_1\n-        21: putfield      #7                  // Field input:Ljava/io/InputStream;\n+        21: putfield      #19                 // Field input:Ljava/io/InputStream;\n         24: aload_0\n         25: iconst_0\n-        26: putfield      #8                  // Field closed:Z\n+        26: putfield      #23                 // Field closed:Z\n         29: return\n       LineNumberTable:\n         line 82: 0\n         line 56: 4\n         line 73: 11\n         line 83: 19\n         line 84: 24\n@@ -481,308 +481,308 @@\n \n   public org.apache.commons.compress.archivers.ar.ArArchiveEntry getNextArEntry() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=13, locals=5, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+         1: getfield      #27                 // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n          4: ifnull        44\n          7: aload_0\n-         8: getfield      #5                  // Field entryOffset:J\n+         8: getfield      #11                 // Field entryOffset:J\n         11: aload_0\n-        12: getfield      #9                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-        15: invokevirtual #10                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n+        12: getfield      #27                 // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+        15: invokevirtual #31                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n         18: ladd\n         19: lstore_1\n         20: aload_0\n-        21: getfield      #7                  // Field input:Ljava/io/InputStream;\n+        21: getfield      #19                 // Field input:Ljava/io/InputStream;\n         24: lload_1\n         25: aload_0\n-        26: getfield      #11                 // Field offset:J\n+        26: getfield      #37                 // Field offset:J\n         29: lsub\n-        30: invokestatic  #12                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+        30: invokestatic  #40                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n         33: lstore_3\n         34: aload_0\n         35: lload_3\n-        36: invokespecial #13                 // Method trackReadBytes:(J)V\n+        36: invokespecial #46                 // Method trackReadBytes:(J)V\n         39: aload_0\n         40: aconst_null\n-        41: putfield      #9                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+        41: putfield      #27                 // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n         44: aload_0\n-        45: getfield      #11                 // Field offset:J\n+        45: getfield      #37                 // Field offset:J\n         48: lconst_0\n         49: lcmp\n         50: ifne          152\n-        53: ldc           #15                 // String !<arch>\\n\n-        55: invokestatic  #16                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+        53: ldc           #50                 // String !<arch>\\n\n+        55: invokestatic  #52                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n         58: astore_1\n         59: aload_0\n-        60: getfield      #7                  // Field input:Ljava/io/InputStream;\n+        60: getfield      #19                 // Field input:Ljava/io/InputStream;\n         63: aload_1\n         64: arraylength\n-        65: invokestatic  #17                 // Method org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n+        65: invokestatic  #58                 // Method org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n         68: astore_2\n         69: aload_2\n         70: arraylength\n         71: istore_3\n         72: aload_0\n         73: iload_3\n         74: i2l\n-        75: invokespecial #13                 // Method trackReadBytes:(J)V\n+        75: invokespecial #46                 // Method trackReadBytes:(J)V\n         78: iload_3\n         79: aload_1\n         80: arraylength\n         81: if_icmpeq     114\n-        84: new           #18                 // class java/io/IOException\n+        84: new           #62                 // class java/io/IOException\n         87: dup\n-        88: new           #19                 // class java/lang/StringBuilder\n+        88: new           #64                 // class java/lang/StringBuilder\n         91: dup\n-        92: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        95: ldc           #21                 // String Failed to read header. Occurred at byte:\n-        97: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        92: invokespecial #66                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        95: ldc           #67                 // String Failed to read header. Occurred at byte:\n+        97: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        100: aload_0\n-       101: invokevirtual #23                 // Method getBytesRead:()J\n-       104: invokevirtual #24                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-       107: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       110: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       101: invokevirtual #73                 // Method getBytesRead:()J\n+       104: invokevirtual #76                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+       107: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       110: invokespecial #83                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        113: athrow\n        114: aload_1\n        115: aload_2\n-       116: invokestatic  #27                 // Method java/util/Arrays.equals:([B[B)Z\n+       116: invokestatic  #86                 // Method java/util/Arrays.equals:([B[B)Z\n        119: ifne          152\n-       122: new           #18                 // class java/io/IOException\n+       122: new           #62                 // class java/io/IOException\n        125: dup\n-       126: new           #19                 // class java/lang/StringBuilder\n+       126: new           #64                 // class java/lang/StringBuilder\n        129: dup\n-       130: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       133: ldc           #28                 // String Invalid header\n-       135: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       130: invokespecial #66                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       133: ldc           #92                 // String Invalid header\n+       135: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        138: aload_2\n-       139: invokestatic  #29                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n-       142: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       145: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       148: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       139: invokestatic  #94                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n+       142: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       145: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       148: invokespecial #83                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        151: athrow\n        152: aload_0\n-       153: getfield      #11                 // Field offset:J\n-       156: ldc2_w        #30                 // long 2l\n+       153: getfield      #37                 // Field offset:J\n+       156: ldc2_w        #98                 // long 2l\n        159: lrem\n        160: lconst_0\n        161: lcmp\n        162: ifeq          182\n        165: aload_0\n-       166: getfield      #7                  // Field input:Ljava/io/InputStream;\n-       169: invokevirtual #32                 // Method java/io/InputStream.read:()I\n+       166: getfield      #19                 // Field input:Ljava/io/InputStream;\n+       169: invokevirtual #100                // Method java/io/InputStream.read:()I\n        172: ifge          177\n        175: aconst_null\n        176: areturn\n        177: aload_0\n        178: lconst_1\n-       179: invokespecial #13                 // Method trackReadBytes:(J)V\n+       179: invokespecial #46                 // Method trackReadBytes:(J)V\n        182: aload_0\n-       183: getfield      #7                  // Field input:Ljava/io/InputStream;\n+       183: getfield      #19                 // Field input:Ljava/io/InputStream;\n        186: aload_0\n-       187: getfield      #6                  // Field metaData:[B\n-       190: invokestatic  #33                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       187: getfield      #15                 // Field metaData:[B\n+       190: invokestatic  #106                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n        193: istore_1\n        194: aload_0\n        195: iload_1\n        196: i2l\n-       197: invokespecial #13                 // Method trackReadBytes:(J)V\n+       197: invokespecial #46                 // Method trackReadBytes:(J)V\n        200: iload_1\n        201: ifne          206\n        204: aconst_null\n        205: areturn\n        206: iload_1\n        207: aload_0\n-       208: getfield      #6                  // Field metaData:[B\n+       208: getfield      #15                 // Field metaData:[B\n        211: arraylength\n        212: if_icmpge     225\n-       215: new           #18                 // class java/io/IOException\n+       215: new           #62                 // class java/io/IOException\n        218: dup\n-       219: ldc           #34                 // String Truncated ar archive\n-       221: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       219: ldc           #110                // String Truncated ar archive\n+       221: invokespecial #83                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        224: athrow\n-       225: ldc           #35                 // String `\\n\n-       227: invokestatic  #16                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n+       225: ldc           #112                // String `\\n\n+       227: invokestatic  #52                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiBytes:(Ljava/lang/String;)[B\n        230: astore_1\n        231: aload_0\n-       232: getfield      #7                  // Field input:Ljava/io/InputStream;\n+       232: getfield      #19                 // Field input:Ljava/io/InputStream;\n        235: aload_1\n        236: arraylength\n-       237: invokestatic  #17                 // Method org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n+       237: invokestatic  #58                 // Method org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n        240: astore_2\n        241: aload_2\n        242: arraylength\n        243: istore_3\n        244: aload_0\n        245: iload_3\n        246: i2l\n-       247: invokespecial #13                 // Method trackReadBytes:(J)V\n+       247: invokespecial #46                 // Method trackReadBytes:(J)V\n        250: iload_3\n        251: aload_1\n        252: arraylength\n        253: if_icmpeq     286\n-       256: new           #18                 // class java/io/IOException\n+       256: new           #62                 // class java/io/IOException\n        259: dup\n-       260: new           #19                 // class java/lang/StringBuilder\n+       260: new           #64                 // class java/lang/StringBuilder\n        263: dup\n-       264: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       267: ldc           #36                 // String Failed to read entry trailer. Occurred at byte:\n-       269: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       264: invokespecial #66                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       267: ldc           #114                // String Failed to read entry trailer. Occurred at byte:\n+       269: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        272: aload_0\n-       273: invokevirtual #23                 // Method getBytesRead:()J\n-       276: invokevirtual #24                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-       279: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       282: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       273: invokevirtual #73                 // Method getBytesRead:()J\n+       276: invokevirtual #76                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+       279: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       282: invokespecial #83                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        285: athrow\n        286: aload_1\n        287: aload_2\n-       288: invokestatic  #27                 // Method java/util/Arrays.equals:([B[B)Z\n+       288: invokestatic  #86                 // Method java/util/Arrays.equals:([B[B)Z\n        291: ifne          324\n-       294: new           #18                 // class java/io/IOException\n+       294: new           #62                 // class java/io/IOException\n        297: dup\n-       298: new           #19                 // class java/lang/StringBuilder\n+       298: new           #64                 // class java/lang/StringBuilder\n        301: dup\n-       302: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       305: ldc           #37                 // String Invalid entry trailer. not read the content? Occurred at byte:\n-       307: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       302: invokespecial #66                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       305: ldc           #116                // String Invalid entry trailer. not read the content? Occurred at byte:\n+       307: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        310: aload_0\n-       311: invokevirtual #23                 // Method getBytesRead:()J\n-       314: invokevirtual #24                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-       317: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       320: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       311: invokevirtual #73                 // Method getBytesRead:()J\n+       314: invokevirtual #76                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+       317: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       320: invokespecial #83                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        323: athrow\n        324: aload_0\n        325: aload_0\n-       326: getfield      #11                 // Field offset:J\n-       329: putfield      #5                  // Field entryOffset:J\n+       326: getfield      #37                 // Field offset:J\n+       329: putfield      #11                 // Field entryOffset:J\n        332: aload_0\n-       333: getfield      #6                  // Field metaData:[B\n+       333: getfield      #15                 // Field metaData:[B\n        336: iconst_0\n        337: bipush        16\n-       339: invokestatic  #38                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n-       342: invokevirtual #39                 // Method java/lang/String.trim:()Ljava/lang/String;\n+       339: invokestatic  #118                // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n+       342: invokevirtual #121                // Method java/lang/String.trim:()Ljava/lang/String;\n        345: astore_1\n        346: aload_1\n-       347: invokestatic  #40                 // Method isGNUStringTable:(Ljava/lang/String;)Z\n+       347: invokestatic  #126                // Method isGNUStringTable:(Ljava/lang/String;)Z\n        350: ifeq          374\n        353: aload_0\n        354: aload_0\n        355: aload_0\n-       356: getfield      #6                  // Field metaData:[B\n+       356: getfield      #15                 // Field metaData:[B\n        359: bipush        48\n        361: bipush        10\n-       363: invokespecial #41                 // Method readGNUStringTable:([BII)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-       366: putfield      #9                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+       363: invokespecial #130                // Method readGNUStringTable:([BII)Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+       366: putfield      #27                 // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n        369: aload_0\n-       370: invokevirtual #42                 // Method getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+       370: invokevirtual #134                // Method getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n        373: areturn\n        374: aload_0\n        375: aload_0\n-       376: getfield      #6                  // Field metaData:[B\n+       376: getfield      #15                 // Field metaData:[B\n        379: bipush        48\n        381: bipush        10\n-       383: invokespecial #43                 // Method asLong:([BII)J\n+       383: invokespecial #138                // Method asLong:([BII)J\n        386: lstore_2\n        387: aload_1\n-       388: ldc           #44                 // String /\n-       390: invokevirtual #45                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+       388: ldc           #142                // String /\n+       390: invokevirtual #144                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n        393: ifeq          411\n        396: aload_1\n        397: iconst_0\n        398: aload_1\n-       399: invokevirtual #46                 // Method java/lang/String.length:()I\n+       399: invokevirtual #147                // Method java/lang/String.length:()I\n        402: iconst_1\n        403: isub\n-       404: invokevirtual #47                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       404: invokevirtual #150                // Method java/lang/String.substring:(II)Ljava/lang/String;\n        407: astore_1\n        408: goto          476\n        411: aload_0\n        412: aload_1\n-       413: invokespecial #48                 // Method isGNULongName:(Ljava/lang/String;)Z\n+       413: invokespecial #154                // Method isGNULongName:(Ljava/lang/String;)Z\n        416: ifeq          439\n        419: aload_1\n        420: iconst_1\n-       421: invokevirtual #49                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       424: invokestatic  #50                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+       421: invokevirtual #157                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       424: invokestatic  #160                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n        427: istore        4\n        429: aload_0\n        430: iload         4\n-       432: invokespecial #51                 // Method getExtendedName:(I)Ljava/lang/String;\n+       432: invokespecial #166                // Method getExtendedName:(I)Ljava/lang/String;\n        435: astore_1\n        436: goto          476\n        439: aload_1\n-       440: invokestatic  #52                 // Method isBSDLongName:(Ljava/lang/String;)Z\n+       440: invokestatic  #169                // Method isBSDLongName:(Ljava/lang/String;)Z\n        443: ifeq          476\n        446: aload_0\n        447: aload_1\n-       448: invokespecial #53                 // Method getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n+       448: invokespecial #172                // Method getBSDLongName:(Ljava/lang/String;)Ljava/lang/String;\n        451: astore_1\n        452: aload_1\n-       453: invokevirtual #46                 // Method java/lang/String.length:()I\n+       453: invokevirtual #147                // Method java/lang/String.length:()I\n        456: istore        4\n        458: lload_2\n        459: iload         4\n        461: i2l\n        462: lsub\n        463: lstore_2\n        464: aload_0\n        465: dup\n-       466: getfield      #5                  // Field entryOffset:J\n+       466: getfield      #11                 // Field entryOffset:J\n        469: iload         4\n        471: i2l\n        472: ladd\n-       473: putfield      #5                  // Field entryOffset:J\n+       473: putfield      #11                 // Field entryOffset:J\n        476: lload_2\n        477: lconst_0\n        478: lcmp\n        479: ifge          492\n-       482: new           #18                 // class java/io/IOException\n+       482: new           #62                 // class java/io/IOException\n        485: dup\n-       486: ldc           #54                 // String broken archive, entry with negative size\n-       488: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       486: ldc           #176                // String broken archive, entry with negative size\n+       488: invokespecial #83                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        491: athrow\n        492: aload_0\n-       493: new           #14                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+       493: new           #32                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n        496: dup\n        497: aload_1\n        498: lload_2\n        499: aload_0\n        500: aload_0\n-       501: getfield      #6                  // Field metaData:[B\n+       501: getfield      #15                 // Field metaData:[B\n        504: bipush        28\n        506: bipush        6\n        508: iconst_1\n-       509: invokespecial #55                 // Method asInt:([BIIZ)I\n+       509: invokespecial #178                // Method asInt:([BIIZ)I\n        512: aload_0\n        513: aload_0\n-       514: getfield      #6                  // Field metaData:[B\n+       514: getfield      #15                 // Field metaData:[B\n        517: bipush        34\n        519: bipush        6\n        521: iconst_1\n-       522: invokespecial #55                 // Method asInt:([BIIZ)I\n+       522: invokespecial #178                // Method asInt:([BIIZ)I\n        525: aload_0\n        526: aload_0\n-       527: getfield      #6                  // Field metaData:[B\n+       527: getfield      #15                 // Field metaData:[B\n        530: bipush        40\n        532: bipush        8\n        534: bipush        8\n-       536: invokespecial #56                 // Method asInt:([BIII)I\n+       536: invokespecial #182                // Method asInt:([BIII)I\n        539: aload_0\n        540: aload_0\n-       541: getfield      #6                  // Field metaData:[B\n+       541: getfield      #15                 // Field metaData:[B\n        544: bipush        16\n        546: bipush        12\n-       548: invokespecial #43                 // Method asLong:([BII)J\n-       551: invokespecial #57                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n-       554: putfield      #9                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+       548: invokespecial #138                // Method asLong:([BII)J\n+       551: invokespecial #185                // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n+       554: putfield      #27                 // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n        557: aload_0\n-       558: getfield      #9                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+       558: getfield      #27                 // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n        561: areturn\n       LineNumberTable:\n         line 95: 0\n         line 96: 7\n         line 97: 20\n         line 98: 34\n         line 99: 39\n@@ -886,69 +886,69 @@\n \n   private java.lang.String getExtendedName(int) throws java.io.IOException;\n     descriptor: (I)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #58                 // Field namebuffer:[B\n+         1: getfield      #188                // Field namebuffer:[B\n          4: ifnonnull     17\n-         7: new           #18                 // class java/io/IOException\n+         7: new           #62                 // class java/io/IOException\n         10: dup\n-        11: ldc           #59                 // String Cannot process GNU long filename as no // record was found\n-        13: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #191                // String Cannot process GNU long filename as no // record was found\n+        13: invokespecial #83                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: iload_1\n         18: istore_2\n         19: iload_2\n         20: aload_0\n-        21: getfield      #58                 // Field namebuffer:[B\n+        21: getfield      #188                // Field namebuffer:[B\n         24: arraylength\n         25: if_icmpge     82\n         28: aload_0\n-        29: getfield      #58                 // Field namebuffer:[B\n+        29: getfield      #188                // Field namebuffer:[B\n         32: iload_2\n         33: baload\n         34: bipush        10\n         36: if_icmpeq     48\n         39: aload_0\n-        40: getfield      #58                 // Field namebuffer:[B\n+        40: getfield      #188                // Field namebuffer:[B\n         43: iload_2\n         44: baload\n         45: ifne          76\n         48: aload_0\n-        49: getfield      #58                 // Field namebuffer:[B\n+        49: getfield      #188                // Field namebuffer:[B\n         52: iload_2\n         53: iconst_1\n         54: isub\n         55: baload\n         56: bipush        47\n         58: if_icmpne     64\n         61: iinc          2, -1\n         64: aload_0\n-        65: getfield      #58                 // Field namebuffer:[B\n+        65: getfield      #188                // Field namebuffer:[B\n         68: iload_1\n         69: iload_2\n         70: iload_1\n         71: isub\n-        72: invokestatic  #38                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n+        72: invokestatic  #118                // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n         75: areturn\n         76: iinc          2, 1\n         79: goto          19\n-        82: new           #18                 // class java/io/IOException\n+        82: new           #62                 // class java/io/IOException\n         85: dup\n-        86: new           #19                 // class java/lang/StringBuilder\n+        86: new           #64                 // class java/lang/StringBuilder\n         89: dup\n-        90: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        93: ldc           #60                 // String Failed to read entry:\n-        95: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        90: invokespecial #66                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        93: ldc           #193                // String Failed to read entry:\n+        95: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         98: iload_1\n-        99: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       102: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       105: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        99: invokevirtual #195                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       102: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       105: invokespecial #83                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        108: athrow\n       LineNumberTable:\n         line 194: 0\n         line 195: 7\n         line 197: 17\n         line 198: 28\n         line 199: 48\n@@ -978,17 +978,17 @@\n     descriptor: ([BII)J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_1\n          1: iload_2\n          2: iload_3\n-         3: invokestatic  #38                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n-         6: invokevirtual #39                 // Method java/lang/String.trim:()Ljava/lang/String;\n-         9: invokestatic  #62                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n+         3: invokestatic  #118                // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n+         6: invokevirtual #121                // Method java/lang/String.trim:()Ljava/lang/String;\n+         9: invokestatic  #198                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n         12: lreturn\n       LineNumberTable:\n         line 209: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n             0      13     1 byteArray   [B\n@@ -1002,15 +1002,15 @@\n       stack=6, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n          4: bipush        10\n          6: iconst_0\n-         7: invokespecial #63                 // Method asInt:([BIIIZ)I\n+         7: invokespecial #204                // Method asInt:([BIIIZ)I\n         10: ireturn\n       LineNumberTable:\n         line 213: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n             0      11     1 byteArray   [B\n@@ -1024,15 +1024,15 @@\n       stack=6, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n          4: bipush        10\n          6: iload         4\n-         8: invokespecial #63                 // Method asInt:([BIIIZ)I\n+         8: invokespecial #204                // Method asInt:([BIIIZ)I\n         11: ireturn\n       LineNumberTable:\n         line 217: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n             0      12     1 byteArray   [B\n@@ -1047,15 +1047,15 @@\n       stack=6, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n          4: iload         4\n          6: iconst_0\n-         7: invokespecial #63                 // Method asInt:([BIIIZ)I\n+         7: invokespecial #204                // Method asInt:([BIIIZ)I\n         10: ireturn\n       LineNumberTable:\n         line 221: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n             0      11     1 byteArray   [B\n@@ -1067,27 +1067,27 @@\n     descriptor: ([BIIIZ)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=7, args_size=6\n          0: aload_1\n          1: iload_2\n          2: iload_3\n-         3: invokestatic  #38                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n-         6: invokevirtual #39                 // Method java/lang/String.trim:()Ljava/lang/String;\n+         3: invokestatic  #118                // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([BII)Ljava/lang/String;\n+         6: invokevirtual #121                // Method java/lang/String.trim:()Ljava/lang/String;\n          9: astore        6\n         11: aload         6\n-        13: invokevirtual #64                 // Method java/lang/String.isEmpty:()Z\n+        13: invokevirtual #207                // Method java/lang/String.isEmpty:()Z\n         16: ifeq          26\n         19: iload         5\n         21: ifeq          26\n         24: iconst_0\n         25: ireturn\n         26: aload         6\n         28: iload         4\n-        30: invokestatic  #65                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+        30: invokestatic  #211                // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n         33: ireturn\n       LineNumberTable:\n         line 225: 0\n         line 226: 11\n         line 227: 24\n         line 229: 26\n       LocalVariableTable:\n@@ -1106,15 +1106,15 @@\n \n   public org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #42                 // Method getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+         1: invokevirtual #134                // Method getNextArEntry:()Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 240: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n     Exceptions:\n@@ -1122,25 +1122,25 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field closed:Z\n+         1: getfield      #23                 // Field closed:Z\n          4: ifne          19\n          7: aload_0\n          8: iconst_1\n-         9: putfield      #8                  // Field closed:Z\n+         9: putfield      #23                 // Field closed:Z\n         12: aload_0\n-        13: getfield      #7                  // Field input:Ljava/io/InputStream;\n-        16: invokevirtual #66                 // Method java/io/InputStream.close:()V\n+        13: getfield      #19                 // Field input:Ljava/io/InputStream;\n+        16: invokevirtual #214                // Method java/io/InputStream.close:()V\n         19: aload_0\n         20: aconst_null\n-        21: putfield      #9                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+        21: putfield      #27                 // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n         24: return\n       LineNumberTable:\n         line 250: 0\n         line 251: 7\n         line 252: 12\n         line 254: 19\n         line 255: 24\n@@ -1158,57 +1158,57 @@\n     Code:\n       stack=6, locals=8, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #9                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+         7: getfield      #27                 // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n         10: ifnonnull     23\n-        13: new           #67                 // class java/lang/IllegalStateException\n+        13: new           #217                // class java/lang/IllegalStateException\n         16: dup\n-        17: ldc           #68                 // String No current ar entry\n-        19: invokespecial #69                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        17: ldc           #219                // String No current ar entry\n+        19: invokespecial #221                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         22: athrow\n         23: aload_0\n-        24: getfield      #5                  // Field entryOffset:J\n+        24: getfield      #11                 // Field entryOffset:J\n         27: aload_0\n-        28: getfield      #9                  // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n-        31: invokevirtual #10                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n+        28: getfield      #27                 // Field currentEntry:Lorg/apache/commons/compress/archivers/ar/ArArchiveEntry;\n+        31: invokevirtual #31                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n         34: ladd\n         35: lstore        4\n         37: iload_3\n         38: iflt          51\n         41: aload_0\n-        42: getfield      #11                 // Field offset:J\n+        42: getfield      #37                 // Field offset:J\n         45: lload         4\n         47: lcmp\n         48: iflt          53\n         51: iconst_m1\n         52: ireturn\n         53: iload_3\n         54: i2l\n         55: lload         4\n         57: aload_0\n-        58: getfield      #11                 // Field offset:J\n+        58: getfield      #37                 // Field offset:J\n         61: lsub\n-        62: invokestatic  #70                 // Method java/lang/Math.min:(JJ)J\n+        62: invokestatic  #222                // Method java/lang/Math.min:(JJ)J\n         65: l2i\n         66: istore        6\n         68: aload_0\n-        69: getfield      #7                  // Field input:Ljava/io/InputStream;\n+        69: getfield      #19                 // Field input:Ljava/io/InputStream;\n         72: aload_1\n         73: iload_2\n         74: iload         6\n-        76: invokevirtual #71                 // Method java/io/InputStream.read:([BII)I\n+        76: invokevirtual #228                // Method java/io/InputStream.read:([BII)I\n         79: istore        7\n         81: aload_0\n         82: iload         7\n         84: i2l\n-        85: invokespecial #13                 // Method trackReadBytes:(J)V\n+        85: invokespecial #46                 // Method trackReadBytes:(J)V\n         88: iload         7\n         90: ireturn\n       LineNumberTable:\n         line 264: 0\n         line 265: 4\n         line 267: 6\n         line 268: 13\n@@ -1306,16 +1306,16 @@\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        17\n          4: aload_0\n-         5: ldc           #72                 // String ^#1/\\\\d+\n-         7: invokevirtual #73                 // Method java/lang/String.matches:(Ljava/lang/String;)Z\n+         5: ldc           #231                // String ^#1/\\\\d+\n+         7: invokevirtual #233                // Method java/lang/String.matches:(Ljava/lang/String;)Z\n         10: ifeq          17\n         13: iconst_1\n         14: goto          18\n         17: iconst_0\n         18: ireturn\n       LineNumberTable:\n         line 329: 0\n@@ -1329,39 +1329,39 @@\n \n   private java.lang.String getBSDLongName(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_1\n-         1: getstatic     #74                 // Field BSD_LONGNAME_PREFIX_LEN:I\n-         4: invokevirtual #49                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-         7: invokestatic  #50                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+         1: getstatic     #236                // Field BSD_LONGNAME_PREFIX_LEN:I\n+         4: invokevirtual #157                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+         7: invokestatic  #160                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         10: istore_2\n         11: aload_0\n-        12: getfield      #7                  // Field input:Ljava/io/InputStream;\n+        12: getfield      #19                 // Field input:Ljava/io/InputStream;\n         15: iload_2\n-        16: invokestatic  #17                 // Method org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n+        16: invokestatic  #58                 // Method org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n         19: astore_3\n         20: aload_3\n         21: arraylength\n         22: istore        4\n         24: aload_0\n         25: iload         4\n         27: i2l\n-        28: invokespecial #13                 // Method trackReadBytes:(J)V\n+        28: invokespecial #46                 // Method trackReadBytes:(J)V\n         31: iload         4\n         33: iload_2\n         34: if_icmpeq     45\n-        37: new           #75                 // class java/io/EOFException\n+        37: new           #240                // class java/io/EOFException\n         40: dup\n-        41: invokespecial #76                 // Method java/io/EOFException.\"<init>\":()V\n+        41: invokespecial #242                // Method java/io/EOFException.\"<init>\":()V\n         44: athrow\n         45: aload_3\n-        46: invokestatic  #29                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n+        46: invokestatic  #94                 // Method org/apache/commons/compress/utils/ArchiveUtils.toAsciiString:([B)Ljava/lang/String;\n         49: areturn\n       LineNumberTable:\n         line 341: 0\n         line 342: 4\n         line 343: 11\n         line 344: 20\n         line 345: 24\n@@ -1383,42 +1383,42 @@\n       throws java.io.IOException\n \n   private static boolean isGNUStringTable(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #77                 // String //\n+         0: ldc           #243                // String //\n          2: aload_0\n-         3: invokevirtual #78                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+         3: invokevirtual #245                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n          6: ireturn\n       LineNumberTable:\n         line 372: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  name   Ljava/lang/String;\n \n   private void trackReadBytes(long);\n     descriptor: (J)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: invokevirtual #79                 // Method count:(J)V\n+         2: invokevirtual #248                // Method count:(J)V\n          5: lload_1\n          6: lconst_0\n          7: lcmp\n          8: ifle          21\n         11: aload_0\n         12: dup\n-        13: getfield      #11                 // Field offset:J\n+        13: getfield      #37                 // Field offset:J\n         16: lload_1\n         17: ladd\n-        18: putfield      #11                 // Field offset:J\n+        18: putfield      #37                 // Field offset:J\n         21: return\n       LineNumberTable:\n         line 376: 0\n         line 377: 5\n         line 378: 11\n         line 380: 21\n       LocalVariableTable:\n@@ -1433,55 +1433,55 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=6, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #80                 // Method asInt:([BII)I\n+         4: invokespecial #251                // Method asInt:([BII)I\n          7: istore        4\n          9: aload_0\n         10: aload_0\n-        11: getfield      #7                  // Field input:Ljava/io/InputStream;\n+        11: getfield      #19                 // Field input:Ljava/io/InputStream;\n         14: iload         4\n-        16: invokestatic  #17                 // Method org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n-        19: putfield      #58                 // Field namebuffer:[B\n+        16: invokestatic  #58                 // Method org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n+        19: putfield      #188                // Field namebuffer:[B\n         22: aload_0\n-        23: getfield      #58                 // Field namebuffer:[B\n+        23: getfield      #188                // Field namebuffer:[B\n         26: arraylength\n         27: istore        5\n         29: aload_0\n         30: iload         5\n         32: i2l\n-        33: invokespecial #13                 // Method trackReadBytes:(J)V\n+        33: invokespecial #46                 // Method trackReadBytes:(J)V\n         36: iload         5\n         38: iload         4\n         40: if_icmpeq     81\n-        43: new           #18                 // class java/io/IOException\n+        43: new           #62                 // class java/io/IOException\n         46: dup\n-        47: new           #19                 // class java/lang/StringBuilder\n+        47: new           #64                 // class java/lang/StringBuilder\n         50: dup\n-        51: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        54: ldc           #81                 // String Failed to read complete // record: expected=\n-        56: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: invokespecial #66                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        54: ldc           #253                // String Failed to read complete // record: expected=\n+        56: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         59: iload         4\n-        61: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        64: ldc           #82                 // String  read=\n-        66: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        61: invokevirtual #195                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        64: ldc           #255                // String  read=\n+        66: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         69: iload         5\n-        71: invokevirtual #61                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        74: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        77: invokespecial #26                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        71: invokevirtual #195                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        74: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        77: invokespecial #83                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         80: athrow\n-        81: new           #14                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+        81: new           #32                 // class org/apache/commons/compress/archivers/ar/ArArchiveEntry\n         84: dup\n-        85: ldc           #77                 // String //\n+        85: ldc           #243                // String //\n         87: iload         4\n         89: i2l\n-        90: invokespecial #83                 // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;J)V\n+        90: invokespecial #257                // Method org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;J)V\n         93: areturn\n       LineNumberTable:\n         line 388: 0\n         line 389: 9\n         line 390: 22\n         line 391: 29\n         line 392: 36\n@@ -1504,42 +1504,42 @@\n \n   private boolean isGNULongName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: ifnull        17\n+         1: ifnull        18\n          4: aload_1\n-         5: ldc           #84                 // String ^/\\\\d+\n-         7: invokevirtual #73                 // Method java/lang/String.matches:(Ljava/lang/String;)Z\n-        10: ifeq          17\n-        13: iconst_1\n-        14: goto          18\n-        17: iconst_0\n-        18: ireturn\n+         5: ldc_w         #260                // String ^/\\\\d+\n+         8: invokevirtual #233                // Method java/lang/String.matches:(Ljava/lang/String;)Z\n+        11: ifeq          18\n+        14: iconst_1\n+        15: goto          19\n+        18: iconst_0\n+        19: ireturn\n       LineNumberTable:\n         line 408: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      19     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n-            0      19     1  name   Ljava/lang/String;\n+            0      20     0  this   Lorg/apache/commons/compress/archivers/ar/ArArchiveInputStream;\n+            0      20     1  name   Ljava/lang/String;\n       StackMapTable: number_of_entries = 2\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #85                 // String #1/\n-         2: invokevirtual #46                 // Method java/lang/String.length:()I\n-         5: putstatic     #74                 // Field BSD_LONGNAME_PREFIX_LEN:I\n-         8: return\n+         0: ldc_w         #262                // String #1/\n+         3: invokevirtual #147                // Method java/lang/String.length:()I\n+         6: putstatic     #236                // Field BSD_LONGNAME_PREFIX_LEN:I\n+         9: return\n       LineNumberTable:\n         line 301: 0\n-        line 302: 2\n-        line 301: 8\n+        line 302: 3\n+        line 301: 9\n }\n SourceFile: \"ArArchiveInputStream.java\"\n"}]}
