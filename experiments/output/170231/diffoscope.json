{"diffoscope-json-version": 1, "source1": "first/AbstractFloatingPointBitsFromCharSequence.class", "source2": "second/AbstractFloatingPointBitsFromCharSequence.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,43 +1,43 @@\n-  SHA-256 checksum 49a05c72eea6f96e71a22868a47ed5d416bff73efb4a15925209d59c1fffb7b0\n+  SHA-256 checksum a27171c68ef352702060ca406424b4940b566d3505c1b6e8cd023d3b1b8dfab5\n   Compiled from \"AbstractFloatingPointBitsFromCharSequence.java\"\n abstract class com.fasterxml.jackson.core.io.doubleparser.AbstractFloatingPointBitsFromCharSequence extends com.fasterxml.jackson.core.io.doubleparser.AbstractFloatValueParser\n   minor version: 0\n   major version: 52\n   flags: (0x0420) ACC_SUPER, ACC_ABSTRACT\n   this_class: #31                         // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n   super_class: #11                        // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n   interfaces: 0, fields: 0, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Methodref          #11.#99       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.\"<init>\":()V\n-    #2 = InterfaceMethodref #100.#101     // java/lang/CharSequence.charAt:(I)C\n-    #3 = Methodref          #31.#102      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.isDigit:(C)Z\n+    #1 = Methodref          #11.#98       // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.\"<init>\":()V\n+    #2 = InterfaceMethodref #70.#99       // java/lang/CharSequence.charAt:(I)C\n+    #3 = Methodref          #31.#100      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.isDigit:(C)Z\n     #4 = Long               10l\n     #6 = Long               48l\n-    #8 = Methodref          #31.#103      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.tryToParseEightDigits:(Ljava/lang/CharSequence;I)I\n+    #8 = Methodref          #31.#101      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.tryToParseEightDigits:(Ljava/lang/CharSequence;I)I\n     #9 = Long               100000000l\n-   #11 = Class              #104          // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n-   #12 = Methodref          #31.#105      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.skipWhitespace:(Ljava/lang/CharSequence;II)I\n+   #11 = Class              #102          // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n+   #12 = Methodref          #31.#103      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.skipWhitespace:(Ljava/lang/CharSequence;II)I\n    #13 = Long               -1l\n    #15 = Long               1000000000000000000l\n-   #17 = Methodref          #106.#107     // java/lang/Long.compareUnsigned:(JJ)I\n-   #18 = Methodref          #31.#108      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.valueOfFloatLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n-   #19 = InterfaceMethodref #100.#109     // java/lang/CharSequence.length:()I\n-   #20 = Methodref          #31.#110      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseNaN:(Ljava/lang/CharSequence;II)J\n-   #21 = Methodref          #31.#111      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseInfinity:(Ljava/lang/CharSequence;IIZ)J\n-   #22 = Methodref          #31.#112      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseHexFloatLiteral:(Ljava/lang/CharSequence;IIIZ)J\n-   #23 = Methodref          #31.#113      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseDecFloatLiteral:(Ljava/lang/CharSequence;IIIZZ)J\n-   #24 = Fieldref           #11.#114      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.CHAR_TO_HEX_MAP:[B\n-   #25 = Methodref          #115.#116     // java/lang/Math.min:(II)I\n-   #26 = Methodref          #31.#117      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.valueOfHexLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n-   #27 = Methodref          #31.#118      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.negativeInfinity:()J\n-   #28 = Methodref          #31.#119      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.positiveInfinity:()J\n-   #29 = Methodref          #31.#120      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.nan:()J\n-   #30 = Methodref          #121.#122     // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf16:(JJ)I\n-   #31 = Class              #123          // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n+   #17 = Methodref          #104.#105     // java/lang/Long.compareUnsigned:(JJ)I\n+   #18 = Methodref          #31.#106      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.valueOfFloatLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n+   #19 = InterfaceMethodref #70.#107      // java/lang/CharSequence.length:()I\n+   #20 = Methodref          #31.#108      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseNaN:(Ljava/lang/CharSequence;II)J\n+   #21 = Methodref          #31.#109      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseInfinity:(Ljava/lang/CharSequence;IIZ)J\n+   #22 = Methodref          #31.#110      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseHexFloatLiteral:(Ljava/lang/CharSequence;IIIZ)J\n+   #23 = Methodref          #31.#111      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.parseDecFloatLiteral:(Ljava/lang/CharSequence;IIIZZ)J\n+   #24 = Fieldref           #11.#112      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser.CHAR_TO_HEX_MAP:[B\n+   #25 = Methodref          #113.#114     // java/lang/Math.min:(II)I\n+   #26 = Methodref          #31.#115      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.valueOfHexLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n+   #27 = Methodref          #31.#116      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.negativeInfinity:()J\n+   #28 = Methodref          #31.#117      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.positiveInfinity:()J\n+   #29 = Methodref          #31.#118      // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence.nan:()J\n+   #30 = Methodref          #119.#120     // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf16:(JJ)I\n+   #31 = Class              #121          // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n    #32 = Utf8               <init>\n    #33 = Utf8               ()V\n    #34 = Utf8               Code\n    #35 = Utf8               LineNumberTable\n    #36 = Utf8               LocalVariableTable\n    #37 = Utf8               this\n    #38 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence;\n@@ -68,82 +68,80 @@\n    #63 = Utf8               significandStartIndex\n    #64 = Utf8               virtualIndexOfPoint\n    #65 = Utf8               illegal\n    #66 = Utf8               ch\n    #67 = Utf8               significandEndIndex\n    #68 = Utf8               expNumber\n    #69 = Utf8               skipCountInTruncatedDigits\n-   #70 = Class              #123          // com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n-   #71 = Class              #124          // java/lang/CharSequence\n-   #72 = Utf8               parseFloatingPointLiteral\n-   #73 = Utf8               (Ljava/lang/CharSequence;II)J\n-   #74 = Utf8               offset\n-   #75 = Utf8               length\n-   #76 = Utf8               parseHexFloatLiteral\n-   #77 = Utf8               (Ljava/lang/CharSequence;IIIZ)J\n-   #78 = Utf8               hexValue\n-   #79 = Utf8               hasExponent\n-   #80 = Utf8               parseInfinity\n-   #81 = Utf8               (Ljava/lang/CharSequence;IIZ)J\n-   #82 = Utf8               negative\n-   #83 = Utf8               parseNaN\n-   #84 = Utf8               skipWhitespace\n-   #85 = Utf8               (Ljava/lang/CharSequence;II)I\n-   #86 = Utf8               tryToParseEightDigits\n-   #87 = Utf8               (Ljava/lang/CharSequence;I)I\n-   #88 = Utf8               first\n-   #89 = Utf8               second\n-   #90 = Utf8               nan\n-   #91 = Utf8               ()J\n-   #92 = Utf8               negativeInfinity\n-   #93 = Utf8               positiveInfinity\n-   #94 = Utf8               valueOfFloatLiteral\n-   #95 = Utf8               (Ljava/lang/CharSequence;IIZJIZI)J\n-   #96 = Utf8               valueOfHexLiteral\n-   #97 = Utf8               SourceFile\n-   #98 = Utf8               AbstractFloatingPointBitsFromCharSequence.java\n-   #99 = NameAndType        #32:#33       // \"<init>\":()V\n-  #100 = Class              #124          // java/lang/CharSequence\n-  #101 = NameAndType        #125:#126     // charAt:(I)C\n-  #102 = NameAndType        #39:#40       // isDigit:(C)Z\n-  #103 = NameAndType        #86:#87       // tryToParseEightDigits:(Ljava/lang/CharSequence;I)I\n-  #104 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n-  #105 = NameAndType        #84:#85       // skipWhitespace:(Ljava/lang/CharSequence;II)I\n-  #106 = Class              #127          // java/lang/Long\n-  #107 = NameAndType        #128:#129     // compareUnsigned:(JJ)I\n-  #108 = NameAndType        #94:#95       // valueOfFloatLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n-  #109 = NameAndType        #75:#130      // length:()I\n-  #110 = NameAndType        #83:#73       // parseNaN:(Ljava/lang/CharSequence;II)J\n-  #111 = NameAndType        #80:#81       // parseInfinity:(Ljava/lang/CharSequence;IIZ)J\n-  #112 = NameAndType        #76:#77       // parseHexFloatLiteral:(Ljava/lang/CharSequence;IIIZ)J\n-  #113 = NameAndType        #44:#45       // parseDecFloatLiteral:(Ljava/lang/CharSequence;IIIZZ)J\n-  #114 = NameAndType        #131:#132     // CHAR_TO_HEX_MAP:[B\n-  #115 = Class              #133          // java/lang/Math\n-  #116 = NameAndType        #134:#135     // min:(II)I\n-  #117 = NameAndType        #96:#95       // valueOfHexLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n-  #118 = NameAndType        #92:#91       // negativeInfinity:()J\n-  #119 = NameAndType        #93:#91       // positiveInfinity:()J\n-  #120 = NameAndType        #90:#91       // nan:()J\n-  #121 = Class              #136          // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n-  #122 = NameAndType        #137:#129     // tryToParseEightDigitsUtf16:(JJ)I\n-  #123 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n-  #124 = Utf8               java/lang/CharSequence\n-  #125 = Utf8               charAt\n-  #126 = Utf8               (I)C\n-  #127 = Utf8               java/lang/Long\n-  #128 = Utf8               compareUnsigned\n-  #129 = Utf8               (JJ)I\n-  #130 = Utf8               ()I\n-  #131 = Utf8               CHAR_TO_HEX_MAP\n-  #132 = Utf8               [B\n-  #133 = Utf8               java/lang/Math\n-  #134 = Utf8               min\n-  #135 = Utf8               (II)I\n-  #136 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n-  #137 = Utf8               tryToParseEightDigitsUtf16\n+   #70 = Class              #122          // java/lang/CharSequence\n+   #71 = Utf8               parseFloatingPointLiteral\n+   #72 = Utf8               (Ljava/lang/CharSequence;II)J\n+   #73 = Utf8               offset\n+   #74 = Utf8               length\n+   #75 = Utf8               parseHexFloatLiteral\n+   #76 = Utf8               (Ljava/lang/CharSequence;IIIZ)J\n+   #77 = Utf8               hexValue\n+   #78 = Utf8               hasExponent\n+   #79 = Utf8               parseInfinity\n+   #80 = Utf8               (Ljava/lang/CharSequence;IIZ)J\n+   #81 = Utf8               negative\n+   #82 = Utf8               parseNaN\n+   #83 = Utf8               skipWhitespace\n+   #84 = Utf8               (Ljava/lang/CharSequence;II)I\n+   #85 = Utf8               tryToParseEightDigits\n+   #86 = Utf8               (Ljava/lang/CharSequence;I)I\n+   #87 = Utf8               first\n+   #88 = Utf8               second\n+   #89 = Utf8               nan\n+   #90 = Utf8               ()J\n+   #91 = Utf8               negativeInfinity\n+   #92 = Utf8               positiveInfinity\n+   #93 = Utf8               valueOfFloatLiteral\n+   #94 = Utf8               (Ljava/lang/CharSequence;IIZJIZI)J\n+   #95 = Utf8               valueOfHexLiteral\n+   #96 = Utf8               SourceFile\n+   #97 = Utf8               AbstractFloatingPointBitsFromCharSequence.java\n+   #98 = NameAndType        #32:#33       // \"<init>\":()V\n+   #99 = NameAndType        #123:#124     // charAt:(I)C\n+  #100 = NameAndType        #39:#40       // isDigit:(C)Z\n+  #101 = NameAndType        #85:#86       // tryToParseEightDigits:(Ljava/lang/CharSequence;I)I\n+  #102 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatValueParser\n+  #103 = NameAndType        #83:#84       // skipWhitespace:(Ljava/lang/CharSequence;II)I\n+  #104 = Class              #125          // java/lang/Long\n+  #105 = NameAndType        #126:#127     // compareUnsigned:(JJ)I\n+  #106 = NameAndType        #93:#94       // valueOfFloatLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n+  #107 = NameAndType        #74:#128      // length:()I\n+  #108 = NameAndType        #82:#72       // parseNaN:(Ljava/lang/CharSequence;II)J\n+  #109 = NameAndType        #79:#80       // parseInfinity:(Ljava/lang/CharSequence;IIZ)J\n+  #110 = NameAndType        #75:#76       // parseHexFloatLiteral:(Ljava/lang/CharSequence;IIIZ)J\n+  #111 = NameAndType        #44:#45       // parseDecFloatLiteral:(Ljava/lang/CharSequence;IIIZZ)J\n+  #112 = NameAndType        #129:#130     // CHAR_TO_HEX_MAP:[B\n+  #113 = Class              #131          // java/lang/Math\n+  #114 = NameAndType        #132:#133     // min:(II)I\n+  #115 = NameAndType        #95:#94       // valueOfHexLiteral:(Ljava/lang/CharSequence;IIZJIZI)J\n+  #116 = NameAndType        #91:#90       // negativeInfinity:()J\n+  #117 = NameAndType        #92:#90       // positiveInfinity:()J\n+  #118 = NameAndType        #89:#90       // nan:()J\n+  #119 = Class              #134          // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n+  #120 = NameAndType        #135:#127     // tryToParseEightDigitsUtf16:(JJ)I\n+  #121 = Utf8               com/fasterxml/jackson/core/io/doubleparser/AbstractFloatingPointBitsFromCharSequence\n+  #122 = Utf8               java/lang/CharSequence\n+  #123 = Utf8               charAt\n+  #124 = Utf8               (I)C\n+  #125 = Utf8               java/lang/Long\n+  #126 = Utf8               compareUnsigned\n+  #127 = Utf8               (JJ)I\n+  #128 = Utf8               ()I\n+  #129 = Utf8               CHAR_TO_HEX_MAP\n+  #130 = Utf8               [B\n+  #131 = Utf8               java/lang/Math\n+  #132 = Utf8               min\n+  #133 = Utf8               (II)I\n+  #134 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n+  #135 = Utf8               tryToParseEightDigitsUtf16\n {\n   com.fasterxml.jackson.core.io.doubleparser.AbstractFloatingPointBitsFromCharSequence();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -760,16 +758,16 @@\n         line 193: 55\n         line 194: 69\n         line 195: 81\n         line 196: 105\n         line 197: 110\n         line 203: 114\n         line 204: 121\n-        line 205: 134\n-        line 206: 148\n+        line 205: 128\n+        line 206: 140\n         line 204: 151\n         line 211: 152\n         line 212: 166\n         line 213: 171\n         line 214: 195\n         line 215: 209\n         line 219: 224\n"}]}
