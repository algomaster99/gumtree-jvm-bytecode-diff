{"diffoscope-json-version": 1, "source1": "first/CpioArchiveInputStream.class", "source2": "second/CpioArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -80,65 +80,50 @@\n     \n     public CpioArchiveEntry getNextCPIOEntry() throws IOException {\n         this.ensureOpen();\n         if (this.entry != null) {\n             this.closeEntry();\n         }\n         this.readFully(this.twoBytesBuf, 0, this.twoBytesBuf.length);\n-        if (CpioUtil.byteArray2long(this.twoBytesBuf, false) == 29127L) {\n-            this.entry = this.readOldBinaryEntry(false);\n-        }\n-        else if (CpioUtil.byteArray2long(this.twoBytesBuf, true) == 29127L) {\n-            this.entry = this.readOldBinaryEntry(true);\n-        }\n-        else {\n-            System.arraycopy(this.twoBytesBuf, 0, this.sixBytesBuf, 0, this.twoBytesBuf.length);\n-            this.readFully(this.sixBytesBuf, this.twoBytesBuf.length, this.fourBytesBuf.length);\n-            final String asciiString;\n-            final String magicString = asciiString = ArchiveUtils.toAsciiString(this.sixBytesBuf);\n-            int n = -1;\n-            switch (asciiString.hashCode()) {\n-                case 1426477263: {\n-                    if (asciiString.equals(\"070701\")) {\n-                        n = 0;\n-                        break;\n-                    }\n-                    break;\n-                }\n-                case 1426477264: {\n-                    if (asciiString.equals(\"070702\")) {\n-                        n = 1;\n-                        break;\n-                    }\n-                    break;\n-                }\n-                case 1426477269: {\n-                    if (asciiString.equals(\"070707\")) {\n-                        n = 2;\n-                        break;\n-                    }\n-                    break;\n-                }\n+        Label_0275: {\n+            if (CpioUtil.byteArray2long(this.twoBytesBuf, false) == 29127L) {\n+                this.entry = this.readOldBinaryEntry(false);\n             }\n-            switch (n) {\n-                case 0: {\n-                    this.entry = this.readNewEntry(false);\n-                    break;\n-                }\n-                case 1: {\n-                    this.entry = this.readNewEntry(true);\n-                    break;\n-                }\n-                case 2: {\n-                    this.entry = this.readOldAsciiEntry();\n-                    break;\n-                }\n-                default: {\n+            else {\n+                if (CpioUtil.byteArray2long(this.twoBytesBuf, true) != 29127L) {\n+                    System.arraycopy(this.twoBytesBuf, 0, this.sixBytesBuf, 0, this.twoBytesBuf.length);\n+                    this.readFully(this.sixBytesBuf, this.twoBytesBuf.length, this.fourBytesBuf.length);\n+                    final String magicString = ArchiveUtils.toAsciiString(this.sixBytesBuf);\n+                    final String s;\n+                    switch ((s = magicString).hashCode()) {\n+                        case 1426477263: {\n+                            if (!s.equals(\"070701\")) {\n+                                break;\n+                            }\n+                            this.entry = this.readNewEntry(false);\n+                            break Label_0275;\n+                        }\n+                        case 1426477264: {\n+                            if (!s.equals(\"070702\")) {\n+                                break;\n+                            }\n+                            this.entry = this.readNewEntry(true);\n+                            break Label_0275;\n+                        }\n+                        case 1426477269: {\n+                            if (!s.equals(\"070707\")) {\n+                                break;\n+                            }\n+                            this.entry = this.readOldAsciiEntry();\n+                            break Label_0275;\n+                        }\n+                    }\n                     throw new IOException(\"Unknown magic [\" + magicString + \"]. Occurred at byte: \" + this.getBytesRead());\n                 }\n+                this.entry = this.readOldBinaryEntry(true);\n             }\n         }\n         this.entryBytesRead = 0L;\n         this.entryEOF = false;\n         this.crc = 0L;\n         if (this.entry.getName().equals(\"TRAILER!!!\")) {\n             this.entryEOF = true;\n"}]}
