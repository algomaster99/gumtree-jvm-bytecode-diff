{"diffoscope-json-version": 1, "source1": "first/ChecksumVerifyingInputStream.class", "source2": "second/ChecksumVerifyingInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,95 +1,95 @@\n-  SHA-256 checksum d65ee6260880ba9ba200a61172717eb2609fea99538054b90ae2dfb118d6076d\n+  SHA-256 checksum 00df73067e0c0b2ee50577fa24081acc51d5394bac0bab226a6095e5d82241c6\n   Compiled from \"ChecksumVerifyingInputStream.java\"\n public class org.apache.commons.compress.utils.ChecksumVerifyingInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n-  super_class: #2                         // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 4, methods: 8, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/io/InputStream.\"<init>\":()V\n-   #2 = Class              #4             // java/io/InputStream\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n+   #2 = Utf8               org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n+   #3 = Class              #4             // java/io/InputStream\n    #4 = Utf8               java/io/InputStream\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Fieldref           #8.#9          // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.checksum:Ljava/util/zip/Checksum;\n-   #8 = Class              #10            // org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n-   #9 = NameAndType        #11:#12        // checksum:Ljava/util/zip/Checksum;\n-  #10 = Utf8               org/apache/commons/compress/utils/ChecksumVerifyingInputStream\n-  #11 = Utf8               checksum\n-  #12 = Utf8               Ljava/util/zip/Checksum;\n-  #13 = Fieldref           #8.#14         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.in:Ljava/io/InputStream;\n-  #14 = NameAndType        #15:#16        // in:Ljava/io/InputStream;\n-  #15 = Utf8               in\n-  #16 = Utf8               Ljava/io/InputStream;\n-  #17 = Fieldref           #8.#18         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.expectedChecksum:J\n-  #18 = NameAndType        #19:#20        // expectedChecksum:J\n-  #19 = Utf8               expectedChecksum\n-  #20 = Utf8               J\n-  #21 = Fieldref           #8.#22         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.bytesRemaining:J\n-  #22 = NameAndType        #23:#20        // bytesRemaining:J\n-  #23 = Utf8               bytesRemaining\n-  #24 = Methodref          #2.#25         // java/io/InputStream.close:()V\n-  #25 = NameAndType        #26:#6         // close:()V\n-  #26 = Utf8               close\n-  #27 = Methodref          #2.#28         // java/io/InputStream.read:()I\n-  #28 = NameAndType        #29:#30        // read:()I\n-  #29 = Utf8               read\n-  #30 = Utf8               ()I\n-  #31 = InterfaceMethodref #32.#33        // java/util/zip/Checksum.update:(I)V\n-  #32 = Class              #34            // java/util/zip/Checksum\n-  #33 = NameAndType        #35:#36        // update:(I)V\n-  #34 = Utf8               java/util/zip/Checksum\n-  #35 = Utf8               update\n-  #36 = Utf8               (I)V\n-  #37 = Methodref          #8.#38         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.verify:()V\n-  #38 = NameAndType        #39:#6         // verify:()V\n-  #39 = Utf8               verify\n-  #40 = Methodref          #8.#41         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:([BII)I\n-  #41 = NameAndType        #29:#42        // read:([BII)I\n-  #42 = Utf8               ([BII)I\n-  #43 = Methodref          #2.#41         // java/io/InputStream.read:([BII)I\n-  #44 = InterfaceMethodref #32.#45        // java/util/zip/Checksum.update:([BII)V\n-  #45 = NameAndType        #35:#46        // update:([BII)V\n-  #46 = Utf8               ([BII)V\n-  #47 = Methodref          #8.#28         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:()I\n-  #48 = InterfaceMethodref #32.#49        // java/util/zip/Checksum.getValue:()J\n-  #49 = NameAndType        #50:#51        // getValue:()J\n-  #50 = Utf8               getValue\n-  #51 = Utf8               ()J\n-  #52 = Class              #53            // java/io/IOException\n-  #53 = Utf8               java/io/IOException\n-  #54 = String             #55            // Checksum verification failed\n-  #55 = Utf8               Checksum verification failed\n-  #56 = Methodref          #52.#57        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-  #57 = NameAndType        #5:#58         // \"<init>\":(Ljava/lang/String;)V\n-  #58 = Utf8               (Ljava/lang/String;)V\n-  #59 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;JJ)V\n-  #60 = Utf8               Code\n-  #61 = Utf8               LineNumberTable\n-  #62 = Utf8               LocalVariableTable\n-  #63 = Utf8               this\n-  #64 = Utf8               Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n-  #65 = Utf8               size\n-  #66 = Utf8               Exceptions\n-  #67 = Utf8               getBytesRemaining\n-  #68 = Utf8               ret\n-  #69 = Utf8               I\n-  #70 = Utf8               StackMapTable\n-  #71 = Utf8               ([B)I\n-  #72 = Utf8               b\n-  #73 = Utf8               [B\n-  #74 = Utf8               off\n-  #75 = Utf8               len\n-  #76 = Utf8               skip\n-  #77 = Utf8               (J)J\n-  #78 = Utf8               n\n+   #5 = Utf8               in\n+   #6 = Utf8               Ljava/io/InputStream;\n+   #7 = Utf8               bytesRemaining\n+   #8 = Utf8               J\n+   #9 = Utf8               expectedChecksum\n+  #10 = Utf8               checksum\n+  #11 = Utf8               Ljava/util/zip/Checksum;\n+  #12 = Utf8               <init>\n+  #13 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;JJ)V\n+  #14 = Utf8               Code\n+  #15 = Methodref          #3.#16         // java/io/InputStream.\"<init>\":()V\n+  #16 = NameAndType        #12:#17        // \"<init>\":()V\n+  #17 = Utf8               ()V\n+  #18 = Fieldref           #1.#19         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.checksum:Ljava/util/zip/Checksum;\n+  #19 = NameAndType        #10:#11        // checksum:Ljava/util/zip/Checksum;\n+  #20 = Fieldref           #1.#21         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.in:Ljava/io/InputStream;\n+  #21 = NameAndType        #5:#6          // in:Ljava/io/InputStream;\n+  #22 = Fieldref           #1.#23         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.expectedChecksum:J\n+  #23 = NameAndType        #9:#8          // expectedChecksum:J\n+  #24 = Fieldref           #1.#25         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.bytesRemaining:J\n+  #25 = NameAndType        #7:#8          // bytesRemaining:J\n+  #26 = Utf8               LineNumberTable\n+  #27 = Utf8               LocalVariableTable\n+  #28 = Utf8               this\n+  #29 = Utf8               Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n+  #30 = Utf8               size\n+  #31 = Utf8               close\n+  #32 = Utf8               Exceptions\n+  #33 = Class              #34            // java/io/IOException\n+  #34 = Utf8               java/io/IOException\n+  #35 = Methodref          #3.#36         // java/io/InputStream.close:()V\n+  #36 = NameAndType        #31:#17        // close:()V\n+  #37 = Utf8               getBytesRemaining\n+  #38 = Utf8               ()J\n+  #39 = Utf8               read\n+  #40 = Utf8               ()I\n+  #41 = Methodref          #3.#42         // java/io/InputStream.read:()I\n+  #42 = NameAndType        #39:#40        // read:()I\n+  #43 = InterfaceMethodref #44.#46        // java/util/zip/Checksum.update:(I)V\n+  #44 = Class              #45            // java/util/zip/Checksum\n+  #45 = Utf8               java/util/zip/Checksum\n+  #46 = NameAndType        #47:#48        // update:(I)V\n+  #47 = Utf8               update\n+  #48 = Utf8               (I)V\n+  #49 = Methodref          #1.#50         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.verify:()V\n+  #50 = NameAndType        #51:#17        // verify:()V\n+  #51 = Utf8               verify\n+  #52 = Utf8               ret\n+  #53 = Utf8               I\n+  #54 = Utf8               StackMapTable\n+  #55 = Utf8               ([B)I\n+  #56 = Methodref          #1.#57         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:([BII)I\n+  #57 = NameAndType        #39:#58        // read:([BII)I\n+  #58 = Utf8               ([BII)I\n+  #59 = Utf8               b\n+  #60 = Utf8               [B\n+  #61 = Methodref          #3.#57         // java/io/InputStream.read:([BII)I\n+  #62 = InterfaceMethodref #44.#63        // java/util/zip/Checksum.update:([BII)V\n+  #63 = NameAndType        #47:#64        // update:([BII)V\n+  #64 = Utf8               ([BII)V\n+  #65 = Utf8               off\n+  #66 = Utf8               len\n+  #67 = Utf8               skip\n+  #68 = Utf8               (J)J\n+  #69 = Methodref          #1.#42         // org/apache/commons/compress/utils/ChecksumVerifyingInputStream.read:()I\n+  #70 = Utf8               n\n+  #71 = InterfaceMethodref #44.#72        // java/util/zip/Checksum.getValue:()J\n+  #72 = NameAndType        #73:#38        // getValue:()J\n+  #73 = Utf8               getValue\n+  #74 = String             #75            // Checksum verification failed\n+  #75 = Utf8               Checksum verification failed\n+  #76 = Methodref          #33.#77        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #77 = NameAndType        #12:#78        // \"<init>\":(Ljava/lang/String;)V\n+  #78 = Utf8               (Ljava/lang/String;)V\n   #79 = Utf8               SourceFile\n   #80 = Utf8               ChecksumVerifyingInputStream.java\n {\n   private final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n@@ -107,30 +107,30 @@\n \n   public org.apache.commons.compress.utils.ChecksumVerifyingInputStream(java.util.zip.Checksum, java.io.InputStream, long, long);\n     descriptor: (Ljava/util/zip/Checksum;Ljava/io/InputStream;JJ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=7, args_size=5\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #7                  // Field checksum:Ljava/util/zip/Checksum;\n+         6: putfield      #18                 // Field checksum:Ljava/util/zip/Checksum;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #13                 // Field in:Ljava/io/InputStream;\n+        11: putfield      #20                 // Field in:Ljava/io/InputStream;\n         14: aload_0\n         15: lload         5\n-        17: putfield      #17                 // Field expectedChecksum:J\n+        17: putfield      #22                 // Field expectedChecksum:J\n         20: aload_0\n         21: lload_3\n-        22: putfield      #21                 // Field bytesRemaining:J\n+        22: putfield      #24                 // Field bytesRemaining:J\n         25: return\n       LineNumberTable:\n-        line 46: 0\n+        line 45: 0\n         line 47: 4\n         line 48: 9\n         line 49: 14\n         line 50: 20\n         line 51: 25\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -139,73 +139,75 @@\n             0      26     2    in   Ljava/io/InputStream;\n             0      26     3  size   J\n             0      26     5 expectedChecksum   J\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #24                 // Method java/io/InputStream.close:()V\n+         1: getfield      #20                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #35                 // Method java/io/InputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long getBytesRemaining();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field bytesRemaining:J\n+         1: getfield      #24                 // Field bytesRemaining:J\n          4: lreturn\n       LineNumberTable:\n         line 63: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field bytesRemaining:J\n+         1: getfield      #24                 // Field bytesRemaining:J\n          4: lconst_0\n          5: lcmp\n          6: ifgt          11\n          9: iconst_m1\n         10: ireturn\n         11: aload_0\n-        12: getfield      #13                 // Field in:Ljava/io/InputStream;\n-        15: invokevirtual #27                 // Method java/io/InputStream.read:()I\n+        12: getfield      #20                 // Field in:Ljava/io/InputStream;\n+        15: invokevirtual #41                 // Method java/io/InputStream.read:()I\n         18: istore_1\n         19: iload_1\n         20: iflt          43\n         23: aload_0\n-        24: getfield      #7                  // Field checksum:Ljava/util/zip/Checksum;\n+        24: getfield      #18                 // Field checksum:Ljava/util/zip/Checksum;\n         27: iload_1\n-        28: invokeinterface #31,  2           // InterfaceMethod java/util/zip/Checksum.update:(I)V\n+        28: invokeinterface #43,  2           // InterfaceMethod java/util/zip/Checksum.update:(I)V\n         33: aload_0\n         34: dup\n-        35: getfield      #21                 // Field bytesRemaining:J\n+        35: getfield      #24                 // Field bytesRemaining:J\n         38: lconst_1\n         39: lsub\n-        40: putfield      #21                 // Field bytesRemaining:J\n+        40: putfield      #24                 // Field bytesRemaining:J\n         43: aload_0\n-        44: invokespecial #37                 // Method verify:()V\n+        44: invokespecial #49                 // Method verify:()V\n         47: iload_1\n         48: ireturn\n       LineNumberTable:\n         line 74: 0\n         line 75: 9\n         line 77: 11\n         line 78: 19\n@@ -218,71 +220,71 @@\n             0      49     0  this   Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n            19      30     1   ret   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 31\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #40                 // Method read:([BII)I\n+         5: invokevirtual #56                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 94: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n             0       9     1     b   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=5, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #13                 // Field in:Ljava/io/InputStream;\n+         7: getfield      #20                 // Field in:Ljava/io/InputStream;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokevirtual #43                 // Method java/io/InputStream.read:([BII)I\n+        13: invokevirtual #61                 // Method java/io/InputStream.read:([BII)I\n         16: istore        4\n         18: iload         4\n         20: iflt          48\n         23: aload_0\n-        24: getfield      #7                  // Field checksum:Ljava/util/zip/Checksum;\n+        24: getfield      #18                 // Field checksum:Ljava/util/zip/Checksum;\n         27: aload_1\n         28: iload_2\n         29: iload         4\n-        31: invokeinterface #44,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V\n+        31: invokeinterface #62,  4           // InterfaceMethod java/util/zip/Checksum.update:([BII)V\n         36: aload_0\n         37: dup\n-        38: getfield      #21                 // Field bytesRemaining:J\n+        38: getfield      #24                 // Field bytesRemaining:J\n         41: iload         4\n         43: i2l\n         44: lsub\n-        45: putfield      #21                 // Field bytesRemaining:J\n+        45: putfield      #24                 // Field bytesRemaining:J\n         48: aload_0\n-        49: invokespecial #37                 // Method verify:()V\n+        49: invokespecial #49                 // Method verify:()V\n         52: iload         4\n         54: ireturn\n       LineNumberTable:\n         line 105: 0\n         line 106: 4\n         line 108: 6\n         line 109: 18\n@@ -298,71 +300,70 @@\n             0      55     3   len   I\n            18      37     4   ret   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 6 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 41\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: invokevirtual #47                 // Method read:()I\n+         1: invokevirtual #69                 // Method read:()I\n          4: iflt          11\n-         7: lconst_1\n+         7: iconst_1\n          8: goto          12\n-        11: lconst_0\n-        12: lreturn\n+        11: iconst_0\n+        12: i2l\n+        13: lreturn\n       LineNumberTable:\n         line 120: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      13     0  this   Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n-            0      13     1     n   J\n+            0      14     0  this   Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n+            0      14     1     n   J\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ long ]\n-    Exceptions:\n-      throws java.io.IOException\n+          stack = [ int ]\n \n   private void verify() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field bytesRemaining:J\n+         1: getfield      #24                 // Field bytesRemaining:J\n          4: lconst_0\n          5: lcmp\n          6: ifgt          36\n          9: aload_0\n-        10: getfield      #17                 // Field expectedChecksum:J\n+        10: getfield      #22                 // Field expectedChecksum:J\n         13: aload_0\n-        14: getfield      #7                  // Field checksum:Ljava/util/zip/Checksum;\n-        17: invokeinterface #48,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J\n+        14: getfield      #18                 // Field checksum:Ljava/util/zip/Checksum;\n+        17: invokeinterface #71,  1           // InterfaceMethod java/util/zip/Checksum.getValue:()J\n         22: lcmp\n         23: ifeq          36\n-        26: new           #52                 // class java/io/IOException\n+        26: new           #33                 // class java/io/IOException\n         29: dup\n-        30: ldc           #54                 // String Checksum verification failed\n-        32: invokespecial #56                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        30: ldc           #74                 // String Checksum verification failed\n+        32: invokespecial #76                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         35: athrow\n         36: return\n       LineNumberTable:\n         line 124: 0\n         line 125: 26\n         line 127: 36\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      37     0  this   Lorg/apache/commons/compress/utils/ChecksumVerifyingInputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 36 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ChecksumVerifyingInputStream.java\"\n"}]}
