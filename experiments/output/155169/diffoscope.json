{"diffoscope-json-version": 1, "source1": "first/ExtendedMessageFormat.class", "source2": "second/ExtendedMessageFormat.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -180,21 +180,21 @@\n     private int readArgumentIndex(final String pattern, final ParsePosition pos) {\n         final int start = pos.getIndex();\n         this.seekNonWs(pattern, pos);\n         final StringBuilder result = new StringBuilder();\n         boolean error = false;\n         while (!error && pos.getIndex() < pattern.length()) {\n             char c = pattern.charAt(pos.getIndex());\n-            Label_0149: {\n+            Label_0136: {\n                 if (Character.isWhitespace(c)) {\n                     this.seekNonWs(pattern, pos);\n                     c = pattern.charAt(pos.getIndex());\n                     if (c != ',' && c != '}') {\n                         error = true;\n-                        break Label_0149;\n+                        break Label_0136;\n                     }\n                 }\n                 if ((c == ',' || c == '}') && result.length() > 0) {\n                     try {\n                         return Integer.parseInt(result.toString());\n                     }\n                     catch (final NumberFormatException ex) {}\n@@ -251,20 +251,20 @@\n                 case '\\'': {\n                     this.appendQuotedString(pattern, pos, sb);\n                     continue;\n                 }\n                 case '{': {\n                     ++depth;\n                     sb.append('{').append(this.readArgumentIndex(pattern, this.next(pos)));\n-                    if (depth == 1) {\n-                        ++fe;\n-                        final String customPattern = (String)customPatterns.get(fe);\n-                        if (customPattern == null) {\n-                            continue;\n-                        }\n+                    if (depth != 1) {\n+                        continue;\n+                    }\n+                    ++fe;\n+                    final String customPattern = (String)customPatterns.get(fe);\n+                    if (customPattern != null) {\n                         sb.append(',').append(customPattern);\n                         continue;\n                     }\n                     continue;\n                 }\n                 case '}': {\n                     --depth;\n"}]}
