{"diffoscope-json-version": 1, "source1": "first/ReloadingFileBasedConfigurationBuilder.class", "source2": "second/ReloadingFileBasedConfigurationBuilder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,60 +11,59 @@\n \n public class ReloadingFileBasedConfigurationBuilder<T extends FileBasedConfiguration> extends FileBasedConfigurationBuilder<T> implements ReloadingControllerSupport\n {\n     private static final ReloadingDetectorFactory DEFAULT_DETECTOR_FACTORY;\n     private final ReloadingController reloadingController;\n     private volatile ReloadingDetector resultReloadingDetector;\n     \n-    public ReloadingFileBasedConfigurationBuilder(final Class<? extends T> resCls, final Map<String, Object> params) {\n-        super((Class)resCls, (Map)params);\n+    public ReloadingFileBasedConfigurationBuilder(final Class<? extends T> clazz, final Map<String, Object> map) {\n+        super((Class)clazz, (Map)map);\n         this.reloadingController = this.createReloadingController();\n     }\n     \n-    public ReloadingFileBasedConfigurationBuilder(final Class<? extends T> resCls, final Map<String, Object> params, final boolean allowFailOnInit) {\n-        super((Class)resCls, (Map)params, allowFailOnInit);\n+    public ReloadingFileBasedConfigurationBuilder(final Class<? extends T> clazz, final Map<String, Object> map, final boolean b) {\n+        super((Class)clazz, (Map)map, b);\n         this.reloadingController = this.createReloadingController();\n     }\n     \n-    public ReloadingFileBasedConfigurationBuilder(final Class<? extends T> resCls) {\n-        super((Class)resCls);\n+    public ReloadingFileBasedConfigurationBuilder(final Class<? extends T> clazz) {\n+        super((Class)clazz);\n         this.reloadingController = this.createReloadingController();\n     }\n     \n     public ReloadingController getReloadingController() {\n         return this.reloadingController;\n     }\n     \n-    public ReloadingFileBasedConfigurationBuilder<T> configure(final BuilderParameters... params) {\n-        super.configure(params);\n+    public ReloadingFileBasedConfigurationBuilder<T> configure(final BuilderParameters... array) {\n+        super.configure(array);\n         return this;\n     }\n     \n-    protected ReloadingDetector createReloadingDetector(final FileHandler handler, final FileBasedBuilderParametersImpl fbparams) throws ConfigurationException {\n-        return fetchDetectorFactory(fbparams).createReloadingDetector(handler, fbparams);\n+    protected ReloadingDetector createReloadingDetector(final FileHandler fileHandler, final FileBasedBuilderParametersImpl fileBasedBuilderParametersImpl) throws ConfigurationException {\n+        return fetchDetectorFactory(fileBasedBuilderParametersImpl).createReloadingDetector(fileHandler, fileBasedBuilderParametersImpl);\n     }\n     \n-    protected void initFileHandler(final FileHandler handler) throws ConfigurationException {\n-        super.initFileHandler(handler);\n-        this.resultReloadingDetector = this.createReloadingDetector(handler, FileBasedBuilderParametersImpl.fromParameters(this.getParameters(), true));\n+    protected void initFileHandler(final FileHandler fileHandler) throws ConfigurationException {\n+        super.initFileHandler(fileHandler);\n+        this.resultReloadingDetector = this.createReloadingDetector(fileHandler, FileBasedBuilderParametersImpl.fromParameters(this.getParameters(), true));\n     }\n     \n     private ReloadingController createReloadingController() {\n-        final ReloadingDetector ctrlDetector = this.createReloadingDetectorForController();\n-        final ReloadingController ctrl = new ReloadingController(ctrlDetector);\n-        this.connectToReloadingController(ctrl);\n-        return ctrl;\n+        final ReloadingController reloadingController = new ReloadingController(this.createReloadingDetectorForController());\n+        this.connectToReloadingController(reloadingController);\n+        return reloadingController;\n     }\n     \n     private ReloadingDetector createReloadingDetectorForController() {\n         return (ReloadingDetector)new ReloadingFileBasedConfigurationBuilder.ReloadingFileBasedConfigurationBuilder$1(this);\n     }\n     \n-    private static ReloadingDetectorFactory fetchDetectorFactory(final FileBasedBuilderParametersImpl params) {\n-        final ReloadingDetectorFactory factory = params.getReloadingDetectorFactory();\n-        return (factory != null) ? factory : ReloadingFileBasedConfigurationBuilder.DEFAULT_DETECTOR_FACTORY;\n+    private static ReloadingDetectorFactory fetchDetectorFactory(final FileBasedBuilderParametersImpl fileBasedBuilderParametersImpl) {\n+        final ReloadingDetectorFactory reloadingDetectorFactory = fileBasedBuilderParametersImpl.getReloadingDetectorFactory();\n+        return (reloadingDetectorFactory != null) ? reloadingDetectorFactory : ReloadingFileBasedConfigurationBuilder.DEFAULT_DETECTOR_FACTORY;\n     }\n     \n     static {\n         DEFAULT_DETECTOR_FACTORY = (ReloadingDetectorFactory)new DefaultReloadingDetectorFactory();\n     }\n }\n"}]}
