{"diffoscope-json-version": 1, "source1": "first/ProxyOutputStream.class", "source2": "second/ProxyOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,96 +1,95 @@\n-  SHA-256 checksum 18f65542df656cb154d8ef7335d734c3e16ca15e94a47ae00c9a0faceb6f53ea\n+  SHA-256 checksum ded968d2b835441e0987766472fbe37a996bec0461a4794b93ec7816bb476faa\n   Compiled from \"ProxyOutputStream.java\"\n public class org.apache.commons.io.output.ProxyOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #14                         // org/apache/commons/io/output/ProxyOutputStream\n   super_class: #15                        // java/io/FilterOutputStream\n   interfaces: 0, fields: 0, methods: 9, attributes: 3\n Constant pool:\n-   #1 = Methodref          #15.#36        // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Methodref          #14.#37        // org/apache/commons/io/output/ProxyOutputStream.beforeWrite:(I)V\n-   #3 = Fieldref           #14.#38        // org/apache/commons/io/output/ProxyOutputStream.out:Ljava/io/OutputStream;\n-   #4 = Methodref          #39.#40        // java/io/OutputStream.write:(I)V\n-   #5 = Methodref          #14.#41        // org/apache/commons/io/output/ProxyOutputStream.afterWrite:(I)V\n-   #6 = Class              #42            // java/io/IOException\n-   #7 = Methodref          #14.#43        // org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n-   #8 = Methodref          #44.#45        // org/apache/commons/io/IOUtils.length:([B)I\n-   #9 = Methodref          #39.#46        // java/io/OutputStream.write:([B)V\n-  #10 = Methodref          #39.#47        // java/io/OutputStream.write:([BII)V\n-  #11 = Methodref          #39.#48        // java/io/OutputStream.flush:()V\n-  #12 = InvokeDynamic      #0:#54         // #0:accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #13 = Methodref          #44.#55        // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #14 = Class              #56            // org/apache/commons/io/output/ProxyOutputStream\n-  #15 = Class              #57            // java/io/FilterOutputStream\n+   #1 = Methodref          #15.#35        // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #2 = Methodref          #14.#36        // org/apache/commons/io/output/ProxyOutputStream.beforeWrite:(I)V\n+   #3 = Fieldref           #14.#37        // org/apache/commons/io/output/ProxyOutputStream.out:Ljava/io/OutputStream;\n+   #4 = Methodref          #38.#39        // java/io/OutputStream.write:(I)V\n+   #5 = Methodref          #14.#40        // org/apache/commons/io/output/ProxyOutputStream.afterWrite:(I)V\n+   #6 = Class              #41            // java/io/IOException\n+   #7 = Methodref          #14.#42        // org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n+   #8 = Methodref          #43.#44        // org/apache/commons/io/IOUtils.length:([B)I\n+   #9 = Methodref          #38.#45        // java/io/OutputStream.write:([B)V\n+  #10 = Methodref          #38.#46        // java/io/OutputStream.write:([BII)V\n+  #11 = Methodref          #38.#47        // java/io/OutputStream.flush:()V\n+  #12 = InvokeDynamic      #0:#53         // #0:accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #13 = Methodref          #43.#54        // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #14 = Class              #55            // org/apache/commons/io/output/ProxyOutputStream\n+  #15 = Class              #56            // java/io/FilterOutputStream\n   #16 = Utf8               <init>\n   #17 = Utf8               (Ljava/io/OutputStream;)V\n   #18 = Utf8               Code\n   #19 = Utf8               LineNumberTable\n   #20 = Utf8               write\n   #21 = Utf8               (I)V\n   #22 = Utf8               StackMapTable\n-  #23 = Class              #42            // java/io/IOException\n-  #24 = Utf8               Exceptions\n-  #25 = Utf8               ([B)V\n-  #26 = Utf8               ([BII)V\n-  #27 = Utf8               flush\n-  #28 = Utf8               ()V\n-  #29 = Utf8               close\n-  #30 = Utf8               beforeWrite\n-  #31 = Utf8               afterWrite\n-  #32 = Utf8               handleIOException\n-  #33 = Utf8               (Ljava/io/IOException;)V\n-  #34 = Utf8               SourceFile\n-  #35 = Utf8               ProxyOutputStream.java\n-  #36 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #37 = NameAndType        #30:#21        // beforeWrite:(I)V\n-  #38 = NameAndType        #58:#59        // out:Ljava/io/OutputStream;\n-  #39 = Class              #60            // java/io/OutputStream\n-  #40 = NameAndType        #20:#21        // write:(I)V\n-  #41 = NameAndType        #31:#21        // afterWrite:(I)V\n-  #42 = Utf8               java/io/IOException\n-  #43 = NameAndType        #32:#33        // handleIOException:(Ljava/io/IOException;)V\n-  #44 = Class              #61            // org/apache/commons/io/IOUtils\n-  #45 = NameAndType        #62:#63        // length:([B)I\n-  #46 = NameAndType        #20:#25        // write:([B)V\n-  #47 = NameAndType        #20:#26        // write:([BII)V\n-  #48 = NameAndType        #27:#28        // flush:()V\n-  #49 = Utf8               BootstrapMethods\n-  #50 = MethodHandle       6:#64          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #51 = MethodType         #65            //  (Ljava/lang/Object;)V\n-  #52 = MethodHandle       5:#7           // REF_invokeVirtual org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n-  #53 = MethodType         #33            //  (Ljava/io/IOException;)V\n-  #54 = NameAndType        #66:#67        // accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #55 = NameAndType        #29:#68        // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #56 = Utf8               org/apache/commons/io/output/ProxyOutputStream\n-  #57 = Utf8               java/io/FilterOutputStream\n-  #58 = Utf8               out\n-  #59 = Utf8               Ljava/io/OutputStream;\n-  #60 = Utf8               java/io/OutputStream\n-  #61 = Utf8               org/apache/commons/io/IOUtils\n-  #62 = Utf8               length\n-  #63 = Utf8               ([B)I\n-  #64 = Methodref          #69.#70        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #65 = Utf8               (Ljava/lang/Object;)V\n-  #66 = Utf8               accept\n-  #67 = Utf8               (Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #68 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #69 = Class              #71            // java/lang/invoke/LambdaMetafactory\n-  #70 = NameAndType        #72:#76        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #71 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #72 = Utf8               metafactory\n-  #73 = Class              #78            // java/lang/invoke/MethodHandles$Lookup\n-  #74 = Utf8               Lookup\n-  #75 = Utf8               InnerClasses\n-  #76 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #77 = Class              #79            // java/lang/invoke/MethodHandles\n-  #78 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #79 = Utf8               java/lang/invoke/MethodHandles\n+  #23 = Utf8               Exceptions\n+  #24 = Utf8               ([B)V\n+  #25 = Utf8               ([BII)V\n+  #26 = Utf8               flush\n+  #27 = Utf8               ()V\n+  #28 = Utf8               close\n+  #29 = Utf8               beforeWrite\n+  #30 = Utf8               afterWrite\n+  #31 = Utf8               handleIOException\n+  #32 = Utf8               (Ljava/io/IOException;)V\n+  #33 = Utf8               SourceFile\n+  #34 = Utf8               ProxyOutputStream.java\n+  #35 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/OutputStream;)V\n+  #36 = NameAndType        #29:#21        // beforeWrite:(I)V\n+  #37 = NameAndType        #57:#58        // out:Ljava/io/OutputStream;\n+  #38 = Class              #59            // java/io/OutputStream\n+  #39 = NameAndType        #20:#21        // write:(I)V\n+  #40 = NameAndType        #30:#21        // afterWrite:(I)V\n+  #41 = Utf8               java/io/IOException\n+  #42 = NameAndType        #31:#32        // handleIOException:(Ljava/io/IOException;)V\n+  #43 = Class              #60            // org/apache/commons/io/IOUtils\n+  #44 = NameAndType        #61:#62        // length:([B)I\n+  #45 = NameAndType        #20:#24        // write:([B)V\n+  #46 = NameAndType        #20:#25        // write:([BII)V\n+  #47 = NameAndType        #26:#27        // flush:()V\n+  #48 = Utf8               BootstrapMethods\n+  #49 = MethodHandle       6:#63          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #50 = MethodType         #64            //  (Ljava/lang/Object;)V\n+  #51 = MethodHandle       5:#7           // REF_invokeVirtual org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n+  #52 = MethodType         #32            //  (Ljava/io/IOException;)V\n+  #53 = NameAndType        #65:#66        // accept:(Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #54 = NameAndType        #28:#67        // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #55 = Utf8               org/apache/commons/io/output/ProxyOutputStream\n+  #56 = Utf8               java/io/FilterOutputStream\n+  #57 = Utf8               out\n+  #58 = Utf8               Ljava/io/OutputStream;\n+  #59 = Utf8               java/io/OutputStream\n+  #60 = Utf8               org/apache/commons/io/IOUtils\n+  #61 = Utf8               length\n+  #62 = Utf8               ([B)I\n+  #63 = Methodref          #68.#69        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #64 = Utf8               (Ljava/lang/Object;)V\n+  #65 = Utf8               accept\n+  #66 = Utf8               (Lorg/apache/commons/io/output/ProxyOutputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #67 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #68 = Class              #70            // java/lang/invoke/LambdaMetafactory\n+  #69 = NameAndType        #71:#75        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #70 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #71 = Utf8               metafactory\n+  #72 = Class              #77            // java/lang/invoke/MethodHandles$Lookup\n+  #73 = Utf8               Lookup\n+  #74 = Utf8               InnerClasses\n+  #75 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #76 = Class              #78            // java/lang/invoke/MethodHandles\n+  #77 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #78 = Utf8               java/lang/invoke/MethodHandles\n {\n   public org.apache.commons.io.output.ProxyOutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -303,14 +302,14 @@\n       LineNumberTable:\n         line 168: 0\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"ProxyOutputStream.java\"\n InnerClasses:\n-  public static final #74= #73 of #77;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #73= #72 of #76;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #50 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #49 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #51 (Ljava/lang/Object;)V\n-      #52 REF_invokeVirtual org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n-      #53 (Ljava/io/IOException;)V\n+      #50 (Ljava/lang/Object;)V\n+      #51 REF_invokeVirtual org/apache/commons/io/output/ProxyOutputStream.handleIOException:(Ljava/io/IOException;)V\n+      #52 (Ljava/io/IOException;)V\n"}]}
