{"diffoscope-json-version": 1, "source1": "first/PropertiesConfiguration$PropertiesReader.class", "source2": "second/PropertiesConfiguration$PropertiesReader.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -17,14 +17,18 @@\n     private static final int IDX_VALUE = 5;\n     private static final int IDX_SEPARATOR = 3;\n     private final List<String> commentLines;\n     private String propertyName;\n     private String propertyValue;\n     private String propertySeparator;\n     \n+    static {\n+        PropertiesReader.PROPERTY_PATTERN = Pattern.compile(\"(([\\\\S&&[^\\\\\\\\\" + new String(PropertiesConfiguration.access$0()) + \"]]|\\\\\\\\.)*)(\\\\s*(\\\\s+|[\" + new String(PropertiesConfiguration.access$0()) + \"])\\\\s*)?(.*)\");\n+    }\n+    \n     public PropertiesReader(final Reader reader) {\n         super(reader);\n         this.propertySeparator = \" = \";\n         this.commentLines = new ArrayList();\n     }\n     \n     public String readProperty() throws IOException {\n@@ -99,15 +103,15 @@\n     }\n     \n     protected void initPropertySeparator(final String value) {\n         this.propertySeparator = value;\n     }\n     \n     static boolean checkCombineLines(final String line) {\n-        return PropertiesConfiguration.access$100(line) % 2 != 0;\n+        return PropertiesConfiguration.access$1(line) % 2 != 0;\n     }\n     \n     static String[] doParseProperty(final String line, final boolean trimValue) {\n         final Matcher matcher = PropertiesReader.PROPERTY_PATTERN.matcher(line);\n         final String[] result = { \"\", \"\", \"\" };\n         if (matcher.matches()) {\n             result[0] = matcher.group(1).trim();\n@@ -116,12 +120,8 @@\n                 value = value.trim();\n             }\n             result[1] = value;\n             result[2] = matcher.group(3);\n         }\n         return result;\n     }\n-    \n-    static {\n-        PropertiesReader.PROPERTY_PATTERN = Pattern.compile(\"(([\\\\S&&[^\\\\\\\\\" + new String(PropertiesConfiguration.access$000()) + \"]]|\\\\\\\\.)*)(\\\\s*(\\\\s+|[\" + new String(PropertiesConfiguration.access$000()) + \"])\\\\s*)?(.*)\");\n-    }\n }\n"}]}
