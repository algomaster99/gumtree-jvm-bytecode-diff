{"diffoscope-json-version": 1, "source1": "first/CopyStreamAdapter.class", "source2": "second/CopyStreamAdapter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,27 +9,29 @@\n {\n     private final ListenerList internalListeners;\n     \n     public CopyStreamAdapter() {\n         this.internalListeners = new ListenerList();\n     }\n     \n-    public void bytesTransferred(final CopyStreamEvent event) {\n-        for (final EventListener listener : this.internalListeners) {\n-            ((CopyStreamListener)listener).bytesTransferred(event);\n+    public void bytesTransferred(final CopyStreamEvent copyStreamEvent) {\n+        final Iterator iterator = this.internalListeners.iterator();\n+        while (iterator.hasNext()) {\n+            ((CopyStreamListener)iterator.next()).bytesTransferred(copyStreamEvent);\n         }\n     }\n     \n-    public void bytesTransferred(final long totalBytesTransferred, final int bytesTransferred, final long streamSize) {\n-        for (final EventListener listener : this.internalListeners) {\n-            ((CopyStreamListener)listener).bytesTransferred(totalBytesTransferred, bytesTransferred, streamSize);\n+    public void bytesTransferred(final long n, final int n2, final long n3) {\n+        final Iterator iterator = this.internalListeners.iterator();\n+        while (iterator.hasNext()) {\n+            ((CopyStreamListener)iterator.next()).bytesTransferred(n, n2, n3);\n         }\n     }\n     \n-    public void addCopyStreamListener(final CopyStreamListener listener) {\n-        this.internalListeners.addListener((EventListener)listener);\n+    public void addCopyStreamListener(final CopyStreamListener copyStreamListener) {\n+        this.internalListeners.addListener((EventListener)copyStreamListener);\n     }\n     \n-    public void removeCopyStreamListener(final CopyStreamListener listener) {\n-        this.internalListeners.removeListener((EventListener)listener);\n+    public void removeCopyStreamListener(final CopyStreamListener copyStreamListener) {\n+        this.internalListeners.removeListener((EventListener)copyStreamListener);\n     }\n }\n"}]}
