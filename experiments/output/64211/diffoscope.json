{"diffoscope-json-version": 1, "source1": "first/ParallelScatterZipCreator$DefaultBackingStoreSupplier.class", "source2": "second/ParallelScatterZipCreator$DefaultBackingStoreSupplier.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,165 +1,156 @@\n-  SHA-256 checksum 1ab5feb046d6d4fa661bb0e03e94b4b38e5b7ea220d40685d907a54134557013\n+  SHA-256 checksum 50035bfc0d0688e416928fb62aa914c62bc7370b934b27aeb2fe916f088405ce\n   Compiled from \"ParallelScatterZipCreator.java\"\n class org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$DefaultBackingStoreSupplier implements org.apache.commons.compress.parallel.ScatterGatherBackingStoreSupplier\n   minor version: 0\n-  major version: 53\n+  major version: 51\n   flags: (0x0020) ACC_SUPER\n-  this_class: #12                         // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n-  super_class: #13                        // java/lang/Object\n-  interfaces: 1, fields: 1, methods: 3, attributes: 3\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n+  super_class: #3                         // java/lang/Object\n+  interfaces: 1, fields: 1, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Methodref          #12.#38        // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.\"<init>\":()V\n-   #2 = Methodref          #13.#38        // java/lang/Object.\"<init>\":()V\n-   #3 = Class              #39            // java/util/concurrent/atomic/AtomicInteger\n-   #4 = Methodref          #3.#40         // java/util/concurrent/atomic/AtomicInteger.\"<init>\":(I)V\n-   #5 = Fieldref           #12.#41        // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n-   #6 = String             #42            // parallelscatter\n-   #7 = Methodref          #3.#43         // java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n-   #8 = InvokeDynamic      #0:#47         // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-   #9 = Methodref          #48.#49        // java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;\n-  #10 = Class              #50            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #11 = Methodref          #10.#51        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/io/File;)V\n-  #12 = Class              #53            // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n-  #13 = Class              #54            // java/lang/Object\n-  #14 = Class              #55            // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n-  #15 = Utf8               storeNum\n-  #16 = Utf8               Ljava/util/concurrent/atomic/AtomicInteger;\n-  #17 = Utf8               <init>\n-  #18 = Utf8               ()V\n-  #19 = Utf8               Code\n-  #20 = Utf8               LineNumberTable\n-  #21 = Utf8               LocalVariableTable\n-  #22 = Utf8               this\n-  #23 = Utf8               DefaultBackingStoreSupplier\n-  #24 = Utf8               InnerClasses\n-  #25 = Utf8               Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n-  #26 = Utf8               get\n-  #27 = Utf8               ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #28 = Utf8               tempFile\n-  #29 = Utf8               Ljava/io/File;\n-  #30 = Utf8               Exceptions\n-  #31 = Class              #56            // java/io/IOException\n-  #32 = Class              #57            // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n-  #33 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n-  #34 = Utf8               x0\n-  #35 = Utf8               Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;\n-  #36 = Utf8               SourceFile\n-  #37 = Utf8               ParallelScatterZipCreator.java\n-  #38 = NameAndType        #17:#18        // \"<init>\":()V\n-  #39 = Utf8               java/util/concurrent/atomic/AtomicInteger\n-  #40 = NameAndType        #17:#58        // \"<init>\":(I)V\n-  #41 = NameAndType        #15:#16        // storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n-  #42 = Utf8               parallelscatter\n-  #43 = NameAndType        #59:#60        // incrementAndGet:()I\n-  #44 = Utf8               BootstrapMethods\n-  #45 = MethodHandle       6:#61          // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #46 = String             #62            // n\\u0001\n-  #47 = NameAndType        #63:#64        // makeConcatWithConstants:(I)Ljava/lang/String;\n-  #48 = Class              #65            // java/io/File\n-  #49 = NameAndType        #66:#67        // createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;\n-  #50 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #51 = NameAndType        #17:#68        // \"<init>\":(Ljava/io/File;)V\n-  #52 = Class              #69            // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-  #53 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n-  #54 = Utf8               java/lang/Object\n-  #55 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n-  #56 = Utf8               java/io/IOException\n-  #57 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n-  #58 = Utf8               (I)V\n-  #59 = Utf8               incrementAndGet\n-  #60 = Utf8               ()I\n-  #61 = Methodref          #70.#71        // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #62 = Utf8               n\\u0001\n-  #63 = Utf8               makeConcatWithConstants\n-  #64 = Utf8               (I)Ljava/lang/String;\n-  #65 = Utf8               java/io/File\n-  #66 = Utf8               createTempFile\n-  #67 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;\n-  #68 = Utf8               (Ljava/io/File;)V\n-  #69 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-  #70 = Class              #72            // java/lang/invoke/StringConcatFactory\n-  #71 = NameAndType        #63:#75        // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #72 = Utf8               java/lang/invoke/StringConcatFactory\n-  #73 = Class              #77            // java/lang/invoke/MethodHandles$Lookup\n-  #74 = Utf8               Lookup\n-  #75 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #76 = Class              #78            // java/lang/invoke/MethodHandles\n-  #77 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #78 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Class              #6             // org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n+   #6 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStoreSupplier\n+   #7 = Utf8               storeNum\n+   #8 = Utf8               Ljava/util/concurrent/atomic/AtomicInteger;\n+   #9 = Utf8               <init>\n+  #10 = Utf8               ()V\n+  #11 = Utf8               Code\n+  #12 = Methodref          #3.#13         // java/lang/Object.\"<init>\":()V\n+  #13 = NameAndType        #9:#10         // \"<init>\":()V\n+  #14 = Class              #15            // java/util/concurrent/atomic/AtomicInteger\n+  #15 = Utf8               java/util/concurrent/atomic/AtomicInteger\n+  #16 = Methodref          #14.#17        // java/util/concurrent/atomic/AtomicInteger.\"<init>\":(I)V\n+  #17 = NameAndType        #9:#18         // \"<init>\":(I)V\n+  #18 = Utf8               (I)V\n+  #19 = Fieldref           #1.#20         // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+  #20 = NameAndType        #7:#8          // storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+  #21 = Utf8               LineNumberTable\n+  #22 = Utf8               LocalVariableTable\n+  #23 = Utf8               this\n+  #24 = Utf8               Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n+  #25 = Utf8               get\n+  #26 = Utf8               ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+  #27 = Utf8               Exceptions\n+  #28 = Class              #29            // java/io/IOException\n+  #29 = Utf8               java/io/IOException\n+  #30 = String             #31            // parallelscatter\n+  #31 = Utf8               parallelscatter\n+  #32 = Class              #33            // java/lang/StringBuilder\n+  #33 = Utf8               java/lang/StringBuilder\n+  #34 = String             #35            // n\n+  #35 = Utf8               n\n+  #36 = Methodref          #32.#37        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #37 = NameAndType        #9:#38         // \"<init>\":(Ljava/lang/String;)V\n+  #38 = Utf8               (Ljava/lang/String;)V\n+  #39 = Methodref          #14.#40        // java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n+  #40 = NameAndType        #41:#42        // incrementAndGet:()I\n+  #41 = Utf8               incrementAndGet\n+  #42 = Utf8               ()I\n+  #43 = Methodref          #32.#44        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #44 = NameAndType        #45:#46        // append:(I)Ljava/lang/StringBuilder;\n+  #45 = Utf8               append\n+  #46 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #47 = Methodref          #32.#48        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #48 = NameAndType        #49:#50        // toString:()Ljava/lang/String;\n+  #49 = Utf8               toString\n+  #50 = Utf8               ()Ljava/lang/String;\n+  #51 = Methodref          #52.#54        // java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;\n+  #52 = Class              #53            // java/io/File\n+  #53 = Utf8               java/io/File\n+  #54 = NameAndType        #55:#56        // createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;\n+  #55 = Utf8               createTempFile\n+  #56 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;\n+  #57 = Class              #58            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #58 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #59 = Methodref          #57.#60        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/io/File;)V\n+  #60 = NameAndType        #9:#61         // \"<init>\":(Ljava/io/File;)V\n+  #61 = Utf8               (Ljava/io/File;)V\n+  #62 = Utf8               tempFile\n+  #63 = Utf8               Ljava/io/File;\n+  #64 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;)V\n+  #65 = Methodref          #1.#13         // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier.\"<init>\":()V\n+  #66 = Utf8               SourceFile\n+  #67 = Utf8               ParallelScatterZipCreator.java\n+  #68 = Utf8               InnerClasses\n+  #69 = Class              #70            // org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n+  #70 = Utf8               org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n+  #71 = Utf8               DefaultBackingStoreSupplier\n {\n   final java.util.concurrent.atomic.AtomicInteger storeNum;\n     descriptor: Ljava/util/concurrent/atomic/AtomicInteger;\n     flags: (0x0010) ACC_FINAL\n \n   private org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$DefaultBackingStoreSupplier();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #12                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #3                  // class java/util/concurrent/atomic/AtomicInteger\n+         5: new           #14                 // class java/util/concurrent/atomic/AtomicInteger\n          8: dup\n          9: iconst_0\n-        10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger.\"<init>\":(I)V\n-        13: putfield      #5                  // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+        10: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicInteger.\"<init>\":(I)V\n+        13: putfield      #19                 // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n         16: return\n       LineNumberTable:\n         line 64: 0\n         line 65: 4\n+        line 64: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n \n   public org.apache.commons.compress.parallel.ScatterGatherBackingStore get() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n-      stack=3, locals=2, args_size=1\n-         0: ldc           #6                  // String parallelscatter\n-         2: aload_0\n-         3: getfield      #5                  // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n-         6: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n-         9: invokedynamic #8,  0              // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-        14: invokestatic  #9                  // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;\n-        17: astore_1\n-        18: new           #10                 // class org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-        21: dup\n-        22: aload_1\n-        23: invokespecial #11                 // Method org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/io/File;)V\n-        26: areturn\n+      stack=4, locals=2, args_size=1\n+         0: ldc           #30                 // String parallelscatter\n+         2: new           #32                 // class java/lang/StringBuilder\n+         5: dup\n+         6: ldc           #34                 // String n\n+         8: invokespecial #36                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        11: aload_0\n+        12: getfield      #19                 // Field storeNum:Ljava/util/concurrent/atomic/AtomicInteger;\n+        15: invokevirtual #39                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I\n+        18: invokevirtual #43                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        21: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        24: invokestatic  #51                 // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;\n+        27: astore_1\n+        28: new           #57                 // class org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+        31: dup\n+        32: aload_1\n+        33: invokespecial #59                 // Method org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/io/File;)V\n+        36: areturn\n       LineNumberTable:\n         line 69: 0\n-        line 70: 18\n+        line 70: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      27     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n-           18       9     1 tempFile   Ljava/io/File;\n-    Exceptions:\n-      throws java.io.IOException\n+            0      37     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n+           28       9     1 tempFile   Ljava/io/File;\n \n-  org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$DefaultBackingStoreSupplier(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$1);\n-    descriptor: (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;)V\n+  org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$DefaultBackingStoreSupplier(org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator$DefaultBackingStoreSupplier);\n+    descriptor: (Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method \"<init>\":()V\n+         1: invokespecial #65                 // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 64: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier;\n-            0       5     1    x0   Lorg/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1;\n }\n SourceFile: \"ParallelScatterZipCreator.java\"\n InnerClasses:\n-  private static #23= #12 of #52;         // DefaultBackingStoreSupplier=class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier of class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n-  #32;                                    // class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$1\n-  public static final #74= #73 of #76;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n-BootstrapMethods:\n-  0: #45 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #46 n\\u0001\n+  private static #71= #1 of #69;          // DefaultBackingStoreSupplier=class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator$DefaultBackingStoreSupplier of class org/apache/commons/compress/archivers/zip/ParallelScatterZipCreator\n"}]}
