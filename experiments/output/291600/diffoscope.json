{"diffoscope-json-version": 1, "source1": "first/RandomStringUtils.class", "source2": "second/RandomStringUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,62 +1,62 @@\n-  SHA-256 checksum a575a4669df2f91997d00e9e2f1ab84e33beea72d3cecf49a000312729931ff0\n+  SHA-256 checksum 563251b96d6405e512c6cde4a26b90cafb0fae32a77192c5058f6d710d28b719\n   Compiled from \"RandomStringUtils.java\"\n public class org.apache.commons.lang3.RandomStringUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #44                         // org/apache/commons/lang3/RandomStringUtils\n   super_class: #45                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 21, attributes: 1\n Constant pool:\n-    #1 = Methodref          #45.#74       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #44.#75       // org/apache/commons/lang3/RandomStringUtils.random:(IZZ)Ljava/lang/String;\n-    #3 = Methodref          #44.#76       // org/apache/commons/lang3/RandomStringUtils.random:(IIIZZ)Ljava/lang/String;\n-    #4 = Methodref          #77.#78       // org/apache/commons/lang3/RandomUtils.nextInt:(II)I\n-    #5 = Methodref          #44.#79       // org/apache/commons/lang3/RandomStringUtils.randomAscii:(I)Ljava/lang/String;\n-    #6 = Methodref          #44.#80       // org/apache/commons/lang3/RandomStringUtils.randomAlphabetic:(I)Ljava/lang/String;\n-    #7 = Methodref          #44.#81       // org/apache/commons/lang3/RandomStringUtils.randomAlphanumeric:(I)Ljava/lang/String;\n-    #8 = Methodref          #44.#82       // org/apache/commons/lang3/RandomStringUtils.randomGraph:(I)Ljava/lang/String;\n-    #9 = Methodref          #44.#83       // org/apache/commons/lang3/RandomStringUtils.randomNumeric:(I)Ljava/lang/String;\n-   #10 = Methodref          #44.#84       // org/apache/commons/lang3/RandomStringUtils.randomPrint:(I)Ljava/lang/String;\n-   #11 = Fieldref           #44.#85       // org/apache/commons/lang3/RandomStringUtils.RANDOM:Ljava/util/Random;\n-   #12 = Methodref          #44.#86       // org/apache/commons/lang3/RandomStringUtils.random:(IIIZZ[CLjava/util/Random;)Ljava/lang/String;\n-   #13 = Class              #87           // org/apache/commons/lang3/StringUtils\n-   #14 = String             #88           //\n-   #15 = Class              #89           // java/lang/IllegalArgumentException\n-   #16 = Class              #90           // java/lang/StringBuilder\n-   #17 = Methodref          #16.#74       // java/lang/StringBuilder.\"<init>\":()V\n-   #18 = String             #91           // Requested random string length\n-   #19 = Methodref          #16.#92       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #20 = Methodref          #16.#93       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #21 = String             #94           //  is less than 0.\n-   #22 = Methodref          #16.#95       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #23 = Methodref          #15.#96       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #24 = String             #97           // The chars array must not be empty\n-   #25 = Class              #98           // java/lang/Character\n+    #1 = Methodref          #45.#72       // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #44.#73       // org/apache/commons/lang3/RandomStringUtils.random:(IZZ)Ljava/lang/String;\n+    #3 = Methodref          #44.#74       // org/apache/commons/lang3/RandomStringUtils.random:(IIIZZ)Ljava/lang/String;\n+    #4 = Methodref          #75.#76       // org/apache/commons/lang3/RandomUtils.nextInt:(II)I\n+    #5 = Methodref          #44.#77       // org/apache/commons/lang3/RandomStringUtils.randomAscii:(I)Ljava/lang/String;\n+    #6 = Methodref          #44.#78       // org/apache/commons/lang3/RandomStringUtils.randomAlphabetic:(I)Ljava/lang/String;\n+    #7 = Methodref          #44.#79       // org/apache/commons/lang3/RandomStringUtils.randomAlphanumeric:(I)Ljava/lang/String;\n+    #8 = Methodref          #44.#80       // org/apache/commons/lang3/RandomStringUtils.randomGraph:(I)Ljava/lang/String;\n+    #9 = Methodref          #44.#81       // org/apache/commons/lang3/RandomStringUtils.randomNumeric:(I)Ljava/lang/String;\n+   #10 = Methodref          #44.#82       // org/apache/commons/lang3/RandomStringUtils.randomPrint:(I)Ljava/lang/String;\n+   #11 = Fieldref           #44.#83       // org/apache/commons/lang3/RandomStringUtils.RANDOM:Ljava/util/Random;\n+   #12 = Methodref          #44.#84       // org/apache/commons/lang3/RandomStringUtils.random:(IIIZZ[CLjava/util/Random;)Ljava/lang/String;\n+   #13 = Class              #85           // org/apache/commons/lang3/StringUtils\n+   #14 = String             #86           //\n+   #15 = Class              #87           // java/lang/IllegalArgumentException\n+   #16 = Class              #88           // java/lang/StringBuilder\n+   #17 = Methodref          #16.#72       // java/lang/StringBuilder.\"<init>\":()V\n+   #18 = String             #89           // Requested random string length\n+   #19 = Methodref          #16.#90       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #20 = Methodref          #16.#91       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #21 = String             #92           //  is less than 0.\n+   #22 = Methodref          #16.#93       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #23 = Methodref          #15.#94       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #24 = String             #95           // The chars array must not be empty\n+   #25 = Class              #96           // java/lang/Character\n    #26 = Integer            1114111\n-   #27 = String             #99           // Parameter end (\n-   #28 = String             #100          // ) must be greater than start (\n-   #29 = String             #101          // )\n-   #30 = String             #102          // ) must be greater then (\n-   #31 = String             #103          // ) for generating digits or greater then (\n-   #32 = String             #104          // ) for generating letters.\n-   #33 = Methodref          #16.#105      // java/lang/StringBuilder.\"<init>\":(I)V\n-   #34 = Methodref          #42.#106      // java/util/Random.nextInt:(I)I\n-   #35 = Methodref          #25.#107      // java/lang/Character.getType:(I)I\n-   #36 = Methodref          #25.#108      // java/lang/Character.charCount:(I)I\n-   #37 = Methodref          #25.#109      // java/lang/Character.isLetter:(I)Z\n-   #38 = Methodref          #25.#110      // java/lang/Character.isDigit:(I)Z\n-   #39 = Methodref          #16.#111      // java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;\n-   #40 = Methodref          #112.#113     // java/lang/String.toCharArray:()[C\n-   #41 = Methodref          #44.#114      // org/apache/commons/lang3/RandomStringUtils.random:(I[C)Ljava/lang/String;\n-   #42 = Class              #115          // java/util/Random\n-   #43 = Methodref          #42.#74       // java/util/Random.\"<init>\":()V\n-   #44 = Class              #116          // org/apache/commons/lang3/RandomStringUtils\n-   #45 = Class              #117          // java/lang/Object\n+   #27 = String             #97           // Parameter end (\n+   #28 = String             #98           // ) must be greater than start (\n+   #29 = String             #99           // )\n+   #30 = String             #100          // ) must be greater then (\n+   #31 = String             #101          // ) for generating digits or greater then (\n+   #32 = String             #102          // ) for generating letters.\n+   #33 = Methodref          #16.#103      // java/lang/StringBuilder.\"<init>\":(I)V\n+   #34 = Methodref          #42.#104      // java/util/Random.nextInt:(I)I\n+   #35 = Methodref          #25.#105      // java/lang/Character.getType:(I)I\n+   #36 = Methodref          #25.#106      // java/lang/Character.charCount:(I)I\n+   #37 = Methodref          #25.#107      // java/lang/Character.isLetter:(I)Z\n+   #38 = Methodref          #25.#108      // java/lang/Character.isDigit:(I)Z\n+   #39 = Methodref          #16.#109      // java/lang/StringBuilder.appendCodePoint:(I)Ljava/lang/StringBuilder;\n+   #40 = Methodref          #110.#111     // java/lang/String.toCharArray:()[C\n+   #41 = Methodref          #44.#112      // org/apache/commons/lang3/RandomStringUtils.random:(I[C)Ljava/lang/String;\n+   #42 = Class              #113          // java/util/Random\n+   #43 = Methodref          #42.#72       // java/util/Random.\"<init>\":()V\n+   #44 = Class              #114          // org/apache/commons/lang3/RandomStringUtils\n+   #45 = Class              #115          // java/lang/Object\n    #46 = Utf8               RANDOM\n    #47 = Utf8               Ljava/util/Random;\n    #48 = Utf8               <init>\n    #49 = Utf8               ()V\n    #50 = Utf8               Code\n    #51 = Utf8               LineNumberTable\n    #52 = Utf8               random\n@@ -69,87 +69,85 @@\n    #59 = Utf8               randomNumeric\n    #60 = Utf8               randomPrint\n    #61 = Utf8               (IZZ)Ljava/lang/String;\n    #62 = Utf8               (IIIZZ)Ljava/lang/String;\n    #63 = Utf8               (IIIZZ[C)Ljava/lang/String;\n    #64 = Utf8               (IIIZZ[CLjava/util/Random;)Ljava/lang/String;\n    #65 = Utf8               StackMapTable\n-   #66 = Class              #118          // \"[C\"\n-   #67 = Class              #115          // java/util/Random\n-   #68 = Class              #90           // java/lang/StringBuilder\n-   #69 = Utf8               (ILjava/lang/String;)Ljava/lang/String;\n-   #70 = Utf8               (I[C)Ljava/lang/String;\n-   #71 = Utf8               <clinit>\n-   #72 = Utf8               SourceFile\n-   #73 = Utf8               RandomStringUtils.java\n-   #74 = NameAndType        #48:#49       // \"<init>\":()V\n-   #75 = NameAndType        #52:#61       // random:(IZZ)Ljava/lang/String;\n-   #76 = NameAndType        #52:#62       // random:(IIIZZ)Ljava/lang/String;\n-   #77 = Class              #119          // org/apache/commons/lang3/RandomUtils\n-   #78 = NameAndType        #120:#121     // nextInt:(II)I\n-   #79 = NameAndType        #54:#53       // randomAscii:(I)Ljava/lang/String;\n-   #80 = NameAndType        #56:#53       // randomAlphabetic:(I)Ljava/lang/String;\n-   #81 = NameAndType        #57:#53       // randomAlphanumeric:(I)Ljava/lang/String;\n-   #82 = NameAndType        #58:#53       // randomGraph:(I)Ljava/lang/String;\n-   #83 = NameAndType        #59:#53       // randomNumeric:(I)Ljava/lang/String;\n-   #84 = NameAndType        #60:#53       // randomPrint:(I)Ljava/lang/String;\n-   #85 = NameAndType        #46:#47       // RANDOM:Ljava/util/Random;\n-   #86 = NameAndType        #52:#64       // random:(IIIZZ[CLjava/util/Random;)Ljava/lang/String;\n-   #87 = Utf8               org/apache/commons/lang3/StringUtils\n-   #88 = Utf8\n-   #89 = Utf8               java/lang/IllegalArgumentException\n-   #90 = Utf8               java/lang/StringBuilder\n-   #91 = Utf8               Requested random string length\n-   #92 = NameAndType        #122:#123     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #93 = NameAndType        #122:#124     // append:(I)Ljava/lang/StringBuilder;\n-   #94 = Utf8                is less than 0.\n-   #95 = NameAndType        #125:#126     // toString:()Ljava/lang/String;\n-   #96 = NameAndType        #48:#127      // \"<init>\":(Ljava/lang/String;)V\n-   #97 = Utf8               The chars array must not be empty\n-   #98 = Utf8               java/lang/Character\n-   #99 = Utf8               Parameter end (\n-  #100 = Utf8               ) must be greater than start (\n-  #101 = Utf8               )\n-  #102 = Utf8               ) must be greater then (\n-  #103 = Utf8               ) for generating digits or greater then (\n-  #104 = Utf8               ) for generating letters.\n-  #105 = NameAndType        #48:#128      // \"<init>\":(I)V\n-  #106 = NameAndType        #120:#129     // nextInt:(I)I\n-  #107 = NameAndType        #130:#129     // getType:(I)I\n-  #108 = NameAndType        #131:#129     // charCount:(I)I\n-  #109 = NameAndType        #132:#133     // isLetter:(I)Z\n-  #110 = NameAndType        #134:#133     // isDigit:(I)Z\n-  #111 = NameAndType        #135:#124     // appendCodePoint:(I)Ljava/lang/StringBuilder;\n-  #112 = Class              #136          // java/lang/String\n-  #113 = NameAndType        #137:#138     // toCharArray:()[C\n-  #114 = NameAndType        #52:#70       // random:(I[C)Ljava/lang/String;\n-  #115 = Utf8               java/util/Random\n-  #116 = Utf8               org/apache/commons/lang3/RandomStringUtils\n-  #117 = Utf8               java/lang/Object\n-  #118 = Utf8               [C\n-  #119 = Utf8               org/apache/commons/lang3/RandomUtils\n-  #120 = Utf8               nextInt\n-  #121 = Utf8               (II)I\n-  #122 = Utf8               append\n-  #123 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #124 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #125 = Utf8               toString\n-  #126 = Utf8               ()Ljava/lang/String;\n-  #127 = Utf8               (Ljava/lang/String;)V\n-  #128 = Utf8               (I)V\n-  #129 = Utf8               (I)I\n-  #130 = Utf8               getType\n-  #131 = Utf8               charCount\n-  #132 = Utf8               isLetter\n-  #133 = Utf8               (I)Z\n-  #134 = Utf8               isDigit\n-  #135 = Utf8               appendCodePoint\n-  #136 = Utf8               java/lang/String\n-  #137 = Utf8               toCharArray\n-  #138 = Utf8               ()[C\n+   #66 = Class              #116          // \"[C\"\n+   #67 = Utf8               (ILjava/lang/String;)Ljava/lang/String;\n+   #68 = Utf8               (I[C)Ljava/lang/String;\n+   #69 = Utf8               <clinit>\n+   #70 = Utf8               SourceFile\n+   #71 = Utf8               RandomStringUtils.java\n+   #72 = NameAndType        #48:#49       // \"<init>\":()V\n+   #73 = NameAndType        #52:#61       // random:(IZZ)Ljava/lang/String;\n+   #74 = NameAndType        #52:#62       // random:(IIIZZ)Ljava/lang/String;\n+   #75 = Class              #117          // org/apache/commons/lang3/RandomUtils\n+   #76 = NameAndType        #118:#119     // nextInt:(II)I\n+   #77 = NameAndType        #54:#53       // randomAscii:(I)Ljava/lang/String;\n+   #78 = NameAndType        #56:#53       // randomAlphabetic:(I)Ljava/lang/String;\n+   #79 = NameAndType        #57:#53       // randomAlphanumeric:(I)Ljava/lang/String;\n+   #80 = NameAndType        #58:#53       // randomGraph:(I)Ljava/lang/String;\n+   #81 = NameAndType        #59:#53       // randomNumeric:(I)Ljava/lang/String;\n+   #82 = NameAndType        #60:#53       // randomPrint:(I)Ljava/lang/String;\n+   #83 = NameAndType        #46:#47       // RANDOM:Ljava/util/Random;\n+   #84 = NameAndType        #52:#64       // random:(IIIZZ[CLjava/util/Random;)Ljava/lang/String;\n+   #85 = Utf8               org/apache/commons/lang3/StringUtils\n+   #86 = Utf8\n+   #87 = Utf8               java/lang/IllegalArgumentException\n+   #88 = Utf8               java/lang/StringBuilder\n+   #89 = Utf8               Requested random string length\n+   #90 = NameAndType        #120:#121     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #91 = NameAndType        #120:#122     // append:(I)Ljava/lang/StringBuilder;\n+   #92 = Utf8                is less than 0.\n+   #93 = NameAndType        #123:#124     // toString:()Ljava/lang/String;\n+   #94 = NameAndType        #48:#125      // \"<init>\":(Ljava/lang/String;)V\n+   #95 = Utf8               The chars array must not be empty\n+   #96 = Utf8               java/lang/Character\n+   #97 = Utf8               Parameter end (\n+   #98 = Utf8               ) must be greater than start (\n+   #99 = Utf8               )\n+  #100 = Utf8               ) must be greater then (\n+  #101 = Utf8               ) for generating digits or greater then (\n+  #102 = Utf8               ) for generating letters.\n+  #103 = NameAndType        #48:#126      // \"<init>\":(I)V\n+  #104 = NameAndType        #118:#127     // nextInt:(I)I\n+  #105 = NameAndType        #128:#127     // getType:(I)I\n+  #106 = NameAndType        #129:#127     // charCount:(I)I\n+  #107 = NameAndType        #130:#131     // isLetter:(I)Z\n+  #108 = NameAndType        #132:#131     // isDigit:(I)Z\n+  #109 = NameAndType        #133:#122     // appendCodePoint:(I)Ljava/lang/StringBuilder;\n+  #110 = Class              #134          // java/lang/String\n+  #111 = NameAndType        #135:#136     // toCharArray:()[C\n+  #112 = NameAndType        #52:#68       // random:(I[C)Ljava/lang/String;\n+  #113 = Utf8               java/util/Random\n+  #114 = Utf8               org/apache/commons/lang3/RandomStringUtils\n+  #115 = Utf8               java/lang/Object\n+  #116 = Utf8               [C\n+  #117 = Utf8               org/apache/commons/lang3/RandomUtils\n+  #118 = Utf8               nextInt\n+  #119 = Utf8               (II)I\n+  #120 = Utf8               append\n+  #121 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #122 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #123 = Utf8               toString\n+  #124 = Utf8               ()Ljava/lang/String;\n+  #125 = Utf8               (Ljava/lang/String;)V\n+  #126 = Utf8               (I)V\n+  #127 = Utf8               (I)I\n+  #128 = Utf8               getType\n+  #129 = Utf8               charCount\n+  #130 = Utf8               isLetter\n+  #131 = Utf8               (I)Z\n+  #132 = Utf8               isDigit\n+  #133 = Utf8               appendCodePoint\n+  #134 = Utf8               java/lang/String\n+  #135 = Utf8               toCharArray\n+  #136 = Utf8               ()[C\n {\n   private static final java.util.Random RANDOM;\n     descriptor: Ljava/util/Random;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   public org.apache.commons.lang3.RandomStringUtils();\n     descriptor: ()V\n"}]}
