{"diffoscope-json-version": 1, "source1": "first/AbstractUnicodeExtraField.class", "source2": "second/AbstractUnicodeExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,168 +1,162 @@\n-  SHA-256 checksum 220e13b4e54c324010737cc099ad4b85f4e0902dc41b71a00af695d01e7ba5b6\n+  SHA-256 checksum df9ff31591db6b8402043547d07545027d44acb4db2951ca90dc996ce288b995\n   Compiled from \"AbstractUnicodeExtraField.java\"\n public abstract class org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n   major version: 51\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #36                         // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-  super_class: #37                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Methodref          #37.#94       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #95           // java/util/zip/CRC32\n-    #3 = Methodref          #2.#94        // java/util/zip/CRC32.\"<init>\":()V\n-    #4 = Methodref          #2.#96        // java/util/zip/CRC32.update:([BII)V\n-    #5 = Methodref          #2.#97        // java/util/zip/CRC32.getValue:()J\n-    #6 = Fieldref           #36.#98       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.nameCRC32:J\n-    #7 = Class              #99           // org/apache/commons/compress/utils/CharsetNames\n-    #8 = String             #100          // UTF-8\n-    #9 = Methodref          #101.#102     // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #10 = Fieldref           #36.#103      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.unicodeName:[B\n-   #11 = Class              #104          // java/io/UnsupportedEncodingException\n-   #12 = Class              #105          // java/lang/RuntimeException\n-   #13 = String             #106          // FATAL: UTF-8 encoding not supported.\n-   #14 = Methodref          #12.#107      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #15 = Methodref          #36.#108      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.\"<init>\":(Ljava/lang/String;[BII)V\n-   #16 = Fieldref           #36.#109      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.data:[B\n-   #17 = Methodref          #110.#111     // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n-   #18 = Methodref          #112.#113     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #19 = Methodref          #36.#114      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.assembleData:()V\n-   #20 = Class              #115          // org/apache/commons/compress/archivers/zip/ZipShort\n-   #21 = Methodref          #20.#116      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #22 = Methodref          #36.#117      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryData:()[B\n-   #23 = Methodref          #36.#118      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #24 = Class              #119          // java/util/zip/ZipException\n-   #25 = String             #120          // UniCode path extra data must have at least 5 bytes.\n-   #26 = Methodref          #24.#121      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Class              #122          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#94       // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = String             #123          // Unsupported version [\n-   #30 = Methodref          #27.#124      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = Methodref          #27.#125      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #32 = String             #126          // ] for UniCode path extra data.\n-   #33 = Methodref          #27.#127      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #34 = Methodref          #110.#128     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-   #35 = Methodref          #36.#129      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.parseFromLocalFileData:([BII)V\n-   #36 = Class              #130          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-   #37 = Class              #131          // java/lang/Object\n-   #38 = Class              #132          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #39 = Utf8               nameCRC32\n-   #40 = Utf8               J\n-   #41 = Utf8               unicodeName\n-   #42 = Utf8               [B\n-   #43 = Utf8               data\n-   #44 = Utf8               <init>\n-   #45 = Utf8               ()V\n-   #46 = Utf8               Code\n-   #47 = Utf8               LineNumberTable\n-   #48 = Utf8               LocalVariableTable\n-   #49 = Utf8               this\n-   #50 = Utf8               Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n-   #51 = Utf8               (Ljava/lang/String;[BII)V\n-   #52 = Utf8               e\n-   #53 = Utf8               Ljava/io/UnsupportedEncodingException;\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+    #2 = Utf8               org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Class              #6            // org/apache/commons/compress/archivers/zip/ZipExtraField\n+    #6 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+    #7 = Utf8               nameCRC32\n+    #8 = Utf8               J\n+    #9 = Utf8               unicodeName\n+   #10 = Utf8               [B\n+   #11 = Utf8               data\n+   #12 = Utf8               <init>\n+   #13 = Utf8               ()V\n+   #14 = Utf8               Code\n+   #15 = Methodref          #3.#16        // java/lang/Object.\"<init>\":()V\n+   #16 = NameAndType        #12:#13       // \"<init>\":()V\n+   #17 = Utf8               LineNumberTable\n+   #18 = Utf8               LocalVariableTable\n+   #19 = Utf8               this\n+   #20 = Utf8               Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n+   #21 = Utf8               (Ljava/lang/String;[BII)V\n+   #22 = Class              #23           // java/util/zip/CRC32\n+   #23 = Utf8               java/util/zip/CRC32\n+   #24 = Methodref          #22.#16       // java/util/zip/CRC32.\"<init>\":()V\n+   #25 = Methodref          #22.#26       // java/util/zip/CRC32.update:([BII)V\n+   #26 = NameAndType        #27:#28       // update:([BII)V\n+   #27 = Utf8               update\n+   #28 = Utf8               ([BII)V\n+   #29 = Methodref          #22.#30       // java/util/zip/CRC32.getValue:()J\n+   #30 = NameAndType        #31:#32       // getValue:()J\n+   #31 = Utf8               getValue\n+   #32 = Utf8               ()J\n+   #33 = Fieldref           #1.#34        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.nameCRC32:J\n+   #34 = NameAndType        #7:#8         // nameCRC32:J\n+   #35 = String             #36           // UTF-8\n+   #36 = Utf8               UTF-8\n+   #37 = Methodref          #38.#40       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #38 = Class              #39           // java/lang/String\n+   #39 = Utf8               java/lang/String\n+   #40 = NameAndType        #41:#42       // getBytes:(Ljava/lang/String;)[B\n+   #41 = Utf8               getBytes\n+   #42 = Utf8               (Ljava/lang/String;)[B\n+   #43 = Fieldref           #1.#44        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.unicodeName:[B\n+   #44 = NameAndType        #9:#10        // unicodeName:[B\n+   #45 = Class              #46           // java/lang/RuntimeException\n+   #46 = Utf8               java/lang/RuntimeException\n+   #47 = String             #48           // FATAL: UTF-8 encoding not supported.\n+   #48 = Utf8               FATAL: UTF-8 encoding not supported.\n+   #49 = Methodref          #45.#50       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #50 = NameAndType        #12:#51       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #51 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #52 = Class              #53           // java/io/UnsupportedEncodingException\n+   #53 = Utf8               java/io/UnsupportedEncodingException\n    #54 = Utf8               text\n    #55 = Utf8               Ljava/lang/String;\n    #56 = Utf8               bytes\n    #57 = Utf8               off\n    #58 = Utf8               I\n    #59 = Utf8               len\n    #60 = Utf8               crc32\n    #61 = Utf8               Ljava/util/zip/CRC32;\n-   #62 = Utf8               StackMapTable\n-   #63 = Class              #130          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-   #64 = Class              #133          // java/lang/String\n-   #65 = Class              #42           // \"[B\"\n-   #66 = Class              #95           // java/util/zip/CRC32\n-   #67 = Class              #104          // java/io/UnsupportedEncodingException\n-   #68 = Utf8               (Ljava/lang/String;[B)V\n+   #62 = Utf8               e\n+   #63 = Utf8               Ljava/io/UnsupportedEncodingException;\n+   #64 = Utf8               StackMapTable\n+   #65 = Class              #10           // \"[B\"\n+   #66 = Utf8               (Ljava/lang/String;[B)V\n+   #67 = Methodref          #1.#68        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.\"<init>\":(Ljava/lang/String;[BII)V\n+   #68 = NameAndType        #12:#21       // \"<init>\":(Ljava/lang/String;[BII)V\n    #69 = Utf8               assembleData\n-   #70 = Utf8               getNameCRC32\n-   #71 = Utf8               ()J\n-   #72 = Utf8               setNameCRC32\n-   #73 = Utf8               (J)V\n-   #74 = Utf8               getUnicodeName\n-   #75 = Utf8               ()[B\n-   #76 = Utf8               b\n-   #77 = Utf8               setUnicodeName\n-   #78 = Utf8               ([B)V\n-   #79 = Utf8               getCentralDirectoryData\n-   #80 = Utf8               getCentralDirectoryLength\n-   #81 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #82 = Utf8               getLocalFileDataData\n-   #83 = Utf8               getLocalFileDataLength\n-   #84 = Utf8               parseFromLocalFileData\n-   #85 = Utf8               ([BII)V\n-   #86 = Utf8               buffer\n-   #87 = Utf8               offset\n-   #88 = Utf8               length\n-   #89 = Utf8               version\n-   #90 = Utf8               Exceptions\n-   #91 = Utf8               parseFromCentralDirectoryData\n-   #92 = Utf8               SourceFile\n-   #93 = Utf8               AbstractUnicodeExtraField.java\n-   #94 = NameAndType        #44:#45       // \"<init>\":()V\n-   #95 = Utf8               java/util/zip/CRC32\n-   #96 = NameAndType        #134:#85      // update:([BII)V\n-   #97 = NameAndType        #135:#71      // getValue:()J\n-   #98 = NameAndType        #39:#40       // nameCRC32:J\n-   #99 = Utf8               org/apache/commons/compress/utils/CharsetNames\n-  #100 = Utf8               UTF-8\n-  #101 = Class              #133          // java/lang/String\n-  #102 = NameAndType        #136:#137     // getBytes:(Ljava/lang/String;)[B\n-  #103 = NameAndType        #41:#42       // unicodeName:[B\n-  #104 = Utf8               java/io/UnsupportedEncodingException\n-  #105 = Utf8               java/lang/RuntimeException\n-  #106 = Utf8               FATAL: UTF-8 encoding not supported.\n-  #107 = NameAndType        #44:#138      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #108 = NameAndType        #44:#51       // \"<init>\":(Ljava/lang/String;[BII)V\n-  #109 = NameAndType        #43:#42       // data:[B\n-  #110 = Class              #139          // org/apache/commons/compress/archivers/zip/ZipLong\n-  #111 = NameAndType        #136:#140     // getBytes:(J)[B\n-  #112 = Class              #141          // java/lang/System\n-  #113 = NameAndType        #142:#143     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #114 = NameAndType        #69:#45       // assembleData:()V\n-  #115 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #116 = NameAndType        #44:#144      // \"<init>\":(I)V\n-  #117 = NameAndType        #79:#75       // getCentralDirectoryData:()[B\n-  #118 = NameAndType        #80:#81       // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #119 = Utf8               java/util/zip/ZipException\n-  #120 = Utf8               UniCode path extra data must have at least 5 bytes.\n-  #121 = NameAndType        #44:#145      // \"<init>\":(Ljava/lang/String;)V\n-  #122 = Utf8               java/lang/StringBuilder\n-  #123 = Utf8               Unsupported version [\n-  #124 = NameAndType        #146:#147     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #125 = NameAndType        #146:#148     // append:(I)Ljava/lang/StringBuilder;\n+   #70 = Fieldref           #1.#71        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.data:[B\n+   #71 = NameAndType        #11:#10       // data:[B\n+   #72 = Methodref          #73.#75       // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+   #73 = Class              #74           // org/apache/commons/compress/archivers/zip/ZipLong\n+   #74 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+   #75 = NameAndType        #41:#76       // getBytes:(J)[B\n+   #76 = Utf8               (J)[B\n+   #77 = Methodref          #78.#80       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #78 = Class              #79           // java/lang/System\n+   #79 = Utf8               java/lang/System\n+   #80 = NameAndType        #81:#82       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #81 = Utf8               arraycopy\n+   #82 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #83 = Utf8               getNameCRC32\n+   #84 = Utf8               setNameCRC32\n+   #85 = Utf8               (J)V\n+   #86 = Utf8               getUnicodeName\n+   #87 = Utf8               ()[B\n+   #88 = Utf8               b\n+   #89 = Utf8               setUnicodeName\n+   #90 = Utf8               ([B)V\n+   #91 = Utf8               getCentralDirectoryData\n+   #92 = Methodref          #1.#93        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.assembleData:()V\n+   #93 = NameAndType        #69:#13       // assembleData:()V\n+   #94 = Utf8               getCentralDirectoryLength\n+   #95 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #96 = Class              #97           // org/apache/commons/compress/archivers/zip/ZipShort\n+   #97 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #98 = Methodref          #96.#99       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #99 = NameAndType        #12:#100      // \"<init>\":(I)V\n+  #100 = Utf8               (I)V\n+  #101 = Utf8               getLocalFileDataData\n+  #102 = Methodref          #1.#103       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryData:()[B\n+  #103 = NameAndType        #91:#87       // getCentralDirectoryData:()[B\n+  #104 = Utf8               getLocalFileDataLength\n+  #105 = Methodref          #1.#106       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #106 = NameAndType        #94:#95       // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #107 = Utf8               parseFromLocalFileData\n+  #108 = Utf8               Exceptions\n+  #109 = Class              #110          // java/util/zip/ZipException\n+  #110 = Utf8               java/util/zip/ZipException\n+  #111 = String             #112          // UniCode path extra data must have at least 5 bytes.\n+  #112 = Utf8               UniCode path extra data must have at least 5 bytes.\n+  #113 = Methodref          #109.#114     // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+  #114 = NameAndType        #12:#115      // \"<init>\":(Ljava/lang/String;)V\n+  #115 = Utf8               (Ljava/lang/String;)V\n+  #116 = Class              #117          // java/lang/StringBuilder\n+  #117 = Utf8               java/lang/StringBuilder\n+  #118 = String             #119          // Unsupported version [\n+  #119 = Utf8               Unsupported version [\n+  #120 = Methodref          #116.#114     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #121 = Methodref          #116.#122     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #122 = NameAndType        #123:#124     // append:(I)Ljava/lang/StringBuilder;\n+  #123 = Utf8               append\n+  #124 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #125 = String             #126          // ] for UniCode path extra data.\n   #126 = Utf8               ] for UniCode path extra data.\n-  #127 = NameAndType        #149:#150     // toString:()Ljava/lang/String;\n-  #128 = NameAndType        #135:#151     // getValue:([BI)J\n-  #129 = NameAndType        #84:#85       // parseFromLocalFileData:([BII)V\n-  #130 = Utf8               org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-  #131 = Utf8               java/lang/Object\n-  #132 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #133 = Utf8               java/lang/String\n-  #134 = Utf8               update\n-  #135 = Utf8               getValue\n-  #136 = Utf8               getBytes\n-  #137 = Utf8               (Ljava/lang/String;)[B\n-  #138 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #139 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #140 = Utf8               (J)[B\n-  #141 = Utf8               java/lang/System\n-  #142 = Utf8               arraycopy\n-  #143 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #144 = Utf8               (I)V\n-  #145 = Utf8               (Ljava/lang/String;)V\n-  #146 = Utf8               append\n-  #147 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #148 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #149 = Utf8               toString\n-  #150 = Utf8               ()Ljava/lang/String;\n-  #151 = Utf8               ([BI)J\n+  #127 = Methodref          #116.#128     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #128 = NameAndType        #123:#129     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #129 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #130 = Methodref          #116.#131     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #131 = NameAndType        #132:#133     // toString:()Ljava/lang/String;\n+  #132 = Utf8               toString\n+  #133 = Utf8               ()Ljava/lang/String;\n+  #134 = Methodref          #73.#135      // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+  #135 = NameAndType        #31:#136      // getValue:([BI)J\n+  #136 = Utf8               ([BI)J\n+  #137 = Utf8               buffer\n+  #138 = Utf8               offset\n+  #139 = Utf8               length\n+  #140 = Utf8               version\n+  #141 = Utf8               parseFromCentralDirectoryData\n+  #142 = Methodref          #1.#143       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.parseFromLocalFileData:([BII)V\n+  #143 = NameAndType        #107:#28      // parseFromLocalFileData:([BII)V\n+  #144 = Utf8               SourceFile\n+  #145 = Utf8               AbstractUnicodeExtraField.java\n {\n   private long nameCRC32;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   private byte[] unicodeName;\n     descriptor: [B\n@@ -174,79 +168,78 @@\n \n   protected org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 36: 0\n         line 37: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n \n   protected org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField(java.lang.String, byte[], int, int);\n     descriptor: (Ljava/lang/String;[BII)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=7, args_size=5\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n-         4: new           #2                  // class java/util/zip/CRC32\n+         1: invokespecial #15                 // Method java/lang/Object.\"<init>\":()V\n+         4: new           #22                 // class java/util/zip/CRC32\n          7: dup\n-         8: invokespecial #3                  // Method java/util/zip/CRC32.\"<init>\":()V\n+         8: invokespecial #24                 // Method java/util/zip/CRC32.\"<init>\":()V\n         11: astore        5\n         13: aload         5\n         15: aload_2\n         16: iload_3\n         17: iload         4\n-        19: invokevirtual #4                  // Method java/util/zip/CRC32.update:([BII)V\n+        19: invokevirtual #25                 // Method java/util/zip/CRC32.update:([BII)V\n         22: aload_0\n         23: aload         5\n-        25: invokevirtual #5                  // Method java/util/zip/CRC32.getValue:()J\n-        28: putfield      #6                  // Field nameCRC32:J\n+        25: invokevirtual #29                 // Method java/util/zip/CRC32.getValue:()J\n+        28: putfield      #33                 // Field nameCRC32:J\n         31: aload_0\n         32: aload_1\n-        33: ldc           #8                  // String UTF-8\n-        35: invokevirtual #9                  // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n-        38: putfield      #10                 // Field unicodeName:[B\n+        33: ldc           #35                 // String UTF-8\n+        35: invokevirtual #37                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n+        38: putfield      #43                 // Field unicodeName:[B\n         41: goto          58\n         44: astore        6\n-        46: new           #12                 // class java/lang/RuntimeException\n+        46: new           #45                 // class java/lang/RuntimeException\n         49: dup\n-        50: ldc           #13                 // String FATAL: UTF-8 encoding not supported.\n+        50: ldc           #47                 // String FATAL: UTF-8 encoding not supported.\n         52: aload         6\n-        54: invokespecial #14                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        54: invokespecial #49                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         57: athrow\n         58: return\n       Exception table:\n          from    to  target type\n             31    41    44   Class java/io/UnsupportedEncodingException\n       LineNumberTable:\n         line 51: 0\n         line 52: 4\n         line 53: 13\n         line 54: 22\n         line 57: 31\n-        line 60: 41\n-        line 58: 44\n+        line 58: 41\n         line 59: 46\n         line 61: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           46      12     6     e   Ljava/io/UnsupportedEncodingException;\n             0      59     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n             0      59     1  text   Ljava/lang/String;\n             0      59     2 bytes   [B\n             0      59     3   off   I\n             0      59     4   len   I\n            13      46     5 crc32   Ljava/util/zip/CRC32;\n+           46      12     6     e   Ljava/io/UnsupportedEncodingException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 44\n           locals = [ class org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField, class java/lang/String, class \"[B\", int, int, class java/util/zip/CRC32 ]\n           stack = [ class java/io/UnsupportedEncodingException ]\n         frame_type = 13 /* same */\n \n@@ -257,15 +250,15 @@\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n          4: aload_2\n          5: arraylength\n-         6: invokespecial #15                 // Method \"<init>\":(Ljava/lang/String;[BII)V\n+         6: invokespecial #67                 // Method \"<init>\":(Ljava/lang/String;[BII)V\n          9: return\n       LineNumberTable:\n         line 72: 0\n         line 73: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n@@ -274,49 +267,49 @@\n \n   private void assembleData();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field unicodeName:[B\n+         1: getfield      #43                 // Field unicodeName:[B\n          4: ifnonnull     8\n          7: return\n          8: aload_0\n          9: iconst_5\n         10: aload_0\n-        11: getfield      #10                 // Field unicodeName:[B\n+        11: getfield      #43                 // Field unicodeName:[B\n         14: arraylength\n         15: iadd\n         16: newarray       byte\n-        18: putfield      #16                 // Field data:[B\n+        18: putfield      #70                 // Field data:[B\n         21: aload_0\n-        22: getfield      #16                 // Field data:[B\n+        22: getfield      #70                 // Field data:[B\n         25: iconst_0\n         26: iconst_1\n         27: bastore\n         28: aload_0\n-        29: getfield      #6                  // Field nameCRC32:J\n-        32: invokestatic  #17                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+        29: getfield      #33                 // Field nameCRC32:J\n+        32: invokestatic  #72                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n         35: iconst_0\n         36: aload_0\n-        37: getfield      #16                 // Field data:[B\n+        37: getfield      #70                 // Field data:[B\n         40: iconst_1\n         41: iconst_4\n-        42: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        42: invokestatic  #77                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         45: aload_0\n-        46: getfield      #10                 // Field unicodeName:[B\n+        46: getfield      #43                 // Field unicodeName:[B\n         49: iconst_0\n         50: aload_0\n-        51: getfield      #16                 // Field data:[B\n+        51: getfield      #70                 // Field data:[B\n         54: iconst_5\n         55: aload_0\n-        56: getfield      #10                 // Field unicodeName:[B\n+        56: getfield      #43                 // Field unicodeName:[B\n         59: arraylength\n-        60: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        60: invokestatic  #77                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         63: return\n       LineNumberTable:\n         line 76: 0\n         line 77: 7\n         line 80: 8\n         line 82: 21\n         line 83: 28\n@@ -330,33 +323,33 @@\n \n   public long getNameCRC32();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field nameCRC32:J\n+         1: getfield      #33                 // Field nameCRC32:J\n          4: lreturn\n       LineNumberTable:\n         line 92: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n \n   public void setNameCRC32(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #6                  // Field nameCRC32:J\n+         2: putfield      #33                 // Field nameCRC32:J\n          5: aload_0\n          6: aconst_null\n-         7: putfield      #16                 // Field data:[B\n+         7: putfield      #70                 // Field data:[B\n         10: return\n       LineNumberTable:\n         line 100: 0\n         line 101: 5\n         line 102: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -367,29 +360,29 @@\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aconst_null\n          1: astore_1\n          2: aload_0\n-         3: getfield      #10                 // Field unicodeName:[B\n+         3: getfield      #43                 // Field unicodeName:[B\n          6: ifnull        29\n          9: aload_0\n-        10: getfield      #10                 // Field unicodeName:[B\n+        10: getfield      #43                 // Field unicodeName:[B\n         13: arraylength\n         14: newarray       byte\n         16: astore_1\n         17: aload_0\n-        18: getfield      #10                 // Field unicodeName:[B\n+        18: getfield      #43                 // Field unicodeName:[B\n         21: iconst_0\n         22: aload_1\n         23: iconst_0\n         24: aload_1\n         25: arraylength\n-        26: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        26: invokestatic  #77                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         29: aload_1\n         30: areturn\n       LineNumberTable:\n         line 108: 0\n         line 109: 2\n         line 110: 9\n         line 111: 17\n@@ -410,35 +403,38 @@\n       stack=5, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        27\n          4: aload_0\n          5: aload_1\n          6: arraylength\n          7: newarray       byte\n-         9: putfield      #10                 // Field unicodeName:[B\n+         9: putfield      #43                 // Field unicodeName:[B\n         12: aload_1\n         13: iconst_0\n         14: aload_0\n-        15: getfield      #10                 // Field unicodeName:[B\n+        15: getfield      #43                 // Field unicodeName:[B\n         18: iconst_0\n         19: aload_1\n         20: arraylength\n-        21: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        21: invokestatic  #77                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         24: goto          32\n         27: aload_0\n         28: aconst_null\n-        29: putfield      #10                 // Field unicodeName:[B\n+        29: putfield      #43                 // Field unicodeName:[B\n         32: aload_0\n         33: aconst_null\n-        34: putfield      #16                 // Field data:[B\n+        34: putfield      #70                 // Field data:[B\n         37: return\n       LineNumberTable:\n         line 120: 0\n         line 121: 4\n         line 122: 12\n+        line 123: 19\n+        line 122: 21\n+        line 124: 24\n         line 125: 27\n         line 127: 32\n         line 128: 37\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      38     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n             0      38     1 unicodeName   [B\n@@ -448,36 +444,36 @@\n \n   public byte[] getCentralDirectoryData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field data:[B\n+         1: getfield      #70                 // Field data:[B\n          4: ifnonnull     11\n          7: aload_0\n-         8: invokespecial #19                 // Method assembleData:()V\n+         8: invokespecial #92                 // Method assembleData:()V\n         11: aconst_null\n         12: astore_1\n         13: aload_0\n-        14: getfield      #16                 // Field data:[B\n+        14: getfield      #70                 // Field data:[B\n         17: ifnull        40\n         20: aload_0\n-        21: getfield      #16                 // Field data:[B\n+        21: getfield      #70                 // Field data:[B\n         24: arraylength\n         25: newarray       byte\n         27: astore_1\n         28: aload_0\n-        29: getfield      #16                 // Field data:[B\n+        29: getfield      #70                 // Field data:[B\n         32: iconst_0\n         33: aload_1\n         34: iconst_0\n         35: aload_1\n         36: arraylength\n-        37: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        37: invokestatic  #77                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         40: aload_1\n         41: areturn\n       LineNumberTable:\n         line 132: 0\n         line 133: 7\n         line 135: 11\n         line 136: 13\n@@ -496,29 +492,29 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field data:[B\n+         1: getfield      #70                 // Field data:[B\n          4: ifnonnull     11\n          7: aload_0\n-         8: invokespecial #19                 // Method assembleData:()V\n-        11: new           #20                 // class org/apache/commons/compress/archivers/zip/ZipShort\n+         8: invokespecial #92                 // Method assembleData:()V\n+        11: new           #96                 // class org/apache/commons/compress/archivers/zip/ZipShort\n         14: dup\n         15: aload_0\n-        16: getfield      #16                 // Field data:[B\n+        16: getfield      #70                 // Field data:[B\n         19: ifnull        30\n         22: aload_0\n-        23: getfield      #16                 // Field data:[B\n+        23: getfield      #70                 // Field data:[B\n         26: arraylength\n         27: goto          31\n         30: iconst_0\n-        31: invokespecial #21                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        31: invokespecial #98                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         34: areturn\n       LineNumberTable:\n         line 145: 0\n         line 146: 7\n         line 148: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -536,141 +532,142 @@\n \n   public byte[] getLocalFileDataData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #22                 // Method getCentralDirectoryData:()[B\n+         1: invokevirtual #102                // Method getCentralDirectoryData:()[B\n          4: areturn\n       LineNumberTable:\n         line 153: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #23                 // Method getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         1: invokevirtual #105                // Method getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          4: areturn\n       LineNumberTable:\n         line 158: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n \n   public void parseFromLocalFileData(byte[], int, int) throws java.util.zip.ZipException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.util.zip.ZipException\n     Code:\n       stack=6, locals=5, args_size=4\n          0: iload_3\n          1: iconst_5\n          2: if_icmpge     15\n-         5: new           #24                 // class java/util/zip/ZipException\n+         5: new           #109                // class java/util/zip/ZipException\n          8: dup\n-         9: ldc           #25                 // String UniCode path extra data must have at least 5 bytes.\n-        11: invokespecial #26                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+         9: ldc           #111                // String UniCode path extra data must have at least 5 bytes.\n+        11: invokespecial #113                // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n         14: athrow\n         15: aload_1\n         16: iload_2\n         17: baload\n         18: istore        4\n         20: iload         4\n         22: iconst_1\n-        23: if_icmpeq     59\n-        26: new           #24                 // class java/util/zip/ZipException\n+        23: if_icmpeq     56\n+        26: new           #109                // class java/util/zip/ZipException\n         29: dup\n-        30: new           #27                 // class java/lang/StringBuilder\n+        30: new           #116                // class java/lang/StringBuilder\n         33: dup\n-        34: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        37: ldc           #29                 // String Unsupported version [\n-        39: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: iload         4\n-        44: invokevirtual #31                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        47: ldc           #32                 // String ] for UniCode path extra data.\n-        49: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        52: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        55: invokespecial #26                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        58: athrow\n-        59: aload_0\n-        60: aload_1\n-        61: iload_2\n-        62: iconst_1\n-        63: iadd\n-        64: invokestatic  #34                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-        67: putfield      #6                  // Field nameCRC32:J\n-        70: aload_0\n-        71: iload_3\n-        72: iconst_5\n-        73: isub\n-        74: newarray       byte\n-        76: putfield      #10                 // Field unicodeName:[B\n-        79: aload_1\n-        80: iload_2\n-        81: iconst_5\n-        82: iadd\n-        83: aload_0\n-        84: getfield      #10                 // Field unicodeName:[B\n-        87: iconst_0\n-        88: iload_3\n-        89: iconst_5\n-        90: isub\n-        91: invokestatic  #18                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-        94: aload_0\n-        95: aconst_null\n-        96: putfield      #16                 // Field data:[B\n-        99: return\n+        34: ldc           #118                // String Unsupported version [\n+        36: invokespecial #120                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        39: iload         4\n+        41: invokevirtual #121                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        44: ldc           #125                // String ] for UniCode path extra data.\n+        46: invokevirtual #127                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        49: invokevirtual #130                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        52: invokespecial #113                // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        55: athrow\n+        56: aload_0\n+        57: aload_1\n+        58: iload_2\n+        59: iconst_1\n+        60: iadd\n+        61: invokestatic  #134                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+        64: putfield      #33                 // Field nameCRC32:J\n+        67: aload_0\n+        68: iload_3\n+        69: iconst_5\n+        70: isub\n+        71: newarray       byte\n+        73: putfield      #43                 // Field unicodeName:[B\n+        76: aload_1\n+        77: iload_2\n+        78: iconst_5\n+        79: iadd\n+        80: aload_0\n+        81: getfield      #43                 // Field unicodeName:[B\n+        84: iconst_0\n+        85: iload_3\n+        86: iconst_5\n+        87: isub\n+        88: invokestatic  #77                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        91: aload_0\n+        92: aconst_null\n+        93: putfield      #70                 // Field data:[B\n+        96: return\n       LineNumberTable:\n         line 165: 0\n         line 166: 5\n         line 169: 15\n         line 171: 20\n         line 172: 26\n-        line 176: 59\n-        line 177: 70\n-        line 178: 79\n-        line 179: 94\n-        line 180: 99\n+        line 173: 44\n+        line 172: 52\n+        line 176: 56\n+        line 177: 67\n+        line 178: 76\n+        line 179: 91\n+        line 180: 96\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     100     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n-            0     100     1 buffer   [B\n-            0     100     2 offset   I\n-            0     100     3 length   I\n-           20      80     4 version   I\n+            0      97     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n+            0      97     1 buffer   [B\n+            0      97     2 offset   I\n+            0      97     3 length   I\n+           20      77     4 version   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 15 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 43\n+          offset_delta = 40\n           locals = [ int ]\n-    Exceptions:\n-      throws java.util.zip.ZipException\n \n   public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.util.zip.ZipException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #35                 // Method parseFromLocalFileData:([BII)V\n+         4: invokevirtual #142                // Method parseFromLocalFileData:([BII)V\n          7: return\n       LineNumberTable:\n         line 190: 0\n         line 191: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n             0       8     1 buffer   [B\n             0       8     2 offset   I\n             0       8     3 length   I\n-    Exceptions:\n-      throws java.util.zip.ZipException\n }\n SourceFile: \"AbstractUnicodeExtraField.java\"\n"}]}
