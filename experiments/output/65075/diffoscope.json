{"diffoscope-json-version": 1, "source1": "first/LZWInputStream.class", "source2": "second/LZWInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,218 +1,217 @@\n-  SHA-256 checksum 12bcde7279b24f42a28efbd265322eaec8c3ab40a039030c0943218258382829\n+  SHA-256 checksum 4ada8a373006b68ff0075d6401453ceeb1f6e792fb0313a10eda915bba9e0f2d\n   Compiled from \"LZWInputStream.java\"\n public abstract class org.apache.commons.compress.compressors.lzw.LZWInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n-  major version: 53\n+  major version: 51\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #4                          // org/apache/commons/compress/compressors/lzw/LZWInputStream\n-  super_class: #39                        // org/apache/commons/compress/compressors/CompressorInputStream\n-  interfaces: 1, fields: 13, methods: 26, attributes: 3\n+  this_class: #1                          // org/apache/commons/compress/compressors/lzw/LZWInputStream\n+  super_class: #3                         // org/apache/commons/compress/compressors/CompressorInputStream\n+  interfaces: 1, fields: 13, methods: 26, attributes: 1\n Constant pool:\n-    #1 = Methodref          #39.#134      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #2 = Fieldref           #4.#135       // org/apache/commons/compress/compressors/lzw/LZWInputStream.oneByte:[B\n-    #3 = Fieldref           #4.#136       // org/apache/commons/compress/compressors/lzw/LZWInputStream.clearCode:I\n-    #4 = Class              #137          // org/apache/commons/compress/compressors/lzw/LZWInputStream\n-    #5 = Fieldref           #4.#138       // org/apache/commons/compress/compressors/lzw/LZWInputStream.codeSize:I\n-    #6 = Fieldref           #4.#139       // org/apache/commons/compress/compressors/lzw/LZWInputStream.previousCode:I\n-    #7 = Class              #140          // org/apache/commons/compress/utils/BitInputStream\n-    #8 = Methodref          #7.#141       // org/apache/commons/compress/utils/BitInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n-    #9 = Fieldref           #4.#142       // org/apache/commons/compress/compressors/lzw/LZWInputStream.in:Lorg/apache/commons/compress/utils/BitInputStream;\n-   #10 = Methodref          #7.#143       // org/apache/commons/compress/utils/BitInputStream.close:()V\n-   #11 = Methodref          #4.#144       // org/apache/commons/compress/compressors/lzw/LZWInputStream.read:([B)I\n-   #12 = Methodref          #4.#145       // org/apache/commons/compress/compressors/lzw/LZWInputStream.readFromStack:([BII)I\n-   #13 = Methodref          #4.#146       // org/apache/commons/compress/compressors/lzw/LZWInputStream.decompressNextSymbol:()I\n-   #14 = Methodref          #4.#147       // org/apache/commons/compress/compressors/lzw/LZWInputStream.count:(I)V\n-   #15 = Methodref          #7.#148       // org/apache/commons/compress/utils/BitInputStream.getBytesRead:()J\n-   #16 = Class              #149          // java/lang/IllegalArgumentException\n-   #17 = InvokeDynamic      #0:#153       // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-   #18 = Methodref          #16.#154      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Long               6l\n-   #21 = Class              #155          // org/apache/commons/compress/MemoryLimitException\n-   #22 = Methodref          #21.#156      // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n-   #23 = Methodref          #4.#157       // org/apache/commons/compress/compressors/lzw/LZWInputStream.initializeTables:(I)V\n-   #24 = Fieldref           #4.#158       // org/apache/commons/compress/compressors/lzw/LZWInputStream.prefixes:[I\n-   #25 = Fieldref           #4.#159       // org/apache/commons/compress/compressors/lzw/LZWInputStream.characters:[B\n-   #26 = Fieldref           #4.#160       // org/apache/commons/compress/compressors/lzw/LZWInputStream.outputStack:[B\n-   #27 = Fieldref           #4.#161       // org/apache/commons/compress/compressors/lzw/LZWInputStream.outputStackLocation:I\n-   #28 = String             #162          // Code size must not be bigger than 31\n-   #29 = Methodref          #7.#163       // org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n-   #30 = Fieldref           #4.#164       // org/apache/commons/compress/compressors/lzw/LZWInputStream.tableSize:I\n-   #31 = Class              #165          // java/io/IOException\n-   #32 = String             #166          // The first code can\\'t be a reference to its preceding code\n-   #33 = Methodref          #31.#154      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #34 = Fieldref           #4.#167       // org/apache/commons/compress/compressors/lzw/LZWInputStream.previousCodeFirstChar:B\n-   #35 = Methodref          #4.#168       // org/apache/commons/compress/compressors/lzw/LZWInputStream.addEntry:(IB)I\n-   #36 = Methodref          #169.#170     // java/lang/Math.min:(II)I\n-   #37 = Methodref          #171.#172     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #38 = Methodref          #4.#173       // org/apache/commons/compress/compressors/lzw/LZWInputStream.setCodeSize:(I)V\n-   #39 = Class              #174          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #40 = Class              #175          // org/apache/commons/compress/utils/InputStreamStatistics\n-   #41 = Utf8               DEFAULT_CODE_SIZE\n-   #42 = Utf8               I\n-   #43 = Utf8               ConstantValue\n-   #44 = Integer            9\n-   #45 = Utf8               UNUSED_PREFIX\n-   #46 = Integer            -1\n-   #47 = Utf8               oneByte\n-   #48 = Utf8               [B\n-   #49 = Utf8               in\n-   #50 = Utf8               Lorg/apache/commons/compress/utils/BitInputStream;\n-   #51 = Utf8               clearCode\n-   #52 = Utf8               codeSize\n-   #53 = Utf8               previousCodeFirstChar\n-   #54 = Utf8               B\n-   #55 = Utf8               previousCode\n-   #56 = Utf8               tableSize\n-   #57 = Utf8               prefixes\n-   #58 = Utf8               [I\n-   #59 = Utf8               characters\n-   #60 = Utf8               outputStack\n-   #61 = Utf8               outputStackLocation\n-   #62 = Utf8               <init>\n-   #63 = Utf8               (Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n-   #64 = Utf8               Code\n-   #65 = Utf8               LineNumberTable\n-   #66 = Utf8               LocalVariableTable\n-   #67 = Utf8               this\n-   #68 = Utf8               Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n-   #69 = Utf8               inputStream\n-   #70 = Utf8               Ljava/io/InputStream;\n-   #71 = Utf8               byteOrder\n-   #72 = Utf8               Ljava/nio/ByteOrder;\n-   #73 = Utf8               close\n-   #74 = Utf8               ()V\n-   #75 = Utf8               Exceptions\n-   #76 = Utf8               read\n-   #77 = Utf8               ()I\n-   #78 = Utf8               ret\n-   #79 = Utf8               StackMapTable\n-   #80 = Utf8               ([BII)I\n-   #81 = Utf8               result\n-   #82 = Utf8               b\n-   #83 = Utf8               off\n-   #84 = Utf8               len\n-   #85 = Utf8               bytesRead\n-   #86 = Utf8               getCompressedCount\n-   #87 = Utf8               ()J\n-   #88 = Utf8               decompressNextSymbol\n-   #89 = Utf8               addEntry\n-   #90 = Utf8               (IB)I\n-   #91 = Utf8               setClearCode\n-   #92 = Utf8               (I)V\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/lzw/LZWInputStream\n+    #2 = Utf8               org/apache/commons/compress/compressors/lzw/LZWInputStream\n+    #3 = Class              #4            // org/apache/commons/compress/compressors/CompressorInputStream\n+    #4 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+    #5 = Class              #6            // org/apache/commons/compress/utils/InputStreamStatistics\n+    #6 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+    #7 = Utf8               DEFAULT_CODE_SIZE\n+    #8 = Utf8               I\n+    #9 = Utf8               ConstantValue\n+   #10 = Integer            9\n+   #11 = Utf8               UNUSED_PREFIX\n+   #12 = Integer            -1\n+   #13 = Utf8               oneByte\n+   #14 = Utf8               [B\n+   #15 = Utf8               in\n+   #16 = Utf8               Lorg/apache/commons/compress/utils/BitInputStream;\n+   #17 = Utf8               clearCode\n+   #18 = Utf8               codeSize\n+   #19 = Utf8               previousCodeFirstChar\n+   #20 = Utf8               B\n+   #21 = Utf8               previousCode\n+   #22 = Utf8               tableSize\n+   #23 = Utf8               prefixes\n+   #24 = Utf8               [I\n+   #25 = Utf8               characters\n+   #26 = Utf8               outputStack\n+   #27 = Utf8               outputStackLocation\n+   #28 = Utf8               <init>\n+   #29 = Utf8               (Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+   #30 = Utf8               Code\n+   #31 = Methodref          #3.#32        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #32 = NameAndType        #28:#33       // \"<init>\":()V\n+   #33 = Utf8               ()V\n+   #34 = Fieldref           #1.#35        // org/apache/commons/compress/compressors/lzw/LZWInputStream.oneByte:[B\n+   #35 = NameAndType        #13:#14       // oneByte:[B\n+   #36 = Fieldref           #1.#37        // org/apache/commons/compress/compressors/lzw/LZWInputStream.clearCode:I\n+   #37 = NameAndType        #17:#8        // clearCode:I\n+   #38 = Fieldref           #1.#39        // org/apache/commons/compress/compressors/lzw/LZWInputStream.codeSize:I\n+   #39 = NameAndType        #18:#8        // codeSize:I\n+   #40 = Fieldref           #1.#41        // org/apache/commons/compress/compressors/lzw/LZWInputStream.previousCode:I\n+   #41 = NameAndType        #21:#8        // previousCode:I\n+   #42 = Class              #43           // org/apache/commons/compress/utils/BitInputStream\n+   #43 = Utf8               org/apache/commons/compress/utils/BitInputStream\n+   #44 = Methodref          #42.#45       // org/apache/commons/compress/utils/BitInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+   #45 = NameAndType        #28:#29       // \"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+   #46 = Fieldref           #1.#47        // org/apache/commons/compress/compressors/lzw/LZWInputStream.in:Lorg/apache/commons/compress/utils/BitInputStream;\n+   #47 = NameAndType        #15:#16       // in:Lorg/apache/commons/compress/utils/BitInputStream;\n+   #48 = Utf8               LineNumberTable\n+   #49 = Utf8               LocalVariableTable\n+   #50 = Utf8               this\n+   #51 = Utf8               Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n+   #52 = Utf8               inputStream\n+   #53 = Utf8               Ljava/io/InputStream;\n+   #54 = Utf8               byteOrder\n+   #55 = Utf8               Ljava/nio/ByteOrder;\n+   #56 = Utf8               close\n+   #57 = Utf8               Exceptions\n+   #58 = Class              #59           // java/io/IOException\n+   #59 = Utf8               java/io/IOException\n+   #60 = Methodref          #42.#61       // org/apache/commons/compress/utils/BitInputStream.close:()V\n+   #61 = NameAndType        #56:#33       // close:()V\n+   #62 = Utf8               read\n+   #63 = Utf8               ()I\n+   #64 = Methodref          #1.#65        // org/apache/commons/compress/compressors/lzw/LZWInputStream.read:([B)I\n+   #65 = NameAndType        #62:#66       // read:([B)I\n+   #66 = Utf8               ([B)I\n+   #67 = Utf8               ret\n+   #68 = Utf8               StackMapTable\n+   #69 = Utf8               ([BII)I\n+   #70 = Methodref          #1.#71        // org/apache/commons/compress/compressors/lzw/LZWInputStream.readFromStack:([BII)I\n+   #71 = NameAndType        #72:#69       // readFromStack:([BII)I\n+   #72 = Utf8               readFromStack\n+   #73 = Methodref          #1.#74        // org/apache/commons/compress/compressors/lzw/LZWInputStream.decompressNextSymbol:()I\n+   #74 = NameAndType        #75:#63       // decompressNextSymbol:()I\n+   #75 = Utf8               decompressNextSymbol\n+   #76 = Methodref          #1.#77        // org/apache/commons/compress/compressors/lzw/LZWInputStream.count:(I)V\n+   #77 = NameAndType        #78:#79       // count:(I)V\n+   #78 = Utf8               count\n+   #79 = Utf8               (I)V\n+   #80 = Utf8               b\n+   #81 = Utf8               off\n+   #82 = Utf8               len\n+   #83 = Utf8               bytesRead\n+   #84 = Utf8               result\n+   #85 = Utf8               getCompressedCount\n+   #86 = Utf8               ()J\n+   #87 = Methodref          #42.#88       // org/apache/commons/compress/utils/BitInputStream.getBytesRead:()J\n+   #88 = NameAndType        #89:#86       // getBytesRead:()J\n+   #89 = Utf8               getBytesRead\n+   #90 = Utf8               addEntry\n+   #91 = Utf8               (IB)I\n+   #92 = Utf8               setClearCode\n    #93 = Utf8               initializeTables\n    #94 = Utf8               (II)V\n-   #95 = Utf8               maxTableSize\n-   #96 = Utf8               memoryUsageInBytes\n-   #97 = Utf8               J\n-   #98 = Utf8               memoryUsageInKb\n-   #99 = Utf8               maxCodeSize\n-  #100 = Utf8               memoryLimitInKb\n-  #101 = Utf8               i\n-  #102 = Utf8               max\n-  #103 = Utf8               readNextCode\n-  #104 = Utf8               (IBI)I\n-  #105 = Utf8               character\n-  #106 = Utf8               addRepeatOfPreviousCode\n-  #107 = Utf8               expandCodeToOutputStack\n-  #108 = Utf8               (IZ)I\n-  #109 = Utf8               entry\n-  #110 = Utf8               code\n-  #111 = Utf8               addedUnfinishedEntry\n-  #112 = Utf8               Z\n-  #113 = Utf8               readFromStack\n-  #114 = Utf8               maxLength\n-  #115 = Utf8               remainingInStack\n-  #116 = Utf8               getCodeSize\n-  #117 = Utf8               resetCodeSize\n-  #118 = Utf8               setCodeSize\n-  #119 = Utf8               cs\n-  #120 = Utf8               incrementCodeSize\n-  #121 = Utf8               resetPreviousCode\n-  #122 = Utf8               getPrefix\n-  #123 = Utf8               (I)I\n-  #124 = Utf8               offset\n-  #125 = Utf8               setPrefix\n-  #126 = Utf8               value\n-  #127 = Utf8               getPrefixesLength\n-  #128 = Utf8               getClearCode\n-  #129 = Utf8               getTableSize\n-  #130 = Utf8               setTableSize\n-  #131 = Utf8               newSize\n-  #132 = Utf8               SourceFile\n-  #133 = Utf8               LZWInputStream.java\n-  #134 = NameAndType        #62:#74       // \"<init>\":()V\n-  #135 = NameAndType        #47:#48       // oneByte:[B\n-  #136 = NameAndType        #51:#42       // clearCode:I\n-  #137 = Utf8               org/apache/commons/compress/compressors/lzw/LZWInputStream\n-  #138 = NameAndType        #52:#42       // codeSize:I\n-  #139 = NameAndType        #55:#42       // previousCode:I\n-  #140 = Utf8               org/apache/commons/compress/utils/BitInputStream\n-  #141 = NameAndType        #62:#63       // \"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n-  #142 = NameAndType        #49:#50       // in:Lorg/apache/commons/compress/utils/BitInputStream;\n-  #143 = NameAndType        #73:#74       // close:()V\n-  #144 = NameAndType        #76:#176      // read:([B)I\n-  #145 = NameAndType        #113:#80      // readFromStack:([BII)I\n-  #146 = NameAndType        #88:#77       // decompressNextSymbol:()I\n-  #147 = NameAndType        #177:#92      // count:(I)V\n-  #148 = NameAndType        #178:#87      // getBytesRead:()J\n-  #149 = Utf8               java/lang/IllegalArgumentException\n-  #150 = Utf8               BootstrapMethods\n-  #151 = MethodHandle       6:#179        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #152 = String             #180          // maxCodeSize is \\u0001, must be bigger than 0\n-  #153 = NameAndType        #181:#182     // makeConcatWithConstants:(I)Ljava/lang/String;\n-  #154 = NameAndType        #62:#183      // \"<init>\":(Ljava/lang/String;)V\n-  #155 = Utf8               org/apache/commons/compress/MemoryLimitException\n-  #156 = NameAndType        #62:#184      // \"<init>\":(JI)V\n-  #157 = NameAndType        #93:#92       // initializeTables:(I)V\n-  #158 = NameAndType        #57:#58       // prefixes:[I\n-  #159 = NameAndType        #59:#48       // characters:[B\n-  #160 = NameAndType        #60:#48       // outputStack:[B\n-  #161 = NameAndType        #61:#42       // outputStackLocation:I\n-  #162 = Utf8               Code size must not be bigger than 31\n-  #163 = NameAndType        #185:#186     // readBits:(I)J\n-  #164 = NameAndType        #56:#42       // tableSize:I\n-  #165 = Utf8               java/io/IOException\n-  #166 = Utf8               The first code can\\'t be a reference to its preceding code\n-  #167 = NameAndType        #53:#54       // previousCodeFirstChar:B\n-  #168 = NameAndType        #89:#90       // addEntry:(IB)I\n-  #169 = Class              #187          // java/lang/Math\n-  #170 = NameAndType        #188:#189     // min:(II)I\n-  #171 = Class              #190          // java/lang/System\n-  #172 = NameAndType        #191:#192     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #173 = NameAndType        #118:#92      // setCodeSize:(I)V\n-  #174 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #175 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #176 = Utf8               ([B)I\n-  #177 = Utf8               count\n-  #178 = Utf8               getBytesRead\n-  #179 = Methodref          #193.#194     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #180 = Utf8               maxCodeSize is \\u0001, must be bigger than 0\n-  #181 = Utf8               makeConcatWithConstants\n-  #182 = Utf8               (I)Ljava/lang/String;\n-  #183 = Utf8               (Ljava/lang/String;)V\n-  #184 = Utf8               (JI)V\n-  #185 = Utf8               readBits\n-  #186 = Utf8               (I)J\n-  #187 = Utf8               java/lang/Math\n-  #188 = Utf8               min\n-  #189 = Utf8               (II)I\n-  #190 = Utf8               java/lang/System\n-  #191 = Utf8               arraycopy\n-  #192 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #193 = Class              #195          // java/lang/invoke/StringConcatFactory\n-  #194 = NameAndType        #181:#199     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #195 = Utf8               java/lang/invoke/StringConcatFactory\n-  #196 = Class              #201          // java/lang/invoke/MethodHandles$Lookup\n-  #197 = Utf8               Lookup\n-  #198 = Utf8               InnerClasses\n-  #199 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #200 = Class              #202          // java/lang/invoke/MethodHandles\n-  #201 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #202 = Utf8               java/lang/invoke/MethodHandles\n+   #95 = Class              #96           // org/apache/commons/compress/MemoryLimitException\n+   #96 = Utf8               org/apache/commons/compress/MemoryLimitException\n+   #97 = Class              #98           // java/lang/IllegalArgumentException\n+   #98 = Utf8               java/lang/IllegalArgumentException\n+   #99 = Class              #100          // java/lang/StringBuilder\n+  #100 = Utf8               java/lang/StringBuilder\n+  #101 = String             #102          // maxCodeSize is\n+  #102 = Utf8               maxCodeSize is\n+  #103 = Methodref          #99.#104      // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #104 = NameAndType        #28:#105      // \"<init>\":(Ljava/lang/String;)V\n+  #105 = Utf8               (Ljava/lang/String;)V\n+  #106 = Methodref          #99.#107      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #107 = NameAndType        #108:#109     // append:(I)Ljava/lang/StringBuilder;\n+  #108 = Utf8               append\n+  #109 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #110 = String             #111          // , must be bigger than 0\n+  #111 = Utf8               , must be bigger than 0\n+  #112 = Methodref          #99.#113      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #113 = NameAndType        #108:#114     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #114 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #115 = Methodref          #99.#116      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #116 = NameAndType        #117:#118     // toString:()Ljava/lang/String;\n+  #117 = Utf8               toString\n+  #118 = Utf8               ()Ljava/lang/String;\n+  #119 = Methodref          #97.#104      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #120 = Long               6l\n+  #122 = Methodref          #95.#123      // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+  #123 = NameAndType        #28:#124      // \"<init>\":(JI)V\n+  #124 = Utf8               (JI)V\n+  #125 = Methodref          #1.#126       // org/apache/commons/compress/compressors/lzw/LZWInputStream.initializeTables:(I)V\n+  #126 = NameAndType        #93:#79       // initializeTables:(I)V\n+  #127 = Utf8               maxCodeSize\n+  #128 = Utf8               memoryLimitInKb\n+  #129 = Utf8               maxTableSize\n+  #130 = Utf8               memoryUsageInBytes\n+  #131 = Utf8               J\n+  #132 = Utf8               memoryUsageInKb\n+  #133 = Fieldref           #1.#134       // org/apache/commons/compress/compressors/lzw/LZWInputStream.prefixes:[I\n+  #134 = NameAndType        #23:#24       // prefixes:[I\n+  #135 = Fieldref           #1.#136       // org/apache/commons/compress/compressors/lzw/LZWInputStream.characters:[B\n+  #136 = NameAndType        #25:#14       // characters:[B\n+  #137 = Fieldref           #1.#138       // org/apache/commons/compress/compressors/lzw/LZWInputStream.outputStack:[B\n+  #138 = NameAndType        #26:#14       // outputStack:[B\n+  #139 = Fieldref           #1.#140       // org/apache/commons/compress/compressors/lzw/LZWInputStream.outputStackLocation:I\n+  #140 = NameAndType        #27:#8        // outputStackLocation:I\n+  #141 = Utf8               max\n+  #142 = Utf8               i\n+  #143 = Utf8               readNextCode\n+  #144 = String             #145          // Code size must not be bigger than 31\n+  #145 = Utf8               Code size must not be bigger than 31\n+  #146 = Methodref          #42.#147      // org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n+  #147 = NameAndType        #148:#149     // readBits:(I)J\n+  #148 = Utf8               readBits\n+  #149 = Utf8               (I)J\n+  #150 = Utf8               (IBI)I\n+  #151 = Fieldref           #1.#152       // org/apache/commons/compress/compressors/lzw/LZWInputStream.tableSize:I\n+  #152 = NameAndType        #22:#8        // tableSize:I\n+  #153 = Utf8               character\n+  #154 = Utf8               addRepeatOfPreviousCode\n+  #155 = String             #156          // The first code can\\'t be a reference to its preceding code\n+  #156 = Utf8               The first code can\\'t be a reference to its preceding code\n+  #157 = Methodref          #58.#104      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #158 = Fieldref           #1.#159       // org/apache/commons/compress/compressors/lzw/LZWInputStream.previousCodeFirstChar:B\n+  #159 = NameAndType        #19:#20       // previousCodeFirstChar:B\n+  #160 = Methodref          #1.#161       // org/apache/commons/compress/compressors/lzw/LZWInputStream.addEntry:(IB)I\n+  #161 = NameAndType        #90:#91       // addEntry:(IB)I\n+  #162 = Utf8               expandCodeToOutputStack\n+  #163 = Utf8               (IZ)I\n+  #164 = Utf8               code\n+  #165 = Utf8               addedUnfinishedEntry\n+  #166 = Utf8               Z\n+  #167 = Utf8               entry\n+  #168 = Methodref          #169.#171     // java/lang/Math.min:(II)I\n+  #169 = Class              #170          // java/lang/Math\n+  #170 = Utf8               java/lang/Math\n+  #171 = NameAndType        #172:#173     // min:(II)I\n+  #172 = Utf8               min\n+  #173 = Utf8               (II)I\n+  #174 = Methodref          #175.#177     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #175 = Class              #176          // java/lang/System\n+  #176 = Utf8               java/lang/System\n+  #177 = NameAndType        #178:#179     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #178 = Utf8               arraycopy\n+  #179 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #180 = Utf8               remainingInStack\n+  #181 = Utf8               maxLength\n+  #182 = Utf8               getCodeSize\n+  #183 = Utf8               resetCodeSize\n+  #184 = Methodref          #1.#185       // org/apache/commons/compress/compressors/lzw/LZWInputStream.setCodeSize:(I)V\n+  #185 = NameAndType        #186:#79      // setCodeSize:(I)V\n+  #186 = Utf8               setCodeSize\n+  #187 = Utf8               cs\n+  #188 = Utf8               incrementCodeSize\n+  #189 = Utf8               resetPreviousCode\n+  #190 = Utf8               getPrefix\n+  #191 = Utf8               (I)I\n+  #192 = Utf8               offset\n+  #193 = Utf8               setPrefix\n+  #194 = Utf8               value\n+  #195 = Utf8               getPrefixesLength\n+  #196 = Utf8               getClearCode\n+  #197 = Utf8               getTableSize\n+  #198 = Utf8               setTableSize\n+  #199 = Utf8               newSize\n+  #200 = Utf8               SourceFile\n+  #201 = Utf8               LZWInputStream.java\n {\n   protected static final int DEFAULT_CODE_SIZE = 9;\n     descriptor: I\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 9\n \n   protected static final int UNUSED_PREFIX = -1;\n@@ -266,35 +265,35 @@\n \n   protected org.apache.commons.compress.compressors.lzw.LZWInputStream(java.io.InputStream, java.nio.ByteOrder);\n     descriptor: (Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+         1: invokespecial #31                 // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #2                  // Field oneByte:[B\n+         8: putfield      #34                 // Field oneByte:[B\n         11: aload_0\n         12: iconst_m1\n-        13: putfield      #3                  // Field clearCode:I\n+        13: putfield      #36                 // Field clearCode:I\n         16: aload_0\n         17: bipush        9\n-        19: putfield      #5                  // Field codeSize:I\n+        19: putfield      #38                 // Field codeSize:I\n         22: aload_0\n         23: iconst_m1\n-        24: putfield      #6                  // Field previousCode:I\n+        24: putfield      #40                 // Field previousCode:I\n         27: aload_0\n-        28: new           #7                  // class org/apache/commons/compress/utils/BitInputStream\n+        28: new           #42                 // class org/apache/commons/compress/utils/BitInputStream\n         31: dup\n         32: aload_1\n         33: aload_2\n-        34: invokespecial #8                  // Method org/apache/commons/compress/utils/BitInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n-        37: putfield      #9                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n+        34: invokespecial #44                 // Method org/apache/commons/compress/utils/BitInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+        37: putfield      #46                 // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n         40: return\n       LineNumberTable:\n         line 55: 0\n         line 42: 4\n         line 45: 11\n         line 46: 16\n         line 48: 22\n@@ -305,46 +304,48 @@\n             0      41     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n             0      41     1 inputStream   Ljava/io/InputStream;\n             0      41     2 byteOrder   Ljava/nio/ByteOrder;\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n-         4: invokevirtual #10                 // Method org/apache/commons/compress/utils/BitInputStream.close:()V\n+         1: getfield      #46                 // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n+         4: invokevirtual #60                 // Method org/apache/commons/compress/utils/BitInputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 61: 0\n         line 62: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #2                  // Field oneByte:[B\n-         5: invokevirtual #11                 // Method read:([B)I\n+         2: getfield      #34                 // Field oneByte:[B\n+         5: invokevirtual #64                 // Method read:([B)I\n          8: istore_1\n          9: iload_1\n         10: ifge          15\n         13: iload_1\n         14: ireturn\n         15: sipush        255\n         18: aload_0\n-        19: getfield      #2                  // Field oneByte:[B\n+        19: getfield      #34                 // Field oneByte:[B\n         22: iconst_0\n         23: baload\n         24: iand\n         25: ireturn\n       LineNumberTable:\n         line 66: 0\n         line 67: 9\n@@ -354,113 +355,111 @@\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n             9      17     1   ret   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 15\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=6, locals=6, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n          7: aload_1\n          8: iload_2\n          9: iload_3\n-        10: invokespecial #12                 // Method readFromStack:([BII)I\n+        10: invokespecial #70                 // Method readFromStack:([BII)I\n         13: istore        4\n-        15: iload_3\n-        16: iload         4\n-        18: isub\n-        19: ifle          71\n-        22: aload_0\n-        23: invokevirtual #13                 // Method decompressNextSymbol:()I\n-        26: istore        5\n-        28: iload         5\n-        30: ifge          50\n-        33: iload         4\n-        35: ifle          47\n-        38: aload_0\n-        39: iload         4\n-        41: invokevirtual #14                 // Method count:(I)V\n-        44: iload         4\n-        46: ireturn\n-        47: iload         5\n-        49: ireturn\n-        50: iload         4\n-        52: aload_0\n-        53: aload_1\n-        54: iload_2\n+        15: goto          64\n+        18: aload_0\n+        19: invokevirtual #73                 // Method decompressNextSymbol:()I\n+        22: istore        5\n+        24: iload         5\n+        26: ifge          46\n+        29: iload         4\n+        31: ifle          43\n+        34: aload_0\n+        35: iload         4\n+        37: invokevirtual #76                 // Method count:(I)V\n+        40: iload         4\n+        42: ireturn\n+        43: iload         5\n+        45: ireturn\n+        46: iload         4\n+        48: aload_0\n+        49: aload_1\n+        50: iload_2\n+        51: iload         4\n+        53: iadd\n+        54: iload_3\n         55: iload         4\n-        57: iadd\n-        58: iload_3\n-        59: iload         4\n-        61: isub\n-        62: invokespecial #12                 // Method readFromStack:([BII)I\n-        65: iadd\n-        66: istore        4\n-        68: goto          15\n+        57: isub\n+        58: invokespecial #70                 // Method readFromStack:([BII)I\n+        61: iadd\n+        62: istore        4\n+        64: iload_3\n+        65: iload         4\n+        67: isub\n+        68: ifgt          18\n         71: aload_0\n         72: iload         4\n-        74: invokevirtual #14                 // Method count:(I)V\n+        74: invokevirtual #76                 // Method count:(I)V\n         77: iload         4\n         79: ireturn\n       LineNumberTable:\n         line 75: 0\n         line 76: 4\n         line 78: 6\n         line 79: 15\n-        line 80: 22\n-        line 81: 28\n-        line 82: 33\n-        line 83: 38\n-        line 84: 44\n-        line 86: 47\n-        line 88: 50\n-        line 89: 68\n+        line 80: 18\n+        line 81: 24\n+        line 82: 29\n+        line 83: 34\n+        line 84: 40\n+        line 86: 43\n+        line 88: 46\n+        line 79: 64\n         line 90: 71\n         line 91: 77\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           28      40     5 result   I\n             0      80     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n             0      80     1     b   [B\n             0      80     2   off   I\n             0      80     3   len   I\n            15      65     4 bytesRead   I\n+           24      40     5 result   I\n       StackMapTable: number_of_entries = 5\n         frame_type = 6 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 8\n+          offset_delta = 11\n           locals = [ int ]\n         frame_type = 252 /* append */\n-          offset_delta = 31\n+          offset_delta = 24\n           locals = [ int ]\n         frame_type = 2 /* same */\n         frame_type = 250 /* chop */\n-          offset_delta = 20\n-    Exceptions:\n-      throws java.io.IOException\n+          offset_delta = 17\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n-         4: invokevirtual #15                 // Method org/apache/commons/compress/utils/BitInputStream.getBytesRead:()J\n+         1: getfield      #46                 // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n+         4: invokevirtual #87                 // Method org/apache/commons/compress/utils/BitInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 99: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n \n@@ -483,236 +482,253 @@\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: iconst_1\n          2: iload_1\n          3: iconst_1\n          4: isub\n          5: ishl\n-         6: putfield      #3                  // Field clearCode:I\n+         6: putfield      #36                 // Field clearCode:I\n          9: return\n       LineNumberTable:\n         line 124: 0\n         line 125: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n             0      10     1 codeSize   I\n \n   protected void initializeTables(int, int) throws org.apache.commons.compress.MemoryLimitException;\n     descriptor: (II)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws org.apache.commons.compress.MemoryLimitException\n     Code:\n       stack=5, locals=8, args_size=3\n          0: iload_1\n-         1: ifgt          18\n-         4: new           #16                 // class java/lang/IllegalArgumentException\n+         1: ifgt          33\n+         4: new           #97                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: iload_1\n-         9: invokedynamic #17,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-        14: invokespecial #18                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        17: athrow\n-        18: iload_2\n-        19: iconst_m1\n-        20: if_icmple     61\n-        23: iconst_1\n-        24: iload_1\n-        25: ishl\n-        26: istore_3\n-        27: iload_3\n-        28: i2l\n-        29: ldc2_w        #19                 // long 6l\n-        32: lmul\n-        33: lstore        4\n-        35: lload         4\n-        37: bipush        10\n-        39: lshr\n-        40: lstore        6\n-        42: lload         6\n-        44: iload_2\n-        45: i2l\n-        46: lcmp\n-        47: ifle          61\n-        50: new           #21                 // class org/apache/commons/compress/MemoryLimitException\n-        53: dup\n-        54: lload         6\n-        56: iload_2\n-        57: invokespecial #22                 // Method org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n-        60: athrow\n-        61: aload_0\n-        62: iload_1\n-        63: invokevirtual #23                 // Method initializeTables:(I)V\n-        66: return\n+         8: new           #99                 // class java/lang/StringBuilder\n+        11: dup\n+        12: ldc           #101                // String maxCodeSize is\n+        14: invokespecial #103                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        17: iload_1\n+        18: invokevirtual #106                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        21: ldc           #110                // String , must be bigger than 0\n+        23: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        26: invokevirtual #115                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        29: invokespecial #119                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        32: athrow\n+        33: iload_2\n+        34: iconst_m1\n+        35: if_icmple     76\n+        38: iconst_1\n+        39: iload_1\n+        40: ishl\n+        41: istore_3\n+        42: iload_3\n+        43: i2l\n+        44: ldc2_w        #120                // long 6l\n+        47: lmul\n+        48: lstore        4\n+        50: lload         4\n+        52: bipush        10\n+        54: lshr\n+        55: lstore        6\n+        57: lload         6\n+        59: iload_2\n+        60: i2l\n+        61: lcmp\n+        62: ifle          76\n+        65: new           #95                 // class org/apache/commons/compress/MemoryLimitException\n+        68: dup\n+        69: lload         6\n+        71: iload_2\n+        72: invokespecial #122                // Method org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+        75: athrow\n+        76: aload_0\n+        77: iload_1\n+        78: invokevirtual #125                // Method initializeTables:(I)V\n+        81: return\n       LineNumberTable:\n         line 138: 0\n         line 139: 4\n-        line 143: 18\n-        line 144: 23\n-        line 146: 27\n-        line 147: 35\n-        line 149: 42\n-        line 150: 50\n-        line 153: 61\n-        line 154: 66\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-           27      34     3 maxTableSize   I\n-           35      26     4 memoryUsageInBytes   J\n-           42      19     6 memoryUsageInKb   J\n-            0      67     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n-            0      67     1 maxCodeSize   I\n-            0      67     2 memoryLimitInKb   I\n+        line 140: 21\n+        line 139: 29\n+        line 143: 33\n+        line 144: 38\n+        line 146: 42\n+        line 147: 50\n+        line 149: 57\n+        line 150: 65\n+        line 153: 76\n+        line 154: 81\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0      82     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n+            0      82     1 maxCodeSize   I\n+            0      82     2 memoryLimitInKb   I\n+           42      34     3 maxTableSize   I\n+           50      26     4 memoryUsageInBytes   J\n+           57      19     6 memoryUsageInKb   J\n       StackMapTable: number_of_entries = 2\n-        frame_type = 18 /* same */\n+        frame_type = 33 /* same */\n         frame_type = 42 /* same */\n-    Exceptions:\n-      throws org.apache.commons.compress.MemoryLimitException\n \n   protected void initializeTables(int);\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n-      stack=3, locals=5, args_size=2\n+      stack=5, locals=5, args_size=2\n          0: iload_1\n-         1: ifgt          18\n-         4: new           #16                 // class java/lang/IllegalArgumentException\n+         1: ifgt          33\n+         4: new           #97                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: iload_1\n-         9: invokedynamic #17,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-        14: invokespecial #18                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        17: athrow\n-        18: iconst_1\n-        19: iload_1\n-        20: ishl\n-        21: istore_2\n-        22: aload_0\n-        23: iload_2\n-        24: newarray       int\n-        26: putfield      #24                 // Field prefixes:[I\n-        29: aload_0\n-        30: iload_2\n-        31: newarray       byte\n-        33: putfield      #25                 // Field characters:[B\n-        36: aload_0\n-        37: iload_2\n-        38: newarray       byte\n-        40: putfield      #26                 // Field outputStack:[B\n-        43: aload_0\n-        44: iload_2\n-        45: putfield      #27                 // Field outputStackLocation:I\n-        48: sipush        256\n-        51: istore_3\n-        52: iconst_0\n-        53: istore        4\n-        55: iload         4\n-        57: sipush        256\n-        60: if_icmpge     87\n-        63: aload_0\n-        64: getfield      #24                 // Field prefixes:[I\n-        67: iload         4\n-        69: iconst_m1\n-        70: iastore\n-        71: aload_0\n-        72: getfield      #25                 // Field characters:[B\n-        75: iload         4\n+         8: new           #99                 // class java/lang/StringBuilder\n+        11: dup\n+        12: ldc           #101                // String maxCodeSize is\n+        14: invokespecial #103                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        17: iload_1\n+        18: invokevirtual #106                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        21: ldc           #110                // String , must be bigger than 0\n+        23: invokevirtual #112                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        26: invokevirtual #115                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        29: invokespecial #119                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        32: athrow\n+        33: iconst_1\n+        34: iload_1\n+        35: ishl\n+        36: istore_2\n+        37: aload_0\n+        38: iload_2\n+        39: newarray       int\n+        41: putfield      #133                // Field prefixes:[I\n+        44: aload_0\n+        45: iload_2\n+        46: newarray       byte\n+        48: putfield      #135                // Field characters:[B\n+        51: aload_0\n+        52: iload_2\n+        53: newarray       byte\n+        55: putfield      #137                // Field outputStack:[B\n+        58: aload_0\n+        59: iload_2\n+        60: putfield      #139                // Field outputStackLocation:I\n+        63: sipush        256\n+        66: istore_3\n+        67: iconst_0\n+        68: istore        4\n+        70: goto          94\n+        73: aload_0\n+        74: getfield      #133                // Field prefixes:[I\n         77: iload         4\n-        79: i2b\n-        80: bastore\n-        81: iinc          4, 1\n-        84: goto          55\n-        87: return\n+        79: iconst_m1\n+        80: iastore\n+        81: aload_0\n+        82: getfield      #135                // Field characters:[B\n+        85: iload         4\n+        87: iload         4\n+        89: i2b\n+        90: bastore\n+        91: iinc          4, 1\n+        94: iload         4\n+        96: sipush        256\n+        99: if_icmplt     73\n+       102: return\n       LineNumberTable:\n         line 162: 0\n         line 163: 4\n-        line 166: 18\n-        line 167: 22\n-        line 168: 29\n-        line 169: 36\n-        line 170: 43\n-        line 171: 48\n-        line 172: 52\n-        line 173: 63\n-        line 174: 71\n-        line 172: 81\n-        line 176: 87\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-           55      32     4     i   I\n-            0      88     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n-            0      88     1 maxCodeSize   I\n-           22      66     2 maxTableSize   I\n-           52      36     3   max   I\n+        line 164: 21\n+        line 163: 29\n+        line 166: 33\n+        line 167: 37\n+        line 168: 44\n+        line 169: 51\n+        line 170: 58\n+        line 171: 63\n+        line 172: 67\n+        line 173: 73\n+        line 174: 81\n+        line 172: 91\n+        line 176: 102\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     103     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n+            0     103     1 maxCodeSize   I\n+           37      66     2 maxTableSize   I\n+           67      36     3   max   I\n+           70      32     4     i   I\n       StackMapTable: number_of_entries = 3\n-        frame_type = 18 /* same */\n+        frame_type = 33 /* same */\n         frame_type = 254 /* append */\n-          offset_delta = 36\n+          offset_delta = 39\n           locals = [ int, int, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 31\n+        frame_type = 20 /* same */\n \n   protected int readNextCode() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field codeSize:I\n+         1: getfield      #38                 // Field codeSize:I\n          4: bipush        31\n          6: if_icmple     19\n-         9: new           #16                 // class java/lang/IllegalArgumentException\n+         9: new           #97                 // class java/lang/IllegalArgumentException\n         12: dup\n-        13: ldc           #28                 // String Code size must not be bigger than 31\n-        15: invokespecial #18                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        13: ldc           #144                // String Code size must not be bigger than 31\n+        15: invokespecial #119                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         18: athrow\n         19: aload_0\n-        20: getfield      #9                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n+        20: getfield      #46                 // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n         23: aload_0\n-        24: getfield      #5                  // Field codeSize:I\n-        27: invokevirtual #29                 // Method org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n+        24: getfield      #38                 // Field codeSize:I\n+        27: invokevirtual #146                // Method org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n         30: l2i\n         31: ireturn\n       LineNumberTable:\n         line 184: 0\n         line 185: 9\n         line 187: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      32     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 19 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected int addEntry(int, byte, int);\n     descriptor: (IBI)I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #30                 // Field tableSize:I\n+         1: getfield      #151                // Field tableSize:I\n          4: iload_3\n          5: if_icmpge     40\n          8: aload_0\n-         9: getfield      #24                 // Field prefixes:[I\n+         9: getfield      #133                // Field prefixes:[I\n         12: aload_0\n-        13: getfield      #30                 // Field tableSize:I\n+        13: getfield      #151                // Field tableSize:I\n         16: iload_1\n         17: iastore\n         18: aload_0\n-        19: getfield      #25                 // Field characters:[B\n+        19: getfield      #135                // Field characters:[B\n         22: aload_0\n-        23: getfield      #30                 // Field tableSize:I\n+        23: getfield      #151                // Field tableSize:I\n         26: iload_2\n         27: bastore\n         28: aload_0\n         29: dup\n-        30: getfield      #30                 // Field tableSize:I\n+        30: getfield      #151                // Field tableSize:I\n         33: dup_x1\n         34: iconst_1\n         35: iadd\n-        36: putfield      #30                 // Field tableSize:I\n+        36: putfield      #151                // Field tableSize:I\n         39: ireturn\n         40: iconst_m1\n         41: ireturn\n       LineNumberTable:\n         line 199: 0\n         line 200: 8\n         line 201: 18\n@@ -726,206 +742,206 @@\n             0      42     3 maxTableSize   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 40 /* same */\n \n   protected int addRepeatOfPreviousCode() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field previousCode:I\n+         1: getfield      #40                 // Field previousCode:I\n          4: iconst_m1\n          5: if_icmpne     18\n-         8: new           #31                 // class java/io/IOException\n+         8: new           #58                 // class java/io/IOException\n         11: dup\n-        12: ldc           #32                 // String The first code can\\'t be a reference to its preceding code\n-        14: invokespecial #33                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #155                // String The first code can\\'t be a reference to its preceding code\n+        14: invokespecial #157                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: aload_0\n-        20: getfield      #6                  // Field previousCode:I\n+        20: getfield      #40                 // Field previousCode:I\n         23: aload_0\n-        24: getfield      #34                 // Field previousCodeFirstChar:B\n-        27: invokevirtual #35                 // Method addEntry:(IB)I\n+        24: getfield      #158                // Field previousCodeFirstChar:B\n+        27: invokevirtual #160                // Method addEntry:(IB)I\n         30: ireturn\n       LineNumberTable:\n         line 214: 0\n         line 216: 8\n         line 218: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 18 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected int expandCodeToOutputStack(int, boolean) throws java.io.IOException;\n     descriptor: (IZ)I\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=3\n          0: iload_1\n          1: istore_3\n-         2: iload_3\n-         3: iflt          38\n-         6: aload_0\n-         7: getfield      #26                 // Field outputStack:[B\n-        10: aload_0\n-        11: dup\n-        12: getfield      #27                 // Field outputStackLocation:I\n-        15: iconst_1\n-        16: isub\n-        17: dup_x1\n-        18: putfield      #27                 // Field outputStackLocation:I\n-        21: aload_0\n-        22: getfield      #25                 // Field characters:[B\n-        25: iload_3\n-        26: baload\n-        27: bastore\n-        28: aload_0\n-        29: getfield      #24                 // Field prefixes:[I\n-        32: iload_3\n-        33: iaload\n-        34: istore_3\n-        35: goto          2\n+         2: goto          34\n+         5: aload_0\n+         6: getfield      #137                // Field outputStack:[B\n+         9: aload_0\n+        10: dup\n+        11: getfield      #139                // Field outputStackLocation:I\n+        14: iconst_1\n+        15: isub\n+        16: dup_x1\n+        17: putfield      #139                // Field outputStackLocation:I\n+        20: aload_0\n+        21: getfield      #135                // Field characters:[B\n+        24: iload_3\n+        25: baload\n+        26: bastore\n+        27: aload_0\n+        28: getfield      #133                // Field prefixes:[I\n+        31: iload_3\n+        32: iaload\n+        33: istore_3\n+        34: iload_3\n+        35: ifge          5\n         38: aload_0\n-        39: getfield      #6                  // Field previousCode:I\n+        39: getfield      #40                 // Field previousCode:I\n         42: iconst_m1\n         43: if_icmpeq     68\n         46: iload_2\n         47: ifne          68\n         50: aload_0\n         51: aload_0\n-        52: getfield      #6                  // Field previousCode:I\n+        52: getfield      #40                 // Field previousCode:I\n         55: aload_0\n-        56: getfield      #26                 // Field outputStack:[B\n+        56: getfield      #137                // Field outputStack:[B\n         59: aload_0\n-        60: getfield      #27                 // Field outputStackLocation:I\n+        60: getfield      #139                // Field outputStackLocation:I\n         63: baload\n-        64: invokevirtual #35                 // Method addEntry:(IB)I\n+        64: invokevirtual #160                // Method addEntry:(IB)I\n         67: pop\n         68: aload_0\n         69: iload_1\n-        70: putfield      #6                  // Field previousCode:I\n+        70: putfield      #40                 // Field previousCode:I\n         73: aload_0\n         74: aload_0\n-        75: getfield      #26                 // Field outputStack:[B\n+        75: getfield      #137                // Field outputStack:[B\n         78: aload_0\n-        79: getfield      #27                 // Field outputStackLocation:I\n+        79: getfield      #139                // Field outputStackLocation:I\n         82: baload\n-        83: putfield      #34                 // Field previousCodeFirstChar:B\n+        83: putfield      #158                // Field previousCodeFirstChar:B\n         86: aload_0\n-        87: getfield      #27                 // Field outputStackLocation:I\n+        87: getfield      #139                // Field outputStackLocation:I\n         90: ireturn\n       LineNumberTable:\n         line 231: 0\n-        line 232: 6\n-        line 231: 28\n+        line 232: 5\n+        line 231: 27\n         line 234: 38\n         line 235: 50\n         line 237: 68\n         line 238: 73\n         line 239: 86\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            2      36     3 entry   I\n             0      91     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n             0      91     1  code   I\n             0      91     2 addedUnfinishedEntry   Z\n+            2      36     3 entry   I\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n-          offset_delta = 2\n+          offset_delta = 5\n           locals = [ int ]\n+        frame_type = 28 /* same */\n         frame_type = 250 /* chop */\n-          offset_delta = 35\n-        frame_type = 29 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n+          offset_delta = 33\n \n   private int readFromStack(byte[], int, int);\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=6, args_size=4\n          0: aload_0\n-         1: getfield      #26                 // Field outputStack:[B\n+         1: getfield      #137                // Field outputStack:[B\n          4: arraylength\n          5: aload_0\n-         6: getfield      #27                 // Field outputStackLocation:I\n+         6: getfield      #139                // Field outputStackLocation:I\n          9: isub\n         10: istore        4\n         12: iload         4\n         14: ifle          54\n         17: iload         4\n         19: iload_3\n-        20: invokestatic  #36                 // Method java/lang/Math.min:(II)I\n+        20: invokestatic  #168                // Method java/lang/Math.min:(II)I\n         23: istore        5\n         25: aload_0\n-        26: getfield      #26                 // Field outputStack:[B\n+        26: getfield      #137                // Field outputStack:[B\n         29: aload_0\n-        30: getfield      #27                 // Field outputStackLocation:I\n+        30: getfield      #139                // Field outputStackLocation:I\n         33: aload_1\n         34: iload_2\n         35: iload         5\n-        37: invokestatic  #37                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        37: invokestatic  #174                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         40: aload_0\n         41: dup\n-        42: getfield      #27                 // Field outputStackLocation:I\n+        42: getfield      #139                // Field outputStackLocation:I\n         45: iload         5\n         47: iadd\n-        48: putfield      #27                 // Field outputStackLocation:I\n+        48: putfield      #139                // Field outputStackLocation:I\n         51: iload         5\n         53: ireturn\n         54: iconst_0\n         55: ireturn\n       LineNumberTable:\n         line 243: 0\n         line 244: 12\n         line 245: 17\n         line 246: 25\n         line 247: 40\n         line 248: 51\n         line 250: 54\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           25      29     5 maxLength   I\n             0      56     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n             0      56     1     b   [B\n             0      56     2   off   I\n             0      56     3   len   I\n            12      44     4 remainingInStack   I\n+           25      29     5 maxLength   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 54\n           locals = [ int ]\n \n   protected int getCodeSize();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field codeSize:I\n+         1: getfield      #38                 // Field codeSize:I\n          4: ireturn\n       LineNumberTable:\n         line 254: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n \n   protected void resetCodeSize();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        9\n-         3: invokevirtual #38                 // Method setCodeSize:(I)V\n+         3: invokevirtual #184                // Method setCodeSize:(I)V\n          6: return\n       LineNumberTable:\n         line 258: 0\n         line 259: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n@@ -933,15 +949,15 @@\n   protected void setCodeSize(int);\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #5                  // Field codeSize:I\n+         2: putfield      #38                 // Field codeSize:I\n          5: return\n       LineNumberTable:\n         line 262: 0\n         line 263: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n@@ -950,18 +966,18 @@\n   protected void incrementCodeSize();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #5                  // Field codeSize:I\n+         2: getfield      #38                 // Field codeSize:I\n          5: iconst_1\n          6: iadd\n-         7: putfield      #5                  // Field codeSize:I\n+         7: putfield      #38                 // Field codeSize:I\n         10: return\n       LineNumberTable:\n         line 266: 0\n         line 267: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n@@ -969,30 +985,30 @@\n   protected void resetPreviousCode();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_m1\n-         2: putfield      #6                  // Field previousCode:I\n+         2: putfield      #40                 // Field previousCode:I\n          5: return\n       LineNumberTable:\n         line 270: 0\n         line 271: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n \n   protected int getPrefix(int);\n     descriptor: (I)I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #24                 // Field prefixes:[I\n+         1: getfield      #133                // Field prefixes:[I\n          4: iload_1\n          5: iaload\n          6: ireturn\n       LineNumberTable:\n         line 274: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1001,15 +1017,15 @@\n \n   protected void setPrefix(int, int);\n     descriptor: (II)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #24                 // Field prefixes:[I\n+         1: getfield      #133                // Field prefixes:[I\n          4: iload_1\n          5: iload_2\n          6: iastore\n          7: return\n       LineNumberTable:\n         line 278: 0\n         line 279: 7\n@@ -1021,68 +1037,62 @@\n \n   protected int getPrefixesLength();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field prefixes:[I\n+         1: getfield      #133                // Field prefixes:[I\n          4: arraylength\n          5: ireturn\n       LineNumberTable:\n         line 282: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n \n   protected int getClearCode();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field clearCode:I\n+         1: getfield      #36                 // Field clearCode:I\n          4: ireturn\n       LineNumberTable:\n         line 286: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n \n   protected int getTableSize();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #30                 // Field tableSize:I\n+         1: getfield      #151                // Field tableSize:I\n          4: ireturn\n       LineNumberTable:\n         line 290: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n \n   protected void setTableSize(int);\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #30                 // Field tableSize:I\n+         2: putfield      #151                // Field tableSize:I\n          5: return\n       LineNumberTable:\n         line 294: 0\n         line 295: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/compressors/lzw/LZWInputStream;\n             0       6     1 newSize   I\n }\n SourceFile: \"LZWInputStream.java\"\n-InnerClasses:\n-  public static final #197= #196 of #200; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n-BootstrapMethods:\n-  0: #151 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #152 maxCodeSize is \\u0001, must be bigger than 0\n"}]}
