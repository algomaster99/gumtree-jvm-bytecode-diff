{"diffoscope-json-version": 1, "source1": "first/SegmentOptions.class", "source2": "second/SegmentOptions.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,85 +1,85 @@\n-  SHA-256 checksum c3a1df934b002e15dd56046d6f7d63b8417463fea1ea1dae990b56339e88e7ca\n+  SHA-256 checksum baaad1f8d9e51f1d61ca9ec58fa84fb1996e464e4112cab0fb72985a7ed2a6ee\n   Compiled from \"SegmentOptions.java\"\n public class org.apache.commons.compress.harmony.unpack200.SegmentOptions\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/compress/harmony/unpack200/SegmentOptions\n-  super_class: #7                         // java/lang/Object\n+  this_class: #7                          // org/apache/commons/compress/harmony/unpack200/SegmentOptions\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 14, methods: 13, attributes: 1\n Constant pool:\n-   #1 = Methodref          #7.#60         // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #61            // org/apache/commons/compress/harmony/unpack200/SegmentOptions\n-   #3 = Class              #62            // org/apache/commons/compress/harmony/pack200/Pack200Exception\n-   #4 = String             #63            // Some unused flags are non-zero\n-   #5 = Methodref          #3.#64         // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n-   #6 = Fieldref           #2.#65         // org/apache/commons/compress/harmony/unpack200/SegmentOptions.options:I\n-   #7 = Class              #66            // java/lang/Object\n-   #8 = Utf8               DEFLATE_HINT\n-   #9 = Utf8               I\n-  #10 = Utf8               ConstantValue\n-  #11 = Integer            32\n-  #12 = Utf8               HAVE_ALL_CODE_FLAGS\n-  #13 = Integer            4\n-  #14 = Utf8               HAVE_CLASS_FLAGS_HI\n-  #15 = Integer            512\n-  #16 = Utf8               HAVE_CODE_FLAGS_HI\n-  #17 = Integer            1024\n-  #18 = Utf8               HAVE_CP_NUMBERS\n-  #19 = Integer            2\n-  #20 = Utf8               HAVE_FIELD_FLAGS_HI\n-  #21 = Utf8               HAVE_FILE_HEADERS\n-  #22 = Integer            16\n-  #23 = Utf8               HAVE_FILE_MODTIME\n-  #24 = Integer            64\n-  #25 = Utf8               HAVE_FILE_OPTIONS\n-  #26 = Integer            128\n-  #27 = Utf8               HAVE_FILE_SIZE_HI\n-  #28 = Integer            256\n-  #29 = Utf8               HAVE_METHOD_FLAGS_HI\n-  #30 = Integer            2048\n-  #31 = Utf8               HAVE_SPECIAL_FORMATS\n-  #32 = Integer            1\n-  #33 = Utf8               UNUSED\n-  #34 = Integer            -8184\n-  #35 = Utf8               options\n-  #36 = Utf8               <init>\n-  #37 = Utf8               (I)V\n-  #38 = Utf8               Code\n-  #39 = Utf8               LineNumberTable\n-  #40 = Utf8               LocalVariableTable\n-  #41 = Utf8               this\n-  #42 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/SegmentOptions;\n-  #43 = Utf8               StackMapTable\n-  #44 = Utf8               Exceptions\n-  #45 = Utf8               hasAllCodeFlags\n-  #46 = Utf8               ()Z\n-  #47 = Utf8               hasArchiveFileCounts\n-  #48 = Utf8               hasClassFlagsHi\n-  #49 = Utf8               hasCodeFlagsHi\n-  #50 = Utf8               hasCPNumberCounts\n-  #51 = Utf8               hasFieldFlagsHi\n-  #52 = Utf8               hasFileModtime\n-  #53 = Utf8               hasFileOptions\n-  #54 = Utf8               hasFileSizeHi\n-  #55 = Utf8               hasMethodFlagsHi\n-  #56 = Utf8               hasSpecialFormats\n-  #57 = Utf8               shouldDeflate\n-  #58 = Utf8               SourceFile\n-  #59 = Utf8               SegmentOptions.java\n-  #60 = NameAndType        #36:#67        // \"<init>\":()V\n-  #61 = Utf8               org/apache/commons/compress/harmony/unpack200/SegmentOptions\n-  #62 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n-  #63 = Utf8               Some unused flags are non-zero\n-  #64 = NameAndType        #36:#68        // \"<init>\":(Ljava/lang/String;)V\n-  #65 = NameAndType        #35:#9         // options:I\n-  #66 = Utf8               java/lang/Object\n-  #67 = Utf8               ()V\n-  #68 = Utf8               (Ljava/lang/String;)V\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // org/apache/commons/compress/harmony/unpack200/SegmentOptions\n+   #8 = Utf8               org/apache/commons/compress/harmony/unpack200/SegmentOptions\n+   #9 = Class              #10            // org/apache/commons/compress/harmony/pack200/Pack200Exception\n+  #10 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n+  #11 = String             #12            // Some unused flags are non-zero\n+  #12 = Utf8               Some unused flags are non-zero\n+  #13 = Methodref          #9.#14         // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+  #14 = NameAndType        #5:#15         // \"<init>\":(Ljava/lang/String;)V\n+  #15 = Utf8               (Ljava/lang/String;)V\n+  #16 = Fieldref           #7.#17         // org/apache/commons/compress/harmony/unpack200/SegmentOptions.options:I\n+  #17 = NameAndType        #18:#19        // options:I\n+  #18 = Utf8               options\n+  #19 = Utf8               I\n+  #20 = Utf8               DEFLATE_HINT\n+  #21 = Utf8               ConstantValue\n+  #22 = Integer            32\n+  #23 = Utf8               HAVE_ALL_CODE_FLAGS\n+  #24 = Integer            4\n+  #25 = Utf8               HAVE_CLASS_FLAGS_HI\n+  #26 = Integer            512\n+  #27 = Utf8               HAVE_CODE_FLAGS_HI\n+  #28 = Integer            1024\n+  #29 = Utf8               HAVE_CP_NUMBERS\n+  #30 = Integer            2\n+  #31 = Utf8               HAVE_FIELD_FLAGS_HI\n+  #32 = Utf8               HAVE_FILE_HEADERS\n+  #33 = Integer            16\n+  #34 = Utf8               HAVE_FILE_MODTIME\n+  #35 = Integer            64\n+  #36 = Utf8               HAVE_FILE_OPTIONS\n+  #37 = Integer            128\n+  #38 = Utf8               HAVE_FILE_SIZE_HI\n+  #39 = Integer            256\n+  #40 = Utf8               HAVE_METHOD_FLAGS_HI\n+  #41 = Integer            2048\n+  #42 = Utf8               HAVE_SPECIAL_FORMATS\n+  #43 = Integer            1\n+  #44 = Utf8               UNUSED\n+  #45 = Integer            -8184\n+  #46 = Utf8               (I)V\n+  #47 = Utf8               Code\n+  #48 = Utf8               LineNumberTable\n+  #49 = Utf8               LocalVariableTable\n+  #50 = Utf8               this\n+  #51 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/SegmentOptions;\n+  #52 = Utf8               StackMapTable\n+  #53 = Utf8               Exceptions\n+  #54 = Utf8               hasAllCodeFlags\n+  #55 = Utf8               ()Z\n+  #56 = Utf8               hasArchiveFileCounts\n+  #57 = Utf8               hasClassFlagsHi\n+  #58 = Utf8               hasCodeFlagsHi\n+  #59 = Utf8               hasCPNumberCounts\n+  #60 = Utf8               hasFieldFlagsHi\n+  #61 = Utf8               hasFileModtime\n+  #62 = Utf8               hasFileOptions\n+  #63 = Utf8               hasFileSizeHi\n+  #64 = Utf8               hasMethodFlagsHi\n+  #65 = Utf8               hasSpecialFormats\n+  #66 = Utf8               shouldDeflate\n+  #67 = Utf8               SourceFile\n+  #68 = Utf8               SegmentOptions.java\n {\n   private static final int DEFLATE_HINT = 32;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 32\n \n   private static final int HAVE_ALL_CODE_FLAGS = 4;\n@@ -153,22 +153,22 @@\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: iload_1\n          5: sipush        -8184\n          8: iand\n          9: ifeq          22\n-        12: new           #3                  // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n+        12: new           #9                  // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n         15: dup\n-        16: ldc           #4                  // String Some unused flags are non-zero\n-        18: invokespecial #5                  // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+        16: ldc           #11                 // String Some unused flags are non-zero\n+        18: invokespecial #13                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n         22: aload_0\n         23: iload_1\n-        24: putfield      #6                  // Field options:I\n+        24: putfield      #16                 // Field options:I\n         27: return\n       LineNumberTable:\n         line 68: 0\n         line 69: 4\n         line 70: 12\n         line 72: 22\n         line 73: 27\n@@ -186,15 +186,15 @@\n \n   public boolean hasAllCodeFlags();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: iconst_4\n          5: iand\n          6: ifeq          13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n@@ -210,15 +210,15 @@\n \n   public boolean hasArchiveFileCounts();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: bipush        16\n          6: iand\n          7: ifeq          14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n@@ -234,15 +234,15 @@\n \n   public boolean hasClassFlagsHi();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: sipush        512\n          7: iand\n          8: ifeq          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n@@ -258,15 +258,15 @@\n \n   public boolean hasCodeFlagsHi();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: sipush        1024\n          7: iand\n          8: ifeq          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n@@ -282,15 +282,15 @@\n \n   public boolean hasCPNumberCounts();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: iconst_2\n          5: iand\n          6: ifeq          13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n@@ -306,15 +306,15 @@\n \n   public boolean hasFieldFlagsHi();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: sipush        1024\n          7: iand\n          8: ifeq          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n@@ -330,15 +330,15 @@\n \n   public boolean hasFileModtime();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: bipush        64\n          6: iand\n          7: ifeq          14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n@@ -354,15 +354,15 @@\n \n   public boolean hasFileOptions();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: sipush        128\n          7: iand\n          8: ifeq          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n@@ -378,15 +378,15 @@\n \n   public boolean hasFileSizeHi();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: sipush        256\n          7: iand\n          8: ifeq          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n@@ -402,15 +402,15 @@\n \n   public boolean hasMethodFlagsHi();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: sipush        2048\n          7: iand\n          8: ifeq          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n@@ -426,15 +426,15 @@\n \n   public boolean hasSpecialFormats();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: iconst_1\n          5: iand\n          6: ifeq          13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n@@ -450,15 +450,15 @@\n \n   public boolean shouldDeflate();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field options:I\n+         1: getfield      #16                 // Field options:I\n          4: bipush        32\n          6: iand\n          7: ifeq          14\n         10: iconst_1\n         11: goto          15\n         14: iconst_0\n         15: ireturn\n"}]}
