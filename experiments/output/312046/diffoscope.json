{"diffoscope-json-version": 1, "source1": "first/ZCompressorInputStream.class", "source2": "second/ZCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,156 +1,156 @@\n-  SHA-256 checksum c9229036fb056a0ff6d75918a4a7503a46254b39f26eb6a8590ac96f1b89ee8d\n+  SHA-256 checksum d5a934be0157de1ad3a639d8a13fcb647946e2417f4d21eaf08bff244890cdf5\n   Compiled from \"ZCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.z.ZCompressorInputStream extends org.apache.commons.compress.compressors.lzw.LZWInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/compressors/z/ZCompressorInputStream\n-  super_class: #12                        // org/apache/commons/compress/compressors/lzw/LZWInputStream\n+  super_class: #14                        // org/apache/commons/compress/compressors/lzw/LZWInputStream\n   interfaces: 0, fields: 7, methods: 8, attributes: 1\n Constant pool:\n-    #1 = Class              #71           // org/apache/commons/compress/compressors/z/ZCompressorInputStream\n-    #2 = Methodref          #1.#72        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #3 = Fieldref           #73.#74       // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-    #4 = Methodref          #12.#75       // org/apache/commons/compress/compressors/lzw/LZWInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n-    #5 = Fieldref           #1.#76        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.in:Lorg/apache/commons/compress/utils/BitInputStream;\n-    #6 = Methodref          #77.#78       // org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n-    #7 = Class              #79           // java/io/IOException\n-    #8 = String             #80           // Input is not in .Z format\n-    #9 = Methodref          #7.#81        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #10 = Fieldref           #1.#82        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.blockMode:Z\n-   #11 = Fieldref           #1.#83        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.maxCodeSize:I\n-   #12 = Class              #84           // org/apache/commons/compress/compressors/lzw/LZWInputStream\n-   #13 = Methodref          #1.#85        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.setClearCode:(I)V\n-   #14 = Methodref          #1.#86        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.initializeTables:(II)V\n-   #15 = Methodref          #1.#87        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.clearEntries:()V\n-   #16 = Methodref          #1.#88        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.getCodeSize:()I\n-   #17 = Methodref          #1.#89        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.addEntry:(IBI)I\n-   #18 = Methodref          #1.#90        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.getTableSize:()I\n-   #19 = Methodref          #1.#91        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.reAlignReading:()V\n-   #20 = Methodref          #1.#92        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.incrementCodeSize:()V\n-   #21 = Methodref          #1.#93        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.setTableSize:(I)V\n-   #22 = Methodref          #1.#94        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.readNextCode:()I\n-   #23 = Methodref          #1.#95        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.getClearCode:()I\n-   #24 = Methodref          #1.#96        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.resetCodeSize:()V\n-   #25 = Methodref          #1.#97        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.resetPreviousCode:()V\n-   #26 = Methodref          #1.#98        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.addRepeatOfPreviousCode:()I\n-   #27 = String             #99           // Invalid %d bit code 0x%x\n-   #28 = Class              #100          // java/lang/Object\n-   #29 = Methodref          #101.#102     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #30 = Methodref          #103.#104     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #31 = Methodref          #1.#105       // org/apache/commons/compress/compressors/z/ZCompressorInputStream.expandCodeToOutputStack:(IZ)I\n-   #32 = Methodref          #12.#94       // org/apache/commons/compress/compressors/lzw/LZWInputStream.readNextCode:()I\n-   #33 = Fieldref           #1.#106       // org/apache/commons/compress/compressors/z/ZCompressorInputStream.totalCodesRead:J\n-   #34 = Long               8l\n-   #36 = Methodref          #77.#107      // org/apache/commons/compress/utils/BitInputStream.clearBitCache:()V\n-   #37 = Utf8               MAGIC_1\n-   #38 = Utf8               I\n-   #39 = Utf8               ConstantValue\n-   #40 = Integer            31\n-   #41 = Utf8               MAGIC_2\n-   #42 = Integer            157\n-   #43 = Utf8               BLOCK_MODE_MASK\n-   #44 = Integer            128\n-   #45 = Utf8               MAX_CODE_SIZE_MASK\n-   #46 = Utf8               blockMode\n-   #47 = Utf8               Z\n-   #48 = Utf8               maxCodeSize\n-   #49 = Utf8               totalCodesRead\n-   #50 = Utf8               J\n-   #51 = Utf8               matches\n-   #52 = Utf8               ([BI)Z\n-   #53 = Utf8               Code\n-   #54 = Utf8               LineNumberTable\n-   #55 = Utf8               StackMapTable\n-   #56 = Utf8               <init>\n-   #57 = Utf8               (Ljava/io/InputStream;)V\n-   #58 = Utf8               Exceptions\n-   #59 = Utf8               (Ljava/io/InputStream;I)V\n-   #60 = Class              #108          // java/io/InputStream\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/z/ZCompressorInputStream\n+    #2 = Utf8               org/apache/commons/compress/compressors/z/ZCompressorInputStream\n+    #3 = Methodref          #1.#4         // org/apache/commons/compress/compressors/z/ZCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+    #4 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/InputStream;I)V\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/InputStream;I)V\n+    #7 = Fieldref           #8.#9         // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+    #8 = Class              #10           // java/nio/ByteOrder\n+    #9 = NameAndType        #11:#12       // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+   #10 = Utf8               java/nio/ByteOrder\n+   #11 = Utf8               LITTLE_ENDIAN\n+   #12 = Utf8               Ljava/nio/ByteOrder;\n+   #13 = Methodref          #14.#15       // org/apache/commons/compress/compressors/lzw/LZWInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+   #14 = Class              #16           // org/apache/commons/compress/compressors/lzw/LZWInputStream\n+   #15 = NameAndType        #5:#17        // \"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+   #16 = Utf8               org/apache/commons/compress/compressors/lzw/LZWInputStream\n+   #17 = Utf8               (Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+   #18 = Fieldref           #1.#19        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.in:Lorg/apache/commons/compress/utils/BitInputStream;\n+   #19 = NameAndType        #20:#21       // in:Lorg/apache/commons/compress/utils/BitInputStream;\n+   #20 = Utf8               in\n+   #21 = Utf8               Lorg/apache/commons/compress/utils/BitInputStream;\n+   #22 = Methodref          #23.#24       // org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n+   #23 = Class              #25           // org/apache/commons/compress/utils/BitInputStream\n+   #24 = NameAndType        #26:#27       // readBits:(I)J\n+   #25 = Utf8               org/apache/commons/compress/utils/BitInputStream\n+   #26 = Utf8               readBits\n+   #27 = Utf8               (I)J\n+   #28 = Class              #29           // java/io/IOException\n+   #29 = Utf8               java/io/IOException\n+   #30 = String             #31           // Input is not in .Z format\n+   #31 = Utf8               Input is not in .Z format\n+   #32 = Methodref          #28.#33       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #33 = NameAndType        #5:#34        // \"<init>\":(Ljava/lang/String;)V\n+   #34 = Utf8               (Ljava/lang/String;)V\n+   #35 = Fieldref           #1.#36        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.blockMode:Z\n+   #36 = NameAndType        #37:#38       // blockMode:Z\n+   #37 = Utf8               blockMode\n+   #38 = Utf8               Z\n+   #39 = Fieldref           #1.#40        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.maxCodeSize:I\n+   #40 = NameAndType        #41:#42       // maxCodeSize:I\n+   #41 = Utf8               maxCodeSize\n+   #42 = Utf8               I\n+   #43 = Methodref          #1.#44        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.setClearCode:(I)V\n+   #44 = NameAndType        #45:#46       // setClearCode:(I)V\n+   #45 = Utf8               setClearCode\n+   #46 = Utf8               (I)V\n+   #47 = Methodref          #1.#48        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.initializeTables:(II)V\n+   #48 = NameAndType        #49:#50       // initializeTables:(II)V\n+   #49 = Utf8               initializeTables\n+   #50 = Utf8               (II)V\n+   #51 = Methodref          #1.#52        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.clearEntries:()V\n+   #52 = NameAndType        #53:#54       // clearEntries:()V\n+   #53 = Utf8               clearEntries\n+   #54 = Utf8               ()V\n+   #55 = Methodref          #1.#56        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.getCodeSize:()I\n+   #56 = NameAndType        #57:#58       // getCodeSize:()I\n+   #57 = Utf8               getCodeSize\n+   #58 = Utf8               ()I\n+   #59 = Methodref          #1.#60        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.addEntry:(IBI)I\n+   #60 = NameAndType        #61:#62       // addEntry:(IBI)I\n    #61 = Utf8               addEntry\n-   #62 = Utf8               (IB)I\n-   #63 = Utf8               clearEntries\n-   #64 = Utf8               ()V\n-   #65 = Utf8               decompressNextSymbol\n-   #66 = Utf8               ()I\n-   #67 = Utf8               readNextCode\n+   #62 = Utf8               (IBI)I\n+   #63 = Methodref          #1.#64        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.getTableSize:()I\n+   #64 = NameAndType        #65:#58       // getTableSize:()I\n+   #65 = Utf8               getTableSize\n+   #66 = Methodref          #1.#67        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.reAlignReading:()V\n+   #67 = NameAndType        #68:#54       // reAlignReading:()V\n    #68 = Utf8               reAlignReading\n-   #69 = Utf8               SourceFile\n-   #70 = Utf8               ZCompressorInputStream.java\n-   #71 = Utf8               org/apache/commons/compress/compressors/z/ZCompressorInputStream\n-   #72 = NameAndType        #56:#59       // \"<init>\":(Ljava/io/InputStream;I)V\n-   #73 = Class              #109          // java/nio/ByteOrder\n-   #74 = NameAndType        #110:#111     // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-   #75 = NameAndType        #56:#112      // \"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n-   #76 = NameAndType        #113:#114     // in:Lorg/apache/commons/compress/utils/BitInputStream;\n-   #77 = Class              #115          // org/apache/commons/compress/utils/BitInputStream\n-   #78 = NameAndType        #116:#117     // readBits:(I)J\n-   #79 = Utf8               java/io/IOException\n-   #80 = Utf8               Input is not in .Z format\n-   #81 = NameAndType        #56:#118      // \"<init>\":(Ljava/lang/String;)V\n-   #82 = NameAndType        #46:#47       // blockMode:Z\n-   #83 = NameAndType        #48:#38       // maxCodeSize:I\n-   #84 = Utf8               org/apache/commons/compress/compressors/lzw/LZWInputStream\n-   #85 = NameAndType        #119:#120     // setClearCode:(I)V\n-   #86 = NameAndType        #121:#122     // initializeTables:(II)V\n-   #87 = NameAndType        #63:#64       // clearEntries:()V\n-   #88 = NameAndType        #123:#66      // getCodeSize:()I\n-   #89 = NameAndType        #61:#124      // addEntry:(IBI)I\n-   #90 = NameAndType        #125:#66      // getTableSize:()I\n-   #91 = NameAndType        #68:#64       // reAlignReading:()V\n-   #92 = NameAndType        #126:#64      // incrementCodeSize:()V\n-   #93 = NameAndType        #127:#120     // setTableSize:(I)V\n-   #94 = NameAndType        #67:#66       // readNextCode:()I\n-   #95 = NameAndType        #128:#66      // getClearCode:()I\n-   #96 = NameAndType        #129:#64      // resetCodeSize:()V\n-   #97 = NameAndType        #130:#64      // resetPreviousCode:()V\n-   #98 = NameAndType        #131:#66      // addRepeatOfPreviousCode:()I\n-   #99 = Utf8               Invalid %d bit code 0x%x\n-  #100 = Utf8               java/lang/Object\n-  #101 = Class              #132          // java/lang/Integer\n-  #102 = NameAndType        #133:#134     // valueOf:(I)Ljava/lang/Integer;\n-  #103 = Class              #135          // java/lang/String\n-  #104 = NameAndType        #136:#137     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #105 = NameAndType        #138:#139     // expandCodeToOutputStack:(IZ)I\n-  #106 = NameAndType        #49:#50       // totalCodesRead:J\n-  #107 = NameAndType        #140:#64      // clearBitCache:()V\n-  #108 = Utf8               java/io/InputStream\n-  #109 = Utf8               java/nio/ByteOrder\n-  #110 = Utf8               LITTLE_ENDIAN\n-  #111 = Utf8               Ljava/nio/ByteOrder;\n-  #112 = Utf8               (Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n-  #113 = Utf8               in\n-  #114 = Utf8               Lorg/apache/commons/compress/utils/BitInputStream;\n-  #115 = Utf8               org/apache/commons/compress/utils/BitInputStream\n-  #116 = Utf8               readBits\n-  #117 = Utf8               (I)J\n-  #118 = Utf8               (Ljava/lang/String;)V\n-  #119 = Utf8               setClearCode\n-  #120 = Utf8               (I)V\n-  #121 = Utf8               initializeTables\n-  #122 = Utf8               (II)V\n-  #123 = Utf8               getCodeSize\n-  #124 = Utf8               (IBI)I\n-  #125 = Utf8               getTableSize\n-  #126 = Utf8               incrementCodeSize\n-  #127 = Utf8               setTableSize\n-  #128 = Utf8               getClearCode\n-  #129 = Utf8               resetCodeSize\n-  #130 = Utf8               resetPreviousCode\n-  #131 = Utf8               addRepeatOfPreviousCode\n-  #132 = Utf8               java/lang/Integer\n-  #133 = Utf8               valueOf\n-  #134 = Utf8               (I)Ljava/lang/Integer;\n-  #135 = Utf8               java/lang/String\n-  #136 = Utf8               format\n-  #137 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #138 = Utf8               expandCodeToOutputStack\n-  #139 = Utf8               (IZ)I\n-  #140 = Utf8               clearBitCache\n+   #69 = Methodref          #1.#70        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.incrementCodeSize:()V\n+   #70 = NameAndType        #71:#54       // incrementCodeSize:()V\n+   #71 = Utf8               incrementCodeSize\n+   #72 = Methodref          #1.#73        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.setTableSize:(I)V\n+   #73 = NameAndType        #74:#46       // setTableSize:(I)V\n+   #74 = Utf8               setTableSize\n+   #75 = Methodref          #1.#76        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.readNextCode:()I\n+   #76 = NameAndType        #77:#58       // readNextCode:()I\n+   #77 = Utf8               readNextCode\n+   #78 = Methodref          #1.#79        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.getClearCode:()I\n+   #79 = NameAndType        #80:#58       // getClearCode:()I\n+   #80 = Utf8               getClearCode\n+   #81 = Methodref          #1.#82        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.resetCodeSize:()V\n+   #82 = NameAndType        #83:#54       // resetCodeSize:()V\n+   #83 = Utf8               resetCodeSize\n+   #84 = Methodref          #1.#85        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.resetPreviousCode:()V\n+   #85 = NameAndType        #86:#54       // resetPreviousCode:()V\n+   #86 = Utf8               resetPreviousCode\n+   #87 = Methodref          #1.#88        // org/apache/commons/compress/compressors/z/ZCompressorInputStream.addRepeatOfPreviousCode:()I\n+   #88 = NameAndType        #89:#58       // addRepeatOfPreviousCode:()I\n+   #89 = Utf8               addRepeatOfPreviousCode\n+   #90 = String             #91           // Invalid %d bit code 0x%x\n+   #91 = Utf8               Invalid %d bit code 0x%x\n+   #92 = Class              #93           // java/lang/Object\n+   #93 = Utf8               java/lang/Object\n+   #94 = Methodref          #95.#96       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #95 = Class              #97           // java/lang/Integer\n+   #96 = NameAndType        #98:#99       // valueOf:(I)Ljava/lang/Integer;\n+   #97 = Utf8               java/lang/Integer\n+   #98 = Utf8               valueOf\n+   #99 = Utf8               (I)Ljava/lang/Integer;\n+  #100 = Methodref          #101.#102     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #101 = Class              #103          // java/lang/String\n+  #102 = NameAndType        #104:#105     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #103 = Utf8               java/lang/String\n+  #104 = Utf8               format\n+  #105 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #106 = Methodref          #1.#107       // org/apache/commons/compress/compressors/z/ZCompressorInputStream.expandCodeToOutputStack:(IZ)I\n+  #107 = NameAndType        #108:#109     // expandCodeToOutputStack:(IZ)I\n+  #108 = Utf8               expandCodeToOutputStack\n+  #109 = Utf8               (IZ)I\n+  #110 = Methodref          #14.#76       // org/apache/commons/compress/compressors/lzw/LZWInputStream.readNextCode:()I\n+  #111 = Fieldref           #1.#112       // org/apache/commons/compress/compressors/z/ZCompressorInputStream.totalCodesRead:J\n+  #112 = NameAndType        #113:#114     // totalCodesRead:J\n+  #113 = Utf8               totalCodesRead\n+  #114 = Utf8               J\n+  #115 = Long               8l\n+  #117 = Methodref          #23.#118      // org/apache/commons/compress/utils/BitInputStream.clearBitCache:()V\n+  #118 = NameAndType        #119:#54      // clearBitCache:()V\n+  #119 = Utf8               clearBitCache\n+  #120 = Utf8               MAGIC_1\n+  #121 = Utf8               ConstantValue\n+  #122 = Integer            31\n+  #123 = Utf8               MAGIC_2\n+  #124 = Integer            157\n+  #125 = Utf8               BLOCK_MODE_MASK\n+  #126 = Integer            128\n+  #127 = Utf8               MAX_CODE_SIZE_MASK\n+  #128 = Utf8               matches\n+  #129 = Utf8               ([BI)Z\n+  #130 = Utf8               Code\n+  #131 = Utf8               LineNumberTable\n+  #132 = Utf8               StackMapTable\n+  #133 = Utf8               (Ljava/io/InputStream;)V\n+  #134 = Utf8               Exceptions\n+  #135 = Class              #136          // java/io/InputStream\n+  #136 = Utf8               java/io/InputStream\n+  #137 = Utf8               (IB)I\n+  #138 = Utf8               decompressNextSymbol\n+  #139 = Utf8               SourceFile\n+  #140 = Utf8               ZCompressorInputStream.java\n {\n   private static final int MAGIC_1 = 31;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 31\n \n   private static final int MAGIC_2 = 157;\n@@ -213,89 +213,89 @@\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_m1\n-         3: invokespecial #2                  // Method \"<init>\":(Ljava/io/InputStream;I)V\n+         3: invokespecial #3                  // Method \"<init>\":(Ljava/io/InputStream;I)V\n          6: return\n       LineNumberTable:\n         line 58: 0\n         line 59: 6\n     Exceptions:\n       throws java.io.IOException\n \n   public org.apache.commons.compress.compressors.z.ZCompressorInputStream(java.io.InputStream, int) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=6, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #3                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-         5: invokespecial #4                  // Method org/apache/commons/compress/compressors/lzw/LZWInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+         2: getstatic     #7                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+         5: invokespecial #13                 // Method org/apache/commons/compress/compressors/lzw/LZWInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n          8: aload_0\n-         9: getfield      #5                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n+         9: getfield      #18                 // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n         12: bipush        8\n-        14: invokevirtual #6                  // Method org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n+        14: invokevirtual #22                 // Method org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n         17: l2i\n         18: istore_3\n         19: aload_0\n-        20: getfield      #5                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n+        20: getfield      #18                 // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n         23: bipush        8\n-        25: invokevirtual #6                  // Method org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n+        25: invokevirtual #22                 // Method org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n         28: l2i\n         29: istore        4\n         31: aload_0\n-        32: getfield      #5                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n+        32: getfield      #18                 // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n         35: bipush        8\n-        37: invokevirtual #6                  // Method org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n+        37: invokevirtual #22                 // Method org/apache/commons/compress/utils/BitInputStream.readBits:(I)J\n         40: l2i\n         41: istore        5\n         43: iload_3\n         44: bipush        31\n         46: if_icmpne     62\n         49: iload         4\n         51: sipush        157\n         54: if_icmpne     62\n         57: iload         5\n         59: ifge          72\n-        62: new           #7                  // class java/io/IOException\n+        62: new           #28                 // class java/io/IOException\n         65: dup\n-        66: ldc           #8                  // String Input is not in .Z format\n-        68: invokespecial #9                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        66: ldc           #30                 // String Input is not in .Z format\n+        68: invokespecial #32                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         71: athrow\n         72: aload_0\n         73: iload         5\n         75: sipush        128\n         78: iand\n         79: ifeq          86\n         82: iconst_1\n         83: goto          87\n         86: iconst_0\n-        87: putfield      #10                 // Field blockMode:Z\n+        87: putfield      #35                 // Field blockMode:Z\n         90: aload_0\n         91: iload         5\n         93: bipush        31\n         95: iand\n-        96: putfield      #11                 // Field maxCodeSize:I\n+        96: putfield      #39                 // Field maxCodeSize:I\n         99: aload_0\n-       100: getfield      #10                 // Field blockMode:Z\n+       100: getfield      #35                 // Field blockMode:Z\n        103: ifeq          112\n        106: aload_0\n        107: bipush        9\n-       109: invokevirtual #13                 // Method setClearCode:(I)V\n+       109: invokevirtual #43                 // Method setClearCode:(I)V\n        112: aload_0\n        113: aload_0\n-       114: getfield      #11                 // Field maxCodeSize:I\n+       114: getfield      #39                 // Field maxCodeSize:I\n        117: iload_2\n-       118: invokevirtual #14                 // Method initializeTables:(II)V\n+       118: invokevirtual #47                 // Method initializeTables:(II)V\n        121: aload_0\n-       122: invokespecial #15                 // Method clearEntries:()V\n+       122: invokespecial #51                 // Method clearEntries:()V\n        125: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 8\n         line 65: 19\n         line 66: 31\n         line 67: 43\n@@ -326,36 +326,36 @@\n   protected int addEntry(int, byte) throws java.io.IOException;\n     descriptor: (IB)I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=5, args_size=3\n          0: iconst_1\n          1: aload_0\n-         2: invokevirtual #16                 // Method getCodeSize:()I\n+         2: invokevirtual #55                 // Method getCodeSize:()I\n          5: ishl\n          6: istore_3\n          7: aload_0\n          8: iload_1\n          9: iload_2\n         10: iload_3\n-        11: invokevirtual #17                 // Method addEntry:(IBI)I\n+        11: invokevirtual #59                 // Method addEntry:(IBI)I\n         14: istore        4\n         16: aload_0\n-        17: invokevirtual #18                 // Method getTableSize:()I\n+        17: invokevirtual #63                 // Method getTableSize:()I\n         20: iload_3\n         21: if_icmpne     43\n         24: aload_0\n-        25: invokevirtual #16                 // Method getCodeSize:()I\n+        25: invokevirtual #55                 // Method getCodeSize:()I\n         28: aload_0\n-        29: getfield      #11                 // Field maxCodeSize:I\n+        29: getfield      #39                 // Field maxCodeSize:I\n         32: if_icmpge     43\n         35: aload_0\n-        36: invokespecial #19                 // Method reAlignReading:()V\n+        36: invokespecial #66                 // Method reAlignReading:()V\n         39: aload_0\n-        40: invokevirtual #20                 // Method incrementCodeSize:()V\n+        40: invokevirtual #69                 // Method incrementCodeSize:()V\n         43: iload         4\n         45: ireturn\n       LineNumberTable:\n         line 87: 0\n         line 88: 7\n         line 89: 16\n         line 90: 35\n@@ -372,21 +372,21 @@\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: sipush        256\n          4: aload_0\n-         5: getfield      #10                 // Field blockMode:Z\n+         5: getfield      #35                 // Field blockMode:Z\n          8: ifeq          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: iadd\n-        17: invokevirtual #21                 // Method setTableSize:(I)V\n+        17: invokevirtual #72                 // Method setTableSize:(I)V\n         20: return\n       LineNumberTable:\n         line 97: 0\n         line 98: 20\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 15\n@@ -399,76 +399,76 @@\n \n   protected int decompressNextSymbol() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=7, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #22                 // Method readNextCode:()I\n+         1: invokevirtual #75                 // Method readNextCode:()I\n          4: istore_1\n          5: iload_1\n          6: ifge          11\n          9: iconst_m1\n         10: ireturn\n         11: aload_0\n-        12: getfield      #10                 // Field blockMode:Z\n+        12: getfield      #35                 // Field blockMode:Z\n         15: ifeq          44\n         18: iload_1\n         19: aload_0\n-        20: invokevirtual #23                 // Method getClearCode:()I\n+        20: invokevirtual #78                 // Method getClearCode:()I\n         23: if_icmpne     44\n         26: aload_0\n-        27: invokespecial #15                 // Method clearEntries:()V\n+        27: invokespecial #51                 // Method clearEntries:()V\n         30: aload_0\n-        31: invokespecial #19                 // Method reAlignReading:()V\n+        31: invokespecial #66                 // Method reAlignReading:()V\n         34: aload_0\n-        35: invokevirtual #24                 // Method resetCodeSize:()V\n+        35: invokevirtual #81                 // Method resetCodeSize:()V\n         38: aload_0\n-        39: invokevirtual #25                 // Method resetPreviousCode:()V\n+        39: invokevirtual #84                 // Method resetPreviousCode:()V\n         42: iconst_0\n         43: ireturn\n         44: iconst_0\n         45: istore_2\n         46: iload_1\n         47: aload_0\n-        48: invokevirtual #18                 // Method getTableSize:()I\n+        48: invokevirtual #63                 // Method getTableSize:()I\n         51: if_icmpne     64\n         54: aload_0\n-        55: invokevirtual #26                 // Method addRepeatOfPreviousCode:()I\n+        55: invokevirtual #87                 // Method addRepeatOfPreviousCode:()I\n         58: pop\n         59: iconst_1\n         60: istore_2\n         61: goto          106\n         64: iload_1\n         65: aload_0\n-        66: invokevirtual #18                 // Method getTableSize:()I\n+        66: invokevirtual #63                 // Method getTableSize:()I\n         69: if_icmple     106\n-        72: new           #7                  // class java/io/IOException\n+        72: new           #28                 // class java/io/IOException\n         75: dup\n-        76: ldc           #27                 // String Invalid %d bit code 0x%x\n+        76: ldc           #90                 // String Invalid %d bit code 0x%x\n         78: iconst_2\n-        79: anewarray     #28                 // class java/lang/Object\n+        79: anewarray     #92                 // class java/lang/Object\n         82: dup\n         83: iconst_0\n         84: aload_0\n-        85: invokevirtual #16                 // Method getCodeSize:()I\n-        88: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        85: invokevirtual #55                 // Method getCodeSize:()I\n+        88: invokestatic  #94                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         91: aastore\n         92: dup\n         93: iconst_1\n         94: iload_1\n-        95: invokestatic  #29                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        95: invokestatic  #94                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         98: aastore\n-        99: invokestatic  #30                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-       102: invokespecial #9                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        99: invokestatic  #100                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+       102: invokespecial #32                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        105: athrow\n        106: aload_0\n        107: iload_1\n        108: iload_2\n-       109: invokevirtual #31                 // Method expandCodeToOutputStack:(IZ)I\n+       109: invokevirtual #106                // Method expandCodeToOutputStack:(IZ)I\n        112: ireturn\n       LineNumberTable:\n         line 120: 0\n         line 121: 5\n         line 122: 9\n         line 124: 11\n         line 125: 26\n@@ -497,24 +497,24 @@\n \n   protected int readNextCode() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #32                 // Method org/apache/commons/compress/compressors/lzw/LZWInputStream.readNextCode:()I\n+         1: invokespecial #110                // Method org/apache/commons/compress/compressors/lzw/LZWInputStream.readNextCode:()I\n          4: istore_1\n          5: iload_1\n          6: iflt          19\n          9: aload_0\n         10: dup\n-        11: getfield      #33                 // Field totalCodesRead:J\n+        11: getfield      #111                // Field totalCodesRead:J\n         14: lconst_1\n         15: ladd\n-        16: putfield      #33                 // Field totalCodesRead:J\n+        16: putfield      #111                // Field totalCodesRead:J\n         19: iload_1\n         20: ireturn\n       LineNumberTable:\n         line 149: 0\n         line 150: 5\n         line 151: 9\n         line 153: 19\n@@ -526,44 +526,44 @@\n       throws java.io.IOException\n \n   private void reAlignReading() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=5, args_size=1\n-         0: ldc2_w        #34                 // long 8l\n+         0: ldc2_w        #115                // long 8l\n          3: aload_0\n-         4: getfield      #33                 // Field totalCodesRead:J\n-         7: ldc2_w        #34                 // long 8l\n+         4: getfield      #111                // Field totalCodesRead:J\n+         7: ldc2_w        #115                // long 8l\n         10: lrem\n         11: lsub\n         12: lstore_1\n         13: lload_1\n-        14: ldc2_w        #34                 // long 8l\n+        14: ldc2_w        #115                // long 8l\n         17: lcmp\n         18: ifne          23\n         21: lconst_0\n         22: lstore_1\n         23: lconst_0\n         24: lstore_3\n         25: lload_3\n         26: lload_1\n         27: lcmp\n         28: ifge          43\n         31: aload_0\n-        32: invokevirtual #22                 // Method readNextCode:()I\n+        32: invokevirtual #75                 // Method readNextCode:()I\n         35: pop\n         36: lload_3\n         37: lconst_1\n         38: ladd\n         39: lstore_3\n         40: goto          25\n         43: aload_0\n-        44: getfield      #5                  // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n-        47: invokevirtual #36                 // Method org/apache/commons/compress/utils/BitInputStream.clearBitCache:()V\n+        44: getfield      #18                 // Field in:Lorg/apache/commons/compress/utils/BitInputStream;\n+        47: invokevirtual #117                // Method org/apache/commons/compress/utils/BitInputStream.clearBitCache:()V\n         50: return\n       LineNumberTable:\n         line 161: 0\n         line 162: 13\n         line 163: 21\n         line 165: 23\n         line 166: 31\n"}]}
