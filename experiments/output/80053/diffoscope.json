{"diffoscope-json-version": 1, "source1": "first/BigIntegerParser.class", "source2": "second/BigIntegerParser.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,22 +10,22 @@\n     }\n     \n     public static BigInteger parseWithFastParser(final String valueStr) {\n         try {\n             return JavaBigIntegerParser.parseBigInteger((CharSequence)valueStr);\n         }\n         catch (final NumberFormatException nfe) {\n-            final String reportNum = (valueStr.length() <= 1000) ? valueStr : (valueStr.substring(0, 1000) + \" [truncated]\");\n+            final String reportNum = (valueStr.length() <= 1000) ? valueStr : (String.valueOf(valueStr.substring(0, 1000)) + \" [truncated]\");\n             throw new NumberFormatException(\"Value \\\"\" + reportNum + \"\\\" can not be represented as `java.math.BigInteger`, reason: \" + nfe.getMessage());\n         }\n     }\n     \n     public static BigInteger parseWithFastParser(final String valueStr, final int radix) {\n         try {\n             return JavaBigIntegerParser.parseBigInteger((CharSequence)valueStr, radix);\n         }\n         catch (final NumberFormatException nfe) {\n-            final String reportNum = (valueStr.length() <= 1000) ? valueStr : (valueStr.substring(0, 1000) + \" [truncated]\");\n+            final String reportNum = (valueStr.length() <= 1000) ? valueStr : (String.valueOf(valueStr.substring(0, 1000)) + \" [truncated]\");\n             throw new NumberFormatException(\"Value \\\"\" + reportNum + \"\\\" can not be represented as `java.math.BigInteger` with radix \" + radix + \", reason: \" + nfe.getMessage());\n         }\n     }\n }\n"}]}
