{"diffoscope-json-version": 1, "source1": "first/BCELifier.class", "source2": "second/BCELifier.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,192 +1,192 @@\n-  SHA-256 checksum 49198c12fab441d1a91972a3c461dd056320226679747351134213624c738feb\n+  SHA-256 checksum 976880799da304d10d73ce1ddbd0e650c19ccc9143583b93915c50bd3ba29385\n   Compiled from \"BCELifier.java\"\n public class org.apache.bcel.util.BCELifier extends org.apache.bcel.classfile.EmptyVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #164                        // org/apache/bcel/util/BCELifier\n   super_class: #174                       // org/apache/bcel/classfile/EmptyVisitor\n   interfaces: 0, fields: 5, methods: 15, attributes: 2\n Constant pool:\n-    #1 = Methodref          #174.#279     // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n-    #2 = Fieldref           #164.#280     // org/apache/bcel/util/BCELifier._clazz:Lorg/apache/bcel/classfile/JavaClass;\n-    #3 = Class              #281          // java/io/PrintWriter\n-    #4 = Methodref          #3.#282       // java/io/PrintWriter.\"<init>\":(Ljava/io/OutputStream;)V\n-    #5 = Fieldref           #164.#283     // org/apache/bcel/util/BCELifier._out:Ljava/io/PrintWriter;\n-    #6 = Class              #284          // org/apache/bcel/generic/ConstantPoolGen\n-    #7 = Methodref          #285.#286     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-    #8 = Methodref          #6.#287       // org/apache/bcel/generic/ConstantPoolGen.\"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n-    #9 = Fieldref           #164.#288     // org/apache/bcel/util/BCELifier._cp:Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #10 = Methodref          #164.#289     // org/apache/bcel/util/BCELifier.visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n-   #11 = Methodref          #3.#290       // java/io/PrintWriter.flush:()V\n-   #12 = Methodref          #285.#291     // org/apache/bcel/classfile/JavaClass.getClassName:()Ljava/lang/String;\n-   #13 = Methodref          #285.#292     // org/apache/bcel/classfile/JavaClass.getSuperclassName:()Ljava/lang/String;\n-   #14 = Methodref          #285.#293     // org/apache/bcel/classfile/JavaClass.getPackageName:()Ljava/lang/String;\n-   #15 = Methodref          #285.#294     // org/apache/bcel/classfile/JavaClass.getInterfaceNames:()[Ljava/lang/String;\n-   #16 = Methodref          #295.#296     // org/apache/bcel/classfile/Utility.printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n-   #17 = String             #297          //\n-   #18 = Methodref          #298.#299     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #19 = Methodref          #298.#300     // java/lang/String.length:()I\n-   #20 = Methodref          #298.#301     // java/lang/String.substring:(I)Ljava/lang/String;\n-   #21 = Class              #302          // java/lang/StringBuilder\n-   #22 = Methodref          #21.#279      // java/lang/StringBuilder.\"<init>\":()V\n-   #23 = String             #303          // package\n-   #24 = Methodref          #21.#304      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #25 = String             #305          // ;\n-   #26 = Methodref          #21.#306      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #27 = Methodref          #3.#307       // java/io/PrintWriter.println:(Ljava/lang/String;)V\n-   #28 = Methodref          #3.#308       // java/io/PrintWriter.println:()V\n-   #29 = String             #309          // import\n-   #30 = Fieldref           #164.#310     // org/apache/bcel/util/BCELifier.BASE_PACKAGE:Ljava/lang/String;\n-   #31 = String             #311          // .generic.*;\n-   #32 = String             #312          // .classfile.*;\n-   #33 = String             #313          // .*;\n-   #34 = String             #314          // import java.io.*;\n-   #35 = String             #315          // public class\n-   #36 = String             #316          // Creator {\n-   #37 = String             #317          //   private InstructionFactory _factory;\n-   #38 = String             #318          //   private ConstantPoolGen    _cp;\n-   #39 = String             #319          //   private ClassGen           _cg;\n-   #40 = String             #320          //   public\n-   #41 = String             #321          // Creator() {\n-   #42 = String             #322          //     _cg = new ClassGen(\\\"\n-   #43 = String             #323          // .\n-   #44 = String             #324          // \\\", \\\"\n-   #45 = Methodref          #285.#325     // org/apache/bcel/classfile/JavaClass.getSourceFileName:()Ljava/lang/String;\n-   #46 = String             #326          // \\\",\n-   #47 = Methodref          #285.#327     // org/apache/bcel/classfile/JavaClass.getAccessFlags:()I\n-   #48 = Fieldref           #175.#328     // org/apache/bcel/util/BCELifier$FLAGS.CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-   #49 = Methodref          #164.#329     // org/apache/bcel/util/BCELifier.printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n-   #50 = String             #330          // , new String[] {\n-   #51 = String             #331          //  });\n-   #52 = String             #332          //     _cg.setMajor(\n-   #53 = Methodref          #285.#333     // org/apache/bcel/classfile/JavaClass.getMajor:()I\n-   #54 = Methodref          #21.#334      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #55 = String             #335          // );\n-   #56 = String             #336          //     _cg.setMinor(\n-   #57 = Methodref          #285.#337     // org/apache/bcel/classfile/JavaClass.getMinor:()I\n-   #58 = String             #338          //     _cp = _cg.getConstantPool();\n-   #59 = String             #339          //     _factory = new InstructionFactory(_cg, _cp);\n-   #60 = String             #340          //   }\n-   #61 = Methodref          #164.#341     // org/apache/bcel/util/BCELifier.printCreate:()V\n-   #62 = Methodref          #285.#342     // org/apache/bcel/classfile/JavaClass.getFields:()[Lorg/apache/bcel/classfile/Field;\n-   #63 = String             #343          //   private void createFields() {\n-   #64 = String             #344          //     FieldGen field;\n-   #65 = Methodref          #345.#346     // org/apache/bcel/classfile/Field.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n-   #66 = Methodref          #285.#347     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n-   #67 = String             #348          //   private void createMethod_\n-   #68 = String             #349          // () {\n-   #69 = Methodref          #350.#346     // org/apache/bcel/classfile/Method.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n-   #70 = Methodref          #164.#351     // org/apache/bcel/util/BCELifier.printMain:()V\n-   #71 = String             #352          // }\n-   #72 = String             #353          //   public void create(OutputStream out) throws IOException {\n-   #73 = String             #354          //     createFields();\n-   #74 = String             #355          //     createMethod_\n-   #75 = String             #356          // ();\n-   #76 = String             #357          //     _cg.getJavaClass().dump(out);\n-   #77 = String             #358          //   public static void main(String[] args) throws Exception {\n-   #78 = String             #359          //\n-   #79 = String             #360          // Creator creator = new\n-   #80 = String             #361          // Creator();\n-   #81 = String             #362          //     creator.create(new FileOutputStream(\\\"\n-   #82 = String             #363          // .class\\\"));\n-   #83 = String             #364          //     field = new FieldGen(\n-   #84 = Methodref          #345.#327     // org/apache/bcel/classfile/Field.getAccessFlags:()I\n-   #85 = Methodref          #164.#365     // org/apache/bcel/util/BCELifier.printFlags:(I)Ljava/lang/String;\n-   #86 = String             #366          // ,\n-   #87 = Methodref          #345.#367     // org/apache/bcel/classfile/Field.getSignature:()Ljava/lang/String;\n-   #88 = Methodref          #164.#368     // org/apache/bcel/util/BCELifier.printType:(Ljava/lang/String;)Ljava/lang/String;\n-   #89 = String             #369          // , \\\"\n-   #90 = Methodref          #345.#370     // org/apache/bcel/classfile/Field.getName:()Ljava/lang/String;\n-   #91 = String             #371          // \\\", _cp);\n-   #92 = Methodref          #345.#372     // org/apache/bcel/classfile/Field.getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n-   #93 = Methodref          #373.#306     // org/apache/bcel/classfile/ConstantValue.toString:()Ljava/lang/String;\n-   #94 = String             #374          //     field.setInitValue(\n-   #95 = String             #375          // )\n-   #96 = String             #376          //     _cg.addField(field.getField());\n-   #97 = Class              #377          // org/apache/bcel/generic/MethodGen\n-   #98 = Methodref          #97.#378      // org/apache/bcel/generic/MethodGen.\"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #99 = String             #379          //     InstructionList il = new InstructionList();\n-  #100 = String             #380          //     MethodGen method = new MethodGen(\n-  #101 = Methodref          #350.#327     // org/apache/bcel/classfile/Method.getAccessFlags:()I\n-  #102 = Fieldref           #175.#381     // org/apache/bcel/util/BCELifier$FLAGS.METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #103 = Methodref          #97.#382      // org/apache/bcel/generic/MethodGen.getReturnType:()Lorg/apache/bcel/generic/Type;\n-  #104 = Methodref          #164.#383     // org/apache/bcel/util/BCELifier.printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #105 = Methodref          #97.#384      // org/apache/bcel/generic/MethodGen.getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n-  #106 = Methodref          #164.#385     // org/apache/bcel/util/BCELifier.printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #107 = Methodref          #97.#386      // org/apache/bcel/generic/MethodGen.getArgumentNames:()[Ljava/lang/String;\n-  #108 = String             #387          //  }, \\\"\n-  #109 = Methodref          #350.#370     // org/apache/bcel/classfile/Method.getName:()Ljava/lang/String;\n-  #110 = String             #388          // \\\", il, _cp);\n-  #111 = Class              #389          // org/apache/bcel/util/BCELFactory\n-  #112 = Methodref          #111.#390     // org/apache/bcel/util/BCELFactory.\"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n-  #113 = Methodref          #111.#391     // org/apache/bcel/util/BCELFactory.start:()V\n-  #114 = String             #392          //     method.setMaxStack();\n-  #115 = String             #393          //     method.setMaxLocals();\n-  #116 = String             #394          //     _cg.addMethod(method.getMethod());\n-  #117 = String             #395          //     il.dispose();\n-  #118 = Fieldref           #175.#396     // org/apache/bcel/util/BCELifier$FLAGS.UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #119 = String             #397          // 0\n-  #120 = Class              #398          // org/apache/bcel/Const\n+    #1 = Methodref          #174.#276     // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n+    #2 = Fieldref           #164.#277     // org/apache/bcel/util/BCELifier._clazz:Lorg/apache/bcel/classfile/JavaClass;\n+    #3 = Class              #278          // java/io/PrintWriter\n+    #4 = Methodref          #3.#279       // java/io/PrintWriter.\"<init>\":(Ljava/io/OutputStream;)V\n+    #5 = Fieldref           #164.#280     // org/apache/bcel/util/BCELifier._out:Ljava/io/PrintWriter;\n+    #6 = Class              #281          // org/apache/bcel/generic/ConstantPoolGen\n+    #7 = Methodref          #214.#282     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+    #8 = Methodref          #6.#283       // org/apache/bcel/generic/ConstantPoolGen.\"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n+    #9 = Fieldref           #164.#284     // org/apache/bcel/util/BCELifier._cp:Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #10 = Methodref          #164.#285     // org/apache/bcel/util/BCELifier.visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n+   #11 = Methodref          #3.#286       // java/io/PrintWriter.flush:()V\n+   #12 = Methodref          #214.#287     // org/apache/bcel/classfile/JavaClass.getClassName:()Ljava/lang/String;\n+   #13 = Methodref          #214.#288     // org/apache/bcel/classfile/JavaClass.getSuperclassName:()Ljava/lang/String;\n+   #14 = Methodref          #214.#289     // org/apache/bcel/classfile/JavaClass.getPackageName:()Ljava/lang/String;\n+   #15 = Methodref          #214.#290     // org/apache/bcel/classfile/JavaClass.getInterfaceNames:()[Ljava/lang/String;\n+   #16 = Methodref          #291.#292     // org/apache/bcel/classfile/Utility.printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n+   #17 = String             #293          //\n+   #18 = Methodref          #215.#294     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #19 = Methodref          #215.#295     // java/lang/String.length:()I\n+   #20 = Methodref          #215.#296     // java/lang/String.substring:(I)Ljava/lang/String;\n+   #21 = Class              #297          // java/lang/StringBuilder\n+   #22 = Methodref          #21.#276      // java/lang/StringBuilder.\"<init>\":()V\n+   #23 = String             #298          // package\n+   #24 = Methodref          #21.#299      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #25 = String             #300          // ;\n+   #26 = Methodref          #21.#301      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #27 = Methodref          #3.#302       // java/io/PrintWriter.println:(Ljava/lang/String;)V\n+   #28 = Methodref          #3.#303       // java/io/PrintWriter.println:()V\n+   #29 = String             #304          // import\n+   #30 = Fieldref           #164.#305     // org/apache/bcel/util/BCELifier.BASE_PACKAGE:Ljava/lang/String;\n+   #31 = String             #306          // .generic.*;\n+   #32 = String             #307          // .classfile.*;\n+   #33 = String             #308          // .*;\n+   #34 = String             #309          // import java.io.*;\n+   #35 = String             #310          // public class\n+   #36 = String             #311          // Creator {\n+   #37 = String             #312          //   private InstructionFactory _factory;\n+   #38 = String             #313          //   private ConstantPoolGen    _cp;\n+   #39 = String             #314          //   private ClassGen           _cg;\n+   #40 = String             #315          //   public\n+   #41 = String             #316          // Creator() {\n+   #42 = String             #317          //     _cg = new ClassGen(\\\"\n+   #43 = String             #318          // .\n+   #44 = String             #319          // \\\", \\\"\n+   #45 = Methodref          #214.#320     // org/apache/bcel/classfile/JavaClass.getSourceFileName:()Ljava/lang/String;\n+   #46 = String             #321          // \\\",\n+   #47 = Methodref          #214.#322     // org/apache/bcel/classfile/JavaClass.getAccessFlags:()I\n+   #48 = Fieldref           #175.#323     // org/apache/bcel/util/BCELifier$FLAGS.CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+   #49 = Methodref          #164.#324     // org/apache/bcel/util/BCELifier.printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n+   #50 = String             #325          // , new String[] {\n+   #51 = String             #326          //  });\n+   #52 = String             #327          //     _cg.setMajor(\n+   #53 = Methodref          #214.#328     // org/apache/bcel/classfile/JavaClass.getMajor:()I\n+   #54 = Methodref          #21.#329      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #55 = String             #330          // );\n+   #56 = String             #331          //     _cg.setMinor(\n+   #57 = Methodref          #214.#332     // org/apache/bcel/classfile/JavaClass.getMinor:()I\n+   #58 = String             #333          //     _cp = _cg.getConstantPool();\n+   #59 = String             #334          //     _factory = new InstructionFactory(_cg, _cp);\n+   #60 = String             #335          //   }\n+   #61 = Methodref          #164.#336     // org/apache/bcel/util/BCELifier.printCreate:()V\n+   #62 = Methodref          #214.#337     // org/apache/bcel/classfile/JavaClass.getFields:()[Lorg/apache/bcel/classfile/Field;\n+   #63 = String             #338          //   private void createFields() {\n+   #64 = String             #339          //     FieldGen field;\n+   #65 = Methodref          #340.#341     // org/apache/bcel/classfile/Field.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n+   #66 = Methodref          #214.#342     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n+   #67 = String             #343          //   private void createMethod_\n+   #68 = String             #344          // () {\n+   #69 = Methodref          #345.#341     // org/apache/bcel/classfile/Method.accept:(Lorg/apache/bcel/classfile/Visitor;)V\n+   #70 = Methodref          #164.#346     // org/apache/bcel/util/BCELifier.printMain:()V\n+   #71 = String             #347          // }\n+   #72 = String             #348          //   public void create(OutputStream out) throws IOException {\n+   #73 = String             #349          //     createFields();\n+   #74 = String             #350          //     createMethod_\n+   #75 = String             #351          // ();\n+   #76 = String             #352          //     _cg.getJavaClass().dump(out);\n+   #77 = String             #353          //   public static void main(String[] args) throws Exception {\n+   #78 = String             #354          //\n+   #79 = String             #355          // Creator creator = new\n+   #80 = String             #356          // Creator();\n+   #81 = String             #357          //     creator.create(new FileOutputStream(\\\"\n+   #82 = String             #358          // .class\\\"));\n+   #83 = String             #359          //     field = new FieldGen(\n+   #84 = Methodref          #340.#322     // org/apache/bcel/classfile/Field.getAccessFlags:()I\n+   #85 = Methodref          #164.#360     // org/apache/bcel/util/BCELifier.printFlags:(I)Ljava/lang/String;\n+   #86 = String             #361          // ,\n+   #87 = Methodref          #340.#362     // org/apache/bcel/classfile/Field.getSignature:()Ljava/lang/String;\n+   #88 = Methodref          #164.#363     // org/apache/bcel/util/BCELifier.printType:(Ljava/lang/String;)Ljava/lang/String;\n+   #89 = String             #364          // , \\\"\n+   #90 = Methodref          #340.#365     // org/apache/bcel/classfile/Field.getName:()Ljava/lang/String;\n+   #91 = String             #366          // \\\", _cp);\n+   #92 = Methodref          #340.#367     // org/apache/bcel/classfile/Field.getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n+   #93 = Methodref          #225.#301     // org/apache/bcel/classfile/ConstantValue.toString:()Ljava/lang/String;\n+   #94 = String             #368          //     field.setInitValue(\n+   #95 = String             #369          // )\n+   #96 = String             #370          //     _cg.addField(field.getField());\n+   #97 = Class              #371          // org/apache/bcel/generic/MethodGen\n+   #98 = Methodref          #97.#372      // org/apache/bcel/generic/MethodGen.\"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #99 = String             #373          //     InstructionList il = new InstructionList();\n+  #100 = String             #374          //     MethodGen method = new MethodGen(\n+  #101 = Methodref          #345.#322     // org/apache/bcel/classfile/Method.getAccessFlags:()I\n+  #102 = Fieldref           #175.#375     // org/apache/bcel/util/BCELifier$FLAGS.METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #103 = Methodref          #97.#376      // org/apache/bcel/generic/MethodGen.getReturnType:()Lorg/apache/bcel/generic/Type;\n+  #104 = Methodref          #164.#377     // org/apache/bcel/util/BCELifier.printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #105 = Methodref          #97.#378      // org/apache/bcel/generic/MethodGen.getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n+  #106 = Methodref          #164.#379     // org/apache/bcel/util/BCELifier.printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #107 = Methodref          #97.#380      // org/apache/bcel/generic/MethodGen.getArgumentNames:()[Ljava/lang/String;\n+  #108 = String             #381          //  }, \\\"\n+  #109 = Methodref          #345.#365     // org/apache/bcel/classfile/Method.getName:()Ljava/lang/String;\n+  #110 = String             #382          // \\\", il, _cp);\n+  #111 = Class              #383          // org/apache/bcel/util/BCELFactory\n+  #112 = Methodref          #111.#384     // org/apache/bcel/util/BCELFactory.\"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n+  #113 = Methodref          #111.#385     // org/apache/bcel/util/BCELFactory.start:()V\n+  #114 = String             #386          //     method.setMaxStack();\n+  #115 = String             #387          //     method.setMaxLocals();\n+  #116 = String             #388          //     _cg.addMethod(method.getMethod());\n+  #117 = String             #389          //     il.dispose();\n+  #118 = Fieldref           #175.#390     // org/apache/bcel/util/BCELifier$FLAGS.UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #119 = String             #391          // 0\n+  #120 = Class              #392          // org/apache/bcel/Const\n   #121 = Integer            32768\n-  #122 = Fieldref           #164.#399     // org/apache/bcel/util/BCELifier.CONSTANT_PREFIX:Ljava/lang/String;\n-  #123 = String             #400          // ACC_SUPER |\n-  #124 = String             #401          // ACC_BRIDGE |\n-  #125 = String             #402          // ACC_VARARGS |\n-  #126 = Fieldref           #120.#403     // org/apache/bcel/Const.ACCESS_NAMES_LENGTH:I\n-  #127 = String             #404          // ACC_\n-  #128 = Methodref          #120.#405     // org/apache/bcel/Const.getAccessName:(I)Ljava/lang/String;\n-  #129 = Fieldref           #406.#407     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n-  #130 = Methodref          #298.#408     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #131 = String             #409          //  |\n-  #132 = String             #410          // ACC_BIT %x |\n-  #133 = Class              #411          // java/lang/Object\n-  #134 = Methodref          #412.#413     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #135 = Methodref          #298.#414     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #136 = Methodref          #298.#415     // java/lang/String.substring:(II)Ljava/lang/String;\n-  #137 = String             #416          // Type.NO_ARGS\n-  #138 = String             #417          // new Type[] {\n-  #139 = String             #418          //  }\n-  #140 = Methodref          #419.#367     // org/apache/bcel/generic/Type.getSignature:()Ljava/lang/String;\n-  #141 = Methodref          #419.#420     // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #142 = Methodref          #419.#421     // org/apache/bcel/generic/Type.getType:()B\n-  #143 = String             #422          // Type.\n-  #144 = Methodref          #120.#423     // org/apache/bcel/Const.getTypeName:(I)Ljava/lang/String;\n-  #145 = Methodref          #419.#306     // org/apache/bcel/generic/Type.toString:()Ljava/lang/String;\n-  #146 = String             #424          // java.lang.String\n-  #147 = String             #425          // Type.STRING\n-  #148 = String             #426          // java.lang.Object\n-  #149 = String             #427          // Type.OBJECT\n-  #150 = String             #428          // java.lang.StringBuffer\n-  #151 = String             #429          // Type.STRINGBUFFER\n-  #152 = Class              #430          // org/apache/bcel/generic/ArrayType\n-  #153 = String             #431          // new ArrayType(\n-  #154 = Methodref          #152.#432     // org/apache/bcel/generic/ArrayType.getBasicType:()Lorg/apache/bcel/generic/Type;\n-  #155 = Methodref          #152.#433     // org/apache/bcel/generic/ArrayType.getDimensions:()I\n-  #156 = String             #434          // new ObjectType(\\\"\n-  #157 = Methodref          #295.#435     // org/apache/bcel/classfile/Utility.signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #158 = String             #436          // \\\")\n-  #159 = Fieldref           #437.#438     // java/lang/System.out:Ljava/io/PrintStream;\n-  #160 = String             #439          // Usage: BCELifier classname\n-  #161 = Methodref          #440.#307     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-  #162 = String             #441          // \\tThe class must exist on the classpath\n-  #163 = Methodref          #164.#442     // org/apache/bcel/util/BCELifier.getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #164 = Class              #443          // org/apache/bcel/util/BCELifier\n-  #165 = Methodref          #164.#444     // org/apache/bcel/util/BCELifier.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n-  #166 = Methodref          #164.#391     // org/apache/bcel/util/BCELifier.start:()V\n-  #167 = Methodref          #445.#446     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #168 = Class              #447          // org/apache/bcel/classfile/ClassParser\n-  #169 = Methodref          #168.#448     // org/apache/bcel/classfile/ClassParser.\"<init>\":(Ljava/lang/String;)V\n-  #170 = Methodref          #168.#449     // org/apache/bcel/classfile/ClassParser.parse:()Lorg/apache/bcel/classfile/JavaClass;\n-  #171 = Methodref          #450.#451     // java/lang/Class.getPackage:()Ljava/lang/Package;\n-  #172 = Methodref          #452.#370     // java/lang/Package.getName:()Ljava/lang/String;\n-  #173 = Methodref          #450.#453     // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-  #174 = Class              #454          // org/apache/bcel/classfile/EmptyVisitor\n-  #175 = Class              #455          // org/apache/bcel/util/BCELifier$FLAGS\n+  #122 = Fieldref           #164.#393     // org/apache/bcel/util/BCELifier.CONSTANT_PREFIX:Ljava/lang/String;\n+  #123 = String             #394          // ACC_SUPER |\n+  #124 = String             #395          // ACC_BRIDGE |\n+  #125 = String             #396          // ACC_VARARGS |\n+  #126 = Fieldref           #120.#397     // org/apache/bcel/Const.ACCESS_NAMES_LENGTH:I\n+  #127 = String             #398          // ACC_\n+  #128 = Methodref          #120.#399     // org/apache/bcel/Const.getAccessName:(I)Ljava/lang/String;\n+  #129 = Fieldref           #400.#401     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n+  #130 = Methodref          #215.#402     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #131 = String             #403          //  |\n+  #132 = String             #404          // ACC_BIT %x |\n+  #133 = Class              #405          // java/lang/Object\n+  #134 = Methodref          #406.#407     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #135 = Methodref          #215.#408     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #136 = Methodref          #215.#409     // java/lang/String.substring:(II)Ljava/lang/String;\n+  #137 = String             #410          // Type.NO_ARGS\n+  #138 = String             #411          // new Type[] {\n+  #139 = String             #412          //  }\n+  #140 = Methodref          #259.#362     // org/apache/bcel/generic/Type.getSignature:()Ljava/lang/String;\n+  #141 = Methodref          #259.#413     // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #142 = Methodref          #259.#414     // org/apache/bcel/generic/Type.getType:()B\n+  #143 = String             #415          // Type.\n+  #144 = Methodref          #120.#416     // org/apache/bcel/Const.getTypeName:(I)Ljava/lang/String;\n+  #145 = Methodref          #259.#301     // org/apache/bcel/generic/Type.toString:()Ljava/lang/String;\n+  #146 = String             #417          // java.lang.String\n+  #147 = String             #418          // Type.STRING\n+  #148 = String             #419          // java.lang.Object\n+  #149 = String             #420          // Type.OBJECT\n+  #150 = String             #421          // java.lang.StringBuffer\n+  #151 = String             #422          // Type.STRINGBUFFER\n+  #152 = Class              #423          // org/apache/bcel/generic/ArrayType\n+  #153 = String             #424          // new ArrayType(\n+  #154 = Methodref          #152.#425     // org/apache/bcel/generic/ArrayType.getBasicType:()Lorg/apache/bcel/generic/Type;\n+  #155 = Methodref          #152.#426     // org/apache/bcel/generic/ArrayType.getDimensions:()I\n+  #156 = String             #427          // new ObjectType(\\\"\n+  #157 = Methodref          #291.#428     // org/apache/bcel/classfile/Utility.signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #158 = String             #429          // \\\")\n+  #159 = Fieldref           #430.#431     // java/lang/System.out:Ljava/io/PrintStream;\n+  #160 = String             #432          // Usage: BCELifier classname\n+  #161 = Methodref          #433.#302     // java/io/PrintStream.println:(Ljava/lang/String;)V\n+  #162 = String             #434          // \\tThe class must exist on the classpath\n+  #163 = Methodref          #164.#435     // org/apache/bcel/util/BCELifier.getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #164 = Class              #436          // org/apache/bcel/util/BCELifier\n+  #165 = Methodref          #164.#437     // org/apache/bcel/util/BCELifier.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n+  #166 = Methodref          #164.#385     // org/apache/bcel/util/BCELifier.start:()V\n+  #167 = Methodref          #438.#439     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #168 = Class              #440          // org/apache/bcel/classfile/ClassParser\n+  #169 = Methodref          #168.#441     // org/apache/bcel/classfile/ClassParser.\"<init>\":(Ljava/lang/String;)V\n+  #170 = Methodref          #168.#442     // org/apache/bcel/classfile/ClassParser.parse:()Lorg/apache/bcel/classfile/JavaClass;\n+  #171 = Methodref          #443.#444     // java/lang/Class.getPackage:()Ljava/lang/Package;\n+  #172 = Methodref          #445.#365     // java/lang/Package.getName:()Ljava/lang/String;\n+  #173 = Methodref          #443.#446     // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+  #174 = Class              #447          // org/apache/bcel/classfile/EmptyVisitor\n+  #175 = Class              #448          // org/apache/bcel/util/BCELifier$FLAGS\n   #176 = Utf8               FLAGS\n   #177 = Utf8               InnerClasses\n   #178 = Utf8               BASE_PACKAGE\n   #179 = Utf8               Ljava/lang/String;\n   #180 = Utf8               CONSTANT_PREFIX\n   #181 = Utf8               _clazz\n   #182 = Utf8               Lorg/apache/bcel/classfile/JavaClass;\n@@ -217,347 +217,340 @@\n   #207 = Utf8               package_name\n   #208 = Utf8               inter\n   #209 = Utf8               fields\n   #210 = Utf8               [Lorg/apache/bcel/classfile/Field;\n   #211 = Utf8               methods\n   #212 = Utf8               [Lorg/apache/bcel/classfile/Method;\n   #213 = Utf8               StackMapTable\n-  #214 = Class              #443          // org/apache/bcel/util/BCELifier\n-  #215 = Class              #456          // org/apache/bcel/classfile/JavaClass\n-  #216 = Class              #457          // java/lang/String\n-  #217 = Class              #281          // java/io/PrintWriter\n-  #218 = Class              #302          // java/lang/StringBuilder\n-  #219 = Class              #210          // \"[Lorg/apache/bcel/classfile/Field;\"\n-  #220 = Class              #212          // \"[Lorg/apache/bcel/classfile/Method;\"\n-  #221 = Utf8               printCreate\n-  #222 = Utf8               printMain\n-  #223 = Utf8               visitField\n-  #224 = Utf8               (Lorg/apache/bcel/classfile/Field;)V\n-  #225 = Utf8               value\n-  #226 = Utf8               cv\n-  #227 = Utf8               Lorg/apache/bcel/classfile/ConstantValue;\n-  #228 = Class              #458          // org/apache/bcel/classfile/ConstantValue\n-  #229 = Utf8               visitMethod\n-  #230 = Utf8               (Lorg/apache/bcel/classfile/Method;)V\n-  #231 = Utf8               method\n-  #232 = Utf8               Lorg/apache/bcel/classfile/Method;\n-  #233 = Utf8               mg\n-  #234 = Utf8               Lorg/apache/bcel/generic/MethodGen;\n-  #235 = Utf8               factory\n-  #236 = Utf8               Lorg/apache/bcel/util/BCELFactory;\n-  #237 = Utf8               printFlags\n-  #238 = Utf8               (I)Ljava/lang/String;\n-  #239 = Utf8               flags\n-  #240 = Utf8               (ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n-  #241 = Utf8               pow\n-  #242 = Utf8               location\n-  #243 = Utf8               Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #244 = Utf8               buf\n-  #245 = Utf8               Ljava/lang/StringBuilder;\n-  #246 = Utf8               str\n-  #247 = Utf8               printArgumentTypes\n-  #248 = Utf8               ([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #249 = Utf8               arg_types\n-  #250 = Utf8               [Lorg/apache/bcel/generic/Type;\n-  #251 = Utf8               args\n-  #252 = Utf8               printType\n-  #253 = Utf8               (Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #254 = Utf8               type\n-  #255 = Utf8               Lorg/apache/bcel/generic/Type;\n-  #256 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #257 = Utf8               at\n-  #258 = Utf8               Lorg/apache/bcel/generic/ArrayType;\n-  #259 = Utf8               signature\n-  #260 = Utf8               t\n-  #261 = Utf8               B\n-  #262 = Class              #459          // org/apache/bcel/generic/Type\n-  #263 = Utf8               main\n-  #264 = Utf8               ([Ljava/lang/String;)V\n-  #265 = Utf8               argv\n-  #266 = Utf8               [Ljava/lang/String;\n-  #267 = Utf8               java_class\n-  #268 = Utf8               bcelifier\n-  #269 = Utf8               Exceptions\n-  #270 = Class              #460          // java/lang/Exception\n-  #271 = Utf8               getJavaClass\n-  #272 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #273 = Utf8               name\n-  #274 = Class              #461          // java/lang/ClassNotFoundException\n-  #275 = Class              #462          // java/io/IOException\n-  #276 = Utf8               <clinit>\n-  #277 = Utf8               SourceFile\n-  #278 = Utf8               BCELifier.java\n-  #279 = NameAndType        #187:#198     // \"<init>\":()V\n-  #280 = NameAndType        #181:#182     // _clazz:Lorg/apache/bcel/classfile/JavaClass;\n-  #281 = Utf8               java/io/PrintWriter\n-  #282 = NameAndType        #187:#463     // \"<init>\":(Ljava/io/OutputStream;)V\n-  #283 = NameAndType        #183:#184     // _out:Ljava/io/PrintWriter;\n-  #284 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #285 = Class              #456          // org/apache/bcel/classfile/JavaClass\n-  #286 = NameAndType        #464:#465     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #287 = NameAndType        #187:#466     // \"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #288 = NameAndType        #185:#186     // _cp:Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #289 = NameAndType        #199:#200     // visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n-  #290 = NameAndType        #467:#198     // flush:()V\n-  #291 = NameAndType        #468:#469     // getClassName:()Ljava/lang/String;\n-  #292 = NameAndType        #470:#469     // getSuperclassName:()Ljava/lang/String;\n-  #293 = NameAndType        #471:#469     // getPackageName:()Ljava/lang/String;\n-  #294 = NameAndType        #472:#473     // getInterfaceNames:()[Ljava/lang/String;\n-  #295 = Class              #474          // org/apache/bcel/classfile/Utility\n-  #296 = NameAndType        #475:#476     // printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n-  #297 = Utf8\n-  #298 = Class              #457          // java/lang/String\n-  #299 = NameAndType        #477:#478     // equals:(Ljava/lang/Object;)Z\n-  #300 = NameAndType        #479:#480     // length:()I\n-  #301 = NameAndType        #481:#238     // substring:(I)Ljava/lang/String;\n-  #302 = Utf8               java/lang/StringBuilder\n-  #303 = Utf8               package\n-  #304 = NameAndType        #482:#483     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #305 = Utf8               ;\n-  #306 = NameAndType        #484:#469     // toString:()Ljava/lang/String;\n-  #307 = NameAndType        #485:#486     // println:(Ljava/lang/String;)V\n-  #308 = NameAndType        #485:#198     // println:()V\n-  #309 = Utf8               import\n-  #310 = NameAndType        #178:#179     // BASE_PACKAGE:Ljava/lang/String;\n-  #311 = Utf8               .generic.*;\n-  #312 = Utf8               .classfile.*;\n-  #313 = Utf8               .*;\n-  #314 = Utf8               import java.io.*;\n-  #315 = Utf8               public class\n-  #316 = Utf8               Creator {\n-  #317 = Utf8                 private InstructionFactory _factory;\n-  #318 = Utf8                 private ConstantPoolGen    _cp;\n-  #319 = Utf8                 private ClassGen           _cg;\n-  #320 = Utf8                 public\n-  #321 = Utf8               Creator() {\n-  #322 = Utf8                   _cg = new ClassGen(\\\"\n-  #323 = Utf8               .\n-  #324 = Utf8               \\\", \\\"\n-  #325 = NameAndType        #487:#469     // getSourceFileName:()Ljava/lang/String;\n-  #326 = Utf8               \\\",\n-  #327 = NameAndType        #488:#480     // getAccessFlags:()I\n-  #328 = NameAndType        #489:#243     // CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #329 = NameAndType        #237:#240     // printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n-  #330 = Utf8               , new String[] {\n-  #331 = Utf8                });\n-  #332 = Utf8                   _cg.setMajor(\n-  #333 = NameAndType        #490:#480     // getMajor:()I\n-  #334 = NameAndType        #482:#491     // append:(I)Ljava/lang/StringBuilder;\n-  #335 = Utf8               );\n-  #336 = Utf8                   _cg.setMinor(\n-  #337 = NameAndType        #492:#480     // getMinor:()I\n-  #338 = Utf8                   _cp = _cg.getConstantPool();\n-  #339 = Utf8                   _factory = new InstructionFactory(_cg, _cp);\n-  #340 = Utf8                 }\n-  #341 = NameAndType        #221:#198     // printCreate:()V\n-  #342 = NameAndType        #493:#494     // getFields:()[Lorg/apache/bcel/classfile/Field;\n-  #343 = Utf8                 private void createFields() {\n-  #344 = Utf8                   FieldGen field;\n-  #345 = Class              #495          // org/apache/bcel/classfile/Field\n-  #346 = NameAndType        #496:#497     // accept:(Lorg/apache/bcel/classfile/Visitor;)V\n-  #347 = NameAndType        #498:#499     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n-  #348 = Utf8                 private void createMethod_\n-  #349 = Utf8               () {\n-  #350 = Class              #500          // org/apache/bcel/classfile/Method\n-  #351 = NameAndType        #222:#198     // printMain:()V\n-  #352 = Utf8               }\n-  #353 = Utf8                 public void create(OutputStream out) throws IOException {\n-  #354 = Utf8                   createFields();\n-  #355 = Utf8                   createMethod_\n-  #356 = Utf8               ();\n-  #357 = Utf8                   _cg.getJavaClass().dump(out);\n-  #358 = Utf8                 public static void main(String[] args) throws Exception {\n-  #359 = Utf8\n-  #360 = Utf8               Creator creator = new\n-  #361 = Utf8               Creator();\n-  #362 = Utf8                   creator.create(new FileOutputStream(\\\"\n-  #363 = Utf8               .class\\\"));\n-  #364 = Utf8                   field = new FieldGen(\n-  #365 = NameAndType        #237:#238     // printFlags:(I)Ljava/lang/String;\n-  #366 = Utf8               ,\n-  #367 = NameAndType        #501:#469     // getSignature:()Ljava/lang/String;\n-  #368 = NameAndType        #252:#256     // printType:(Ljava/lang/String;)Ljava/lang/String;\n-  #369 = Utf8               , \\\"\n-  #370 = NameAndType        #502:#469     // getName:()Ljava/lang/String;\n-  #371 = Utf8               \\\", _cp);\n-  #372 = NameAndType        #503:#504     // getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n-  #373 = Class              #458          // org/apache/bcel/classfile/ConstantValue\n-  #374 = Utf8                   field.setInitValue(\n-  #375 = Utf8               )\n-  #376 = Utf8                   _cg.addField(field.getField());\n-  #377 = Utf8               org/apache/bcel/generic/MethodGen\n-  #378 = NameAndType        #187:#505     // \"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #379 = Utf8                   InstructionList il = new InstructionList();\n-  #380 = Utf8                   MethodGen method = new MethodGen(\n-  #381 = NameAndType        #506:#243     // METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #382 = NameAndType        #507:#508     // getReturnType:()Lorg/apache/bcel/generic/Type;\n-  #383 = NameAndType        #252:#253     // printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #384 = NameAndType        #509:#510     // getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n-  #385 = NameAndType        #247:#248     // printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n-  #386 = NameAndType        #511:#473     // getArgumentNames:()[Ljava/lang/String;\n-  #387 = Utf8                }, \\\"\n-  #388 = Utf8               \\\", il, _cp);\n-  #389 = Utf8               org/apache/bcel/util/BCELFactory\n-  #390 = NameAndType        #187:#512     // \"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n-  #391 = NameAndType        #197:#198     // start:()V\n-  #392 = Utf8                   method.setMaxStack();\n-  #393 = Utf8                   method.setMaxLocals();\n-  #394 = Utf8                   _cg.addMethod(method.getMethod());\n-  #395 = Utf8                   il.dispose();\n-  #396 = NameAndType        #513:#243     // UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n-  #397 = Utf8               0\n-  #398 = Utf8               org/apache/bcel/Const\n-  #399 = NameAndType        #180:#179     // CONSTANT_PREFIX:Ljava/lang/String;\n-  #400 = Utf8               ACC_SUPER |\n-  #401 = Utf8               ACC_BRIDGE |\n-  #402 = Utf8               ACC_VARARGS |\n-  #403 = NameAndType        #514:#204     // ACCESS_NAMES_LENGTH:I\n-  #404 = Utf8               ACC_\n-  #405 = NameAndType        #515:#238     // getAccessName:(I)Ljava/lang/String;\n-  #406 = Class              #516          // java/util/Locale\n-  #407 = NameAndType        #517:#518     // ENGLISH:Ljava/util/Locale;\n-  #408 = NameAndType        #519:#520     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #409 = Utf8                |\n-  #410 = Utf8               ACC_BIT %x |\n-  #411 = Utf8               java/lang/Object\n-  #412 = Class              #521          // java/lang/Integer\n-  #413 = NameAndType        #522:#523     // valueOf:(I)Ljava/lang/Integer;\n-  #414 = NameAndType        #524:#525     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #415 = NameAndType        #481:#526     // substring:(II)Ljava/lang/String;\n-  #416 = Utf8               Type.NO_ARGS\n-  #417 = Utf8               new Type[] {\n-  #418 = Utf8                }\n-  #419 = Class              #459          // org/apache/bcel/generic/Type\n-  #420 = NameAndType        #527:#528     // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #421 = NameAndType        #527:#529     // getType:()B\n-  #422 = Utf8               Type.\n-  #423 = NameAndType        #530:#238     // getTypeName:(I)Ljava/lang/String;\n-  #424 = Utf8               java.lang.String\n-  #425 = Utf8               Type.STRING\n-  #426 = Utf8               java.lang.Object\n-  #427 = Utf8               Type.OBJECT\n-  #428 = Utf8               java.lang.StringBuffer\n-  #429 = Utf8               Type.STRINGBUFFER\n-  #430 = Utf8               org/apache/bcel/generic/ArrayType\n-  #431 = Utf8               new ArrayType(\n-  #432 = NameAndType        #531:#508     // getBasicType:()Lorg/apache/bcel/generic/Type;\n-  #433 = NameAndType        #532:#480     // getDimensions:()I\n-  #434 = Utf8               new ObjectType(\\\"\n-  #435 = NameAndType        #533:#534     // signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #436 = Utf8               \\\")\n-  #437 = Class              #535          // java/lang/System\n-  #438 = NameAndType        #195:#536     // out:Ljava/io/PrintStream;\n-  #439 = Utf8               Usage: BCELifier classname\n-  #440 = Class              #537          // java/io/PrintStream\n-  #441 = Utf8               \\tThe class must exist on the classpath\n-  #442 = NameAndType        #271:#272     // getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #443 = Utf8               org/apache/bcel/util/BCELifier\n-  #444 = NameAndType        #187:#188     // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n-  #445 = Class              #538          // org/apache/bcel/Repository\n-  #446 = NameAndType        #539:#272     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #447 = Utf8               org/apache/bcel/classfile/ClassParser\n-  #448 = NameAndType        #187:#486     // \"<init>\":(Ljava/lang/String;)V\n-  #449 = NameAndType        #540:#541     // parse:()Lorg/apache/bcel/classfile/JavaClass;\n-  #450 = Class              #542          // java/lang/Class\n-  #451 = NameAndType        #543:#544     // getPackage:()Ljava/lang/Package;\n-  #452 = Class              #545          // java/lang/Package\n-  #453 = NameAndType        #546:#469     // getSimpleName:()Ljava/lang/String;\n-  #454 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n-  #455 = Utf8               org/apache/bcel/util/BCELifier$FLAGS\n-  #456 = Utf8               org/apache/bcel/classfile/JavaClass\n-  #457 = Utf8               java/lang/String\n-  #458 = Utf8               org/apache/bcel/classfile/ConstantValue\n-  #459 = Utf8               org/apache/bcel/generic/Type\n-  #460 = Utf8               java/lang/Exception\n-  #461 = Utf8               java/lang/ClassNotFoundException\n-  #462 = Utf8               java/io/IOException\n-  #463 = Utf8               (Ljava/io/OutputStream;)V\n-  #464 = Utf8               getConstantPool\n-  #465 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #466 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #467 = Utf8               flush\n-  #468 = Utf8               getClassName\n-  #469 = Utf8               ()Ljava/lang/String;\n-  #470 = Utf8               getSuperclassName\n-  #471 = Utf8               getPackageName\n-  #472 = Utf8               getInterfaceNames\n-  #473 = Utf8               ()[Ljava/lang/String;\n-  #474 = Utf8               org/apache/bcel/classfile/Utility\n-  #475 = Utf8               printArray\n-  #476 = Utf8               ([Ljava/lang/Object;ZZ)Ljava/lang/String;\n-  #477 = Utf8               equals\n-  #478 = Utf8               (Ljava/lang/Object;)Z\n-  #479 = Utf8               length\n-  #480 = Utf8               ()I\n-  #481 = Utf8               substring\n-  #482 = Utf8               append\n-  #483 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #484 = Utf8               toString\n-  #485 = Utf8               println\n-  #486 = Utf8               (Ljava/lang/String;)V\n-  #487 = Utf8               getSourceFileName\n-  #488 = Utf8               getAccessFlags\n-  #489 = Utf8               CLASS\n-  #490 = Utf8               getMajor\n-  #491 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #492 = Utf8               getMinor\n-  #493 = Utf8               getFields\n-  #494 = Utf8               ()[Lorg/apache/bcel/classfile/Field;\n-  #495 = Utf8               org/apache/bcel/classfile/Field\n-  #496 = Utf8               accept\n-  #497 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-  #498 = Utf8               getMethods\n-  #499 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n-  #500 = Utf8               org/apache/bcel/classfile/Method\n-  #501 = Utf8               getSignature\n-  #502 = Utf8               getName\n-  #503 = Utf8               getConstantValue\n-  #504 = Utf8               ()Lorg/apache/bcel/classfile/ConstantValue;\n-  #505 = Utf8               (Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #506 = Utf8               METHOD\n-  #507 = Utf8               getReturnType\n-  #508 = Utf8               ()Lorg/apache/bcel/generic/Type;\n-  #509 = Utf8               getArgumentTypes\n-  #510 = Utf8               ()[Lorg/apache/bcel/generic/Type;\n-  #511 = Utf8               getArgumentNames\n-  #512 = Utf8               (Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n-  #513 = Utf8               UNKNOWN\n-  #514 = Utf8               ACCESS_NAMES_LENGTH\n-  #515 = Utf8               getAccessName\n-  #516 = Utf8               java/util/Locale\n-  #517 = Utf8               ENGLISH\n-  #518 = Utf8               Ljava/util/Locale;\n-  #519 = Utf8               toUpperCase\n-  #520 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #521 = Utf8               java/lang/Integer\n-  #522 = Utf8               valueOf\n-  #523 = Utf8               (I)Ljava/lang/Integer;\n-  #524 = Utf8               format\n-  #525 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #526 = Utf8               (II)Ljava/lang/String;\n-  #527 = Utf8               getType\n-  #528 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #529 = Utf8               ()B\n-  #530 = Utf8               getTypeName\n-  #531 = Utf8               getBasicType\n-  #532 = Utf8               getDimensions\n-  #533 = Utf8               signatureToString\n-  #534 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #535 = Utf8               java/lang/System\n-  #536 = Utf8               Ljava/io/PrintStream;\n-  #537 = Utf8               java/io/PrintStream\n-  #538 = Utf8               org/apache/bcel/Repository\n-  #539 = Utf8               lookupClass\n-  #540 = Utf8               parse\n-  #541 = Utf8               ()Lorg/apache/bcel/classfile/JavaClass;\n-  #542 = Utf8               java/lang/Class\n-  #543 = Utf8               getPackage\n-  #544 = Utf8               ()Ljava/lang/Package;\n-  #545 = Utf8               java/lang/Package\n-  #546 = Utf8               getSimpleName\n+  #214 = Class              #449          // org/apache/bcel/classfile/JavaClass\n+  #215 = Class              #450          // java/lang/String\n+  #216 = Class              #210          // \"[Lorg/apache/bcel/classfile/Field;\"\n+  #217 = Class              #212          // \"[Lorg/apache/bcel/classfile/Method;\"\n+  #218 = Utf8               printCreate\n+  #219 = Utf8               printMain\n+  #220 = Utf8               visitField\n+  #221 = Utf8               (Lorg/apache/bcel/classfile/Field;)V\n+  #222 = Utf8               value\n+  #223 = Utf8               cv\n+  #224 = Utf8               Lorg/apache/bcel/classfile/ConstantValue;\n+  #225 = Class              #451          // org/apache/bcel/classfile/ConstantValue\n+  #226 = Utf8               visitMethod\n+  #227 = Utf8               (Lorg/apache/bcel/classfile/Method;)V\n+  #228 = Utf8               method\n+  #229 = Utf8               Lorg/apache/bcel/classfile/Method;\n+  #230 = Utf8               mg\n+  #231 = Utf8               Lorg/apache/bcel/generic/MethodGen;\n+  #232 = Utf8               factory\n+  #233 = Utf8               Lorg/apache/bcel/util/BCELFactory;\n+  #234 = Utf8               printFlags\n+  #235 = Utf8               (I)Ljava/lang/String;\n+  #236 = Utf8               flags\n+  #237 = Utf8               (ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n+  #238 = Utf8               pow\n+  #239 = Utf8               location\n+  #240 = Utf8               Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #241 = Utf8               buf\n+  #242 = Utf8               Ljava/lang/StringBuilder;\n+  #243 = Utf8               str\n+  #244 = Utf8               printArgumentTypes\n+  #245 = Utf8               ([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #246 = Utf8               arg_types\n+  #247 = Utf8               [Lorg/apache/bcel/generic/Type;\n+  #248 = Utf8               args\n+  #249 = Utf8               printType\n+  #250 = Utf8               (Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #251 = Utf8               type\n+  #252 = Utf8               Lorg/apache/bcel/generic/Type;\n+  #253 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #254 = Utf8               at\n+  #255 = Utf8               Lorg/apache/bcel/generic/ArrayType;\n+  #256 = Utf8               signature\n+  #257 = Utf8               t\n+  #258 = Utf8               B\n+  #259 = Class              #452          // org/apache/bcel/generic/Type\n+  #260 = Utf8               main\n+  #261 = Utf8               ([Ljava/lang/String;)V\n+  #262 = Utf8               argv\n+  #263 = Utf8               [Ljava/lang/String;\n+  #264 = Utf8               java_class\n+  #265 = Utf8               bcelifier\n+  #266 = Utf8               Exceptions\n+  #267 = Class              #453          // java/lang/Exception\n+  #268 = Utf8               getJavaClass\n+  #269 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #270 = Utf8               name\n+  #271 = Class              #454          // java/lang/ClassNotFoundException\n+  #272 = Class              #455          // java/io/IOException\n+  #273 = Utf8               <clinit>\n+  #274 = Utf8               SourceFile\n+  #275 = Utf8               BCELifier.java\n+  #276 = NameAndType        #187:#198     // \"<init>\":()V\n+  #277 = NameAndType        #181:#182     // _clazz:Lorg/apache/bcel/classfile/JavaClass;\n+  #278 = Utf8               java/io/PrintWriter\n+  #279 = NameAndType        #187:#456     // \"<init>\":(Ljava/io/OutputStream;)V\n+  #280 = NameAndType        #183:#184     // _out:Ljava/io/PrintWriter;\n+  #281 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+  #282 = NameAndType        #457:#458     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #283 = NameAndType        #187:#459     // \"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #284 = NameAndType        #185:#186     // _cp:Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #285 = NameAndType        #199:#200     // visitJavaClass:(Lorg/apache/bcel/classfile/JavaClass;)V\n+  #286 = NameAndType        #460:#198     // flush:()V\n+  #287 = NameAndType        #461:#462     // getClassName:()Ljava/lang/String;\n+  #288 = NameAndType        #463:#462     // getSuperclassName:()Ljava/lang/String;\n+  #289 = NameAndType        #464:#462     // getPackageName:()Ljava/lang/String;\n+  #290 = NameAndType        #465:#466     // getInterfaceNames:()[Ljava/lang/String;\n+  #291 = Class              #467          // org/apache/bcel/classfile/Utility\n+  #292 = NameAndType        #468:#469     // printArray:([Ljava/lang/Object;ZZ)Ljava/lang/String;\n+  #293 = Utf8\n+  #294 = NameAndType        #470:#471     // equals:(Ljava/lang/Object;)Z\n+  #295 = NameAndType        #472:#473     // length:()I\n+  #296 = NameAndType        #474:#235     // substring:(I)Ljava/lang/String;\n+  #297 = Utf8               java/lang/StringBuilder\n+  #298 = Utf8               package\n+  #299 = NameAndType        #475:#476     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #300 = Utf8               ;\n+  #301 = NameAndType        #477:#462     // toString:()Ljava/lang/String;\n+  #302 = NameAndType        #478:#479     // println:(Ljava/lang/String;)V\n+  #303 = NameAndType        #478:#198     // println:()V\n+  #304 = Utf8               import\n+  #305 = NameAndType        #178:#179     // BASE_PACKAGE:Ljava/lang/String;\n+  #306 = Utf8               .generic.*;\n+  #307 = Utf8               .classfile.*;\n+  #308 = Utf8               .*;\n+  #309 = Utf8               import java.io.*;\n+  #310 = Utf8               public class\n+  #311 = Utf8               Creator {\n+  #312 = Utf8                 private InstructionFactory _factory;\n+  #313 = Utf8                 private ConstantPoolGen    _cp;\n+  #314 = Utf8                 private ClassGen           _cg;\n+  #315 = Utf8                 public\n+  #316 = Utf8               Creator() {\n+  #317 = Utf8                   _cg = new ClassGen(\\\"\n+  #318 = Utf8               .\n+  #319 = Utf8               \\\", \\\"\n+  #320 = NameAndType        #480:#462     // getSourceFileName:()Ljava/lang/String;\n+  #321 = Utf8               \\\",\n+  #322 = NameAndType        #481:#473     // getAccessFlags:()I\n+  #323 = NameAndType        #482:#240     // CLASS:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #324 = NameAndType        #234:#237     // printFlags:(ILorg/apache/bcel/util/BCELifier$FLAGS;)Ljava/lang/String;\n+  #325 = Utf8               , new String[] {\n+  #326 = Utf8                });\n+  #327 = Utf8                   _cg.setMajor(\n+  #328 = NameAndType        #483:#473     // getMajor:()I\n+  #329 = NameAndType        #475:#484     // append:(I)Ljava/lang/StringBuilder;\n+  #330 = Utf8               );\n+  #331 = Utf8                   _cg.setMinor(\n+  #332 = NameAndType        #485:#473     // getMinor:()I\n+  #333 = Utf8                   _cp = _cg.getConstantPool();\n+  #334 = Utf8                   _factory = new InstructionFactory(_cg, _cp);\n+  #335 = Utf8                 }\n+  #336 = NameAndType        #218:#198     // printCreate:()V\n+  #337 = NameAndType        #486:#487     // getFields:()[Lorg/apache/bcel/classfile/Field;\n+  #338 = Utf8                 private void createFields() {\n+  #339 = Utf8                   FieldGen field;\n+  #340 = Class              #488          // org/apache/bcel/classfile/Field\n+  #341 = NameAndType        #489:#490     // accept:(Lorg/apache/bcel/classfile/Visitor;)V\n+  #342 = NameAndType        #491:#492     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n+  #343 = Utf8                 private void createMethod_\n+  #344 = Utf8               () {\n+  #345 = Class              #493          // org/apache/bcel/classfile/Method\n+  #346 = NameAndType        #219:#198     // printMain:()V\n+  #347 = Utf8               }\n+  #348 = Utf8                 public void create(OutputStream out) throws IOException {\n+  #349 = Utf8                   createFields();\n+  #350 = Utf8                   createMethod_\n+  #351 = Utf8               ();\n+  #352 = Utf8                   _cg.getJavaClass().dump(out);\n+  #353 = Utf8                 public static void main(String[] args) throws Exception {\n+  #354 = Utf8\n+  #355 = Utf8               Creator creator = new\n+  #356 = Utf8               Creator();\n+  #357 = Utf8                   creator.create(new FileOutputStream(\\\"\n+  #358 = Utf8               .class\\\"));\n+  #359 = Utf8                   field = new FieldGen(\n+  #360 = NameAndType        #234:#235     // printFlags:(I)Ljava/lang/String;\n+  #361 = Utf8               ,\n+  #362 = NameAndType        #494:#462     // getSignature:()Ljava/lang/String;\n+  #363 = NameAndType        #249:#253     // printType:(Ljava/lang/String;)Ljava/lang/String;\n+  #364 = Utf8               , \\\"\n+  #365 = NameAndType        #495:#462     // getName:()Ljava/lang/String;\n+  #366 = Utf8               \\\", _cp);\n+  #367 = NameAndType        #496:#497     // getConstantValue:()Lorg/apache/bcel/classfile/ConstantValue;\n+  #368 = Utf8                   field.setInitValue(\n+  #369 = Utf8               )\n+  #370 = Utf8                   _cg.addField(field.getField());\n+  #371 = Utf8               org/apache/bcel/generic/MethodGen\n+  #372 = NameAndType        #187:#498     // \"<init>\":(Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #373 = Utf8                   InstructionList il = new InstructionList();\n+  #374 = Utf8                   MethodGen method = new MethodGen(\n+  #375 = NameAndType        #499:#240     // METHOD:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #376 = NameAndType        #500:#501     // getReturnType:()Lorg/apache/bcel/generic/Type;\n+  #377 = NameAndType        #249:#250     // printType:(Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #378 = NameAndType        #502:#503     // getArgumentTypes:()[Lorg/apache/bcel/generic/Type;\n+  #379 = NameAndType        #244:#245     // printArgumentTypes:([Lorg/apache/bcel/generic/Type;)Ljava/lang/String;\n+  #380 = NameAndType        #504:#466     // getArgumentNames:()[Ljava/lang/String;\n+  #381 = Utf8                }, \\\"\n+  #382 = Utf8               \\\", il, _cp);\n+  #383 = Utf8               org/apache/bcel/util/BCELFactory\n+  #384 = NameAndType        #187:#505     // \"<init>\":(Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n+  #385 = NameAndType        #197:#198     // start:()V\n+  #386 = Utf8                   method.setMaxStack();\n+  #387 = Utf8                   method.setMaxLocals();\n+  #388 = Utf8                   _cg.addMethod(method.getMethod());\n+  #389 = Utf8                   il.dispose();\n+  #390 = NameAndType        #506:#240     // UNKNOWN:Lorg/apache/bcel/util/BCELifier$FLAGS;\n+  #391 = Utf8               0\n+  #392 = Utf8               org/apache/bcel/Const\n+  #393 = NameAndType        #180:#179     // CONSTANT_PREFIX:Ljava/lang/String;\n+  #394 = Utf8               ACC_SUPER |\n+  #395 = Utf8               ACC_BRIDGE |\n+  #396 = Utf8               ACC_VARARGS |\n+  #397 = NameAndType        #507:#204     // ACCESS_NAMES_LENGTH:I\n+  #398 = Utf8               ACC_\n+  #399 = NameAndType        #508:#235     // getAccessName:(I)Ljava/lang/String;\n+  #400 = Class              #509          // java/util/Locale\n+  #401 = NameAndType        #510:#511     // ENGLISH:Ljava/util/Locale;\n+  #402 = NameAndType        #512:#513     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #403 = Utf8                |\n+  #404 = Utf8               ACC_BIT %x |\n+  #405 = Utf8               java/lang/Object\n+  #406 = Class              #514          // java/lang/Integer\n+  #407 = NameAndType        #515:#516     // valueOf:(I)Ljava/lang/Integer;\n+  #408 = NameAndType        #517:#518     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #409 = NameAndType        #474:#519     // substring:(II)Ljava/lang/String;\n+  #410 = Utf8               Type.NO_ARGS\n+  #411 = Utf8               new Type[] {\n+  #412 = Utf8                }\n+  #413 = NameAndType        #520:#521     // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #414 = NameAndType        #520:#522     // getType:()B\n+  #415 = Utf8               Type.\n+  #416 = NameAndType        #523:#235     // getTypeName:(I)Ljava/lang/String;\n+  #417 = Utf8               java.lang.String\n+  #418 = Utf8               Type.STRING\n+  #419 = Utf8               java.lang.Object\n+  #420 = Utf8               Type.OBJECT\n+  #421 = Utf8               java.lang.StringBuffer\n+  #422 = Utf8               Type.STRINGBUFFER\n+  #423 = Utf8               org/apache/bcel/generic/ArrayType\n+  #424 = Utf8               new ArrayType(\n+  #425 = NameAndType        #524:#501     // getBasicType:()Lorg/apache/bcel/generic/Type;\n+  #426 = NameAndType        #525:#473     // getDimensions:()I\n+  #427 = Utf8               new ObjectType(\\\"\n+  #428 = NameAndType        #526:#527     // signatureToString:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #429 = Utf8               \\\")\n+  #430 = Class              #528          // java/lang/System\n+  #431 = NameAndType        #195:#529     // out:Ljava/io/PrintStream;\n+  #432 = Utf8               Usage: BCELifier classname\n+  #433 = Class              #530          // java/io/PrintStream\n+  #434 = Utf8               \\tThe class must exist on the classpath\n+  #435 = NameAndType        #268:#269     // getJavaClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #436 = Utf8               org/apache/bcel/util/BCELifier\n+  #437 = NameAndType        #187:#188     // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Ljava/io/OutputStream;)V\n+  #438 = Class              #531          // org/apache/bcel/Repository\n+  #439 = NameAndType        #532:#269     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #440 = Utf8               org/apache/bcel/classfile/ClassParser\n+  #441 = NameAndType        #187:#479     // \"<init>\":(Ljava/lang/String;)V\n+  #442 = NameAndType        #533:#534     // parse:()Lorg/apache/bcel/classfile/JavaClass;\n+  #443 = Class              #535          // java/lang/Class\n+  #444 = NameAndType        #536:#537     // getPackage:()Ljava/lang/Package;\n+  #445 = Class              #538          // java/lang/Package\n+  #446 = NameAndType        #539:#462     // getSimpleName:()Ljava/lang/String;\n+  #447 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n+  #448 = Utf8               org/apache/bcel/util/BCELifier$FLAGS\n+  #449 = Utf8               org/apache/bcel/classfile/JavaClass\n+  #450 = Utf8               java/lang/String\n+  #451 = Utf8               org/apache/bcel/classfile/ConstantValue\n+  #452 = Utf8               org/apache/bcel/generic/Type\n+  #453 = Utf8               java/lang/Exception\n+  #454 = Utf8               java/lang/ClassNotFoundException\n+  #455 = Utf8               java/io/IOException\n+  #456 = Utf8               (Ljava/io/OutputStream;)V\n+  #457 = Utf8               getConstantPool\n+  #458 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #459 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #460 = Utf8               flush\n+  #461 = Utf8               getClassName\n+  #462 = Utf8               ()Ljava/lang/String;\n+  #463 = Utf8               getSuperclassName\n+  #464 = Utf8               getPackageName\n+  #465 = Utf8               getInterfaceNames\n+  #466 = Utf8               ()[Ljava/lang/String;\n+  #467 = Utf8               org/apache/bcel/classfile/Utility\n+  #468 = Utf8               printArray\n+  #469 = Utf8               ([Ljava/lang/Object;ZZ)Ljava/lang/String;\n+  #470 = Utf8               equals\n+  #471 = Utf8               (Ljava/lang/Object;)Z\n+  #472 = Utf8               length\n+  #473 = Utf8               ()I\n+  #474 = Utf8               substring\n+  #475 = Utf8               append\n+  #476 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #477 = Utf8               toString\n+  #478 = Utf8               println\n+  #479 = Utf8               (Ljava/lang/String;)V\n+  #480 = Utf8               getSourceFileName\n+  #481 = Utf8               getAccessFlags\n+  #482 = Utf8               CLASS\n+  #483 = Utf8               getMajor\n+  #484 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #485 = Utf8               getMinor\n+  #486 = Utf8               getFields\n+  #487 = Utf8               ()[Lorg/apache/bcel/classfile/Field;\n+  #488 = Utf8               org/apache/bcel/classfile/Field\n+  #489 = Utf8               accept\n+  #490 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #491 = Utf8               getMethods\n+  #492 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n+  #493 = Utf8               org/apache/bcel/classfile/Method\n+  #494 = Utf8               getSignature\n+  #495 = Utf8               getName\n+  #496 = Utf8               getConstantValue\n+  #497 = Utf8               ()Lorg/apache/bcel/classfile/ConstantValue;\n+  #498 = Utf8               (Lorg/apache/bcel/classfile/Method;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #499 = Utf8               METHOD\n+  #500 = Utf8               getReturnType\n+  #501 = Utf8               ()Lorg/apache/bcel/generic/Type;\n+  #502 = Utf8               getArgumentTypes\n+  #503 = Utf8               ()[Lorg/apache/bcel/generic/Type;\n+  #504 = Utf8               getArgumentNames\n+  #505 = Utf8               (Lorg/apache/bcel/generic/MethodGen;Ljava/io/PrintWriter;)V\n+  #506 = Utf8               UNKNOWN\n+  #507 = Utf8               ACCESS_NAMES_LENGTH\n+  #508 = Utf8               getAccessName\n+  #509 = Utf8               java/util/Locale\n+  #510 = Utf8               ENGLISH\n+  #511 = Utf8               Ljava/util/Locale;\n+  #512 = Utf8               toUpperCase\n+  #513 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #514 = Utf8               java/lang/Integer\n+  #515 = Utf8               valueOf\n+  #516 = Utf8               (I)Ljava/lang/Integer;\n+  #517 = Utf8               format\n+  #518 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #519 = Utf8               (II)Ljava/lang/String;\n+  #520 = Utf8               getType\n+  #521 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #522 = Utf8               ()B\n+  #523 = Utf8               getTypeName\n+  #524 = Utf8               getBasicType\n+  #525 = Utf8               getDimensions\n+  #526 = Utf8               signatureToString\n+  #527 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+  #528 = Utf8               java/lang/System\n+  #529 = Utf8               Ljava/io/PrintStream;\n+  #530 = Utf8               java/io/PrintStream\n+  #531 = Utf8               org/apache/bcel/Repository\n+  #532 = Utf8               lookupClass\n+  #533 = Utf8               parse\n+  #534 = Utf8               ()Lorg/apache/bcel/classfile/JavaClass;\n+  #535 = Utf8               java/lang/Class\n+  #536 = Utf8               getPackage\n+  #537 = Utf8               ()Ljava/lang/Package;\n+  #538 = Utf8               java/lang/Package\n+  #539 = Utf8               getSimpleName\n {\n   private static final java.lang.String BASE_PACKAGE;\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final java.lang.String CONSTANT_PREFIX;\n     descriptor: Ljava/lang/String;\n@@ -963,15 +956,15 @@\n         line 100: 203\n         line 101: 234\n         line 102: 243\n         line 103: 252\n         line 104: 261\n         line 105: 268\n         line 106: 299\n-        line 107: 319\n+        line 107: 315\n         line 108: 371\n         line 109: 383\n         line 106: 413\n         line 111: 416\n         line 112: 450\n         line 113: 484\n         line 114: 491\n"}]}
