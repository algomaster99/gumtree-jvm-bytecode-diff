{"diffoscope-json-version": 1, "source1": "first/FromNetASCIIInputStream.class", "source2": "second/FromNetASCIIInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,136 +1,136 @@\n-  SHA-256 checksum 6721f23c8bfeb55e3a6ca9b4faea66a0ce9e7d0d0b829150953771a217d1039e\n+  SHA-256 checksum 90f5922427304b04cf4ccb4cb2dd682a01290107cec9b6fb1196742232e3d891\n   Compiled from \"FromNetASCIIInputStream.java\"\n public final class org.apache.commons.net.io.FromNetASCIIInputStream extends java.io.PushbackInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #30                         // org/apache/commons/net/io/FromNetASCIIInputStream\n-  super_class: #31                        // java/io/PushbackInputStream\n+  this_class: #2                          // org/apache/commons/net/io/FromNetASCIIInputStream\n+  super_class: #12                        // java/io/PushbackInputStream\n   interfaces: 0, fields: 4, methods: 8, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #30.#70       // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n-    #2 = Fieldref           #30.#71       // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n-    #3 = Methodref          #31.#72       // java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #4 = Fieldref           #30.#73       // org/apache/commons/net/io/FromNetASCIIInputStream.length:I\n-    #5 = Methodref          #31.#74       // java/io/PushbackInputStream.read:()I\n-    #6 = Methodref          #30.#75       // org/apache/commons/net/io/FromNetASCIIInputStream.unread:([B)V\n-    #7 = Methodref          #30.#76       // org/apache/commons/net/io/FromNetASCIIInputStream.unread:(I)V\n-    #8 = Methodref          #30.#77       // org/apache/commons/net/io/FromNetASCIIInputStream.__read:()I\n-    #9 = Methodref          #30.#78       // org/apache/commons/net/io/FromNetASCIIInputStream.read:([BII)I\n-   #10 = Methodref          #31.#78       // java/io/PushbackInputStream.read:([BII)I\n-   #11 = Methodref          #30.#79       // org/apache/commons/net/io/FromNetASCIIInputStream.available:()I\n-   #12 = Fieldref           #30.#80       // org/apache/commons/net/io/FromNetASCIIInputStream.in:Ljava/io/InputStream;\n-   #13 = Class              #81           // java/io/IOException\n-   #14 = String             #82           // Stream closed\n-   #15 = Methodref          #13.#83       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = Fieldref           #30.#84       // org/apache/commons/net/io/FromNetASCIIInputStream.buf:[B\n-   #17 = Fieldref           #30.#85       // org/apache/commons/net/io/FromNetASCIIInputStream.pos:I\n-   #18 = Methodref          #86.#79       // java/io/InputStream.available:()I\n-   #19 = String             #87           // line.separator\n-   #20 = Methodref          #88.#89       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #21 = Fieldref           #30.#90       // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparator:Ljava/lang/String;\n-   #22 = String             #91           // \\r\\n\n-   #23 = Methodref          #92.#93       // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #24 = String             #94           // US-ASCII\n-   #25 = Methodref          #92.#95       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #26 = Class              #96           // java/io/UnsupportedEncodingException\n-   #27 = Class              #97           // java/lang/RuntimeException\n-   #28 = String             #98           // Broken JVM - cannot find US-ASCII charset!\n-   #29 = Methodref          #27.#99       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #30 = Class              #100          // org/apache/commons/net/io/FromNetASCIIInputStream\n-   #31 = Class              #101          // java/io/PushbackInputStream\n-   #32 = Utf8               _noConversionRequired\n-   #33 = Utf8               Z\n-   #34 = Utf8               _lineSeparator\n-   #35 = Utf8               Ljava/lang/String;\n-   #36 = Utf8               _lineSeparatorBytes\n-   #37 = Utf8               [B\n-   #38 = Utf8               length\n-   #39 = Utf8               I\n-   #40 = Utf8               isConversionRequired\n-   #41 = Utf8               ()Z\n-   #42 = Utf8               Code\n-   #43 = Utf8               LineNumberTable\n-   #44 = Utf8               StackMapTable\n-   #45 = Utf8               <init>\n-   #46 = Utf8               (Ljava/io/InputStream;)V\n-   #47 = Utf8               LocalVariableTable\n-   #48 = Utf8               this\n-   #49 = Utf8               Lorg/apache/commons/net/io/FromNetASCIIInputStream;\n-   #50 = Utf8               input\n-   #51 = Utf8               Ljava/io/InputStream;\n-   #52 = Utf8               __read\n-   #53 = Utf8               ()I\n-   #54 = Utf8               ch\n-   #55 = Utf8               Exceptions\n-   #56 = Utf8               read\n-   #57 = Utf8               ([B)I\n-   #58 = Utf8               buffer\n-   #59 = Utf8               ([BII)I\n-   #60 = Utf8               offset\n-   #61 = Utf8               off\n-   #62 = Class              #37           // \"[B\"\n-   #63 = Utf8               available\n-   #64 = Utf8               <clinit>\n-   #65 = Utf8               ()V\n-   #66 = Utf8               e\n-   #67 = Utf8               Ljava/io/UnsupportedEncodingException;\n-   #68 = Utf8               SourceFile\n-   #69 = Utf8               FromNetASCIIInputStream.java\n-   #70 = NameAndType        #32:#33       // _noConversionRequired:Z\n-   #71 = NameAndType        #36:#37       // _lineSeparatorBytes:[B\n-   #72 = NameAndType        #45:#102      // \"<init>\":(Ljava/io/InputStream;I)V\n-   #73 = NameAndType        #38:#39       // length:I\n-   #74 = NameAndType        #56:#53       // read:()I\n-   #75 = NameAndType        #103:#104     // unread:([B)V\n-   #76 = NameAndType        #103:#105     // unread:(I)V\n-   #77 = NameAndType        #52:#53       // __read:()I\n-   #78 = NameAndType        #56:#59       // read:([BII)I\n-   #79 = NameAndType        #63:#53       // available:()I\n-   #80 = NameAndType        #106:#51      // in:Ljava/io/InputStream;\n-   #81 = Utf8               java/io/IOException\n-   #82 = Utf8               Stream closed\n-   #83 = NameAndType        #45:#107      // \"<init>\":(Ljava/lang/String;)V\n-   #84 = NameAndType        #108:#37      // buf:[B\n-   #85 = NameAndType        #109:#39      // pos:I\n-   #86 = Class              #110          // java/io/InputStream\n-   #87 = Utf8               line.separator\n-   #88 = Class              #111          // java/lang/System\n-   #89 = NameAndType        #112:#113     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #90 = NameAndType        #34:#35       // _lineSeparator:Ljava/lang/String;\n-   #91 = Utf8               \\r\\n\n-   #92 = Class              #114          // java/lang/String\n-   #93 = NameAndType        #115:#116     // equals:(Ljava/lang/Object;)Z\n-   #94 = Utf8               US-ASCII\n-   #95 = NameAndType        #117:#118     // getBytes:(Ljava/lang/String;)[B\n-   #96 = Utf8               java/io/UnsupportedEncodingException\n-   #97 = Utf8               java/lang/RuntimeException\n-   #98 = Utf8               Broken JVM - cannot find US-ASCII charset!\n-   #99 = NameAndType        #45:#119      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #100 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n-  #101 = Utf8               java/io/PushbackInputStream\n-  #102 = Utf8               (Ljava/io/InputStream;I)V\n-  #103 = Utf8               unread\n-  #104 = Utf8               ([B)V\n-  #105 = Utf8               (I)V\n-  #106 = Utf8               in\n-  #107 = Utf8               (Ljava/lang/String;)V\n-  #108 = Utf8               buf\n-  #109 = Utf8               pos\n-  #110 = Utf8               java/io/InputStream\n-  #111 = Utf8               java/lang/System\n-  #112 = Utf8               getProperty\n-  #113 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #114 = Utf8               java/lang/String\n-  #115 = Utf8               equals\n-  #116 = Utf8               (Ljava/lang/Object;)Z\n-  #117 = Utf8               getBytes\n-  #118 = Utf8               (Ljava/lang/String;)[B\n-  #119 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+    #1 = Fieldref           #2.#3         // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+    #2 = Class              #4            // org/apache/commons/net/io/FromNetASCIIInputStream\n+    #3 = NameAndType        #5:#6         // _noConversionRequired:Z\n+    #4 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n+    #5 = Utf8               _noConversionRequired\n+    #6 = Utf8               Z\n+    #7 = Fieldref           #2.#8         // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n+    #8 = NameAndType        #9:#10        // _lineSeparatorBytes:[B\n+    #9 = Utf8               _lineSeparatorBytes\n+   #10 = Utf8               [B\n+   #11 = Methodref          #12.#13       // java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #12 = Class              #14           // java/io/PushbackInputStream\n+   #13 = NameAndType        #15:#16       // \"<init>\":(Ljava/io/InputStream;I)V\n+   #14 = Utf8               java/io/PushbackInputStream\n+   #15 = Utf8               <init>\n+   #16 = Utf8               (Ljava/io/InputStream;I)V\n+   #17 = Fieldref           #2.#18        // org/apache/commons/net/io/FromNetASCIIInputStream.length:I\n+   #18 = NameAndType        #19:#20       // length:I\n+   #19 = Utf8               length\n+   #20 = Utf8               I\n+   #21 = Methodref          #12.#22       // java/io/PushbackInputStream.read:()I\n+   #22 = NameAndType        #23:#24       // read:()I\n+   #23 = Utf8               read\n+   #24 = Utf8               ()I\n+   #25 = Methodref          #2.#26        // org/apache/commons/net/io/FromNetASCIIInputStream.unread:([B)V\n+   #26 = NameAndType        #27:#28       // unread:([B)V\n+   #27 = Utf8               unread\n+   #28 = Utf8               ([B)V\n+   #29 = Methodref          #2.#30        // org/apache/commons/net/io/FromNetASCIIInputStream.unread:(I)V\n+   #30 = NameAndType        #27:#31       // unread:(I)V\n+   #31 = Utf8               (I)V\n+   #32 = Methodref          #2.#33        // org/apache/commons/net/io/FromNetASCIIInputStream.__read:()I\n+   #33 = NameAndType        #34:#24       // __read:()I\n+   #34 = Utf8               __read\n+   #35 = Methodref          #2.#36        // org/apache/commons/net/io/FromNetASCIIInputStream.read:([BII)I\n+   #36 = NameAndType        #23:#37       // read:([BII)I\n+   #37 = Utf8               ([BII)I\n+   #38 = Methodref          #12.#36       // java/io/PushbackInputStream.read:([BII)I\n+   #39 = Methodref          #2.#40        // org/apache/commons/net/io/FromNetASCIIInputStream.available:()I\n+   #40 = NameAndType        #41:#24       // available:()I\n+   #41 = Utf8               available\n+   #42 = Fieldref           #2.#43        // org/apache/commons/net/io/FromNetASCIIInputStream.in:Ljava/io/InputStream;\n+   #43 = NameAndType        #44:#45       // in:Ljava/io/InputStream;\n+   #44 = Utf8               in\n+   #45 = Utf8               Ljava/io/InputStream;\n+   #46 = Class              #47           // java/io/IOException\n+   #47 = Utf8               java/io/IOException\n+   #48 = String             #49           // Stream closed\n+   #49 = Utf8               Stream closed\n+   #50 = Methodref          #46.#51       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #51 = NameAndType        #15:#52       // \"<init>\":(Ljava/lang/String;)V\n+   #52 = Utf8               (Ljava/lang/String;)V\n+   #53 = Fieldref           #2.#54        // org/apache/commons/net/io/FromNetASCIIInputStream.buf:[B\n+   #54 = NameAndType        #55:#10       // buf:[B\n+   #55 = Utf8               buf\n+   #56 = Fieldref           #2.#57        // org/apache/commons/net/io/FromNetASCIIInputStream.pos:I\n+   #57 = NameAndType        #58:#20       // pos:I\n+   #58 = Utf8               pos\n+   #59 = Methodref          #60.#40       // java/io/InputStream.available:()I\n+   #60 = Class              #61           // java/io/InputStream\n+   #61 = Utf8               java/io/InputStream\n+   #62 = String             #63           // line.separator\n+   #63 = Utf8               line.separator\n+   #64 = Methodref          #65.#66       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #65 = Class              #67           // java/lang/System\n+   #66 = NameAndType        #68:#69       // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #67 = Utf8               java/lang/System\n+   #68 = Utf8               getProperty\n+   #69 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #70 = Fieldref           #2.#71        // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparator:Ljava/lang/String;\n+   #71 = NameAndType        #72:#73       // _lineSeparator:Ljava/lang/String;\n+   #72 = Utf8               _lineSeparator\n+   #73 = Utf8               Ljava/lang/String;\n+   #74 = String             #75           // \\r\\n\n+   #75 = Utf8               \\r\\n\n+   #76 = Methodref          #77.#78       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #77 = Class              #79           // java/lang/String\n+   #78 = NameAndType        #80:#81       // equals:(Ljava/lang/Object;)Z\n+   #79 = Utf8               java/lang/String\n+   #80 = Utf8               equals\n+   #81 = Utf8               (Ljava/lang/Object;)Z\n+   #82 = String             #83           // US-ASCII\n+   #83 = Utf8               US-ASCII\n+   #84 = Methodref          #77.#85       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #85 = NameAndType        #86:#87       // getBytes:(Ljava/lang/String;)[B\n+   #86 = Utf8               getBytes\n+   #87 = Utf8               (Ljava/lang/String;)[B\n+   #88 = Class              #89           // java/io/UnsupportedEncodingException\n+   #89 = Utf8               java/io/UnsupportedEncodingException\n+   #90 = Class              #91           // java/lang/RuntimeException\n+   #91 = Utf8               java/lang/RuntimeException\n+   #92 = String             #93           // Broken JVM - cannot find US-ASCII charset!\n+   #93 = Utf8               Broken JVM - cannot find US-ASCII charset!\n+   #94 = Methodref          #90.#95       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #95 = NameAndType        #15:#96       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #96 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #97 = Utf8               isConversionRequired\n+   #98 = Utf8               ()Z\n+   #99 = Utf8               Code\n+  #100 = Utf8               LineNumberTable\n+  #101 = Utf8               StackMapTable\n+  #102 = Utf8               (Ljava/io/InputStream;)V\n+  #103 = Utf8               LocalVariableTable\n+  #104 = Utf8               this\n+  #105 = Utf8               Lorg/apache/commons/net/io/FromNetASCIIInputStream;\n+  #106 = Utf8               input\n+  #107 = Utf8               ch\n+  #108 = Utf8               Exceptions\n+  #109 = Utf8               ([B)I\n+  #110 = Utf8               buffer\n+  #111 = Utf8               offset\n+  #112 = Utf8               off\n+  #113 = Class              #10           // \"[B\"\n+  #114 = Utf8               <clinit>\n+  #115 = Utf8               ()V\n+  #116 = Utf8               e\n+  #117 = Utf8               Ljava/io/UnsupportedEncodingException;\n+  #118 = Utf8               SourceFile\n+  #119 = Utf8               FromNetASCIIInputStream.java\n {\n   static final boolean _noConversionRequired;\n     descriptor: Z\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   static final java.lang.String _lineSeparator;\n     descriptor: Ljava/lang/String;\n@@ -165,22 +165,22 @@\n   public org.apache.commons.net.io.FromNetASCIIInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #2                  // Field _lineSeparatorBytes:[B\n+         2: getstatic     #7                  // Field _lineSeparatorBytes:[B\n          5: arraylength\n          6: iconst_1\n          7: iadd\n-         8: invokespecial #3                  // Method java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+         8: invokespecial #11                 // Method java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n         11: aload_0\n         12: iconst_0\n-        13: putfield      #4                  // Field length:I\n+        13: putfield      #17                 // Field length:I\n         16: return\n       LineNumberTable:\n         line 74: 0\n         line 51: 11\n         line 75: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -189,44 +189,44 @@\n \n   private int __read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #5                  // Method java/io/PushbackInputStream.read:()I\n+         1: invokespecial #21                 // Method java/io/PushbackInputStream.read:()I\n          4: istore_1\n          5: iload_1\n          6: bipush        13\n          8: if_icmpne     60\n         11: aload_0\n-        12: invokespecial #5                  // Method java/io/PushbackInputStream.read:()I\n+        12: invokespecial #21                 // Method java/io/PushbackInputStream.read:()I\n         15: istore_1\n         16: iload_1\n         17: bipush        10\n         19: if_icmpne     47\n         22: aload_0\n-        23: getstatic     #2                  // Field _lineSeparatorBytes:[B\n-        26: invokevirtual #6                  // Method unread:([B)V\n+        23: getstatic     #7                  // Field _lineSeparatorBytes:[B\n+        26: invokevirtual #25                 // Method unread:([B)V\n         29: aload_0\n-        30: invokespecial #5                  // Method java/io/PushbackInputStream.read:()I\n+        30: invokespecial #21                 // Method java/io/PushbackInputStream.read:()I\n         33: istore_1\n         34: aload_0\n         35: dup\n-        36: getfield      #4                  // Field length:I\n+        36: getfield      #17                 // Field length:I\n         39: iconst_1\n         40: isub\n-        41: putfield      #4                  // Field length:I\n+        41: putfield      #17                 // Field length:I\n         44: goto          60\n         47: iload_1\n         48: iconst_m1\n         49: if_icmpeq     57\n         52: aload_0\n         53: iload_1\n-        54: invokevirtual #7                  // Method unread:(I)V\n+        54: invokevirtual #29                 // Method unread:(I)V\n         57: bipush        13\n         59: ireturn\n         60: iload_1\n         61: ireturn\n       LineNumberTable:\n         line 82: 0\n         line 84: 5\n@@ -256,18 +256,18 @@\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: getstatic     #1                  // Field _noConversionRequired:Z\n          3: ifeq          11\n          6: aload_0\n-         7: invokespecial #5                  // Method java/io/PushbackInputStream.read:()I\n+         7: invokespecial #21                 // Method java/io/PushbackInputStream.read:()I\n         10: ireturn\n         11: aload_0\n-        12: invokespecial #8                  // Method __read:()I\n+        12: invokespecial #32                 // Method __read:()I\n         15: ireturn\n       LineNumberTable:\n         line 123: 0\n         line 124: 6\n         line 127: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -283,15 +283,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #9                  // Method read:([BII)I\n+         5: invokevirtual #35                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 145: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/net/io/FromNetASCIIInputStream;\n             0       9     1 buffer   [B\n@@ -305,41 +305,41 @@\n       stack=4, locals=6, args_size=4\n          0: getstatic     #1                  // Field _noConversionRequired:Z\n          3: ifeq          14\n          6: aload_0\n          7: aload_1\n          8: iload_2\n          9: iload_3\n-        10: invokespecial #10                 // Method java/io/PushbackInputStream.read:([BII)I\n+        10: invokespecial #38                 // Method java/io/PushbackInputStream.read:([BII)I\n         13: ireturn\n         14: iload_3\n         15: iconst_1\n         16: if_icmpge     21\n         19: iconst_0\n         20: ireturn\n         21: aload_0\n-        22: invokevirtual #11                 // Method available:()I\n+        22: invokevirtual #39                 // Method available:()I\n         25: istore        4\n         27: aload_0\n         28: iload_3\n         29: iload         4\n         31: if_icmple     39\n         34: iload         4\n         36: goto          40\n         39: iload_3\n-        40: putfield      #4                  // Field length:I\n+        40: putfield      #17                 // Field length:I\n         43: aload_0\n-        44: getfield      #4                  // Field length:I\n+        44: getfield      #17                 // Field length:I\n         47: iconst_1\n         48: if_icmpge     56\n         51: aload_0\n         52: iconst_1\n-        53: putfield      #4                  // Field length:I\n+        53: putfield      #17                 // Field length:I\n         56: aload_0\n-        57: invokespecial #8                  // Method __read:()I\n+        57: invokespecial #32                 // Method __read:()I\n         60: dup\n         61: istore        4\n         63: iconst_m1\n         64: if_icmpne     69\n         67: iconst_m1\n         68: ireturn\n         69: iload_2\n@@ -348,22 +348,22 @@\n         73: iload_2\n         74: iinc          2, 1\n         77: iload         4\n         79: i2b\n         80: bastore\n         81: aload_0\n         82: dup\n-        83: getfield      #4                  // Field length:I\n+        83: getfield      #17                 // Field length:I\n         86: iconst_1\n         87: isub\n         88: dup_x1\n-        89: putfield      #4                  // Field length:I\n+        89: putfield      #17                 // Field length:I\n         92: ifle          106\n         95: aload_0\n-        96: invokespecial #8                  // Method __read:()I\n+        96: invokespecial #32                 // Method __read:()I\n         99: dup\n        100: istore        4\n        102: iconst_m1\n        103: if_icmpne     72\n        106: iload_2\n        107: iload         5\n        109: isub\n@@ -413,30 +413,30 @@\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field in:Ljava/io/InputStream;\n+         1: getfield      #42                 // Field in:Ljava/io/InputStream;\n          4: ifnonnull     17\n-         7: new           #13                 // class java/io/IOException\n+         7: new           #46                 // class java/io/IOException\n         10: dup\n-        11: ldc           #14                 // String Stream closed\n-        13: invokespecial #15                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #48                 // String Stream closed\n+        13: invokespecial #50                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #16                 // Field buf:[B\n+        18: getfield      #53                 // Field buf:[B\n         21: arraylength\n         22: aload_0\n-        23: getfield      #17                 // Field pos:I\n+        23: getfield      #56                 // Field pos:I\n         26: isub\n         27: aload_0\n-        28: getfield      #12                 // Field in:Ljava/io/InputStream;\n-        31: invokevirtual #18                 // Method java/io/InputStream.available:()I\n+        28: getfield      #42                 // Field in:Ljava/io/InputStream;\n+        31: invokevirtual #59                 // Method java/io/InputStream.available:()I\n         34: iadd\n         35: ireturn\n       LineNumberTable:\n         line 215: 0\n         line 216: 7\n         line 218: 17\n       LocalVariableTable:\n@@ -448,32 +448,32 @@\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=0\n-         0: ldc           #19                 // String line.separator\n-         2: invokestatic  #20                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-         5: putstatic     #21                 // Field _lineSeparator:Ljava/lang/String;\n-         8: getstatic     #21                 // Field _lineSeparator:Ljava/lang/String;\n-        11: ldc           #22                 // String \\r\\n\n-        13: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+         0: ldc           #62                 // String line.separator\n+         2: invokestatic  #64                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+         5: putstatic     #70                 // Field _lineSeparator:Ljava/lang/String;\n+         8: getstatic     #70                 // Field _lineSeparator:Ljava/lang/String;\n+        11: ldc           #74                 // String \\r\\n\n+        13: invokevirtual #76                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         16: putstatic     #1                  // Field _noConversionRequired:Z\n-        19: getstatic     #21                 // Field _lineSeparator:Ljava/lang/String;\n-        22: ldc           #24                 // String US-ASCII\n-        24: invokevirtual #25                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n-        27: putstatic     #2                  // Field _lineSeparatorBytes:[B\n+        19: getstatic     #70                 // Field _lineSeparator:Ljava/lang/String;\n+        22: ldc           #82                 // String US-ASCII\n+        24: invokevirtual #84                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B\n+        27: putstatic     #7                  // Field _lineSeparatorBytes:[B\n         30: goto          45\n         33: astore_0\n-        34: new           #27                 // class java/lang/RuntimeException\n+        34: new           #90                 // class java/lang/RuntimeException\n         37: dup\n-        38: ldc           #28                 // String Broken JVM - cannot find US-ASCII charset!\n+        38: ldc           #92                 // String Broken JVM - cannot find US-ASCII charset!\n         40: aload_0\n-        41: invokespecial #29                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        41: invokespecial #94                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         44: athrow\n         45: return\n       Exception table:\n          from    to  target type\n             19    30    33   Class java/io/UnsupportedEncodingException\n       LineNumberTable:\n         line 42: 0\n"}]}
