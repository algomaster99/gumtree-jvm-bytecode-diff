{"diffoscope-json-version": 1, "source1": "first/ZipUtil.class", "source2": "second/ZipUtil.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -49,19 +49,19 @@\n             final byte b = array[i];\n             array[i] = array[n - i];\n             array[n - i] = b;\n         }\n         return array;\n     }\n     \n-    static long bigToLong(final BigInteger bigInteger) {\n-        if (bigInteger.bitLength() <= 63) {\n-            return bigInteger.longValue();\n+    static long bigToLong(final BigInteger obj) {\n+        if (obj.bitLength() <= 63) {\n+            return obj.longValue();\n         }\n-        throw new NumberFormatException(\"The BigInteger cannot fit inside a 64 bit java long: [\" + bigInteger);\n+        throw new NumberFormatException(\"The BigInteger cannot fit inside a 64 bit java long: [\" + String.valueOf((Object)obj));\n     }\n     \n     static BigInteger longToBig(long adjustToLong) {\n         if (adjustToLong < -2147483648L) {\n             throw new IllegalArgumentException(\"Negative longs < -2^31 not permitted: [\" + adjustToLong);\n         }\n         if (adjustToLong < 0L && adjustToLong >= -2147483648L) {\n"}]}
