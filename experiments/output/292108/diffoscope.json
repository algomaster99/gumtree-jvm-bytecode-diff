{"diffoscope-json-version": 1, "source1": "first/NumberUtils.class", "source2": "second/NumberUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,149 +1,149 @@\n-  SHA-256 checksum c0fb1fa3e80da57beef40804a938a3325959010b5c832710ad4bf422856bf844\n+  SHA-256 checksum 453341a80ac221dbb1164c44625e6b88997227c54474c7521313dca4f7d296d3\n   Compiled from \"NumberUtils.java\"\n public class org.apache.commons.lang3.math.NumberUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #135                        // org/apache/commons/lang3/math/NumberUtils\n   super_class: #92                        // java/lang/Object\n   interfaces: 0, fields: 19, methods: 68, attributes: 1\n Constant pool:\n-    #1 = Methodref          #92.#255      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #135.#256     // org/apache/commons/lang3/math/NumberUtils.toInt:(Ljava/lang/String;I)I\n-    #3 = Methodref          #257.#258     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-    #4 = Class              #259          // java/lang/NumberFormatException\n-    #5 = Methodref          #135.#260     // org/apache/commons/lang3/math/NumberUtils.toLong:(Ljava/lang/String;J)J\n-    #6 = Methodref          #261.#262     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n-    #7 = Methodref          #135.#263     // org/apache/commons/lang3/math/NumberUtils.toFloat:(Ljava/lang/String;F)F\n-    #8 = Methodref          #89.#264      // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n-    #9 = Methodref          #135.#265     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/lang/String;D)D\n-   #10 = Methodref          #85.#266      // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-   #11 = Methodref          #135.#267     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/math/BigDecimal;D)D\n-   #12 = Methodref          #81.#268      // java/math/BigDecimal.doubleValue:()D\n-   #13 = Methodref          #135.#269     // org/apache/commons/lang3/math/NumberUtils.toByte:(Ljava/lang/String;B)B\n-   #14 = Methodref          #270.#271     // java/lang/Byte.parseByte:(Ljava/lang/String;)B\n-   #15 = Methodref          #135.#272     // org/apache/commons/lang3/math/NumberUtils.toShort:(Ljava/lang/String;S)S\n-   #16 = Methodref          #273.#274     // java/lang/Short.parseShort:(Ljava/lang/String;)S\n-   #17 = Fieldref           #135.#275     // org/apache/commons/lang3/math/NumberUtils.INTEGER_TWO:Ljava/lang/Integer;\n-   #18 = Methodref          #257.#276     // java/lang/Integer.intValue:()I\n-   #19 = Fieldref           #277.#278     // java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-   #20 = Methodref          #135.#279     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #21 = Fieldref           #81.#280      // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n-   #22 = Methodref          #81.#281      // java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #23 = Methodref          #135.#282     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #24 = Methodref          #89.#283      // java/lang/Float.floatValue:()F\n-   #25 = Methodref          #81.#284      // java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n-   #26 = Methodref          #135.#285     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #27 = Methodref          #85.#268      // java/lang/Double.doubleValue:()D\n-   #28 = Methodref          #135.#286     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #29 = Methodref          #135.#287     // org/apache/commons/lang3/math/NumberUtils.createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-   #30 = Methodref          #288.#289     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n-   #31 = String             #290          // A blank string is not a valid number\n-   #32 = Methodref          #4.#291       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #33 = Class              #292          // java/lang/String\n-   #34 = String             #293          // 0x\n-   #35 = String             #294          // 0X\n-   #36 = String             #295          // -0x\n-   #37 = String             #296          // -0X\n-   #38 = String             #297          // #\n-   #39 = String             #298          // -#\n-   #40 = Methodref          #33.#299      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #41 = Methodref          #33.#300      // java/lang/String.length:()I\n-   #42 = Methodref          #33.#301      // java/lang/String.charAt:(I)C\n-   #43 = Methodref          #135.#302     // org/apache/commons/lang3/math/NumberUtils.createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n-   #44 = Methodref          #135.#303     // org/apache/commons/lang3/math/NumberUtils.createLong:(Ljava/lang/String;)Ljava/lang/Long;\n-   #45 = Methodref          #135.#304     // org/apache/commons/lang3/math/NumberUtils.createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #46 = Methodref          #33.#305      // java/lang/String.indexOf:(I)I\n-   #47 = Class              #306          // java/lang/StringBuilder\n-   #48 = Methodref          #47.#255      // java/lang/StringBuilder.\"<init>\":()V\n-   #49 = Methodref          #47.#307      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #50 = String             #308          //  is not a valid number.\n-   #51 = Methodref          #47.#309      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #52 = Methodref          #33.#310      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #53 = Methodref          #33.#311      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #54 = Methodref          #135.#312     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n-   #55 = Methodref          #135.#313     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n-   #56 = Methodref          #314.#315     // java/lang/Character.isDigit:(C)Z\n-   #57 = Methodref          #135.#316     // org/apache/commons/lang3/math/NumberUtils.isAllZeros:(Ljava/lang/String;)Z\n-   #58 = Methodref          #33.#317      // java/lang/String.isEmpty:()Z\n-   #59 = Methodref          #135.#318     // org/apache/commons/lang3/math/NumberUtils.isDigits:(Ljava/lang/String;)Z\n-   #60 = Methodref          #135.#319     // org/apache/commons/lang3/math/NumberUtils.createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n-   #61 = Methodref          #89.#320      // java/lang/Float.isInfinite:()Z\n-   #62 = Methodref          #135.#321     // org/apache/commons/lang3/math/NumberUtils.createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n-   #63 = Methodref          #85.#320      // java/lang/Double.isInfinite:()Z\n-   #64 = Methodref          #85.#283      // java/lang/Double.floatValue:()F\n-   #65 = Methodref          #89.#309      // java/lang/Float.toString:()Ljava/lang/String;\n-   #66 = Methodref          #85.#309      // java/lang/Double.toString:()Ljava/lang/String;\n-   #67 = Methodref          #33.#322      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #68 = Methodref          #81.#323      // java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n-   #69 = Methodref          #89.#324      // java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n-   #70 = Methodref          #85.#325      // java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n-   #71 = Methodref          #257.#326     // java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #72 = Methodref          #261.#327     // java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n-   #73 = String             #328          // -\n-   #74 = Methodref          #33.#329      // java/lang/String.startsWith:(Ljava/lang/String;I)Z\n-   #75 = String             #330          // 0\n-   #76 = Class              #331          // java/math/BigInteger\n-   #77 = Methodref          #76.#332      // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n-   #78 = Methodref          #76.#333      // java/math/BigInteger.negate:()Ljava/math/BigInteger;\n-   #79 = Methodref          #33.#334      // java/lang/String.trim:()Ljava/lang/String;\n-   #80 = String             #335          // --\n-   #81 = Class              #336          // java/math/BigDecimal\n-   #82 = Methodref          #81.#291      // java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n-   #83 = Methodref          #135.#337     // org/apache/commons/lang3/math/NumberUtils.validateArray:(Ljava/lang/Object;)V\n-   #84 = Methodref          #85.#338      // java/lang/Double.isNaN:(D)Z\n-   #85 = Class              #339          // java/lang/Double\n+    #1 = Methodref          #92.#249      // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #135.#250     // org/apache/commons/lang3/math/NumberUtils.toInt:(Ljava/lang/String;I)I\n+    #3 = Methodref          #251.#252     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+    #4 = Class              #253          // java/lang/NumberFormatException\n+    #5 = Methodref          #135.#254     // org/apache/commons/lang3/math/NumberUtils.toLong:(Ljava/lang/String;J)J\n+    #6 = Methodref          #255.#256     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n+    #7 = Methodref          #135.#257     // org/apache/commons/lang3/math/NumberUtils.toFloat:(Ljava/lang/String;F)F\n+    #8 = Methodref          #89.#258      // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+    #9 = Methodref          #135.#259     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/lang/String;D)D\n+   #10 = Methodref          #85.#260      // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+   #11 = Methodref          #135.#261     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/math/BigDecimal;D)D\n+   #12 = Methodref          #81.#262      // java/math/BigDecimal.doubleValue:()D\n+   #13 = Methodref          #135.#263     // org/apache/commons/lang3/math/NumberUtils.toByte:(Ljava/lang/String;B)B\n+   #14 = Methodref          #264.#265     // java/lang/Byte.parseByte:(Ljava/lang/String;)B\n+   #15 = Methodref          #135.#266     // org/apache/commons/lang3/math/NumberUtils.toShort:(Ljava/lang/String;S)S\n+   #16 = Methodref          #267.#268     // java/lang/Short.parseShort:(Ljava/lang/String;)S\n+   #17 = Fieldref           #135.#269     // org/apache/commons/lang3/math/NumberUtils.INTEGER_TWO:Ljava/lang/Integer;\n+   #18 = Methodref          #251.#270     // java/lang/Integer.intValue:()I\n+   #19 = Fieldref           #189.#271     // java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+   #20 = Methodref          #135.#272     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #21 = Fieldref           #81.#273      // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+   #22 = Methodref          #81.#274      // java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #23 = Methodref          #135.#275     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #24 = Methodref          #89.#276      // java/lang/Float.floatValue:()F\n+   #25 = Methodref          #81.#277      // java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n+   #26 = Methodref          #135.#278     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #27 = Methodref          #85.#262      // java/lang/Double.doubleValue:()D\n+   #28 = Methodref          #135.#279     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #29 = Methodref          #135.#280     // org/apache/commons/lang3/math/NumberUtils.createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+   #30 = Methodref          #281.#282     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+   #31 = String             #283          // A blank string is not a valid number\n+   #32 = Methodref          #4.#284       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+   #33 = Class              #285          // java/lang/String\n+   #34 = String             #286          // 0x\n+   #35 = String             #287          // 0X\n+   #36 = String             #288          // -0x\n+   #37 = String             #289          // -0X\n+   #38 = String             #290          // #\n+   #39 = String             #291          // -#\n+   #40 = Methodref          #33.#292      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #41 = Methodref          #33.#293      // java/lang/String.length:()I\n+   #42 = Methodref          #33.#294      // java/lang/String.charAt:(I)C\n+   #43 = Methodref          #135.#295     // org/apache/commons/lang3/math/NumberUtils.createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+   #44 = Methodref          #135.#296     // org/apache/commons/lang3/math/NumberUtils.createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+   #45 = Methodref          #135.#297     // org/apache/commons/lang3/math/NumberUtils.createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+   #46 = Methodref          #33.#298      // java/lang/String.indexOf:(I)I\n+   #47 = Class              #299          // java/lang/StringBuilder\n+   #48 = Methodref          #47.#249      // java/lang/StringBuilder.\"<init>\":()V\n+   #49 = Methodref          #47.#300      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #50 = String             #301          //  is not a valid number.\n+   #51 = Methodref          #47.#302      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #52 = Methodref          #33.#303      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #53 = Methodref          #33.#304      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #54 = Methodref          #135.#305     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+   #55 = Methodref          #135.#306     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n+   #56 = Methodref          #307.#308     // java/lang/Character.isDigit:(C)Z\n+   #57 = Methodref          #135.#309     // org/apache/commons/lang3/math/NumberUtils.isAllZeros:(Ljava/lang/String;)Z\n+   #58 = Methodref          #33.#310      // java/lang/String.isEmpty:()Z\n+   #59 = Methodref          #135.#311     // org/apache/commons/lang3/math/NumberUtils.isDigits:(Ljava/lang/String;)Z\n+   #60 = Methodref          #135.#312     // org/apache/commons/lang3/math/NumberUtils.createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+   #61 = Methodref          #89.#313      // java/lang/Float.isInfinite:()Z\n+   #62 = Methodref          #135.#314     // org/apache/commons/lang3/math/NumberUtils.createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+   #63 = Methodref          #85.#313      // java/lang/Double.isInfinite:()Z\n+   #64 = Methodref          #85.#276      // java/lang/Double.floatValue:()F\n+   #65 = Methodref          #89.#302      // java/lang/Float.toString:()Ljava/lang/String;\n+   #66 = Methodref          #85.#302      // java/lang/Double.toString:()Ljava/lang/String;\n+   #67 = Methodref          #33.#315      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #68 = Methodref          #81.#316      // java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n+   #69 = Methodref          #89.#317      // java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n+   #70 = Methodref          #85.#318      // java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n+   #71 = Methodref          #251.#319     // java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n+   #72 = Methodref          #255.#320     // java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n+   #73 = String             #321          // -\n+   #74 = Methodref          #33.#322      // java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+   #75 = String             #323          // 0\n+   #76 = Class              #324          // java/math/BigInteger\n+   #77 = Methodref          #76.#325      // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n+   #78 = Methodref          #76.#326      // java/math/BigInteger.negate:()Ljava/math/BigInteger;\n+   #79 = Methodref          #33.#327      // java/lang/String.trim:()Ljava/lang/String;\n+   #80 = String             #328          // --\n+   #81 = Class              #329          // java/math/BigDecimal\n+   #82 = Methodref          #81.#284      // java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n+   #83 = Methodref          #135.#330     // org/apache/commons/lang3/math/NumberUtils.validateArray:(Ljava/lang/Object;)V\n+   #84 = Methodref          #85.#331      // java/lang/Double.isNaN:(D)Z\n+   #85 = Class              #332          // java/lang/Double\n    #86 = Double             NaNd\n-   #88 = Methodref          #89.#340      // java/lang/Float.isNaN:(F)Z\n-   #89 = Class              #341          // java/lang/Float\n+   #88 = Methodref          #89.#333      // java/lang/Float.isNaN:(F)Z\n+   #89 = Class              #334          // java/lang/Float\n    #90 = Float              NaNf\n-   #91 = String             #342          // The Array must not be null\n-   #92 = Class              #343          // java/lang/Object\n-   #93 = Methodref          #344.#345     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #94 = Methodref          #346.#347     // java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n-   #95 = String             #348          // Array cannot be empty.\n-   #96 = Methodref          #349.#350     // java/lang/Math.min:(DD)D\n-   #97 = Methodref          #349.#351     // java/lang/Math.min:(FF)F\n-   #98 = Methodref          #349.#352     // java/lang/Math.max:(DD)D\n-   #99 = Methodref          #349.#353     // java/lang/Math.max:(FF)F\n-  #100 = Methodref          #288.#354     // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n-  #101 = Methodref          #135.#355     // org/apache/commons/lang3/math/NumberUtils.isCreatable:(Ljava/lang/String;)Z\n-  #102 = Methodref          #288.#356     // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n-  #103 = Methodref          #33.#357      // java/lang/String.toCharArray:()[C\n-  #104 = Methodref          #288.#358     // org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n-  #105 = Methodref          #135.#359     // org/apache/commons/lang3/math/NumberUtils.withDecimalsParsing:(Ljava/lang/String;I)Z\n-  #106 = Methodref          #261.#360     // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-  #107 = Fieldref           #135.#361     // org/apache/commons/lang3/math/NumberUtils.LONG_ZERO:Ljava/lang/Long;\n-  #108 = Fieldref           #135.#362     // org/apache/commons/lang3/math/NumberUtils.LONG_ONE:Ljava/lang/Long;\n+   #91 = String             #335          // The Array must not be null\n+   #92 = Class              #336          // java/lang/Object\n+   #93 = Methodref          #337.#338     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #94 = Methodref          #339.#340     // java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n+   #95 = String             #341          // Array cannot be empty.\n+   #96 = Methodref          #342.#343     // java/lang/Math.min:(DD)D\n+   #97 = Methodref          #342.#344     // java/lang/Math.min:(FF)F\n+   #98 = Methodref          #342.#345     // java/lang/Math.max:(DD)D\n+   #99 = Methodref          #342.#346     // java/lang/Math.max:(FF)F\n+  #100 = Methodref          #281.#347     // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n+  #101 = Methodref          #135.#348     // org/apache/commons/lang3/math/NumberUtils.isCreatable:(Ljava/lang/String;)Z\n+  #102 = Methodref          #281.#349     // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+  #103 = Methodref          #33.#350      // java/lang/String.toCharArray:()[C\n+  #104 = Methodref          #281.#351     // org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n+  #105 = Methodref          #135.#352     // org/apache/commons/lang3/math/NumberUtils.withDecimalsParsing:(Ljava/lang/String;I)Z\n+  #106 = Methodref          #255.#353     // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+  #107 = Fieldref           #135.#354     // org/apache/commons/lang3/math/NumberUtils.LONG_ZERO:Ljava/lang/Long;\n+  #108 = Fieldref           #135.#355     // org/apache/commons/lang3/math/NumberUtils.LONG_ONE:Ljava/lang/Long;\n   #109 = Long               -1l\n-  #111 = Fieldref           #135.#363     // org/apache/commons/lang3/math/NumberUtils.LONG_MINUS_ONE:Ljava/lang/Long;\n-  #112 = Methodref          #257.#364     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #113 = Fieldref           #135.#365     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n-  #114 = Fieldref           #135.#366     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n-  #115 = Fieldref           #135.#367     // org/apache/commons/lang3/math/NumberUtils.INTEGER_MINUS_ONE:Ljava/lang/Integer;\n-  #116 = Methodref          #273.#368     // java/lang/Short.valueOf:(S)Ljava/lang/Short;\n-  #117 = Fieldref           #135.#369     // org/apache/commons/lang3/math/NumberUtils.SHORT_ZERO:Ljava/lang/Short;\n-  #118 = Fieldref           #135.#370     // org/apache/commons/lang3/math/NumberUtils.SHORT_ONE:Ljava/lang/Short;\n-  #119 = Fieldref           #135.#371     // org/apache/commons/lang3/math/NumberUtils.SHORT_MINUS_ONE:Ljava/lang/Short;\n-  #120 = Methodref          #270.#372     // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-  #121 = Fieldref           #135.#373     // org/apache/commons/lang3/math/NumberUtils.BYTE_ZERO:Ljava/lang/Byte;\n-  #122 = Fieldref           #135.#374     // org/apache/commons/lang3/math/NumberUtils.BYTE_ONE:Ljava/lang/Byte;\n-  #123 = Fieldref           #135.#375     // org/apache/commons/lang3/math/NumberUtils.BYTE_MINUS_ONE:Ljava/lang/Byte;\n-  #124 = Methodref          #85.#376      // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-  #125 = Fieldref           #135.#377     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ZERO:Ljava/lang/Double;\n-  #126 = Fieldref           #135.#378     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ONE:Ljava/lang/Double;\n+  #111 = Fieldref           #135.#356     // org/apache/commons/lang3/math/NumberUtils.LONG_MINUS_ONE:Ljava/lang/Long;\n+  #112 = Methodref          #251.#357     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #113 = Fieldref           #135.#358     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n+  #114 = Fieldref           #135.#359     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n+  #115 = Fieldref           #135.#360     // org/apache/commons/lang3/math/NumberUtils.INTEGER_MINUS_ONE:Ljava/lang/Integer;\n+  #116 = Methodref          #267.#361     // java/lang/Short.valueOf:(S)Ljava/lang/Short;\n+  #117 = Fieldref           #135.#362     // org/apache/commons/lang3/math/NumberUtils.SHORT_ZERO:Ljava/lang/Short;\n+  #118 = Fieldref           #135.#363     // org/apache/commons/lang3/math/NumberUtils.SHORT_ONE:Ljava/lang/Short;\n+  #119 = Fieldref           #135.#364     // org/apache/commons/lang3/math/NumberUtils.SHORT_MINUS_ONE:Ljava/lang/Short;\n+  #120 = Methodref          #264.#365     // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+  #121 = Fieldref           #135.#366     // org/apache/commons/lang3/math/NumberUtils.BYTE_ZERO:Ljava/lang/Byte;\n+  #122 = Fieldref           #135.#367     // org/apache/commons/lang3/math/NumberUtils.BYTE_ONE:Ljava/lang/Byte;\n+  #123 = Fieldref           #135.#368     // org/apache/commons/lang3/math/NumberUtils.BYTE_MINUS_ONE:Ljava/lang/Byte;\n+  #124 = Methodref          #85.#369      // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+  #125 = Fieldref           #135.#370     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ZERO:Ljava/lang/Double;\n+  #126 = Fieldref           #135.#371     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ONE:Ljava/lang/Double;\n   #127 = Double             -1.0d\n-  #129 = Fieldref           #135.#379     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_MINUS_ONE:Ljava/lang/Double;\n-  #130 = Methodref          #89.#380      // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-  #131 = Fieldref           #135.#381     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ZERO:Ljava/lang/Float;\n-  #132 = Fieldref           #135.#382     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ONE:Ljava/lang/Float;\n+  #129 = Fieldref           #135.#372     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_MINUS_ONE:Ljava/lang/Double;\n+  #130 = Methodref          #89.#373      // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+  #131 = Fieldref           #135.#374     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ZERO:Ljava/lang/Float;\n+  #132 = Fieldref           #135.#375     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ONE:Ljava/lang/Float;\n   #133 = Float              -1.0f\n-  #134 = Fieldref           #135.#383     // org/apache/commons/lang3/math/NumberUtils.FLOAT_MINUS_ONE:Ljava/lang/Float;\n-  #135 = Class              #384          // org/apache/commons/lang3/math/NumberUtils\n+  #134 = Fieldref           #135.#376     // org/apache/commons/lang3/math/NumberUtils.FLOAT_MINUS_ONE:Ljava/lang/Float;\n+  #135 = Class              #377          // org/apache/commons/lang3/math/NumberUtils\n   #136 = Utf8               LONG_ZERO\n   #137 = Utf8               Ljava/lang/Long;\n   #138 = Utf8               LONG_ONE\n   #139 = Utf8               LONG_MINUS_ONE\n   #140 = Utf8               INTEGER_ZERO\n   #141 = Utf8               Ljava/lang/Integer;\n   #142 = Utf8               INTEGER_ONE\n@@ -169,312 +169,305 @@\n   #162 = Utf8               ()V\n   #163 = Utf8               Code\n   #164 = Utf8               LineNumberTable\n   #165 = Utf8               toInt\n   #166 = Utf8               (Ljava/lang/String;)I\n   #167 = Utf8               (Ljava/lang/String;I)I\n   #168 = Utf8               StackMapTable\n-  #169 = Class              #259          // java/lang/NumberFormatException\n-  #170 = Utf8               toLong\n-  #171 = Utf8               (Ljava/lang/String;)J\n-  #172 = Utf8               (Ljava/lang/String;J)J\n-  #173 = Utf8               toFloat\n-  #174 = Utf8               (Ljava/lang/String;)F\n-  #175 = Utf8               (Ljava/lang/String;F)F\n-  #176 = Utf8               toDouble\n-  #177 = Utf8               (Ljava/lang/String;)D\n-  #178 = Utf8               (Ljava/lang/String;D)D\n-  #179 = Utf8               (Ljava/math/BigDecimal;)D\n-  #180 = Utf8               (Ljava/math/BigDecimal;D)D\n-  #181 = Utf8               toByte\n-  #182 = Utf8               (Ljava/lang/String;)B\n-  #183 = Utf8               (Ljava/lang/String;B)B\n-  #184 = Utf8               toShort\n-  #185 = Utf8               (Ljava/lang/String;)S\n-  #186 = Utf8               (Ljava/lang/String;S)S\n-  #187 = Utf8               toScaledBigDecimal\n-  #188 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n-  #189 = Utf8               (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #190 = Class              #336          // java/math/BigDecimal\n-  #191 = Class              #385          // java/math/RoundingMode\n-  #192 = Utf8               (Ljava/lang/Float;)Ljava/math/BigDecimal;\n-  #193 = Utf8               (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #194 = Utf8               (Ljava/lang/Double;)Ljava/math/BigDecimal;\n-  #195 = Utf8               (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #196 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n-  #197 = Utf8               (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #198 = Utf8               createNumber\n-  #199 = Utf8               (Ljava/lang/String;)Ljava/lang/Number;\n-  #200 = Class              #292          // java/lang/String\n-  #201 = Class              #386          // \"[Ljava/lang/String;\"\n-  #202 = Class              #341          // java/lang/Float\n-  #203 = Class              #339          // java/lang/Double\n-  #204 = Utf8               getMantissa\n-  #205 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #206 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n-  #207 = Utf8               isAllZeros\n-  #208 = Utf8               (Ljava/lang/String;)Z\n-  #209 = Utf8               createFloat\n-  #210 = Utf8               (Ljava/lang/String;)Ljava/lang/Float;\n-  #211 = Utf8               createDouble\n-  #212 = Utf8               (Ljava/lang/String;)Ljava/lang/Double;\n-  #213 = Utf8               createInteger\n-  #214 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n-  #215 = Utf8               createLong\n-  #216 = Utf8               (Ljava/lang/String;)Ljava/lang/Long;\n-  #217 = Utf8               createBigInteger\n-  #218 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n-  #219 = Class              #331          // java/math/BigInteger\n-  #220 = Utf8               createBigDecimal\n-  #221 = Utf8               min\n-  #222 = Utf8               ([J)J\n-  #223 = Utf8               ([I)I\n-  #224 = Utf8               ([S)S\n-  #225 = Utf8               ([B)B\n-  #226 = Utf8               ([D)D\n-  #227 = Utf8               ([F)F\n-  #228 = Utf8               max\n-  #229 = Utf8               validateArray\n-  #230 = Utf8               (Ljava/lang/Object;)V\n-  #231 = Utf8               (JJJ)J\n-  #232 = Utf8               (III)I\n-  #233 = Utf8               (SSS)S\n-  #234 = Utf8               (BBB)B\n-  #235 = Utf8               (DDD)D\n-  #236 = Utf8               (FFF)F\n-  #237 = Utf8               isDigits\n-  #238 = Utf8               isNumber\n-  #239 = Utf8               Deprecated\n-  #240 = Utf8               RuntimeVisibleAnnotations\n-  #241 = Utf8               Ljava/lang/Deprecated;\n-  #242 = Utf8               isCreatable\n-  #243 = Class              #387          // \"[C\"\n-  #244 = Utf8               isParsable\n-  #245 = Utf8               withDecimalsParsing\n-  #246 = Utf8               (Ljava/lang/String;I)Z\n-  #247 = Utf8               compare\n-  #248 = Utf8               (II)I\n-  #249 = Utf8               (JJ)I\n-  #250 = Utf8               (SS)I\n-  #251 = Utf8               (BB)I\n-  #252 = Utf8               <clinit>\n-  #253 = Utf8               SourceFile\n-  #254 = Utf8               NumberUtils.java\n-  #255 = NameAndType        #161:#162     // \"<init>\":()V\n-  #256 = NameAndType        #165:#167     // toInt:(Ljava/lang/String;I)I\n-  #257 = Class              #388          // java/lang/Integer\n-  #258 = NameAndType        #389:#166     // parseInt:(Ljava/lang/String;)I\n-  #259 = Utf8               java/lang/NumberFormatException\n-  #260 = NameAndType        #170:#172     // toLong:(Ljava/lang/String;J)J\n-  #261 = Class              #390          // java/lang/Long\n-  #262 = NameAndType        #391:#171     // parseLong:(Ljava/lang/String;)J\n-  #263 = NameAndType        #173:#175     // toFloat:(Ljava/lang/String;F)F\n-  #264 = NameAndType        #392:#174     // parseFloat:(Ljava/lang/String;)F\n-  #265 = NameAndType        #176:#178     // toDouble:(Ljava/lang/String;D)D\n-  #266 = NameAndType        #393:#177     // parseDouble:(Ljava/lang/String;)D\n-  #267 = NameAndType        #176:#180     // toDouble:(Ljava/math/BigDecimal;D)D\n-  #268 = NameAndType        #394:#395     // doubleValue:()D\n-  #269 = NameAndType        #181:#183     // toByte:(Ljava/lang/String;B)B\n-  #270 = Class              #396          // java/lang/Byte\n-  #271 = NameAndType        #397:#182     // parseByte:(Ljava/lang/String;)B\n-  #272 = NameAndType        #184:#186     // toShort:(Ljava/lang/String;S)S\n-  #273 = Class              #398          // java/lang/Short\n-  #274 = NameAndType        #399:#185     // parseShort:(Ljava/lang/String;)S\n-  #275 = NameAndType        #143:#141     // INTEGER_TWO:Ljava/lang/Integer;\n-  #276 = NameAndType        #400:#401     // intValue:()I\n-  #277 = Class              #385          // java/math/RoundingMode\n-  #278 = NameAndType        #402:#403     // HALF_EVEN:Ljava/math/RoundingMode;\n-  #279 = NameAndType        #187:#189     // toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #280 = NameAndType        #404:#405     // ZERO:Ljava/math/BigDecimal;\n-  #281 = NameAndType        #406:#407     // setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #282 = NameAndType        #187:#193     // toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #283 = NameAndType        #408:#409     // floatValue:()F\n-  #284 = NameAndType        #410:#411     // valueOf:(D)Ljava/math/BigDecimal;\n-  #285 = NameAndType        #187:#195     // toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #286 = NameAndType        #187:#197     // toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #287 = NameAndType        #220:#196     // createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-  #288 = Class              #412          // org/apache/commons/lang3/StringUtils\n-  #289 = NameAndType        #413:#414     // isBlank:(Ljava/lang/CharSequence;)Z\n-  #290 = Utf8               A blank string is not a valid number\n-  #291 = NameAndType        #161:#415     // \"<init>\":(Ljava/lang/String;)V\n-  #292 = Utf8               java/lang/String\n-  #293 = Utf8               0x\n-  #294 = Utf8               0X\n-  #295 = Utf8               -0x\n-  #296 = Utf8               -0X\n-  #297 = Utf8               #\n-  #298 = Utf8               -#\n-  #299 = NameAndType        #416:#208     // startsWith:(Ljava/lang/String;)Z\n-  #300 = NameAndType        #417:#401     // length:()I\n-  #301 = NameAndType        #418:#419     // charAt:(I)C\n-  #302 = NameAndType        #217:#218     // createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n-  #303 = NameAndType        #215:#216     // createLong:(Ljava/lang/String;)Ljava/lang/Long;\n-  #304 = NameAndType        #213:#214     // createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n-  #305 = NameAndType        #420:#421     // indexOf:(I)I\n-  #306 = Utf8               java/lang/StringBuilder\n-  #307 = NameAndType        #422:#423     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #308 = Utf8                is not a valid number.\n-  #309 = NameAndType        #424:#425     // toString:()Ljava/lang/String;\n-  #310 = NameAndType        #426:#427     // substring:(II)Ljava/lang/String;\n-  #311 = NameAndType        #426:#428     // substring:(I)Ljava/lang/String;\n-  #312 = NameAndType        #204:#206     // getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n-  #313 = NameAndType        #204:#205     // getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n-  #314 = Class              #429          // java/lang/Character\n-  #315 = NameAndType        #430:#431     // isDigit:(C)Z\n-  #316 = NameAndType        #207:#208     // isAllZeros:(Ljava/lang/String;)Z\n-  #317 = NameAndType        #432:#433     // isEmpty:()Z\n-  #318 = NameAndType        #237:#208     // isDigits:(Ljava/lang/String;)Z\n-  #319 = NameAndType        #209:#210     // createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n-  #320 = NameAndType        #434:#433     // isInfinite:()Z\n-  #321 = NameAndType        #211:#212     // createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n-  #322 = NameAndType        #435:#436     // equals:(Ljava/lang/Object;)Z\n-  #323 = NameAndType        #437:#438     // compareTo:(Ljava/math/BigDecimal;)I\n-  #324 = NameAndType        #410:#210     // valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n-  #325 = NameAndType        #410:#212     // valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n-  #326 = NameAndType        #439:#214     // decode:(Ljava/lang/String;)Ljava/lang/Integer;\n-  #327 = NameAndType        #439:#216     // decode:(Ljava/lang/String;)Ljava/lang/Long;\n-  #328 = Utf8               -\n-  #329 = NameAndType        #416:#246     // startsWith:(Ljava/lang/String;I)Z\n-  #330 = Utf8               0\n-  #331 = Utf8               java/math/BigInteger\n-  #332 = NameAndType        #161:#440     // \"<init>\":(Ljava/lang/String;I)V\n-  #333 = NameAndType        #441:#442     // negate:()Ljava/math/BigInteger;\n-  #334 = NameAndType        #443:#425     // trim:()Ljava/lang/String;\n-  #335 = Utf8               --\n-  #336 = Utf8               java/math/BigDecimal\n-  #337 = NameAndType        #229:#230     // validateArray:(Ljava/lang/Object;)V\n-  #338 = NameAndType        #444:#445     // isNaN:(D)Z\n-  #339 = Utf8               java/lang/Double\n-  #340 = NameAndType        #444:#446     // isNaN:(F)Z\n-  #341 = Utf8               java/lang/Float\n-  #342 = Utf8               The Array must not be null\n-  #343 = Utf8               java/lang/Object\n-  #344 = Class              #447          // org/apache/commons/lang3/Validate\n-  #345 = NameAndType        #448:#449     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #346 = Class              #450          // java/lang/reflect/Array\n-  #347 = NameAndType        #451:#452     // getLength:(Ljava/lang/Object;)I\n-  #348 = Utf8               Array cannot be empty.\n-  #349 = Class              #453          // java/lang/Math\n-  #350 = NameAndType        #221:#454     // min:(DD)D\n-  #351 = NameAndType        #221:#455     // min:(FF)F\n-  #352 = NameAndType        #228:#454     // max:(DD)D\n-  #353 = NameAndType        #228:#455     // max:(FF)F\n-  #354 = NameAndType        #456:#414     // isNumeric:(Ljava/lang/CharSequence;)Z\n-  #355 = NameAndType        #242:#208     // isCreatable:(Ljava/lang/String;)Z\n-  #356 = NameAndType        #432:#414     // isEmpty:(Ljava/lang/CharSequence;)Z\n-  #357 = NameAndType        #457:#458     // toCharArray:()[C\n-  #358 = NameAndType        #459:#460     // contains:(Ljava/lang/CharSequence;I)Z\n-  #359 = NameAndType        #245:#246     // withDecimalsParsing:(Ljava/lang/String;I)Z\n-  #360 = NameAndType        #410:#461     // valueOf:(J)Ljava/lang/Long;\n-  #361 = NameAndType        #136:#137     // LONG_ZERO:Ljava/lang/Long;\n-  #362 = NameAndType        #138:#137     // LONG_ONE:Ljava/lang/Long;\n-  #363 = NameAndType        #139:#137     // LONG_MINUS_ONE:Ljava/lang/Long;\n-  #364 = NameAndType        #410:#462     // valueOf:(I)Ljava/lang/Integer;\n-  #365 = NameAndType        #140:#141     // INTEGER_ZERO:Ljava/lang/Integer;\n-  #366 = NameAndType        #142:#141     // INTEGER_ONE:Ljava/lang/Integer;\n-  #367 = NameAndType        #144:#141     // INTEGER_MINUS_ONE:Ljava/lang/Integer;\n-  #368 = NameAndType        #410:#463     // valueOf:(S)Ljava/lang/Short;\n-  #369 = NameAndType        #145:#146     // SHORT_ZERO:Ljava/lang/Short;\n-  #370 = NameAndType        #147:#146     // SHORT_ONE:Ljava/lang/Short;\n-  #371 = NameAndType        #148:#146     // SHORT_MINUS_ONE:Ljava/lang/Short;\n-  #372 = NameAndType        #410:#464     // valueOf:(B)Ljava/lang/Byte;\n-  #373 = NameAndType        #149:#150     // BYTE_ZERO:Ljava/lang/Byte;\n-  #374 = NameAndType        #151:#150     // BYTE_ONE:Ljava/lang/Byte;\n-  #375 = NameAndType        #152:#150     // BYTE_MINUS_ONE:Ljava/lang/Byte;\n-  #376 = NameAndType        #410:#465     // valueOf:(D)Ljava/lang/Double;\n-  #377 = NameAndType        #153:#154     // DOUBLE_ZERO:Ljava/lang/Double;\n-  #378 = NameAndType        #155:#154     // DOUBLE_ONE:Ljava/lang/Double;\n-  #379 = NameAndType        #156:#154     // DOUBLE_MINUS_ONE:Ljava/lang/Double;\n-  #380 = NameAndType        #410:#466     // valueOf:(F)Ljava/lang/Float;\n-  #381 = NameAndType        #157:#158     // FLOAT_ZERO:Ljava/lang/Float;\n-  #382 = NameAndType        #159:#158     // FLOAT_ONE:Ljava/lang/Float;\n-  #383 = NameAndType        #160:#158     // FLOAT_MINUS_ONE:Ljava/lang/Float;\n-  #384 = Utf8               org/apache/commons/lang3/math/NumberUtils\n-  #385 = Utf8               java/math/RoundingMode\n-  #386 = Utf8               [Ljava/lang/String;\n-  #387 = Utf8               [C\n-  #388 = Utf8               java/lang/Integer\n-  #389 = Utf8               parseInt\n-  #390 = Utf8               java/lang/Long\n-  #391 = Utf8               parseLong\n-  #392 = Utf8               parseFloat\n-  #393 = Utf8               parseDouble\n-  #394 = Utf8               doubleValue\n-  #395 = Utf8               ()D\n-  #396 = Utf8               java/lang/Byte\n-  #397 = Utf8               parseByte\n-  #398 = Utf8               java/lang/Short\n-  #399 = Utf8               parseShort\n-  #400 = Utf8               intValue\n-  #401 = Utf8               ()I\n-  #402 = Utf8               HALF_EVEN\n-  #403 = Utf8               Ljava/math/RoundingMode;\n-  #404 = Utf8               ZERO\n-  #405 = Utf8               Ljava/math/BigDecimal;\n-  #406 = Utf8               setScale\n-  #407 = Utf8               (ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #408 = Utf8               floatValue\n-  #409 = Utf8               ()F\n-  #410 = Utf8               valueOf\n-  #411 = Utf8               (D)Ljava/math/BigDecimal;\n-  #412 = Utf8               org/apache/commons/lang3/StringUtils\n-  #413 = Utf8               isBlank\n-  #414 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #415 = Utf8               (Ljava/lang/String;)V\n-  #416 = Utf8               startsWith\n-  #417 = Utf8               length\n-  #418 = Utf8               charAt\n-  #419 = Utf8               (I)C\n-  #420 = Utf8               indexOf\n-  #421 = Utf8               (I)I\n-  #422 = Utf8               append\n-  #423 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #424 = Utf8               toString\n-  #425 = Utf8               ()Ljava/lang/String;\n-  #426 = Utf8               substring\n-  #427 = Utf8               (II)Ljava/lang/String;\n-  #428 = Utf8               (I)Ljava/lang/String;\n-  #429 = Utf8               java/lang/Character\n-  #430 = Utf8               isDigit\n-  #431 = Utf8               (C)Z\n-  #432 = Utf8               isEmpty\n-  #433 = Utf8               ()Z\n-  #434 = Utf8               isInfinite\n-  #435 = Utf8               equals\n-  #436 = Utf8               (Ljava/lang/Object;)Z\n-  #437 = Utf8               compareTo\n-  #438 = Utf8               (Ljava/math/BigDecimal;)I\n-  #439 = Utf8               decode\n-  #440 = Utf8               (Ljava/lang/String;I)V\n-  #441 = Utf8               negate\n-  #442 = Utf8               ()Ljava/math/BigInteger;\n-  #443 = Utf8               trim\n-  #444 = Utf8               isNaN\n-  #445 = Utf8               (D)Z\n-  #446 = Utf8               (F)Z\n-  #447 = Utf8               org/apache/commons/lang3/Validate\n-  #448 = Utf8               isTrue\n-  #449 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #450 = Utf8               java/lang/reflect/Array\n-  #451 = Utf8               getLength\n-  #452 = Utf8               (Ljava/lang/Object;)I\n-  #453 = Utf8               java/lang/Math\n-  #454 = Utf8               (DD)D\n-  #455 = Utf8               (FF)F\n-  #456 = Utf8               isNumeric\n-  #457 = Utf8               toCharArray\n-  #458 = Utf8               ()[C\n-  #459 = Utf8               contains\n-  #460 = Utf8               (Ljava/lang/CharSequence;I)Z\n-  #461 = Utf8               (J)Ljava/lang/Long;\n-  #462 = Utf8               (I)Ljava/lang/Integer;\n-  #463 = Utf8               (S)Ljava/lang/Short;\n-  #464 = Utf8               (B)Ljava/lang/Byte;\n-  #465 = Utf8               (D)Ljava/lang/Double;\n-  #466 = Utf8               (F)Ljava/lang/Float;\n+  #169 = Utf8               toLong\n+  #170 = Utf8               (Ljava/lang/String;)J\n+  #171 = Utf8               (Ljava/lang/String;J)J\n+  #172 = Utf8               toFloat\n+  #173 = Utf8               (Ljava/lang/String;)F\n+  #174 = Utf8               (Ljava/lang/String;F)F\n+  #175 = Utf8               toDouble\n+  #176 = Utf8               (Ljava/lang/String;)D\n+  #177 = Utf8               (Ljava/lang/String;D)D\n+  #178 = Utf8               (Ljava/math/BigDecimal;)D\n+  #179 = Utf8               (Ljava/math/BigDecimal;D)D\n+  #180 = Utf8               toByte\n+  #181 = Utf8               (Ljava/lang/String;)B\n+  #182 = Utf8               (Ljava/lang/String;B)B\n+  #183 = Utf8               toShort\n+  #184 = Utf8               (Ljava/lang/String;)S\n+  #185 = Utf8               (Ljava/lang/String;S)S\n+  #186 = Utf8               toScaledBigDecimal\n+  #187 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+  #188 = Utf8               (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #189 = Class              #378          // java/math/RoundingMode\n+  #190 = Utf8               (Ljava/lang/Float;)Ljava/math/BigDecimal;\n+  #191 = Utf8               (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #192 = Utf8               (Ljava/lang/Double;)Ljava/math/BigDecimal;\n+  #193 = Utf8               (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #194 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #195 = Utf8               (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #196 = Utf8               createNumber\n+  #197 = Utf8               (Ljava/lang/String;)Ljava/lang/Number;\n+  #198 = Class              #379          // \"[Ljava/lang/String;\"\n+  #199 = Utf8               getMantissa\n+  #200 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #201 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n+  #202 = Utf8               isAllZeros\n+  #203 = Utf8               (Ljava/lang/String;)Z\n+  #204 = Utf8               createFloat\n+  #205 = Utf8               (Ljava/lang/String;)Ljava/lang/Float;\n+  #206 = Utf8               createDouble\n+  #207 = Utf8               (Ljava/lang/String;)Ljava/lang/Double;\n+  #208 = Utf8               createInteger\n+  #209 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n+  #210 = Utf8               createLong\n+  #211 = Utf8               (Ljava/lang/String;)Ljava/lang/Long;\n+  #212 = Utf8               createBigInteger\n+  #213 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n+  #214 = Utf8               createBigDecimal\n+  #215 = Utf8               min\n+  #216 = Utf8               ([J)J\n+  #217 = Utf8               ([I)I\n+  #218 = Utf8               ([S)S\n+  #219 = Utf8               ([B)B\n+  #220 = Utf8               ([D)D\n+  #221 = Utf8               ([F)F\n+  #222 = Utf8               max\n+  #223 = Utf8               validateArray\n+  #224 = Utf8               (Ljava/lang/Object;)V\n+  #225 = Utf8               (JJJ)J\n+  #226 = Utf8               (III)I\n+  #227 = Utf8               (SSS)S\n+  #228 = Utf8               (BBB)B\n+  #229 = Utf8               (DDD)D\n+  #230 = Utf8               (FFF)F\n+  #231 = Utf8               isDigits\n+  #232 = Utf8               isNumber\n+  #233 = Utf8               Deprecated\n+  #234 = Utf8               RuntimeVisibleAnnotations\n+  #235 = Utf8               Ljava/lang/Deprecated;\n+  #236 = Utf8               isCreatable\n+  #237 = Class              #380          // \"[C\"\n+  #238 = Utf8               isParsable\n+  #239 = Utf8               withDecimalsParsing\n+  #240 = Utf8               (Ljava/lang/String;I)Z\n+  #241 = Utf8               compare\n+  #242 = Utf8               (II)I\n+  #243 = Utf8               (JJ)I\n+  #244 = Utf8               (SS)I\n+  #245 = Utf8               (BB)I\n+  #246 = Utf8               <clinit>\n+  #247 = Utf8               SourceFile\n+  #248 = Utf8               NumberUtils.java\n+  #249 = NameAndType        #161:#162     // \"<init>\":()V\n+  #250 = NameAndType        #165:#167     // toInt:(Ljava/lang/String;I)I\n+  #251 = Class              #381          // java/lang/Integer\n+  #252 = NameAndType        #382:#166     // parseInt:(Ljava/lang/String;)I\n+  #253 = Utf8               java/lang/NumberFormatException\n+  #254 = NameAndType        #169:#171     // toLong:(Ljava/lang/String;J)J\n+  #255 = Class              #383          // java/lang/Long\n+  #256 = NameAndType        #384:#170     // parseLong:(Ljava/lang/String;)J\n+  #257 = NameAndType        #172:#174     // toFloat:(Ljava/lang/String;F)F\n+  #258 = NameAndType        #385:#173     // parseFloat:(Ljava/lang/String;)F\n+  #259 = NameAndType        #175:#177     // toDouble:(Ljava/lang/String;D)D\n+  #260 = NameAndType        #386:#176     // parseDouble:(Ljava/lang/String;)D\n+  #261 = NameAndType        #175:#179     // toDouble:(Ljava/math/BigDecimal;D)D\n+  #262 = NameAndType        #387:#388     // doubleValue:()D\n+  #263 = NameAndType        #180:#182     // toByte:(Ljava/lang/String;B)B\n+  #264 = Class              #389          // java/lang/Byte\n+  #265 = NameAndType        #390:#181     // parseByte:(Ljava/lang/String;)B\n+  #266 = NameAndType        #183:#185     // toShort:(Ljava/lang/String;S)S\n+  #267 = Class              #391          // java/lang/Short\n+  #268 = NameAndType        #392:#184     // parseShort:(Ljava/lang/String;)S\n+  #269 = NameAndType        #143:#141     // INTEGER_TWO:Ljava/lang/Integer;\n+  #270 = NameAndType        #393:#394     // intValue:()I\n+  #271 = NameAndType        #395:#396     // HALF_EVEN:Ljava/math/RoundingMode;\n+  #272 = NameAndType        #186:#188     // toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #273 = NameAndType        #397:#398     // ZERO:Ljava/math/BigDecimal;\n+  #274 = NameAndType        #399:#400     // setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #275 = NameAndType        #186:#191     // toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #276 = NameAndType        #401:#402     // floatValue:()F\n+  #277 = NameAndType        #403:#404     // valueOf:(D)Ljava/math/BigDecimal;\n+  #278 = NameAndType        #186:#193     // toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #279 = NameAndType        #186:#195     // toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #280 = NameAndType        #214:#194     // createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #281 = Class              #405          // org/apache/commons/lang3/StringUtils\n+  #282 = NameAndType        #406:#407     // isBlank:(Ljava/lang/CharSequence;)Z\n+  #283 = Utf8               A blank string is not a valid number\n+  #284 = NameAndType        #161:#408     // \"<init>\":(Ljava/lang/String;)V\n+  #285 = Utf8               java/lang/String\n+  #286 = Utf8               0x\n+  #287 = Utf8               0X\n+  #288 = Utf8               -0x\n+  #289 = Utf8               -0X\n+  #290 = Utf8               #\n+  #291 = Utf8               -#\n+  #292 = NameAndType        #409:#203     // startsWith:(Ljava/lang/String;)Z\n+  #293 = NameAndType        #410:#394     // length:()I\n+  #294 = NameAndType        #411:#412     // charAt:(I)C\n+  #295 = NameAndType        #212:#213     // createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+  #296 = NameAndType        #210:#211     // createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+  #297 = NameAndType        #208:#209     // createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #298 = NameAndType        #413:#414     // indexOf:(I)I\n+  #299 = Utf8               java/lang/StringBuilder\n+  #300 = NameAndType        #415:#416     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #301 = Utf8                is not a valid number.\n+  #302 = NameAndType        #417:#418     // toString:()Ljava/lang/String;\n+  #303 = NameAndType        #419:#420     // substring:(II)Ljava/lang/String;\n+  #304 = NameAndType        #419:#421     // substring:(I)Ljava/lang/String;\n+  #305 = NameAndType        #199:#201     // getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+  #306 = NameAndType        #199:#200     // getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n+  #307 = Class              #422          // java/lang/Character\n+  #308 = NameAndType        #423:#424     // isDigit:(C)Z\n+  #309 = NameAndType        #202:#203     // isAllZeros:(Ljava/lang/String;)Z\n+  #310 = NameAndType        #425:#426     // isEmpty:()Z\n+  #311 = NameAndType        #231:#203     // isDigits:(Ljava/lang/String;)Z\n+  #312 = NameAndType        #204:#205     // createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+  #313 = NameAndType        #427:#426     // isInfinite:()Z\n+  #314 = NameAndType        #206:#207     // createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+  #315 = NameAndType        #428:#429     // equals:(Ljava/lang/Object;)Z\n+  #316 = NameAndType        #430:#431     // compareTo:(Ljava/math/BigDecimal;)I\n+  #317 = NameAndType        #403:#205     // valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n+  #318 = NameAndType        #403:#207     // valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n+  #319 = NameAndType        #432:#209     // decode:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #320 = NameAndType        #432:#211     // decode:(Ljava/lang/String;)Ljava/lang/Long;\n+  #321 = Utf8               -\n+  #322 = NameAndType        #409:#240     // startsWith:(Ljava/lang/String;I)Z\n+  #323 = Utf8               0\n+  #324 = Utf8               java/math/BigInteger\n+  #325 = NameAndType        #161:#433     // \"<init>\":(Ljava/lang/String;I)V\n+  #326 = NameAndType        #434:#435     // negate:()Ljava/math/BigInteger;\n+  #327 = NameAndType        #436:#418     // trim:()Ljava/lang/String;\n+  #328 = Utf8               --\n+  #329 = Utf8               java/math/BigDecimal\n+  #330 = NameAndType        #223:#224     // validateArray:(Ljava/lang/Object;)V\n+  #331 = NameAndType        #437:#438     // isNaN:(D)Z\n+  #332 = Utf8               java/lang/Double\n+  #333 = NameAndType        #437:#439     // isNaN:(F)Z\n+  #334 = Utf8               java/lang/Float\n+  #335 = Utf8               The Array must not be null\n+  #336 = Utf8               java/lang/Object\n+  #337 = Class              #440          // org/apache/commons/lang3/Validate\n+  #338 = NameAndType        #441:#442     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #339 = Class              #443          // java/lang/reflect/Array\n+  #340 = NameAndType        #444:#445     // getLength:(Ljava/lang/Object;)I\n+  #341 = Utf8               Array cannot be empty.\n+  #342 = Class              #446          // java/lang/Math\n+  #343 = NameAndType        #215:#447     // min:(DD)D\n+  #344 = NameAndType        #215:#448     // min:(FF)F\n+  #345 = NameAndType        #222:#447     // max:(DD)D\n+  #346 = NameAndType        #222:#448     // max:(FF)F\n+  #347 = NameAndType        #449:#407     // isNumeric:(Ljava/lang/CharSequence;)Z\n+  #348 = NameAndType        #236:#203     // isCreatable:(Ljava/lang/String;)Z\n+  #349 = NameAndType        #425:#407     // isEmpty:(Ljava/lang/CharSequence;)Z\n+  #350 = NameAndType        #450:#451     // toCharArray:()[C\n+  #351 = NameAndType        #452:#453     // contains:(Ljava/lang/CharSequence;I)Z\n+  #352 = NameAndType        #239:#240     // withDecimalsParsing:(Ljava/lang/String;I)Z\n+  #353 = NameAndType        #403:#454     // valueOf:(J)Ljava/lang/Long;\n+  #354 = NameAndType        #136:#137     // LONG_ZERO:Ljava/lang/Long;\n+  #355 = NameAndType        #138:#137     // LONG_ONE:Ljava/lang/Long;\n+  #356 = NameAndType        #139:#137     // LONG_MINUS_ONE:Ljava/lang/Long;\n+  #357 = NameAndType        #403:#455     // valueOf:(I)Ljava/lang/Integer;\n+  #358 = NameAndType        #140:#141     // INTEGER_ZERO:Ljava/lang/Integer;\n+  #359 = NameAndType        #142:#141     // INTEGER_ONE:Ljava/lang/Integer;\n+  #360 = NameAndType        #144:#141     // INTEGER_MINUS_ONE:Ljava/lang/Integer;\n+  #361 = NameAndType        #403:#456     // valueOf:(S)Ljava/lang/Short;\n+  #362 = NameAndType        #145:#146     // SHORT_ZERO:Ljava/lang/Short;\n+  #363 = NameAndType        #147:#146     // SHORT_ONE:Ljava/lang/Short;\n+  #364 = NameAndType        #148:#146     // SHORT_MINUS_ONE:Ljava/lang/Short;\n+  #365 = NameAndType        #403:#457     // valueOf:(B)Ljava/lang/Byte;\n+  #366 = NameAndType        #149:#150     // BYTE_ZERO:Ljava/lang/Byte;\n+  #367 = NameAndType        #151:#150     // BYTE_ONE:Ljava/lang/Byte;\n+  #368 = NameAndType        #152:#150     // BYTE_MINUS_ONE:Ljava/lang/Byte;\n+  #369 = NameAndType        #403:#458     // valueOf:(D)Ljava/lang/Double;\n+  #370 = NameAndType        #153:#154     // DOUBLE_ZERO:Ljava/lang/Double;\n+  #371 = NameAndType        #155:#154     // DOUBLE_ONE:Ljava/lang/Double;\n+  #372 = NameAndType        #156:#154     // DOUBLE_MINUS_ONE:Ljava/lang/Double;\n+  #373 = NameAndType        #403:#459     // valueOf:(F)Ljava/lang/Float;\n+  #374 = NameAndType        #157:#158     // FLOAT_ZERO:Ljava/lang/Float;\n+  #375 = NameAndType        #159:#158     // FLOAT_ONE:Ljava/lang/Float;\n+  #376 = NameAndType        #160:#158     // FLOAT_MINUS_ONE:Ljava/lang/Float;\n+  #377 = Utf8               org/apache/commons/lang3/math/NumberUtils\n+  #378 = Utf8               java/math/RoundingMode\n+  #379 = Utf8               [Ljava/lang/String;\n+  #380 = Utf8               [C\n+  #381 = Utf8               java/lang/Integer\n+  #382 = Utf8               parseInt\n+  #383 = Utf8               java/lang/Long\n+  #384 = Utf8               parseLong\n+  #385 = Utf8               parseFloat\n+  #386 = Utf8               parseDouble\n+  #387 = Utf8               doubleValue\n+  #388 = Utf8               ()D\n+  #389 = Utf8               java/lang/Byte\n+  #390 = Utf8               parseByte\n+  #391 = Utf8               java/lang/Short\n+  #392 = Utf8               parseShort\n+  #393 = Utf8               intValue\n+  #394 = Utf8               ()I\n+  #395 = Utf8               HALF_EVEN\n+  #396 = Utf8               Ljava/math/RoundingMode;\n+  #397 = Utf8               ZERO\n+  #398 = Utf8               Ljava/math/BigDecimal;\n+  #399 = Utf8               setScale\n+  #400 = Utf8               (ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #401 = Utf8               floatValue\n+  #402 = Utf8               ()F\n+  #403 = Utf8               valueOf\n+  #404 = Utf8               (D)Ljava/math/BigDecimal;\n+  #405 = Utf8               org/apache/commons/lang3/StringUtils\n+  #406 = Utf8               isBlank\n+  #407 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #408 = Utf8               (Ljava/lang/String;)V\n+  #409 = Utf8               startsWith\n+  #410 = Utf8               length\n+  #411 = Utf8               charAt\n+  #412 = Utf8               (I)C\n+  #413 = Utf8               indexOf\n+  #414 = Utf8               (I)I\n+  #415 = Utf8               append\n+  #416 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #417 = Utf8               toString\n+  #418 = Utf8               ()Ljava/lang/String;\n+  #419 = Utf8               substring\n+  #420 = Utf8               (II)Ljava/lang/String;\n+  #421 = Utf8               (I)Ljava/lang/String;\n+  #422 = Utf8               java/lang/Character\n+  #423 = Utf8               isDigit\n+  #424 = Utf8               (C)Z\n+  #425 = Utf8               isEmpty\n+  #426 = Utf8               ()Z\n+  #427 = Utf8               isInfinite\n+  #428 = Utf8               equals\n+  #429 = Utf8               (Ljava/lang/Object;)Z\n+  #430 = Utf8               compareTo\n+  #431 = Utf8               (Ljava/math/BigDecimal;)I\n+  #432 = Utf8               decode\n+  #433 = Utf8               (Ljava/lang/String;I)V\n+  #434 = Utf8               negate\n+  #435 = Utf8               ()Ljava/math/BigInteger;\n+  #436 = Utf8               trim\n+  #437 = Utf8               isNaN\n+  #438 = Utf8               (D)Z\n+  #439 = Utf8               (F)Z\n+  #440 = Utf8               org/apache/commons/lang3/Validate\n+  #441 = Utf8               isTrue\n+  #442 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #443 = Utf8               java/lang/reflect/Array\n+  #444 = Utf8               getLength\n+  #445 = Utf8               (Ljava/lang/Object;)I\n+  #446 = Utf8               java/lang/Math\n+  #447 = Utf8               (DD)D\n+  #448 = Utf8               (FF)F\n+  #449 = Utf8               isNumeric\n+  #450 = Utf8               toCharArray\n+  #451 = Utf8               ()[C\n+  #452 = Utf8               contains\n+  #453 = Utf8               (Ljava/lang/CharSequence;I)Z\n+  #454 = Utf8               (J)Ljava/lang/Long;\n+  #455 = Utf8               (I)Ljava/lang/Integer;\n+  #456 = Utf8               (S)Ljava/lang/Short;\n+  #457 = Utf8               (B)Ljava/lang/Byte;\n+  #458 = Utf8               (D)Ljava/lang/Double;\n+  #459 = Utf8               (F)Ljava/lang/Float;\n {\n   public static final java.lang.Long LONG_ZERO;\n     descriptor: Ljava/lang/Long;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final java.lang.Long LONG_ONE;\n     descriptor: Ljava/lang/Long;\n@@ -869,14 +862,16 @@\n         20: aload_2\n         21: invokevirtual #22                 // Method java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         24: areturn\n       LineNumberTable:\n         line 457: 0\n         line 458: 4\n         line 460: 8\n+        line 462: 10\n+        line 460: 21\n       StackMapTable: number_of_entries = 3\n         frame_type = 8 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 11\n           locals = [ class java/math/BigDecimal, int, class java/math/RoundingMode ]\n           stack = [ class java/math/BigDecimal, int ]\n         frame_type = 255 /* full_frame */\n@@ -2961,15 +2956,15 @@\n          0: aload_0\n          1: invokestatic  #101                // Method isCreatable:(Ljava/lang/String;)Z\n          4: ireturn\n       LineNumberTable:\n         line 1573: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #241()\n+      0: #235()\n         java.lang.Deprecated\n \n   public static boolean isCreatable(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=9, args_size=1\n"}]}
