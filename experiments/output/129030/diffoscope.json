{"diffoscope-json-version": 1, "source1": "first/AbstractByteArrayOutputStream.class", "source2": "second/AbstractByteArrayOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,224 +1,224 @@\n-  SHA-256 checksum 6b1aa08f0e106db54263d4454b6d3ab6d16701029d52f534035c8b6e4745214e\n+  SHA-256 checksum 10f2dbc3851fbf29389376ee38e92a9140c4623b760fefc3d25eb770cb47adc6\n   Compiled from \"AbstractByteArrayOutputStream.java\"\n public abstract class org.apache.commons.io.output.AbstractByteArrayOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #13                         // org/apache/commons/io/output/AbstractByteArrayOutputStream\n-  super_class: #4                         // java/io/OutputStream\n+  this_class: #1                          // org/apache/commons/io/output/AbstractByteArrayOutputStream\n+  super_class: #3                         // java/io/OutputStream\n   interfaces: 0, fields: 7, methods: 21, attributes: 2\n Constant pool:\n-    #1 = Class              #2            // org/apache/commons/io/IOUtils\n-    #2 = Utf8               org/apache/commons/io/IOUtils\n-    #3 = Methodref          #4.#5         // java/io/OutputStream.\"<init>\":()V\n-    #4 = Class              #6            // java/io/OutputStream\n-    #5 = NameAndType        #7:#8         // \"<init>\":()V\n-    #6 = Utf8               java/io/OutputStream\n-    #7 = Utf8               <init>\n-    #8 = Utf8               ()V\n-    #9 = Class              #10           // java/util/ArrayList\n-   #10 = Utf8               java/util/ArrayList\n-   #11 = Methodref          #9.#5         // java/util/ArrayList.\"<init>\":()V\n-   #12 = Fieldref           #13.#14       // org/apache/commons/io/output/AbstractByteArrayOutputStream.buffers:Ljava/util/List;\n-   #13 = Class              #15           // org/apache/commons/io/output/AbstractByteArrayOutputStream\n-   #14 = NameAndType        #16:#17       // buffers:Ljava/util/List;\n-   #15 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n-   #16 = Utf8               buffers\n-   #17 = Utf8               Ljava/util/List;\n-   #18 = Fieldref           #13.#19       // org/apache/commons/io/output/AbstractByteArrayOutputStream.reuseBuffers:Z\n-   #19 = NameAndType        #20:#21       // reuseBuffers:Z\n-   #20 = Utf8               reuseBuffers\n-   #21 = Utf8               Z\n-   #22 = Fieldref           #13.#23       // org/apache/commons/io/output/AbstractByteArrayOutputStream.currentBufferIndex:I\n-   #23 = NameAndType        #24:#25       // currentBufferIndex:I\n-   #24 = Utf8               currentBufferIndex\n-   #25 = Utf8               I\n-   #26 = InterfaceMethodref #27.#28       // java/util/List.size:()I\n-   #27 = Class              #29           // java/util/List\n-   #28 = NameAndType        #30:#31       // size:()I\n-   #29 = Utf8               java/util/List\n-   #30 = Utf8               size\n-   #31 = Utf8               ()I\n-   #32 = Fieldref           #13.#33       // org/apache/commons/io/output/AbstractByteArrayOutputStream.filledBufferSum:I\n-   #33 = NameAndType        #34:#25       // filledBufferSum:I\n-   #34 = Utf8               filledBufferSum\n-   #35 = Fieldref           #13.#36       // org/apache/commons/io/output/AbstractByteArrayOutputStream.currentBuffer:[B\n-   #36 = NameAndType        #37:#38       // currentBuffer:[B\n-   #37 = Utf8               currentBuffer\n-   #38 = Utf8               [B\n-   #39 = InterfaceMethodref #27.#40       // java/util/List.get:(I)Ljava/lang/Object;\n-   #40 = NameAndType        #41:#42       // get:(I)Ljava/lang/Object;\n-   #41 = Utf8               get\n-   #42 = Utf8               (I)Ljava/lang/Object;\n-   #43 = Class              #38           // \"[B\"\n-   #44 = Methodref          #45.#46       // java/lang/Math.max:(II)I\n-   #45 = Class              #47           // java/lang/Math\n-   #46 = NameAndType        #48:#49       // max:(II)I\n-   #47 = Utf8               java/lang/Math\n-   #48 = Utf8               max\n-   #49 = Utf8               (II)I\n-   #50 = Methodref          #1.#51        // org/apache/commons/io/IOUtils.byteArray:(I)[B\n-   #51 = NameAndType        #52:#53       // byteArray:(I)[B\n-   #52 = Utf8               byteArray\n-   #53 = Utf8               (I)[B\n-   #54 = InterfaceMethodref #27.#55       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #55 = NameAndType        #56:#57       // add:(Ljava/lang/Object;)Z\n-   #56 = Utf8               add\n-   #57 = Utf8               (Ljava/lang/Object;)Z\n-   #58 = Fieldref           #13.#59       // org/apache/commons/io/output/AbstractByteArrayOutputStream.count:I\n-   #59 = NameAndType        #60:#25       // count:I\n-   #60 = Utf8               count\n-   #61 = Methodref          #45.#62       // java/lang/Math.min:(II)I\n-   #62 = NameAndType        #63:#49       // min:(II)I\n-   #63 = Utf8               min\n-   #64 = Methodref          #65.#66       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #65 = Class              #67           // java/lang/System\n-   #66 = NameAndType        #68:#69       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #67 = Utf8               java/lang/System\n-   #68 = Utf8               arraycopy\n-   #69 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #70 = Methodref          #13.#71       // org/apache/commons/io/output/AbstractByteArrayOutputStream.needNewBuffer:(I)V\n-   #71 = NameAndType        #72:#73       // needNewBuffer:(I)V\n-   #72 = Utf8               needNewBuffer\n-   #73 = Utf8               (I)V\n-   #74 = Methodref          #75.#76       // java/io/InputStream.read:([BII)I\n-   #75 = Class              #77           // java/io/InputStream\n-   #76 = NameAndType        #78:#79       // read:([BII)I\n-   #77 = Utf8               java/io/InputStream\n-   #78 = Utf8               read\n-   #79 = Utf8               ([BII)I\n-   #80 = InterfaceMethodref #27.#81       // java/util/List.clear:()V\n-   #81 = NameAndType        #82:#8        // clear:()V\n-   #82 = Utf8               clear\n-   #83 = InterfaceMethodref #27.#84       // java/util/List.iterator:()Ljava/util/Iterator;\n-   #84 = NameAndType        #85:#86       // iterator:()Ljava/util/Iterator;\n-   #85 = Utf8               iterator\n-   #86 = Utf8               ()Ljava/util/Iterator;\n-   #87 = InterfaceMethodref #88.#89       // java/util/Iterator.hasNext:()Z\n-   #88 = Class              #90           // java/util/Iterator\n-   #89 = NameAndType        #91:#92       // hasNext:()Z\n-   #90 = Utf8               java/util/Iterator\n-   #91 = Utf8               hasNext\n-   #92 = Utf8               ()Z\n-   #93 = InterfaceMethodref #88.#94       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #94 = NameAndType        #95:#96       // next:()Ljava/lang/Object;\n-   #95 = Utf8               next\n-   #96 = Utf8               ()Ljava/lang/Object;\n-   #97 = Methodref          #4.#98        // java/io/OutputStream.write:([BII)V\n-   #98 = NameAndType        #99:#100      // write:([BII)V\n-   #99 = Utf8               write\n-  #100 = Utf8               ([BII)V\n-  #101 = Fieldref           #102.#103     // org/apache/commons/io/input/ClosedInputStream.CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n-  #102 = Class              #104          // org/apache/commons/io/input/ClosedInputStream\n-  #103 = NameAndType        #105:#106     // CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n-  #104 = Utf8               org/apache/commons/io/input/ClosedInputStream\n-  #105 = Utf8               CLOSED_INPUT_STREAM\n-  #106 = Utf8               Lorg/apache/commons/io/input/ClosedInputStream;\n-  #107 = Methodref          #9.#108       // java/util/ArrayList.\"<init>\":(I)V\n-  #108 = NameAndType        #7:#73        // \"<init>\":(I)V\n-  #109 = InterfaceMethodref #110.#111     // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor.construct:([BII)Ljava/io/InputStream;\n-  #110 = Class              #112          // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n-  #111 = NameAndType        #113:#114     // construct:([BII)Ljava/io/InputStream;\n-  #112 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n-  #113 = Utf8               construct\n-  #114 = Utf8               ([BII)Ljava/io/InputStream;\n-  #115 = Class              #116          // java/io/SequenceInputStream\n-  #116 = Utf8               java/io/SequenceInputStream\n-  #117 = Methodref          #118.#119     // java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n-  #118 = Class              #120          // java/util/Collections\n-  #119 = NameAndType        #121:#122     // enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n-  #120 = Utf8               java/util/Collections\n-  #121 = Utf8               enumeration\n-  #122 = Utf8               (Ljava/util/Collection;)Ljava/util/Enumeration;\n-  #123 = Methodref          #115.#124     // java/io/SequenceInputStream.\"<init>\":(Ljava/util/Enumeration;)V\n-  #124 = NameAndType        #7:#125       // \"<init>\":(Ljava/util/Enumeration;)V\n-  #125 = Utf8               (Ljava/util/Enumeration;)V\n-  #126 = Fieldref           #1.#127       // org/apache/commons/io/IOUtils.EMPTY_BYTE_ARRAY:[B\n-  #127 = NameAndType        #128:#38      // EMPTY_BYTE_ARRAY:[B\n-  #128 = Utf8               EMPTY_BYTE_ARRAY\n-  #129 = Class              #130          // java/lang/String\n-  #130 = Utf8               java/lang/String\n-  #131 = Methodref          #13.#132      // org/apache/commons/io/output/AbstractByteArrayOutputStream.toByteArray:()[B\n-  #132 = NameAndType        #133:#134     // toByteArray:()[B\n-  #133 = Utf8               toByteArray\n-  #134 = Utf8               ()[B\n-  #135 = Methodref          #136.#137     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-  #136 = Class              #138          // java/nio/charset/Charset\n-  #137 = NameAndType        #139:#140     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #138 = Utf8               java/nio/charset/Charset\n-  #139 = Utf8               defaultCharset\n-  #140 = Utf8               ()Ljava/nio/charset/Charset;\n-  #141 = Methodref          #129.#142     // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n-  #142 = NameAndType        #7:#143       // \"<init>\":([BLjava/nio/charset/Charset;)V\n-  #143 = Utf8               ([BLjava/nio/charset/Charset;)V\n-  #144 = Methodref          #129.#145     // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-  #145 = NameAndType        #7:#146       // \"<init>\":([BLjava/lang/String;)V\n-  #146 = Utf8               ([BLjava/lang/String;)V\n-  #147 = Utf8               DEFAULT_SIZE\n-  #148 = Utf8               ConstantValue\n-  #149 = Integer            1024\n-  #150 = Utf8               Signature\n-  #151 = Utf8               Ljava/util/List<[B>;\n-  #152 = Utf8               Code\n-  #153 = Utf8               LineNumberTable\n-  #154 = Utf8               LocalVariableTable\n-  #155 = Utf8               this\n-  #156 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n-  #157 = Utf8               newBufferSize\n-  #158 = Utf8               newcount\n-  #159 = Utf8               StackMapTable\n-  #160 = Utf8               writeImpl\n-  #161 = Utf8               part\n-  #162 = Utf8               b\n-  #163 = Utf8               off\n-  #164 = Utf8               len\n-  #165 = Utf8               remaining\n-  #166 = Utf8               inBufferPos\n-  #167 = Utf8               (Ljava/io/InputStream;)I\n-  #168 = Utf8               Exceptions\n-  #169 = Class              #170          // java/io/IOException\n-  #170 = Utf8               java/io/IOException\n-  #171 = Utf8               in\n-  #172 = Utf8               Ljava/io/InputStream;\n-  #173 = Utf8               readCount\n-  #174 = Utf8               n\n-  #175 = Utf8               close\n-  #176 = Utf8               reset\n-  #177 = Utf8               resetImpl\n-  #178 = Utf8               writeTo\n-  #179 = Utf8               (Ljava/io/OutputStream;)V\n-  #180 = Utf8               writeToImpl\n-  #181 = Utf8               c\n-  #182 = Utf8               buf\n-  #183 = Utf8               out\n-  #184 = Utf8               Ljava/io/OutputStream;\n-  #185 = Utf8               toInputStream\n-  #186 = Utf8               ()Ljava/io/InputStream;\n-  #187 = Utf8               (Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n-  #188 = Utf8               isConstructor\n-  #189 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n-  #190 = Utf8               list\n-  #191 = Utf8               LocalVariableTypeTable\n-  #192 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;\n-  #193 = Utf8               Ljava/util/List<TT;>;\n-  #194 = Utf8               <T:Ljava/io/InputStream;>(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;)Ljava/io/InputStream;\n-  #195 = Utf8               toByteArrayImpl\n-  #196 = Utf8               newbuf\n-  #197 = Utf8               pos\n-  #198 = Utf8               toString\n-  #199 = Utf8               ()Ljava/lang/String;\n-  #200 = Utf8               Deprecated\n-  #201 = Utf8               RuntimeVisibleAnnotations\n-  #202 = Utf8               Ljava/lang/Deprecated;\n-  #203 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #204 = Utf8               enc\n-  #205 = Utf8               Ljava/lang/String;\n-  #206 = Class              #207          // java/io/UnsupportedEncodingException\n-  #207 = Utf8               java/io/UnsupportedEncodingException\n+    #1 = Class              #2            // org/apache/commons/io/output/AbstractByteArrayOutputStream\n+    #2 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n+    #3 = Class              #4            // java/io/OutputStream\n+    #4 = Utf8               java/io/OutputStream\n+    #5 = Utf8               DEFAULT_SIZE\n+    #6 = Utf8               I\n+    #7 = Utf8               ConstantValue\n+    #8 = Integer            1024\n+    #9 = Utf8               buffers\n+   #10 = Utf8               Ljava/util/List;\n+   #11 = Utf8               Signature\n+   #12 = Utf8               Ljava/util/List<[B>;\n+   #13 = Utf8               currentBufferIndex\n+   #14 = Utf8               filledBufferSum\n+   #15 = Utf8               currentBuffer\n+   #16 = Utf8               [B\n+   #17 = Utf8               count\n+   #18 = Utf8               reuseBuffers\n+   #19 = Utf8               Z\n+   #20 = Utf8               <init>\n+   #21 = Utf8               ()V\n+   #22 = Utf8               Code\n+   #23 = Methodref          #3.#24        // java/io/OutputStream.\"<init>\":()V\n+   #24 = NameAndType        #20:#21       // \"<init>\":()V\n+   #25 = Class              #26           // java/util/ArrayList\n+   #26 = Utf8               java/util/ArrayList\n+   #27 = Methodref          #25.#24       // java/util/ArrayList.\"<init>\":()V\n+   #28 = Fieldref           #1.#29        // org/apache/commons/io/output/AbstractByteArrayOutputStream.buffers:Ljava/util/List;\n+   #29 = NameAndType        #9:#10        // buffers:Ljava/util/List;\n+   #30 = Fieldref           #1.#31        // org/apache/commons/io/output/AbstractByteArrayOutputStream.reuseBuffers:Z\n+   #31 = NameAndType        #18:#19       // reuseBuffers:Z\n+   #32 = Utf8               LineNumberTable\n+   #33 = Utf8               LocalVariableTable\n+   #34 = Utf8               this\n+   #35 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n+   #36 = Utf8               needNewBuffer\n+   #37 = Utf8               (I)V\n+   #38 = Fieldref           #1.#39        // org/apache/commons/io/output/AbstractByteArrayOutputStream.currentBufferIndex:I\n+   #39 = NameAndType        #13:#6        // currentBufferIndex:I\n+   #40 = InterfaceMethodref #41.#43       // java/util/List.size:()I\n+   #41 = Class              #42           // java/util/List\n+   #42 = Utf8               java/util/List\n+   #43 = NameAndType        #44:#45       // size:()I\n+   #44 = Utf8               size\n+   #45 = Utf8               ()I\n+   #46 = Fieldref           #1.#47        // org/apache/commons/io/output/AbstractByteArrayOutputStream.filledBufferSum:I\n+   #47 = NameAndType        #14:#6        // filledBufferSum:I\n+   #48 = Fieldref           #1.#49        // org/apache/commons/io/output/AbstractByteArrayOutputStream.currentBuffer:[B\n+   #49 = NameAndType        #15:#16       // currentBuffer:[B\n+   #50 = InterfaceMethodref #41.#51       // java/util/List.get:(I)Ljava/lang/Object;\n+   #51 = NameAndType        #52:#53       // get:(I)Ljava/lang/Object;\n+   #52 = Utf8               get\n+   #53 = Utf8               (I)Ljava/lang/Object;\n+   #54 = Class              #16           // \"[B\"\n+   #55 = Methodref          #56.#58       // java/lang/Math.max:(II)I\n+   #56 = Class              #57           // java/lang/Math\n+   #57 = Utf8               java/lang/Math\n+   #58 = NameAndType        #59:#60       // max:(II)I\n+   #59 = Utf8               max\n+   #60 = Utf8               (II)I\n+   #61 = Methodref          #62.#64       // org/apache/commons/io/IOUtils.byteArray:(I)[B\n+   #62 = Class              #63           // org/apache/commons/io/IOUtils\n+   #63 = Utf8               org/apache/commons/io/IOUtils\n+   #64 = NameAndType        #65:#66       // byteArray:(I)[B\n+   #65 = Utf8               byteArray\n+   #66 = Utf8               (I)[B\n+   #67 = InterfaceMethodref #41.#68       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #68 = NameAndType        #69:#70       // add:(Ljava/lang/Object;)Z\n+   #69 = Utf8               add\n+   #70 = Utf8               (Ljava/lang/Object;)Z\n+   #71 = Utf8               newcount\n+   #72 = Utf8               newBufferSize\n+   #73 = Utf8               StackMapTable\n+   #74 = Utf8               write\n+   #75 = Utf8               ([BII)V\n+   #76 = Utf8               writeImpl\n+   #77 = Fieldref           #1.#78        // org/apache/commons/io/output/AbstractByteArrayOutputStream.count:I\n+   #78 = NameAndType        #17:#6        // count:I\n+   #79 = Methodref          #56.#80       // java/lang/Math.min:(II)I\n+   #80 = NameAndType        #81:#60       // min:(II)I\n+   #81 = Utf8               min\n+   #82 = Methodref          #83.#85       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #83 = Class              #84           // java/lang/System\n+   #84 = Utf8               java/lang/System\n+   #85 = NameAndType        #86:#87       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #86 = Utf8               arraycopy\n+   #87 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #88 = Methodref          #1.#89        // org/apache/commons/io/output/AbstractByteArrayOutputStream.needNewBuffer:(I)V\n+   #89 = NameAndType        #36:#37       // needNewBuffer:(I)V\n+   #90 = Utf8               b\n+   #91 = Utf8               off\n+   #92 = Utf8               len\n+   #93 = Utf8               remaining\n+   #94 = Utf8               inBufferPos\n+   #95 = Utf8               part\n+   #96 = Utf8               (Ljava/io/InputStream;)I\n+   #97 = Utf8               Exceptions\n+   #98 = Class              #99           // java/io/IOException\n+   #99 = Utf8               java/io/IOException\n+  #100 = Methodref          #101.#103     // java/io/InputStream.read:([BII)I\n+  #101 = Class              #102          // java/io/InputStream\n+  #102 = Utf8               java/io/InputStream\n+  #103 = NameAndType        #104:#105     // read:([BII)I\n+  #104 = Utf8               read\n+  #105 = Utf8               ([BII)I\n+  #106 = Utf8               in\n+  #107 = Utf8               Ljava/io/InputStream;\n+  #108 = Utf8               readCount\n+  #109 = Utf8               n\n+  #110 = Utf8               close\n+  #111 = Utf8               reset\n+  #112 = Utf8               resetImpl\n+  #113 = InterfaceMethodref #41.#114      // java/util/List.clear:()V\n+  #114 = NameAndType        #115:#21      // clear:()V\n+  #115 = Utf8               clear\n+  #116 = Utf8               writeTo\n+  #117 = Utf8               (Ljava/io/OutputStream;)V\n+  #118 = Utf8               writeToImpl\n+  #119 = InterfaceMethodref #41.#120      // java/util/List.iterator:()Ljava/util/Iterator;\n+  #120 = NameAndType        #121:#122     // iterator:()Ljava/util/Iterator;\n+  #121 = Utf8               iterator\n+  #122 = Utf8               ()Ljava/util/Iterator;\n+  #123 = InterfaceMethodref #124.#126     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #124 = Class              #125          // java/util/Iterator\n+  #125 = Utf8               java/util/Iterator\n+  #126 = NameAndType        #127:#128     // next:()Ljava/lang/Object;\n+  #127 = Utf8               next\n+  #128 = Utf8               ()Ljava/lang/Object;\n+  #129 = Methodref          #3.#130       // java/io/OutputStream.write:([BII)V\n+  #130 = NameAndType        #74:#75       // write:([BII)V\n+  #131 = InterfaceMethodref #124.#132     // java/util/Iterator.hasNext:()Z\n+  #132 = NameAndType        #133:#134     // hasNext:()Z\n+  #133 = Utf8               hasNext\n+  #134 = Utf8               ()Z\n+  #135 = Utf8               out\n+  #136 = Utf8               Ljava/io/OutputStream;\n+  #137 = Utf8               buf\n+  #138 = Utf8               c\n+  #139 = Utf8               toInputStream\n+  #140 = Utf8               ()Ljava/io/InputStream;\n+  #141 = Utf8               (Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n+  #142 = Utf8               <T:Ljava/io/InputStream;>(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;)Ljava/io/InputStream;\n+  #143 = Fieldref           #144.#146     // org/apache/commons/io/input/ClosedInputStream.CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n+  #144 = Class              #145          // org/apache/commons/io/input/ClosedInputStream\n+  #145 = Utf8               org/apache/commons/io/input/ClosedInputStream\n+  #146 = NameAndType        #147:#148     // CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n+  #147 = Utf8               CLOSED_INPUT_STREAM\n+  #148 = Utf8               Lorg/apache/commons/io/input/ClosedInputStream;\n+  #149 = Methodref          #25.#150      // java/util/ArrayList.\"<init>\":(I)V\n+  #150 = NameAndType        #20:#37       // \"<init>\":(I)V\n+  #151 = InterfaceMethodref #152.#154     // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor.construct:([BII)Ljava/io/InputStream;\n+  #152 = Class              #153          // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n+  #153 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n+  #154 = NameAndType        #155:#156     // construct:([BII)Ljava/io/InputStream;\n+  #155 = Utf8               construct\n+  #156 = Utf8               ([BII)Ljava/io/InputStream;\n+  #157 = Class              #158          // java/io/SequenceInputStream\n+  #158 = Utf8               java/io/SequenceInputStream\n+  #159 = Methodref          #160.#162     // java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n+  #160 = Class              #161          // java/util/Collections\n+  #161 = Utf8               java/util/Collections\n+  #162 = NameAndType        #163:#164     // enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n+  #163 = Utf8               enumeration\n+  #164 = Utf8               (Ljava/util/Collection;)Ljava/util/Enumeration;\n+  #165 = Methodref          #157.#166     // java/io/SequenceInputStream.\"<init>\":(Ljava/util/Enumeration;)V\n+  #166 = NameAndType        #20:#167      // \"<init>\":(Ljava/util/Enumeration;)V\n+  #167 = Utf8               (Ljava/util/Enumeration;)V\n+  #168 = Utf8               isConstructor\n+  #169 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n+  #170 = Utf8               list\n+  #171 = Utf8               LocalVariableTypeTable\n+  #172 = Utf8               Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;\n+  #173 = Utf8               Ljava/util/List<TT;>;\n+  #174 = Utf8               toByteArray\n+  #175 = Utf8               ()[B\n+  #176 = Utf8               toByteArrayImpl\n+  #177 = Fieldref           #62.#178      // org/apache/commons/io/IOUtils.EMPTY_BYTE_ARRAY:[B\n+  #178 = NameAndType        #179:#16      // EMPTY_BYTE_ARRAY:[B\n+  #179 = Utf8               EMPTY_BYTE_ARRAY\n+  #180 = Utf8               newbuf\n+  #181 = Utf8               pos\n+  #182 = Utf8               toString\n+  #183 = Utf8               ()Ljava/lang/String;\n+  #184 = Utf8               Deprecated\n+  #185 = Utf8               RuntimeVisibleAnnotations\n+  #186 = Utf8               Ljava/lang/Deprecated;\n+  #187 = Class              #188          // java/lang/String\n+  #188 = Utf8               java/lang/String\n+  #189 = Methodref          #1.#190       // org/apache/commons/io/output/AbstractByteArrayOutputStream.toByteArray:()[B\n+  #190 = NameAndType        #174:#175     // toByteArray:()[B\n+  #191 = Methodref          #192.#194     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+  #192 = Class              #193          // java/nio/charset/Charset\n+  #193 = Utf8               java/nio/charset/Charset\n+  #194 = NameAndType        #195:#196     // defaultCharset:()Ljava/nio/charset/Charset;\n+  #195 = Utf8               defaultCharset\n+  #196 = Utf8               ()Ljava/nio/charset/Charset;\n+  #197 = Methodref          #187.#198     // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+  #198 = NameAndType        #20:#199      // \"<init>\":([BLjava/nio/charset/Charset;)V\n+  #199 = Utf8               ([BLjava/nio/charset/Charset;)V\n+  #200 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #201 = Class              #202          // java/io/UnsupportedEncodingException\n+  #202 = Utf8               java/io/UnsupportedEncodingException\n+  #203 = Methodref          #187.#204     // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+  #204 = NameAndType        #20:#205      // \"<init>\":([BLjava/lang/String;)V\n+  #205 = Utf8               ([BLjava/lang/String;)V\n+  #206 = Utf8               enc\n+  #207 = Utf8               Ljava/lang/String;\n   #208 = Utf8               (Ljava/nio/charset/Charset;)Ljava/lang/String;\n   #209 = Utf8               charset\n   #210 = Utf8               Ljava/nio/charset/Charset;\n   #211 = Utf8               SourceFile\n   #212 = Utf8               AbstractByteArrayOutputStream.java\n   #213 = Utf8               InnerClasses\n   #214 = Utf8               InputStreamConstructor\n@@ -227,15 +227,15 @@\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 1024\n \n   private final java.util.List<byte[]> buffers;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #151                         // Ljava/util/List<[B>;\n+    Signature: #12                          // Ljava/util/List<[B>;\n \n   private int currentBufferIndex;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private int filledBufferSum;\n     descriptor: I\n@@ -255,133 +255,138 @@\n \n   public org.apache.commons.io.output.AbstractByteArrayOutputStream();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #3                  // Method java/io/OutputStream.\"<init>\":()V\n+         1: invokespecial #23                 // Method java/io/OutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #9                  // class java/util/ArrayList\n+         5: new           #25                 // class java/util/ArrayList\n          8: dup\n-         9: invokespecial #11                 // Method java/util/ArrayList.\"<init>\":()V\n-        12: putfield      #12                 // Field buffers:Ljava/util/List;\n+         9: invokespecial #27                 // Method java/util/ArrayList.\"<init>\":()V\n+        12: putfield      #28                 // Field buffers:Ljava/util/List;\n         15: aload_0\n         16: iconst_1\n-        17: putfield      #18                 // Field reuseBuffers:Z\n+        17: putfield      #30                 // Field reuseBuffers:Z\n         20: return\n       LineNumberTable:\n         line 60: 0\n         line 65: 4\n         line 75: 15\n+        line 60: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n \n   protected void needNewBuffer(int);\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #22                 // Field currentBufferIndex:I\n+         1: getfield      #38                 // Field currentBufferIndex:I\n          4: aload_0\n-         5: getfield      #12                 // Field buffers:Ljava/util/List;\n-         8: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I\n+         5: getfield      #28                 // Field buffers:Ljava/util/List;\n+         8: invokeinterface #40,  1           // InterfaceMethod java/util/List.size:()I\n         13: iconst_1\n         14: isub\n         15: if_icmpge     65\n         18: aload_0\n         19: dup\n-        20: getfield      #32                 // Field filledBufferSum:I\n+        20: getfield      #46                 // Field filledBufferSum:I\n         23: aload_0\n-        24: getfield      #35                 // Field currentBuffer:[B\n+        24: getfield      #48                 // Field currentBuffer:[B\n         27: arraylength\n         28: iadd\n-        29: putfield      #32                 // Field filledBufferSum:I\n+        29: putfield      #46                 // Field filledBufferSum:I\n         32: aload_0\n         33: dup\n-        34: getfield      #22                 // Field currentBufferIndex:I\n+        34: getfield      #38                 // Field currentBufferIndex:I\n         37: iconst_1\n         38: iadd\n-        39: putfield      #22                 // Field currentBufferIndex:I\n+        39: putfield      #38                 // Field currentBufferIndex:I\n         42: aload_0\n         43: aload_0\n-        44: getfield      #12                 // Field buffers:Ljava/util/List;\n+        44: getfield      #28                 // Field buffers:Ljava/util/List;\n         47: aload_0\n-        48: getfield      #22                 // Field currentBufferIndex:I\n-        51: invokeinterface #39,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        56: checkcast     #43                 // class \"[B\"\n-        59: putfield      #35                 // Field currentBuffer:[B\n+        48: getfield      #38                 // Field currentBufferIndex:I\n+        51: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        56: checkcast     #54                 // class \"[B\"\n+        59: putfield      #48                 // Field currentBuffer:[B\n         62: goto          145\n         65: aload_0\n-        66: getfield      #35                 // Field currentBuffer:[B\n+        66: getfield      #48                 // Field currentBuffer:[B\n         69: ifnonnull     82\n         72: iload_1\n         73: istore_2\n         74: aload_0\n         75: iconst_0\n-        76: putfield      #32                 // Field filledBufferSum:I\n+        76: putfield      #46                 // Field filledBufferSum:I\n         79: goto          113\n         82: aload_0\n-        83: getfield      #35                 // Field currentBuffer:[B\n+        83: getfield      #48                 // Field currentBuffer:[B\n         86: arraylength\n         87: iconst_1\n         88: ishl\n         89: iload_1\n         90: aload_0\n-        91: getfield      #32                 // Field filledBufferSum:I\n+        91: getfield      #46                 // Field filledBufferSum:I\n         94: isub\n-        95: invokestatic  #44                 // Method java/lang/Math.max:(II)I\n+        95: invokestatic  #55                 // Method java/lang/Math.max:(II)I\n         98: istore_2\n         99: aload_0\n        100: dup\n-       101: getfield      #32                 // Field filledBufferSum:I\n+       101: getfield      #46                 // Field filledBufferSum:I\n        104: aload_0\n-       105: getfield      #35                 // Field currentBuffer:[B\n+       105: getfield      #48                 // Field currentBuffer:[B\n        108: arraylength\n        109: iadd\n-       110: putfield      #32                 // Field filledBufferSum:I\n+       110: putfield      #46                 // Field filledBufferSum:I\n        113: aload_0\n        114: dup\n-       115: getfield      #22                 // Field currentBufferIndex:I\n+       115: getfield      #38                 // Field currentBufferIndex:I\n        118: iconst_1\n        119: iadd\n-       120: putfield      #22                 // Field currentBufferIndex:I\n+       120: putfield      #38                 // Field currentBufferIndex:I\n        123: aload_0\n        124: iload_2\n-       125: invokestatic  #50                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n-       128: putfield      #35                 // Field currentBuffer:[B\n+       125: invokestatic  #61                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n+       128: putfield      #48                 // Field currentBuffer:[B\n        131: aload_0\n-       132: getfield      #12                 // Field buffers:Ljava/util/List;\n+       132: getfield      #28                 // Field buffers:Ljava/util/List;\n        135: aload_0\n-       136: getfield      #35                 // Field currentBuffer:[B\n-       139: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       136: getfield      #48                 // Field currentBuffer:[B\n+       139: invokeinterface #67,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        144: pop\n        145: return\n       LineNumberTable:\n         line 84: 0\n         line 86: 18\n         line 88: 32\n         line 89: 42\n+        line 90: 62\n         line 93: 65\n         line 94: 72\n         line 95: 74\n-        line 97: 82\n+        line 96: 79\n+        line 98: 82\n+        line 99: 89\n+        line 97: 95\n         line 100: 99\n         line 103: 113\n         line 104: 123\n         line 105: 131\n         line 107: 145\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           74       8     2 newBufferSize   I\n-           99      46     2 newBufferSize   I\n             0     146     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n             0     146     1 newcount   I\n+           74       8     2 newBufferSize   I\n+           99      46     2 newBufferSize   I\n       StackMapTable: number_of_entries = 4\n         frame_type = 251 /* same_frame_extended */\n           offset_delta = 65\n         frame_type = 16 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 30\n           locals = [ int ]\n@@ -394,134 +399,133 @@\n \n   protected void writeImpl(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=8, args_size=4\n          0: aload_0\n-         1: getfield      #58                 // Field count:I\n+         1: getfield      #77                 // Field count:I\n          4: iload_3\n          5: iadd\n          6: istore        4\n          8: iload_3\n          9: istore        5\n         11: aload_0\n-        12: getfield      #58                 // Field count:I\n+        12: getfield      #77                 // Field count:I\n         15: aload_0\n-        16: getfield      #32                 // Field filledBufferSum:I\n+        16: getfield      #46                 // Field filledBufferSum:I\n         19: isub\n         20: istore        6\n-        22: iload         5\n-        24: ifle          84\n-        27: iload         5\n-        29: aload_0\n-        30: getfield      #35                 // Field currentBuffer:[B\n-        33: arraylength\n-        34: iload         6\n-        36: isub\n-        37: invokestatic  #61                 // Method java/lang/Math.min:(II)I\n-        40: istore        7\n-        42: aload_1\n-        43: iload_2\n-        44: iload_3\n-        45: iadd\n-        46: iload         5\n-        48: isub\n-        49: aload_0\n-        50: getfield      #35                 // Field currentBuffer:[B\n-        53: iload         6\n-        55: iload         7\n-        57: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-        60: iload         5\n-        62: iload         7\n-        64: isub\n-        65: istore        5\n-        67: iload         5\n-        69: ifle          81\n-        72: aload_0\n-        73: iload         4\n-        75: invokevirtual #70                 // Method needNewBuffer:(I)V\n-        78: iconst_0\n-        79: istore        6\n-        81: goto          22\n+        22: goto          79\n+        25: iload         5\n+        27: aload_0\n+        28: getfield      #48                 // Field currentBuffer:[B\n+        31: arraylength\n+        32: iload         6\n+        34: isub\n+        35: invokestatic  #79                 // Method java/lang/Math.min:(II)I\n+        38: istore        7\n+        40: aload_1\n+        41: iload_2\n+        42: iload_3\n+        43: iadd\n+        44: iload         5\n+        46: isub\n+        47: aload_0\n+        48: getfield      #48                 // Field currentBuffer:[B\n+        51: iload         6\n+        53: iload         7\n+        55: invokestatic  #82                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        58: iload         5\n+        60: iload         7\n+        62: isub\n+        63: istore        5\n+        65: iload         5\n+        67: ifle          79\n+        70: aload_0\n+        71: iload         4\n+        73: invokevirtual #88                 // Method needNewBuffer:(I)V\n+        76: iconst_0\n+        77: istore        6\n+        79: iload         5\n+        81: ifgt          25\n         84: aload_0\n         85: iload         4\n-        87: putfield      #58                 // Field count:I\n+        87: putfield      #77                 // Field count:I\n         90: return\n       LineNumberTable:\n         line 125: 0\n         line 126: 8\n         line 127: 11\n         line 128: 22\n-        line 129: 27\n-        line 130: 42\n-        line 131: 60\n-        line 132: 67\n-        line 133: 72\n-        line 134: 78\n-        line 136: 81\n+        line 129: 25\n+        line 130: 40\n+        line 131: 58\n+        line 132: 65\n+        line 133: 70\n+        line 134: 76\n+        line 128: 79\n         line 137: 84\n         line 138: 90\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           42      39     7  part   I\n             0      91     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n             0      91     1     b   [B\n             0      91     2   off   I\n             0      91     3   len   I\n             8      83     4 newcount   I\n            11      80     5 remaining   I\n            22      69     6 inBufferPos   I\n-      StackMapTable: number_of_entries = 3\n+           40      39     7  part   I\n+      StackMapTable: number_of_entries = 2\n         frame_type = 254 /* append */\n-          offset_delta = 22\n+          offset_delta = 25\n           locals = [ int, int, int ]\n-        frame_type = 58 /* same */\n-        frame_type = 2 /* same */\n+        frame_type = 53 /* same */\n \n   public abstract void write(int);\n     descriptor: (I)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   protected void writeImpl(int);\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #58                 // Field count:I\n+         1: getfield      #77                 // Field count:I\n          4: aload_0\n-         5: getfield      #32                 // Field filledBufferSum:I\n+         5: getfield      #46                 // Field filledBufferSum:I\n          8: isub\n          9: istore_2\n         10: iload_2\n         11: aload_0\n-        12: getfield      #35                 // Field currentBuffer:[B\n+        12: getfield      #48                 // Field currentBuffer:[B\n         15: arraylength\n         16: if_icmpne     31\n         19: aload_0\n         20: aload_0\n-        21: getfield      #58                 // Field count:I\n+        21: getfield      #77                 // Field count:I\n         24: iconst_1\n         25: iadd\n-        26: invokevirtual #70                 // Method needNewBuffer:(I)V\n+        26: invokevirtual #88                 // Method needNewBuffer:(I)V\n         29: iconst_0\n         30: istore_2\n         31: aload_0\n-        32: getfield      #35                 // Field currentBuffer:[B\n+        32: getfield      #48                 // Field currentBuffer:[B\n         35: iload_2\n         36: iload_1\n         37: i2b\n         38: bastore\n         39: aload_0\n         40: dup\n-        41: getfield      #58                 // Field count:I\n+        41: getfield      #77                 // Field count:I\n         44: iconst_1\n         45: iadd\n-        46: putfield      #58                 // Field count:I\n+        46: putfield      #77                 // Field count:I\n         49: return\n       LineNumberTable:\n         line 152: 0\n         line 153: 10\n         line 154: 19\n         line 155: 29\n         line 157: 31\n@@ -542,517 +546,528 @@\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n   protected int writeImpl(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)I\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=5, args_size=2\n          0: iconst_0\n          1: istore_2\n          2: aload_0\n-         3: getfield      #58                 // Field count:I\n+         3: getfield      #77                 // Field count:I\n          6: aload_0\n-         7: getfield      #32                 // Field filledBufferSum:I\n+         7: getfield      #46                 // Field filledBufferSum:I\n         10: isub\n         11: istore_3\n         12: aload_1\n         13: aload_0\n-        14: getfield      #35                 // Field currentBuffer:[B\n+        14: getfield      #48                 // Field currentBuffer:[B\n         17: iload_3\n         18: aload_0\n-        19: getfield      #35                 // Field currentBuffer:[B\n+        19: getfield      #48                 // Field currentBuffer:[B\n         22: arraylength\n         23: iload_3\n         24: isub\n-        25: invokevirtual #74                 // Method java/io/InputStream.read:([BII)I\n+        25: invokevirtual #100                // Method java/io/InputStream.read:([BII)I\n         28: istore        4\n-        30: iload         4\n-        32: iconst_m1\n-        33: if_icmpeq     98\n-        36: iload_2\n-        37: iload         4\n-        39: iadd\n-        40: istore_2\n-        41: iload_3\n-        42: iload         4\n-        44: iadd\n-        45: istore_3\n-        46: aload_0\n-        47: dup\n-        48: getfield      #58                 // Field count:I\n-        51: iload         4\n-        53: iadd\n-        54: putfield      #58                 // Field count:I\n-        57: iload_3\n-        58: aload_0\n-        59: getfield      #35                 // Field currentBuffer:[B\n-        62: arraylength\n-        63: if_icmpne     77\n-        66: aload_0\n-        67: aload_0\n-        68: getfield      #35                 // Field currentBuffer:[B\n-        71: arraylength\n-        72: invokevirtual #70                 // Method needNewBuffer:(I)V\n-        75: iconst_0\n-        76: istore_3\n-        77: aload_1\n-        78: aload_0\n-        79: getfield      #35                 // Field currentBuffer:[B\n-        82: iload_3\n-        83: aload_0\n-        84: getfield      #35                 // Field currentBuffer:[B\n-        87: arraylength\n-        88: iload_3\n-        89: isub\n-        90: invokevirtual #74                 // Method java/io/InputStream.read:([BII)I\n-        93: istore        4\n-        95: goto          30\n+        30: goto          92\n+        33: iload_2\n+        34: iload         4\n+        36: iadd\n+        37: istore_2\n+        38: iload_3\n+        39: iload         4\n+        41: iadd\n+        42: istore_3\n+        43: aload_0\n+        44: dup\n+        45: getfield      #77                 // Field count:I\n+        48: iload         4\n+        50: iadd\n+        51: putfield      #77                 // Field count:I\n+        54: iload_3\n+        55: aload_0\n+        56: getfield      #48                 // Field currentBuffer:[B\n+        59: arraylength\n+        60: if_icmpne     74\n+        63: aload_0\n+        64: aload_0\n+        65: getfield      #48                 // Field currentBuffer:[B\n+        68: arraylength\n+        69: invokevirtual #88                 // Method needNewBuffer:(I)V\n+        72: iconst_0\n+        73: istore_3\n+        74: aload_1\n+        75: aload_0\n+        76: getfield      #48                 // Field currentBuffer:[B\n+        79: iload_3\n+        80: aload_0\n+        81: getfield      #48                 // Field currentBuffer:[B\n+        84: arraylength\n+        85: iload_3\n+        86: isub\n+        87: invokevirtual #100                // Method java/io/InputStream.read:([BII)I\n+        90: istore        4\n+        92: iload         4\n+        94: iconst_m1\n+        95: if_icmpne     33\n         98: iload_2\n         99: ireturn\n       LineNumberTable:\n         line 187: 0\n         line 188: 2\n         line 189: 12\n         line 190: 30\n-        line 191: 36\n-        line 192: 41\n-        line 193: 46\n-        line 194: 57\n-        line 195: 66\n-        line 196: 75\n-        line 198: 77\n+        line 191: 33\n+        line 192: 38\n+        line 193: 43\n+        line 194: 54\n+        line 195: 63\n+        line 196: 72\n+        line 198: 74\n+        line 190: 92\n         line 200: 98\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0     100     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n             0     100     1    in   Ljava/io/InputStream;\n             2      98     2 readCount   I\n            12      88     3 inBufferPos   I\n            30      70     4     n   I\n       StackMapTable: number_of_entries = 3\n         frame_type = 254 /* append */\n-          offset_delta = 30\n+          offset_delta = 33\n           locals = [ int, int, int ]\n-        frame_type = 46 /* same */\n-        frame_type = 20 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 40 /* same */\n+        frame_type = 17 /* same */\n \n   public abstract int size();\n     descriptor: ()I\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=1, args_size=1\n          0: return\n       LineNumberTable:\n         line 221: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public abstract void reset();\n     descriptor: ()V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   protected void resetImpl();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: putfield      #58                 // Field count:I\n+         2: putfield      #77                 // Field count:I\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #32                 // Field filledBufferSum:I\n+         7: putfield      #46                 // Field filledBufferSum:I\n         10: aload_0\n         11: iconst_0\n-        12: putfield      #22                 // Field currentBufferIndex:I\n+        12: putfield      #38                 // Field currentBufferIndex:I\n         15: aload_0\n-        16: getfield      #18                 // Field reuseBuffers:Z\n+        16: getfield      #30                 // Field reuseBuffers:Z\n         19: ifeq          45\n         22: aload_0\n         23: aload_0\n-        24: getfield      #12                 // Field buffers:Ljava/util/List;\n+        24: getfield      #28                 // Field buffers:Ljava/util/List;\n         27: aload_0\n-        28: getfield      #22                 // Field currentBufferIndex:I\n-        31: invokeinterface #39,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        36: checkcast     #43                 // class \"[B\"\n-        39: putfield      #35                 // Field currentBuffer:[B\n+        28: getfield      #38                 // Field currentBufferIndex:I\n+        31: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        36: checkcast     #54                 // class \"[B\"\n+        39: putfield      #48                 // Field currentBuffer:[B\n         42: goto          84\n         45: aload_0\n         46: aconst_null\n-        47: putfield      #35                 // Field currentBuffer:[B\n+        47: putfield      #48                 // Field currentBuffer:[B\n         50: aload_0\n-        51: getfield      #12                 // Field buffers:Ljava/util/List;\n+        51: getfield      #28                 // Field buffers:Ljava/util/List;\n         54: iconst_0\n-        55: invokeinterface #39,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        60: checkcast     #43                 // class \"[B\"\n+        55: invokeinterface #50,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        60: checkcast     #54                 // class \"[B\"\n         63: arraylength\n         64: istore_1\n         65: aload_0\n-        66: getfield      #12                 // Field buffers:Ljava/util/List;\n-        69: invokeinterface #80,  1           // InterfaceMethod java/util/List.clear:()V\n+        66: getfield      #28                 // Field buffers:Ljava/util/List;\n+        69: invokeinterface #113,  1          // InterfaceMethod java/util/List.clear:()V\n         74: aload_0\n         75: iload_1\n-        76: invokevirtual #70                 // Method needNewBuffer:(I)V\n+        76: invokevirtual #88                 // Method needNewBuffer:(I)V\n         79: aload_0\n         80: iconst_1\n-        81: putfield      #18                 // Field reuseBuffers:Z\n+        81: putfield      #30                 // Field reuseBuffers:Z\n         84: return\n       LineNumberTable:\n         line 232: 0\n         line 233: 5\n         line 234: 10\n         line 235: 15\n         line 236: 22\n+        line 237: 42\n         line 239: 45\n         line 240: 50\n         line 241: 65\n         line 242: 74\n         line 243: 79\n         line 245: 84\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           65      19     1  size   I\n             0      85     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n+           65      19     1  size   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 45 /* same */\n         frame_type = 38 /* same */\n \n   public abstract void writeTo(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n   protected void writeToImpl(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=6, args_size=2\n          0: aload_0\n-         1: getfield      #58                 // Field count:I\n+         1: getfield      #77                 // Field count:I\n          4: istore_2\n          5: aload_0\n-         6: getfield      #12                 // Field buffers:Ljava/util/List;\n-         9: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n-        14: astore_3\n-        15: aload_3\n-        16: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-        21: ifeq          68\n-        24: aload_3\n-        25: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        30: checkcast     #43                 // class \"[B\"\n-        33: astore        4\n-        35: aload         4\n-        37: arraylength\n-        38: iload_2\n-        39: invokestatic  #61                 // Method java/lang/Math.min:(II)I\n-        42: istore        5\n-        44: aload_1\n-        45: aload         4\n-        47: iconst_0\n-        48: iload         5\n-        50: invokevirtual #97                 // Method java/io/OutputStream.write:([BII)V\n-        53: iload_2\n-        54: iload         5\n-        56: isub\n-        57: istore_2\n-        58: iload_2\n-        59: ifne          65\n-        62: goto          68\n-        65: goto          15\n+         6: getfield      #28                 // Field buffers:Ljava/util/List;\n+         9: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        14: astore        4\n+        16: goto          58\n+        19: aload         4\n+        21: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        26: checkcast     #54                 // class \"[B\"\n+        29: astore_3\n+        30: aload_3\n+        31: arraylength\n+        32: iload_2\n+        33: invokestatic  #79                 // Method java/lang/Math.min:(II)I\n+        36: istore        5\n+        38: aload_1\n+        39: aload_3\n+        40: iconst_0\n+        41: iload         5\n+        43: invokevirtual #129                // Method java/io/OutputStream.write:([BII)V\n+        46: iload_2\n+        47: iload         5\n+        49: isub\n+        50: istore_2\n+        51: iload_2\n+        52: ifne          58\n+        55: goto          68\n+        58: aload         4\n+        60: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        65: ifne          19\n         68: return\n       LineNumberTable:\n         line 266: 0\n         line 267: 5\n-        line 268: 35\n-        line 269: 44\n-        line 270: 53\n-        line 271: 58\n-        line 272: 62\n-        line 274: 65\n+        line 268: 30\n+        line 269: 38\n+        line 270: 46\n+        line 271: 51\n+        line 272: 55\n+        line 267: 58\n         line 275: 68\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           44      21     5     c   I\n-           35      30     4   buf   [B\n             0      69     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n             0      69     1   out   Ljava/io/OutputStream;\n             5      64     2 remaining   I\n+           30      28     3   buf   [B\n+           38      20     5     c   I\n       StackMapTable: number_of_entries = 3\n-        frame_type = 253 /* append */\n-          offset_delta = 15\n-          locals = [ int, class java/util/Iterator ]\n-        frame_type = 49 /* same */\n-        frame_type = 250 /* chop */\n-          offset_delta = 2\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 19\n+          locals = [ class org/apache/commons/io/output/AbstractByteArrayOutputStream, class java/io/OutputStream, int, top, class java/util/Iterator ]\n+          stack = []\n+        frame_type = 38 /* same */\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 9\n+          locals = [ class org/apache/commons/io/output/AbstractByteArrayOutputStream, class java/io/OutputStream, int ]\n+          stack = []\n \n   public abstract java.io.InputStream toInputStream();\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   protected <T extends java.io.InputStream> java.io.InputStream toInputStream(org.apache.commons.io.output.AbstractByteArrayOutputStream$InputStreamConstructor<T>);\n     descriptor: (Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n     flags: (0x0004) ACC_PROTECTED\n+    Signature: #142                         // <T:Ljava/io/InputStream;>(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;)Ljava/io/InputStream;\n     Code:\n       stack=5, locals=7, args_size=2\n          0: aload_0\n-         1: getfield      #58                 // Field count:I\n+         1: getfield      #77                 // Field count:I\n          4: istore_2\n          5: iload_2\n          6: ifne          13\n-         9: getstatic     #101                // Field org/apache/commons/io/input/ClosedInputStream.CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n+         9: getstatic     #143                // Field org/apache/commons/io/input/ClosedInputStream.CLOSED_INPUT_STREAM:Lorg/apache/commons/io/input/ClosedInputStream;\n         12: areturn\n-        13: new           #9                  // class java/util/ArrayList\n+        13: new           #25                 // class java/util/ArrayList\n         16: dup\n         17: aload_0\n-        18: getfield      #12                 // Field buffers:Ljava/util/List;\n-        21: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I\n-        26: invokespecial #107                // Method java/util/ArrayList.\"<init>\":(I)V\n+        18: getfield      #28                 // Field buffers:Ljava/util/List;\n+        21: invokeinterface #40,  1           // InterfaceMethod java/util/List.size:()I\n+        26: invokespecial #149                // Method java/util/ArrayList.\"<init>\":(I)V\n         29: astore_3\n         30: aload_0\n-        31: getfield      #12                 // Field buffers:Ljava/util/List;\n-        34: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n-        39: astore        4\n-        41: aload         4\n-        43: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-        48: ifeq          105\n-        51: aload         4\n-        53: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        58: checkcast     #43                 // class \"[B\"\n-        61: astore        5\n-        63: aload         5\n-        65: arraylength\n-        66: iload_2\n-        67: invokestatic  #61                 // Method java/lang/Math.min:(II)I\n-        70: istore        6\n-        72: aload_3\n-        73: aload_1\n-        74: aload         5\n-        76: iconst_0\n-        77: iload         6\n-        79: invokeinterface #109,  4          // InterfaceMethod org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor.construct:([BII)Ljava/io/InputStream;\n-        84: invokeinterface #54,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n-        89: pop\n-        90: iload_2\n-        91: iload         6\n-        93: isub\n-        94: istore_2\n-        95: iload_2\n-        96: ifne          102\n-        99: goto          105\n-       102: goto          41\n+        31: getfield      #28                 // Field buffers:Ljava/util/List;\n+        34: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        39: astore        5\n+        41: goto          95\n+        44: aload         5\n+        46: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        51: checkcast     #54                 // class \"[B\"\n+        54: astore        4\n+        56: aload         4\n+        58: arraylength\n+        59: iload_2\n+        60: invokestatic  #79                 // Method java/lang/Math.min:(II)I\n+        63: istore        6\n+        65: aload_3\n+        66: aload_1\n+        67: aload         4\n+        69: iconst_0\n+        70: iload         6\n+        72: invokeinterface #151,  4          // InterfaceMethod org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor.construct:([BII)Ljava/io/InputStream;\n+        77: invokeinterface #67,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        82: pop\n+        83: iload_2\n+        84: iload         6\n+        86: isub\n+        87: istore_2\n+        88: iload_2\n+        89: ifne          95\n+        92: goto          105\n+        95: aload         5\n+        97: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       102: ifne          44\n        105: aload_0\n        106: iconst_0\n-       107: putfield      #18                 // Field reuseBuffers:Z\n-       110: new           #115                // class java/io/SequenceInputStream\n+       107: putfield      #30                 // Field reuseBuffers:Z\n+       110: new           #157                // class java/io/SequenceInputStream\n        113: dup\n        114: aload_3\n-       115: invokestatic  #117                // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n-       118: invokespecial #123                // Method java/io/SequenceInputStream.\"<init>\":(Ljava/util/Enumeration;)V\n+       115: invokestatic  #159                // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;\n+       118: invokespecial #165                // Method java/io/SequenceInputStream.\"<init>\":(Ljava/util/Enumeration;)V\n        121: areturn\n       LineNumberTable:\n         line 307: 0\n         line 308: 5\n         line 309: 9\n         line 311: 13\n         line 312: 30\n-        line 313: 63\n-        line 314: 72\n-        line 315: 90\n-        line 316: 95\n-        line 317: 99\n-        line 319: 102\n+        line 313: 56\n+        line 314: 65\n+        line 315: 83\n+        line 316: 88\n+        line 317: 92\n+        line 312: 95\n         line 320: 105\n         line 321: 110\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           72      30     6     c   I\n-           63      39     5   buf   [B\n             0     122     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n             0     122     1 isConstructor   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n             5     117     2 remaining   I\n            30      92     3  list   Ljava/util/List;\n+           56      39     4   buf   [B\n+           65      30     6     c   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0     122     1 isConstructor   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;\n            30      92     3  list   Ljava/util/List<TT;>;\n       StackMapTable: number_of_entries = 4\n         frame_type = 252 /* append */\n           offset_delta = 13\n           locals = [ int ]\n-        frame_type = 253 /* append */\n-          offset_delta = 27\n-          locals = [ class java/util/List, class java/util/Iterator ]\n-        frame_type = 60 /* same */\n-        frame_type = 250 /* chop */\n-          offset_delta = 2\n-    Signature: #194                         // <T:Ljava/io/InputStream;>(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor<TT;>;)Ljava/io/InputStream;\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 30\n+          locals = [ class org/apache/commons/io/output/AbstractByteArrayOutputStream, class org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor, int, class java/util/List, top, class java/util/Iterator ]\n+          stack = []\n+        frame_type = 50 /* same */\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 9\n+          locals = [ class org/apache/commons/io/output/AbstractByteArrayOutputStream, class org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor, int, class java/util/List ]\n+          stack = []\n \n   public abstract byte[] toByteArray();\n     descriptor: ()[B\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   protected byte[] toByteArrayImpl();\n     descriptor: ()[B\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=7, args_size=1\n          0: aload_0\n-         1: getfield      #58                 // Field count:I\n+         1: getfield      #77                 // Field count:I\n          4: istore_1\n          5: iload_1\n          6: ifne          13\n-         9: getstatic     #126                // Field org/apache/commons/io/IOUtils.EMPTY_BYTE_ARRAY:[B\n+         9: getstatic     #177                // Field org/apache/commons/io/IOUtils.EMPTY_BYTE_ARRAY:[B\n         12: areturn\n         13: iload_1\n-        14: invokestatic  #50                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n+        14: invokestatic  #61                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n         17: astore_2\n         18: iconst_0\n         19: istore_3\n         20: aload_0\n-        21: getfield      #12                 // Field buffers:Ljava/util/List;\n-        24: invokeinterface #83,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n-        29: astore        4\n-        31: aload         4\n-        33: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-        38: ifeq          92\n-        41: aload         4\n-        43: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        48: checkcast     #43                 // class \"[B\"\n-        51: astore        5\n-        53: aload         5\n-        55: arraylength\n-        56: iload_1\n-        57: invokestatic  #61                 // Method java/lang/Math.min:(II)I\n-        60: istore        6\n-        62: aload         5\n-        64: iconst_0\n-        65: aload_2\n-        66: iload_3\n-        67: iload         6\n-        69: invokestatic  #64                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-        72: iload_3\n-        73: iload         6\n-        75: iadd\n-        76: istore_3\n-        77: iload_1\n-        78: iload         6\n-        80: isub\n-        81: istore_1\n-        82: iload_1\n-        83: ifne          89\n-        86: goto          92\n-        89: goto          31\n+        21: getfield      #28                 // Field buffers:Ljava/util/List;\n+        24: invokeinterface #119,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        29: astore        5\n+        31: goto          82\n+        34: aload         5\n+        36: invokeinterface #123,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        41: checkcast     #54                 // class \"[B\"\n+        44: astore        4\n+        46: aload         4\n+        48: arraylength\n+        49: iload_1\n+        50: invokestatic  #79                 // Method java/lang/Math.min:(II)I\n+        53: istore        6\n+        55: aload         4\n+        57: iconst_0\n+        58: aload_2\n+        59: iload_3\n+        60: iload         6\n+        62: invokestatic  #82                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        65: iload_3\n+        66: iload         6\n+        68: iadd\n+        69: istore_3\n+        70: iload_1\n+        71: iload         6\n+        73: isub\n+        74: istore_1\n+        75: iload_1\n+        76: ifne          82\n+        79: goto          92\n+        82: aload         5\n+        84: invokeinterface #131,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        89: ifne          34\n         92: aload_2\n         93: areturn\n       LineNumberTable:\n         line 361: 0\n         line 362: 5\n         line 363: 9\n         line 365: 13\n         line 366: 18\n         line 367: 20\n-        line 368: 53\n-        line 369: 62\n-        line 370: 72\n-        line 371: 77\n-        line 372: 82\n-        line 373: 86\n-        line 375: 89\n+        line 368: 46\n+        line 369: 55\n+        line 370: 65\n+        line 371: 70\n+        line 372: 75\n+        line 373: 79\n+        line 367: 82\n         line 376: 92\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           62      27     6     c   I\n-           53      36     5   buf   [B\n             0      94     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n             5      89     1 remaining   I\n            18      76     2 newbuf   [B\n            20      74     3   pos   I\n+           46      36     4   buf   [B\n+           55      27     6     c   I\n       StackMapTable: number_of_entries = 4\n         frame_type = 252 /* append */\n           offset_delta = 13\n           locals = [ int ]\n-        frame_type = 254 /* append */\n-          offset_delta = 17\n-          locals = [ class \"[B\", int, class java/util/Iterator ]\n-        frame_type = 57 /* same */\n-        frame_type = 250 /* chop */\n-          offset_delta = 2\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 20\n+          locals = [ class org/apache/commons/io/output/AbstractByteArrayOutputStream, int, class \"[B\", int, top, class java/util/Iterator ]\n+          stack = []\n+        frame_type = 47 /* same */\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 9\n+          locals = [ class org/apache/commons/io/output/AbstractByteArrayOutputStream, int, class \"[B\", int ]\n+          stack = []\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #186()\n+        java.lang.Deprecated\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #129                // class java/lang/String\n+         0: new           #187                // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: invokevirtual #131                // Method toByteArray:()[B\n-         8: invokestatic  #135                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-        11: invokespecial #141                // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+         5: invokevirtual #189                // Method toByteArray:()[B\n+         8: invokestatic  #191                // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+        11: invokespecial #197                // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n         14: areturn\n       LineNumberTable:\n         line 390: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #202()\n-        java.lang.Deprecated\n \n   public java.lang.String toString(java.lang.String) throws java.io.UnsupportedEncodingException;\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.UnsupportedEncodingException\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #129                // class java/lang/String\n+         0: new           #187                // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: invokevirtual #131                // Method toByteArray:()[B\n+         5: invokevirtual #189                // Method toByteArray:()[B\n          8: aload_1\n-         9: invokespecial #144                // Method java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+         9: invokespecial #203                // Method java/lang/String.\"<init>\":([BLjava/lang/String;)V\n         12: areturn\n       LineNumberTable:\n         line 403: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n             0      13     1   enc   Ljava/lang/String;\n-    Exceptions:\n-      throws java.io.UnsupportedEncodingException\n \n   public java.lang.String toString(java.nio.charset.Charset);\n     descriptor: (Ljava/nio/charset/Charset;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #129                // class java/lang/String\n+         0: new           #187                // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: invokevirtual #131                // Method toByteArray:()[B\n+         5: invokevirtual #189                // Method toByteArray:()[B\n          8: aload_1\n-         9: invokespecial #141                // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+         9: invokespecial #197                // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n         12: areturn\n       LineNumberTable:\n         line 416: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/AbstractByteArrayOutputStream;\n             0      13     1 charset   Ljava/nio/charset/Charset;\n }\n SourceFile: \"AbstractByteArrayOutputStream.java\"\n InnerClasses:\n-  protected static #214= #110 of #13;     // InputStreamConstructor=class org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor of class org/apache/commons/io/output/AbstractByteArrayOutputStream\n+  protected static #214= #152 of #1;      // InputStreamConstructor=class org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor of class org/apache/commons/io/output/AbstractByteArrayOutputStream\n"}]}
