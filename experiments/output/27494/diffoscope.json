{"diffoscope-json-version": 1, "source1": "first/FramedLZ4CompressorInputStream.class", "source2": "second/FramedLZ4CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,373 +1,373 @@\n-  SHA-256 checksum 5dc79442f5938841732ac23cc8e7a82a115dd70584899a9e2bf42cfafce7c4be\n+  SHA-256 checksum 5122395de2213d990ec45279f6e36b87d45b12e3d81ecbe86760bb19daebde44\n   Compiled from \"FramedLZ4CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #40                         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  super_class: #89                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  this_class: #2                          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+  super_class: #8                         // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 25, methods: 20, attributes: 3\n Constant pool:\n-    #1 = Methodref          #40.#212      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-    #2 = Methodref          #89.#213      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #3 = Fieldref           #40.#214      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n-    #4 = InvokeDynamic      #0:#219       // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #5 = Fieldref           #40.#220      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #6 = Class              #221          // org/apache/commons/compress/compressors/lz4/XXHash32\n-    #7 = Methodref          #6.#213       // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-    #8 = Fieldref           #40.#222      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-    #9 = Fieldref           #40.#223      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #10 = Class              #224          // org/apache/commons/compress/utils/CountingInputStream\n-   #11 = Methodref          #10.#225      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #12 = Fieldref           #40.#226      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #13 = Fieldref           #40.#227      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n-   #14 = Methodref          #40.#228      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n-   #15 = Methodref          #40.#229      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n-   #16 = Fieldref           #40.#230      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n-   #17 = Methodref          #183.#231     // java/io/InputStream.close:()V\n-   #18 = Methodref          #10.#231      // org/apache/commons/compress/utils/CountingInputStream.close:()V\n-   #19 = Fieldref           #40.#232      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n-   #20 = Methodref          #40.#233      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n-   #21 = Methodref          #40.#234      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n-   #22 = Fieldref           #40.#235      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n-   #23 = Methodref          #40.#236      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n-   #24 = Fieldref           #40.#237      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n-   #25 = Methodref          #6.#238       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n-   #26 = Methodref          #10.#239      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #27 = Methodref          #40.#240      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n-   #28 = Methodref          #40.#241      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n-   #29 = String             #242          // Not a LZ4 frame stream\n-   #30 = String             #243          // LZ4 frame stream followed by garbage\n-   #31 = Methodref          #244.#245     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #32 = Methodref          #40.#246      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n-   #33 = Class              #247          // java/io/IOException\n-   #34 = Methodref          #33.#248      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #35 = Methodref          #40.#249      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n-   #36 = Methodref          #40.#250      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n-   #37 = Methodref          #40.#251      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-   #38 = String             #252          // Premature end of stream while reading frame flags\n-   #39 = Methodref          #6.#253       // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n-   #40 = Class              #254          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-   #41 = InvokeDynamic      #1:#257       // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n-   #42 = Fieldref           #40.#258      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n-   #43 = Class              #259          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #44 = Integer            65536\n-   #45 = Fieldref           #40.#260      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n-   #46 = Fieldref           #40.#261      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n-   #47 = String             #262          // Premature end of stream while reading frame BD byte\n-   #48 = String             #263          // Premature end of stream while reading content size\n-   #49 = String             #264          // Premature end of stream while reading frame header checksum\n-   #50 = Methodref          #6.#265       // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n-   #51 = Long               255l\n-   #53 = Methodref          #6.#266       // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n-   #54 = String             #267          // Frame header checksum mismatch\n-   #55 = Methodref          #40.#268      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n-   #56 = Methodref          #269.#270     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #57 = Long               -2147483648l\n-   #59 = Long               2147483647l\n-   #61 = String             #271          // Found illegal block with negative size\n-   #62 = Methodref          #40.#272      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n-   #63 = Class              #273          // org/apache/commons/compress/utils/BoundedInputStream\n-   #64 = Methodref          #63.#274      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #65 = Class              #275          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-   #66 = Methodref          #65.#276      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-   #67 = Fieldref           #40.#277      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n-   #68 = Methodref          #43.#225      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #69 = Methodref          #43.#278      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n-   #70 = String             #279          // block\n-   #71 = Methodref          #40.#280      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-   #72 = String             #281          // content\n-   #73 = InvokeDynamic      #2:#283       // #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #74 = Methodref          #269.#284     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-   #75 = InvokeDynamic      #3:#283       // #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-   #76 = Methodref          #10.#286      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n-   #77 = Methodref          #183.#229     // java/io/InputStream.read:([BII)I\n-   #78 = Methodref          #43.#239      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n-   #79 = Methodref          #40.#287      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n-   #80 = Fieldref           #40.#288      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n-   #81 = Methodref          #40.#289      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n-   #82 = String             #290          // Found illegal skippable frame with negative size\n-   #83 = Methodref          #244.#291     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #84 = String             #292          // Premature end of stream while skipping frame\n-   #85 = Methodref          #293.#294     // java/lang/Math.min:(II)I\n-   #86 = Methodref          #295.#296     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #87 = Fieldref           #40.#297      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n-   #88 = Methodref          #298.#299     // java/util/Arrays.equals:([B[B)Z\n-   #89 = Class              #300          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #90 = Class              #301          // org/apache/commons/compress/utils/InputStreamStatistics\n-   #91 = Utf8               LZ4_SIGNATURE\n-   #92 = Utf8               [B\n-   #93 = Utf8               SKIPPABLE_FRAME_TRAILER\n-   #94 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n-   #95 = Utf8               B\n-   #96 = Utf8               ConstantValue\n-   #97 = Integer            80\n-   #98 = Utf8               VERSION_MASK\n-   #99 = Utf8               I\n-  #100 = Integer            192\n-  #101 = Utf8               SUPPORTED_VERSION\n-  #102 = Integer            64\n-  #103 = Utf8               BLOCK_INDEPENDENCE_MASK\n-  #104 = Integer            32\n-  #105 = Utf8               BLOCK_CHECKSUM_MASK\n-  #106 = Integer            16\n-  #107 = Utf8               CONTENT_SIZE_MASK\n-  #108 = Integer            8\n-  #109 = Utf8               CONTENT_CHECKSUM_MASK\n-  #110 = Integer            4\n-  #111 = Utf8               BLOCK_MAX_SIZE_MASK\n-  #112 = Integer            112\n-  #113 = Utf8               UNCOMPRESSED_FLAG_MASK\n-  #114 = Integer            -2147483648\n-  #115 = Utf8               oneByte\n-  #116 = Utf8               supplier\n-  #117 = Class              #302          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #118 = Utf8               ByteSupplier\n-  #119 = Utf8               InnerClasses\n-  #120 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #121 = Utf8               inputStream\n-  #122 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #123 = Utf8               decompressConcatenated\n-  #124 = Utf8               Z\n-  #125 = Utf8               expectBlockChecksum\n-  #126 = Utf8               expectBlockDependency\n-  #127 = Utf8               expectContentSize\n-  #128 = Utf8               expectContentChecksum\n-  #129 = Utf8               currentBlock\n-  #130 = Utf8               Ljava/io/InputStream;\n-  #131 = Utf8               endReached\n-  #132 = Utf8               inUncompressed\n-  #133 = Utf8               contentHash\n-  #134 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #135 = Utf8               blockHash\n-  #136 = Utf8               blockDependencyBuffer\n-  #137 = Utf8               <init>\n-  #138 = Utf8               (Ljava/io/InputStream;)V\n-  #139 = Utf8               Code\n-  #140 = Utf8               LineNumberTable\n-  #141 = Utf8               LocalVariableTable\n-  #142 = Utf8               this\n-  #143 = Utf8               Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n-  #144 = Utf8               in\n-  #145 = Utf8               Exceptions\n-  #146 = Utf8               (Ljava/io/InputStream;Z)V\n-  #147 = Utf8               read\n-  #148 = Utf8               ()I\n-  #149 = Utf8               StackMapTable\n-  #150 = Utf8               close\n-  #151 = Utf8               ()V\n-  #152 = Class              #303          // java/lang/Throwable\n-  #153 = Utf8               ([BII)I\n-  #154 = Utf8               b\n-  #155 = Utf8               off\n-  #156 = Utf8               len\n-  #157 = Utf8               r\n-  #158 = Utf8               getCompressedCount\n-  #159 = Utf8               ()J\n-  #160 = Utf8               init\n-  #161 = Utf8               (Z)V\n-  #162 = Utf8               firstFrame\n-  #163 = Utf8               readSignature\n-  #164 = Utf8               (Z)Z\n-  #165 = Utf8               garbageMessage\n-  #166 = Utf8               Ljava/lang/String;\n-  #167 = Class              #304          // java/lang/String\n-  #168 = Class              #92           // \"[B\"\n-  #169 = Utf8               readFrameDescriptor\n-  #170 = Utf8               contentSize\n-  #171 = Utf8               skipped\n-  #172 = Utf8               flags\n-  #173 = Utf8               bdByte\n-  #174 = Utf8               headerHash\n-  #175 = Utf8               expectedHash\n-  #176 = Utf8               nextBlock\n-  #177 = Utf8               s\n-  #178 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream;\n-  #179 = Utf8               J\n-  #180 = Utf8               uncompressed\n-  #181 = Utf8               realLen\n-  #182 = Utf8               capped\n-  #183 = Class              #305          // java/io/InputStream\n-  #184 = Utf8               maybeFinishCurrentBlock\n-  #185 = Utf8               verifyContentChecksum\n-  #186 = Utf8               verifyChecksum\n-  #187 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #188 = Utf8               hash\n-  #189 = Utf8               kind\n-  #190 = Utf8               checksum\n-  #191 = Utf8               readOneByte\n-  #192 = Utf8               readOnce\n-  #193 = Utf8               cnt\n-  #194 = Utf8               l\n-  #195 = Utf8               before\n-  #196 = Utf8               isSkippableFrameSignature\n-  #197 = Utf8               ([B)Z\n-  #198 = Utf8               i\n-  #199 = Utf8               skipSkippableFrame\n-  #200 = Utf8               ([B)I\n-  #201 = Utf8               appendToBlockDependencyBuffer\n-  #202 = Utf8               ([BII)V\n-  #203 = Utf8               keep\n-  #204 = Utf8               matches\n-  #205 = Utf8               ([BI)Z\n-  #206 = Utf8               signature\n-  #207 = Utf8               length\n-  #208 = Utf8               shortenedSig\n-  #209 = Utf8               <clinit>\n-  #210 = Utf8               SourceFile\n-  #211 = Utf8               FramedLZ4CompressorInputStream.java\n-  #212 = NameAndType        #137:#146     // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #213 = NameAndType        #137:#151     // \"<init>\":()V\n-  #214 = NameAndType        #115:#92      // oneByte:[B\n-  #215 = Utf8               BootstrapMethods\n-  #216 = MethodHandle       6:#306        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #217 = MethodType         #148          //  ()I\n-  #218 = MethodHandle       7:#37         // REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-  #219 = NameAndType        #307:#308     // getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #220 = NameAndType        #116:#120     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #221 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n-  #222 = NameAndType        #133:#134     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #223 = NameAndType        #135:#134     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #224 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #225 = NameAndType        #137:#138     // \"<init>\":(Ljava/io/InputStream;)V\n-  #226 = NameAndType        #121:#122     // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #227 = NameAndType        #123:#124     // decompressConcatenated:Z\n-  #228 = NameAndType        #160:#161     // init:(Z)V\n-  #229 = NameAndType        #147:#153     // read:([BII)I\n-  #230 = NameAndType        #129:#130     // currentBlock:Ljava/io/InputStream;\n-  #231 = NameAndType        #150:#151     // close:()V\n-  #232 = NameAndType        #131:#124     // endReached:Z\n-  #233 = NameAndType        #192:#153     // readOnce:([BII)I\n-  #234 = NameAndType        #176:#151     // nextBlock:()V\n-  #235 = NameAndType        #126:#124     // expectBlockDependency:Z\n-  #236 = NameAndType        #201:#202     // appendToBlockDependencyBuffer:([BII)V\n-  #237 = NameAndType        #128:#124     // expectContentChecksum:Z\n-  #238 = NameAndType        #309:#202     // update:([BII)V\n-  #239 = NameAndType        #310:#159     // getBytesRead:()J\n-  #240 = NameAndType        #163:#164     // readSignature:(Z)Z\n-  #241 = NameAndType        #169:#151     // readFrameDescriptor:()V\n-  #242 = Utf8               Not a LZ4 frame stream\n-  #243 = Utf8               LZ4 frame stream followed by garbage\n-  #244 = Class              #311          // org/apache/commons/compress/utils/IOUtils\n-  #245 = NameAndType        #312:#313     // readFully:(Ljava/io/InputStream;[B)I\n-  #246 = NameAndType        #314:#315     // count:(I)V\n-  #247 = Utf8               java/io/IOException\n-  #248 = NameAndType        #137:#316     // \"<init>\":(Ljava/lang/String;)V\n-  #249 = NameAndType        #199:#200     // skipSkippableFrame:([B)I\n-  #250 = NameAndType        #204:#205     // matches:([BI)Z\n-  #251 = NameAndType        #191:#148     // readOneByte:()I\n-  #252 = Utf8               Premature end of stream while reading frame flags\n-  #253 = NameAndType        #309:#315     // update:(I)V\n-  #254 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #255 = MethodHandle       6:#317        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #256 = String             #318          // Unsupported version \\u0001\n-  #257 = NameAndType        #319:#320     // makeConcatWithConstants:(I)Ljava/lang/String;\n-  #258 = NameAndType        #136:#92      // blockDependencyBuffer:[B\n-  #259 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #260 = NameAndType        #125:#124     // expectBlockChecksum:Z\n-  #261 = NameAndType        #127:#124     // expectContentSize:Z\n-  #262 = Utf8               Premature end of stream while reading frame BD byte\n-  #263 = Utf8               Premature end of stream while reading content size\n-  #264 = Utf8               Premature end of stream while reading frame header checksum\n-  #265 = NameAndType        #321:#159     // getValue:()J\n-  #266 = NameAndType        #322:#151     // reset:()V\n-  #267 = Utf8               Frame header checksum mismatch\n-  #268 = NameAndType        #184:#151     // maybeFinishCurrentBlock:()V\n-  #269 = Class              #323          // org/apache/commons/compress/utils/ByteUtils\n-  #270 = NameAndType        #324:#325     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #271 = Utf8               Found illegal block with negative size\n-  #272 = NameAndType        #185:#151     // verifyContentChecksum:()V\n-  #273 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #274 = NameAndType        #137:#326     // \"<init>\":(Ljava/io/InputStream;J)V\n-  #275 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-  #276 = NameAndType        #137:#327     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #277 = NameAndType        #132:#124     // inUncompressed:Z\n-  #278 = NameAndType        #328:#329     // prefill:([B)V\n-  #279 = Utf8               block\n-  #280 = NameAndType        #186:#187     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #281 = Utf8               content\n-  #282 = String             #330          // Premature end of stream while reading \\u0001 checksum\n-  #283 = NameAndType        #319:#331     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-  #284 = NameAndType        #324:#332     // fromLittleEndian:([B)J\n-  #285 = String             #333          // \\u0001 checksum mismatch.\n-  #286 = NameAndType        #147:#148     // read:()I\n-  #287 = NameAndType        #314:#334     // count:(J)V\n-  #288 = NameAndType        #93:#92       // SKIPPABLE_FRAME_TRAILER:[B\n-  #289 = NameAndType        #196:#197     // isSkippableFrameSignature:([B)Z\n-  #290 = Utf8               Found illegal skippable frame with negative size\n-  #291 = NameAndType        #335:#336     // skip:(Ljava/io/InputStream;J)J\n-  #292 = Utf8               Premature end of stream while skipping frame\n-  #293 = Class              #337          // java/lang/Math\n-  #294 = NameAndType        #338:#339     // min:(II)I\n-  #295 = Class              #340          // java/lang/System\n-  #296 = NameAndType        #341:#342     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #297 = NameAndType        #91:#92       // LZ4_SIGNATURE:[B\n-  #298 = Class              #343          // java/util/Arrays\n-  #299 = NameAndType        #344:#345     // equals:([B[B)Z\n-  #300 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #301 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #302 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #303 = Utf8               java/lang/Throwable\n-  #304 = Utf8               java/lang/String\n-  #305 = Utf8               java/io/InputStream\n-  #306 = Methodref          #346.#347     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #307 = Utf8               getAsByte\n-  #308 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #309 = Utf8               update\n-  #310 = Utf8               getBytesRead\n-  #311 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #312 = Utf8               readFully\n-  #313 = Utf8               (Ljava/io/InputStream;[B)I\n-  #314 = Utf8               count\n-  #315 = Utf8               (I)V\n-  #316 = Utf8               (Ljava/lang/String;)V\n-  #317 = Methodref          #348.#349     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #318 = Utf8               Unsupported version \\u0001\n-  #319 = Utf8               makeConcatWithConstants\n-  #320 = Utf8               (I)Ljava/lang/String;\n-  #321 = Utf8               getValue\n-  #322 = Utf8               reset\n-  #323 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #324 = Utf8               fromLittleEndian\n-  #325 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #326 = Utf8               (Ljava/io/InputStream;J)V\n-  #327 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #328 = Utf8               prefill\n-  #329 = Utf8               ([B)V\n-  #330 = Utf8               Premature end of stream while reading \\u0001 checksum\n-  #331 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #332 = Utf8               ([B)J\n-  #333 = Utf8               \\u0001 checksum mismatch.\n-  #334 = Utf8               (J)V\n-  #335 = Utf8               skip\n-  #336 = Utf8               (Ljava/io/InputStream;J)J\n-  #337 = Utf8               java/lang/Math\n-  #338 = Utf8               min\n-  #339 = Utf8               (II)I\n-  #340 = Utf8               java/lang/System\n-  #341 = Utf8               arraycopy\n-  #342 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #343 = Utf8               java/util/Arrays\n-  #344 = Utf8               equals\n-  #345 = Utf8               ([B[B)Z\n-  #346 = Class              #350          // java/lang/invoke/LambdaMetafactory\n-  #347 = NameAndType        #351:#354     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #348 = Class              #355          // java/lang/invoke/StringConcatFactory\n-  #349 = NameAndType        #319:#356     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #350 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #351 = Utf8               metafactory\n-  #352 = Class              #358          // java/lang/invoke/MethodHandles$Lookup\n-  #353 = Utf8               Lookup\n-  #354 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #355 = Utf8               java/lang/invoke/StringConcatFactory\n-  #356 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #357 = Class              #359          // java/lang/invoke/MethodHandles\n-  #358 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #359 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+    #2 = Class              #4            // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/InputStream;Z)V\n+    #4 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/InputStream;Z)V\n+    #7 = Methodref          #8.#9         // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #8 = Class              #10           // org/apache/commons/compress/compressors/CompressorInputStream\n+    #9 = NameAndType        #5:#11        // \"<init>\":()V\n+   #10 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+   #11 = Utf8               ()V\n+   #12 = Fieldref           #2.#13        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n+   #13 = NameAndType        #14:#15       // oneByte:[B\n+   #14 = Utf8               oneByte\n+   #15 = Utf8               [B\n+   #16 = InvokeDynamic      #0:#17        // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #17 = NameAndType        #18:#19       // getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #18 = Utf8               getAsByte\n+   #19 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #20 = Fieldref           #2.#21        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #21 = NameAndType        #22:#23       // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #22 = Utf8               supplier\n+   #23 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #24 = Class              #25           // org/apache/commons/compress/compressors/lz4/XXHash32\n+   #25 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n+   #26 = Methodref          #24.#9        // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+   #27 = Fieldref           #2.#28        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #28 = NameAndType        #29:#30       // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #29 = Utf8               contentHash\n+   #30 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #31 = Fieldref           #2.#32        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #32 = NameAndType        #33:#30       // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #33 = Utf8               blockHash\n+   #34 = Class              #35           // org/apache/commons/compress/utils/CountingInputStream\n+   #35 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #36 = Methodref          #34.#37       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #37 = NameAndType        #5:#38        // \"<init>\":(Ljava/io/InputStream;)V\n+   #38 = Utf8               (Ljava/io/InputStream;)V\n+   #39 = Fieldref           #2.#40        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #40 = NameAndType        #41:#42       // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #41 = Utf8               inputStream\n+   #42 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #43 = Fieldref           #2.#44        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n+   #44 = NameAndType        #45:#46       // decompressConcatenated:Z\n+   #45 = Utf8               decompressConcatenated\n+   #46 = Utf8               Z\n+   #47 = Methodref          #2.#48        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n+   #48 = NameAndType        #49:#50       // init:(Z)V\n+   #49 = Utf8               init\n+   #50 = Utf8               (Z)V\n+   #51 = Methodref          #2.#52        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n+   #52 = NameAndType        #53:#54       // read:([BII)I\n+   #53 = Utf8               read\n+   #54 = Utf8               ([BII)I\n+   #55 = Fieldref           #2.#56        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n+   #56 = NameAndType        #57:#58       // currentBlock:Ljava/io/InputStream;\n+   #57 = Utf8               currentBlock\n+   #58 = Utf8               Ljava/io/InputStream;\n+   #59 = Methodref          #60.#61       // java/io/InputStream.close:()V\n+   #60 = Class              #62           // java/io/InputStream\n+   #61 = NameAndType        #63:#11       // close:()V\n+   #62 = Utf8               java/io/InputStream\n+   #63 = Utf8               close\n+   #64 = Methodref          #34.#61       // org/apache/commons/compress/utils/CountingInputStream.close:()V\n+   #65 = Fieldref           #2.#66        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n+   #66 = NameAndType        #67:#46       // endReached:Z\n+   #67 = Utf8               endReached\n+   #68 = Methodref          #2.#69        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n+   #69 = NameAndType        #70:#54       // readOnce:([BII)I\n+   #70 = Utf8               readOnce\n+   #71 = Methodref          #2.#72        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n+   #72 = NameAndType        #73:#11       // nextBlock:()V\n+   #73 = Utf8               nextBlock\n+   #74 = Fieldref           #2.#75        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n+   #75 = NameAndType        #76:#46       // expectBlockDependency:Z\n+   #76 = Utf8               expectBlockDependency\n+   #77 = Methodref          #2.#78        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n+   #78 = NameAndType        #79:#80       // appendToBlockDependencyBuffer:([BII)V\n+   #79 = Utf8               appendToBlockDependencyBuffer\n+   #80 = Utf8               ([BII)V\n+   #81 = Fieldref           #2.#82        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n+   #82 = NameAndType        #83:#46       // expectContentChecksum:Z\n+   #83 = Utf8               expectContentChecksum\n+   #84 = Methodref          #24.#85       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+   #85 = NameAndType        #86:#80       // update:([BII)V\n+   #86 = Utf8               update\n+   #87 = Methodref          #34.#88       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #88 = NameAndType        #89:#90       // getBytesRead:()J\n+   #89 = Utf8               getBytesRead\n+   #90 = Utf8               ()J\n+   #91 = Methodref          #2.#92        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n+   #92 = NameAndType        #93:#94       // readSignature:(Z)Z\n+   #93 = Utf8               readSignature\n+   #94 = Utf8               (Z)Z\n+   #95 = Methodref          #2.#96        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n+   #96 = NameAndType        #97:#11       // readFrameDescriptor:()V\n+   #97 = Utf8               readFrameDescriptor\n+   #98 = String             #99           // Not a LZ4 frame stream\n+   #99 = Utf8               Not a LZ4 frame stream\n+  #100 = String             #101          // LZ4 frame stream followed by garbage\n+  #101 = Utf8               LZ4 frame stream followed by garbage\n+  #102 = Methodref          #103.#104     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+  #103 = Class              #105          // org/apache/commons/compress/utils/IOUtils\n+  #104 = NameAndType        #106:#107     // readFully:(Ljava/io/InputStream;[B)I\n+  #105 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #106 = Utf8               readFully\n+  #107 = Utf8               (Ljava/io/InputStream;[B)I\n+  #108 = Methodref          #2.#109       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n+  #109 = NameAndType        #110:#111     // count:(I)V\n+  #110 = Utf8               count\n+  #111 = Utf8               (I)V\n+  #112 = Class              #113          // java/io/IOException\n+  #113 = Utf8               java/io/IOException\n+  #114 = Methodref          #112.#115     // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #115 = NameAndType        #5:#116       // \"<init>\":(Ljava/lang/String;)V\n+  #116 = Utf8               (Ljava/lang/String;)V\n+  #117 = Methodref          #2.#118       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n+  #118 = NameAndType        #119:#120     // skipSkippableFrame:([B)I\n+  #119 = Utf8               skipSkippableFrame\n+  #120 = Utf8               ([B)I\n+  #121 = Methodref          #2.#122       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n+  #122 = NameAndType        #123:#124     // matches:([BI)Z\n+  #123 = Utf8               matches\n+  #124 = Utf8               ([BI)Z\n+  #125 = Methodref          #2.#126       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+  #126 = NameAndType        #127:#128     // readOneByte:()I\n+  #127 = Utf8               readOneByte\n+  #128 = Utf8               ()I\n+  #129 = String             #130          // Premature end of stream while reading frame flags\n+  #130 = Utf8               Premature end of stream while reading frame flags\n+  #131 = Methodref          #24.#132      // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+  #132 = NameAndType        #86:#111      // update:(I)V\n+  #133 = InvokeDynamic      #1:#134       // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+  #134 = NameAndType        #135:#136     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #135 = Utf8               makeConcatWithConstants\n+  #136 = Utf8               (I)Ljava/lang/String;\n+  #137 = Fieldref           #2.#138       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n+  #138 = NameAndType        #139:#15      // blockDependencyBuffer:[B\n+  #139 = Utf8               blockDependencyBuffer\n+  #140 = Class              #141          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #141 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #142 = Integer            65536\n+  #143 = Fieldref           #2.#144       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n+  #144 = NameAndType        #145:#46      // expectBlockChecksum:Z\n+  #145 = Utf8               expectBlockChecksum\n+  #146 = Fieldref           #2.#147       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n+  #147 = NameAndType        #148:#46      // expectContentSize:Z\n+  #148 = Utf8               expectContentSize\n+  #149 = String             #150          // Premature end of stream while reading frame BD byte\n+  #150 = Utf8               Premature end of stream while reading frame BD byte\n+  #151 = String             #152          // Premature end of stream while reading content size\n+  #152 = Utf8               Premature end of stream while reading content size\n+  #153 = String             #154          // Premature end of stream while reading frame header checksum\n+  #154 = Utf8               Premature end of stream while reading frame header checksum\n+  #155 = Methodref          #24.#156      // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+  #156 = NameAndType        #157:#90      // getValue:()J\n+  #157 = Utf8               getValue\n+  #158 = Long               255l\n+  #160 = Methodref          #24.#161      // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+  #161 = NameAndType        #162:#11      // reset:()V\n+  #162 = Utf8               reset\n+  #163 = String             #164          // Frame header checksum mismatch\n+  #164 = Utf8               Frame header checksum mismatch\n+  #165 = Methodref          #2.#166       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n+  #166 = NameAndType        #167:#11      // maybeFinishCurrentBlock:()V\n+  #167 = Utf8               maybeFinishCurrentBlock\n+  #168 = Methodref          #169.#170     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #169 = Class              #171          // org/apache/commons/compress/utils/ByteUtils\n+  #170 = NameAndType        #172:#173     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #171 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #172 = Utf8               fromLittleEndian\n+  #173 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #174 = Long               -2147483648l\n+  #176 = Long               2147483647l\n+  #178 = String             #179          // Found illegal block with negative size\n+  #179 = Utf8               Found illegal block with negative size\n+  #180 = Methodref          #2.#181       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n+  #181 = NameAndType        #182:#11      // verifyContentChecksum:()V\n+  #182 = Utf8               verifyContentChecksum\n+  #183 = Class              #184          // org/apache/commons/compress/utils/BoundedInputStream\n+  #184 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #185 = Methodref          #183.#186     // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+  #186 = NameAndType        #5:#187       // \"<init>\":(Ljava/io/InputStream;J)V\n+  #187 = Utf8               (Ljava/io/InputStream;J)V\n+  #188 = Class              #189          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #189 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #190 = Methodref          #188.#191     // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #191 = NameAndType        #5:#192       // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #192 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #193 = Fieldref           #2.#194       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n+  #194 = NameAndType        #195:#46      // inUncompressed:Z\n+  #195 = Utf8               inUncompressed\n+  #196 = Methodref          #140.#37      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #197 = Methodref          #140.#198     // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+  #198 = NameAndType        #199:#200     // prefill:([B)V\n+  #199 = Utf8               prefill\n+  #200 = Utf8               ([B)V\n+  #201 = String             #202          // block\n+  #202 = Utf8               block\n+  #203 = Methodref          #2.#204       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #204 = NameAndType        #205:#206     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #205 = Utf8               verifyChecksum\n+  #206 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #207 = String             #208          // content\n+  #208 = Utf8               content\n+  #209 = InvokeDynamic      #2:#210       // #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #210 = NameAndType        #135:#211     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #211 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #212 = Methodref          #169.#213     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+  #213 = NameAndType        #172:#214     // fromLittleEndian:([B)J\n+  #214 = Utf8               ([B)J\n+  #215 = InvokeDynamic      #3:#210       // #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #216 = Methodref          #34.#217      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n+  #217 = NameAndType        #53:#128      // read:()I\n+  #218 = Methodref          #60.#52       // java/io/InputStream.read:([BII)I\n+  #219 = Methodref          #140.#88      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+  #220 = Methodref          #2.#221       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n+  #221 = NameAndType        #110:#222     // count:(J)V\n+  #222 = Utf8               (J)V\n+  #223 = Fieldref           #2.#224       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n+  #224 = NameAndType        #225:#15      // SKIPPABLE_FRAME_TRAILER:[B\n+  #225 = Utf8               SKIPPABLE_FRAME_TRAILER\n+  #226 = Methodref          #2.#227       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n+  #227 = NameAndType        #228:#229     // isSkippableFrameSignature:([B)Z\n+  #228 = Utf8               isSkippableFrameSignature\n+  #229 = Utf8               ([B)Z\n+  #230 = String             #231          // Found illegal skippable frame with negative size\n+  #231 = Utf8               Found illegal skippable frame with negative size\n+  #232 = Methodref          #103.#233     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+  #233 = NameAndType        #234:#235     // skip:(Ljava/io/InputStream;J)J\n+  #234 = Utf8               skip\n+  #235 = Utf8               (Ljava/io/InputStream;J)J\n+  #236 = String             #237          // Premature end of stream while skipping frame\n+  #237 = Utf8               Premature end of stream while skipping frame\n+  #238 = Methodref          #239.#240     // java/lang/Math.min:(II)I\n+  #239 = Class              #241          // java/lang/Math\n+  #240 = NameAndType        #242:#243     // min:(II)I\n+  #241 = Utf8               java/lang/Math\n+  #242 = Utf8               min\n+  #243 = Utf8               (II)I\n+  #244 = Methodref          #245.#246     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #245 = Class              #247          // java/lang/System\n+  #246 = NameAndType        #248:#249     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #247 = Utf8               java/lang/System\n+  #248 = Utf8               arraycopy\n+  #249 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #250 = Fieldref           #2.#251       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n+  #251 = NameAndType        #252:#15      // LZ4_SIGNATURE:[B\n+  #252 = Utf8               LZ4_SIGNATURE\n+  #253 = Methodref          #254.#255     // java/util/Arrays.equals:([B[B)Z\n+  #254 = Class              #256          // java/util/Arrays\n+  #255 = NameAndType        #257:#258     // equals:([B[B)Z\n+  #256 = Utf8               java/util/Arrays\n+  #257 = Utf8               equals\n+  #258 = Utf8               ([B[B)Z\n+  #259 = Class              #260          // org/apache/commons/compress/utils/InputStreamStatistics\n+  #260 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #261 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n+  #262 = Utf8               B\n+  #263 = Utf8               ConstantValue\n+  #264 = Integer            80\n+  #265 = Utf8               VERSION_MASK\n+  #266 = Utf8               I\n+  #267 = Integer            192\n+  #268 = Utf8               SUPPORTED_VERSION\n+  #269 = Integer            64\n+  #270 = Utf8               BLOCK_INDEPENDENCE_MASK\n+  #271 = Integer            32\n+  #272 = Utf8               BLOCK_CHECKSUM_MASK\n+  #273 = Integer            16\n+  #274 = Utf8               CONTENT_SIZE_MASK\n+  #275 = Integer            8\n+  #276 = Utf8               CONTENT_CHECKSUM_MASK\n+  #277 = Integer            4\n+  #278 = Utf8               BLOCK_MAX_SIZE_MASK\n+  #279 = Integer            112\n+  #280 = Utf8               UNCOMPRESSED_FLAG_MASK\n+  #281 = Integer            -2147483648\n+  #282 = Utf8               Code\n+  #283 = Utf8               LineNumberTable\n+  #284 = Utf8               LocalVariableTable\n+  #285 = Utf8               this\n+  #286 = Utf8               Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n+  #287 = Utf8               in\n+  #288 = Utf8               Exceptions\n+  #289 = Utf8               StackMapTable\n+  #290 = Class              #291          // java/lang/Throwable\n+  #291 = Utf8               java/lang/Throwable\n+  #292 = Utf8               b\n+  #293 = Utf8               off\n+  #294 = Utf8               len\n+  #295 = Utf8               r\n+  #296 = Utf8               getCompressedCount\n+  #297 = Utf8               firstFrame\n+  #298 = Utf8               garbageMessage\n+  #299 = Utf8               Ljava/lang/String;\n+  #300 = Class              #301          // java/lang/String\n+  #301 = Utf8               java/lang/String\n+  #302 = Class              #15           // \"[B\"\n+  #303 = Utf8               contentSize\n+  #304 = Utf8               skipped\n+  #305 = Utf8               flags\n+  #306 = Utf8               bdByte\n+  #307 = Utf8               headerHash\n+  #308 = Utf8               expectedHash\n+  #309 = Utf8               s\n+  #310 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream;\n+  #311 = Utf8               J\n+  #312 = Utf8               uncompressed\n+  #313 = Utf8               realLen\n+  #314 = Utf8               capped\n+  #315 = Utf8               hash\n+  #316 = Utf8               kind\n+  #317 = Utf8               checksum\n+  #318 = Utf8               cnt\n+  #319 = Utf8               l\n+  #320 = Utf8               before\n+  #321 = Utf8               i\n+  #322 = Utf8               keep\n+  #323 = Utf8               signature\n+  #324 = Utf8               length\n+  #325 = Utf8               shortenedSig\n+  #326 = Utf8               <clinit>\n+  #327 = Utf8               SourceFile\n+  #328 = Utf8               FramedLZ4CompressorInputStream.java\n+  #329 = Utf8               BootstrapMethods\n+  #330 = MethodHandle       6:#331        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #331 = Methodref          #332.#333     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #332 = Class              #334          // java/lang/invoke/LambdaMetafactory\n+  #333 = NameAndType        #335:#336     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #334 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #335 = Utf8               metafactory\n+  #336 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #337 = MethodType         #128          //  ()I\n+  #338 = MethodHandle       7:#125        // REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+  #339 = MethodHandle       6:#340        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #340 = Methodref          #341.#342     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #341 = Class              #343          // java/lang/invoke/StringConcatFactory\n+  #342 = NameAndType        #135:#344     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #343 = Utf8               java/lang/invoke/StringConcatFactory\n+  #344 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #345 = String             #346          // Unsupported version \\u0001\n+  #346 = Utf8               Unsupported version \\u0001\n+  #347 = String             #348          // Premature end of stream while reading \\u0001 checksum\n+  #348 = Utf8               Premature end of stream while reading \\u0001 checksum\n+  #349 = String             #350          // \\u0001 checksum mismatch.\n+  #350 = Utf8               \\u0001 checksum mismatch.\n+  #351 = Utf8               InnerClasses\n+  #352 = Class              #353          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #353 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #354 = Utf8               ByteSupplier\n+  #355 = Class              #356          // java/lang/invoke/MethodHandles$Lookup\n+  #356 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #357 = Class              #358          // java/lang/invoke/MethodHandles\n+  #358 = Utf8               java/lang/invoke/MethodHandles\n+  #359 = Utf8               Lookup\n {\n   static final byte[] LZ4_SIGNATURE;\n     descriptor: [B\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private static final byte[] SKIPPABLE_FRAME_TRAILER;\n     descriptor: [B\n@@ -496,45 +496,45 @@\n \n   public org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream(java.io.InputStream, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #2                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+         1: invokespecial #7                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #3                  // Field oneByte:[B\n+         8: putfield      #12                 // Field oneByte:[B\n         11: aload_0\n         12: aload_0\n-        13: invokedynamic #4,  0              // InvokeDynamic #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-        18: putfield      #5                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        13: invokedynamic #16,  0             // InvokeDynamic #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        18: putfield      #20                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         21: aload_0\n-        22: new           #6                  // class org/apache/commons/compress/compressors/lz4/XXHash32\n+        22: new           #24                 // class org/apache/commons/compress/compressors/lz4/XXHash32\n         25: dup\n-        26: invokespecial #7                  // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-        29: putfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        26: invokespecial #26                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+        29: putfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         32: aload_0\n-        33: new           #6                  // class org/apache/commons/compress/compressors/lz4/XXHash32\n+        33: new           #24                 // class org/apache/commons/compress/compressors/lz4/XXHash32\n         36: dup\n-        37: invokespecial #7                  // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-        40: putfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        37: invokespecial #26                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+        40: putfield      #31                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         43: aload_0\n-        44: new           #10                 // class org/apache/commons/compress/utils/CountingInputStream\n+        44: new           #34                 // class org/apache/commons/compress/utils/CountingInputStream\n         47: dup\n         48: aload_1\n-        49: invokespecial #11                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        52: putfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        49: invokespecial #36                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        52: putfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         55: aload_0\n         56: iload_2\n-        57: putfield      #13                 // Field decompressConcatenated:Z\n+        57: putfield      #43                 // Field decompressConcatenated:Z\n         60: aload_0\n         61: iconst_1\n-        62: invokespecial #14                 // Method init:(Z)V\n+        62: invokespecial #47                 // Method init:(Z)V\n         65: return\n       LineNumberTable:\n         line 109: 0\n         line 64: 4\n         line 66: 11\n         line 80: 21\n         line 83: 32\n@@ -553,24 +553,24 @@\n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #3                  // Field oneByte:[B\n+         2: getfield      #12                 // Field oneByte:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #15                 // Method read:([BII)I\n+         7: invokevirtual #51                 // Method read:([BII)I\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_m1\n         15: goto          28\n         18: aload_0\n-        19: getfield      #3                  // Field oneByte:[B\n+        19: getfield      #12                 // Field oneByte:[B\n         22: iconst_0\n         23: baload\n         24: sipush        255\n         27: iand\n         28: ireturn\n       LineNumberTable:\n         line 118: 0\n@@ -586,30 +586,30 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+         1: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n          4: ifnull        19\n          7: aload_0\n-         8: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n-        11: invokevirtual #17                 // Method java/io/InputStream.close:()V\n+         8: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n+        11: invokevirtual #59                 // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+        16: putfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n         19: aload_0\n-        20: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        23: invokevirtual #18                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n+        20: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        23: invokevirtual #64                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n         26: goto          39\n         29: astore_1\n         30: aload_0\n-        31: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        34: invokevirtual #18                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n+        31: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        34: invokevirtual #64                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n         37: aload_1\n         38: athrow\n         39: return\n       Exception table:\n          from    to  target type\n              0    19    29   any\n       LineNumberTable:\n@@ -638,58 +638,58 @@\n     Code:\n       stack=4, locals=5, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #19                 // Field endReached:Z\n+         7: getfield      #65                 // Field endReached:Z\n         10: ifeq          15\n         13: iconst_m1\n         14: ireturn\n         15: aload_0\n         16: aload_1\n         17: iload_2\n         18: iload_3\n-        19: invokespecial #20                 // Method readOnce:([BII)I\n+        19: invokespecial #68                 // Method readOnce:([BII)I\n         22: istore        4\n         24: iload         4\n         26: iconst_m1\n         27: if_icmpne     50\n         30: aload_0\n-        31: invokespecial #21                 // Method nextBlock:()V\n+        31: invokespecial #71                 // Method nextBlock:()V\n         34: aload_0\n-        35: getfield      #19                 // Field endReached:Z\n+        35: getfield      #65                 // Field endReached:Z\n         38: ifne          50\n         41: aload_0\n         42: aload_1\n         43: iload_2\n         44: iload_3\n-        45: invokespecial #20                 // Method readOnce:([BII)I\n+        45: invokespecial #68                 // Method readOnce:([BII)I\n         48: istore        4\n         50: iload         4\n         52: iconst_m1\n         53: if_icmpeq     89\n         56: aload_0\n-        57: getfield      #22                 // Field expectBlockDependency:Z\n+        57: getfield      #74                 // Field expectBlockDependency:Z\n         60: ifeq          71\n         63: aload_0\n         64: aload_1\n         65: iload_2\n         66: iload         4\n-        68: invokespecial #23                 // Method appendToBlockDependencyBuffer:([BII)V\n+        68: invokespecial #77                 // Method appendToBlockDependencyBuffer:([BII)V\n         71: aload_0\n-        72: getfield      #24                 // Field expectContentChecksum:Z\n+        72: getfield      #81                 // Field expectContentChecksum:Z\n         75: ifeq          89\n         78: aload_0\n-        79: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        79: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         82: aload_1\n         83: iload_2\n         84: iload         4\n-        86: invokevirtual #25                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+        86: invokevirtual #84                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n         89: iload         4\n         91: ireturn\n       LineNumberTable:\n         line 137: 0\n         line 138: 4\n         line 140: 6\n         line 141: 13\n@@ -724,36 +724,36 @@\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #26                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #87                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 166: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n \n   private void init(boolean) throws java.io.IOException;\n     descriptor: (Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #27                 // Method readSignature:(Z)Z\n+         2: invokespecial #91                 // Method readSignature:(Z)Z\n          5: ifeq          16\n          8: aload_0\n-         9: invokespecial #28                 // Method readFrameDescriptor:()V\n+         9: invokespecial #95                 // Method readFrameDescriptor:()V\n         12: aload_0\n-        13: invokespecial #21                 // Method nextBlock:()V\n+        13: invokespecial #71                 // Method nextBlock:()V\n         16: return\n       LineNumberTable:\n         line 170: 0\n         line 171: 8\n         line 172: 12\n         line 174: 16\n       LocalVariableTable:\n@@ -768,72 +768,72 @@\n   private boolean readSignature(boolean) throws java.io.IOException;\n     descriptor: (Z)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n          0: iload_1\n          1: ifeq          9\n-         4: ldc           #29                 // String Not a LZ4 frame stream\n+         4: ldc           #98                 // String Not a LZ4 frame stream\n          6: goto          11\n-         9: ldc           #30                 // String LZ4 frame stream followed by garbage\n+         9: ldc           #100                // String LZ4 frame stream followed by garbage\n         11: astore_2\n         12: iconst_4\n         13: newarray       byte\n         15: astore_3\n         16: aload_0\n-        17: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        17: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         20: aload_3\n-        21: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        21: invokestatic  #102                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         24: istore        4\n         26: aload_0\n         27: iload         4\n-        29: invokevirtual #32                 // Method count:(I)V\n+        29: invokevirtual #108                // Method count:(I)V\n         32: iconst_0\n         33: iload         4\n         35: if_icmpne     49\n         38: iload_1\n         39: ifne          49\n         42: aload_0\n         43: iconst_1\n-        44: putfield      #19                 // Field endReached:Z\n+        44: putfield      #65                 // Field endReached:Z\n         47: iconst_0\n         48: ireturn\n         49: iconst_4\n         50: iload         4\n         52: if_icmpeq     64\n-        55: new           #33                 // class java/io/IOException\n+        55: new           #112                // class java/io/IOException\n         58: dup\n         59: aload_2\n-        60: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        60: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         63: athrow\n         64: aload_0\n         65: aload_3\n-        66: invokespecial #35                 // Method skipSkippableFrame:([B)I\n+        66: invokespecial #117                // Method skipSkippableFrame:([B)I\n         69: istore        4\n         71: iconst_0\n         72: iload         4\n         74: if_icmpne     88\n         77: iload_1\n         78: ifne          88\n         81: aload_0\n         82: iconst_1\n-        83: putfield      #19                 // Field endReached:Z\n+        83: putfield      #65                 // Field endReached:Z\n         86: iconst_0\n         87: ireturn\n         88: iconst_4\n         89: iload         4\n         91: if_icmpne     102\n         94: aload_3\n         95: iconst_4\n-        96: invokestatic  #36                 // Method matches:([BI)Z\n+        96: invokestatic  #121                // Method matches:([BI)Z\n         99: ifne          111\n-       102: new           #33                 // class java/io/IOException\n+       102: new           #112                // class java/io/IOException\n        105: dup\n        106: aload_2\n-       107: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       107: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        110: athrow\n        111: iconst_1\n        112: ireturn\n       LineNumberTable:\n         line 177: 0\n         line 178: 12\n         line 179: 16\n@@ -873,165 +873,165 @@\n \n   private void readFrameDescriptor() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=5, args_size=1\n          0: aload_0\n-         1: invokespecial #37                 // Method readOneByte:()I\n+         1: invokespecial #125                // Method readOneByte:()I\n          4: istore_1\n          5: iload_1\n          6: iconst_m1\n          7: if_icmpne     20\n-        10: new           #33                 // class java/io/IOException\n+        10: new           #112                // class java/io/IOException\n         13: dup\n-        14: ldc           #38                 // String Premature end of stream while reading frame flags\n-        16: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #129                // String Premature end of stream while reading frame flags\n+        16: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        21: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         24: iload_1\n-        25: invokevirtual #39                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+        25: invokevirtual #131                // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n         28: iload_1\n         29: sipush        192\n         32: iand\n         33: bipush        64\n         35: if_icmpeq     55\n-        38: new           #33                 // class java/io/IOException\n+        38: new           #112                // class java/io/IOException\n         41: dup\n         42: iload_1\n         43: bipush        6\n         45: ishr\n-        46: invokedynamic #41,  0             // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n-        51: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        46: invokedynamic #133,  0            // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+        51: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         54: athrow\n         55: aload_0\n         56: iload_1\n         57: bipush        32\n         59: iand\n         60: ifne          67\n         63: iconst_1\n         64: goto          68\n         67: iconst_0\n-        68: putfield      #22                 // Field expectBlockDependency:Z\n+        68: putfield      #74                 // Field expectBlockDependency:Z\n         71: aload_0\n-        72: getfield      #22                 // Field expectBlockDependency:Z\n+        72: getfield      #74                 // Field expectBlockDependency:Z\n         75: ifeq          96\n         78: aload_0\n-        79: getfield      #42                 // Field blockDependencyBuffer:[B\n+        79: getfield      #137                // Field blockDependencyBuffer:[B\n         82: ifnonnull     101\n         85: aload_0\n-        86: ldc           #44                 // int 65536\n+        86: ldc           #142                // int 65536\n         88: newarray       byte\n-        90: putfield      #42                 // Field blockDependencyBuffer:[B\n+        90: putfield      #137                // Field blockDependencyBuffer:[B\n         93: goto          101\n         96: aload_0\n         97: aconst_null\n-        98: putfield      #42                 // Field blockDependencyBuffer:[B\n+        98: putfield      #137                // Field blockDependencyBuffer:[B\n        101: aload_0\n        102: iload_1\n        103: bipush        16\n        105: iand\n        106: ifeq          113\n        109: iconst_1\n        110: goto          114\n        113: iconst_0\n-       114: putfield      #45                 // Field expectBlockChecksum:Z\n+       114: putfield      #143                // Field expectBlockChecksum:Z\n        117: aload_0\n        118: iload_1\n        119: bipush        8\n        121: iand\n        122: ifeq          129\n        125: iconst_1\n        126: goto          130\n        129: iconst_0\n-       130: putfield      #46                 // Field expectContentSize:Z\n+       130: putfield      #146                // Field expectContentSize:Z\n        133: aload_0\n        134: iload_1\n        135: iconst_4\n        136: iand\n        137: ifeq          144\n        140: iconst_1\n        141: goto          145\n        144: iconst_0\n-       145: putfield      #24                 // Field expectContentChecksum:Z\n+       145: putfield      #81                 // Field expectContentChecksum:Z\n        148: aload_0\n-       149: invokespecial #37                 // Method readOneByte:()I\n+       149: invokespecial #125                // Method readOneByte:()I\n        152: istore_2\n        153: iload_2\n        154: iconst_m1\n        155: if_icmpne     168\n-       158: new           #33                 // class java/io/IOException\n+       158: new           #112                // class java/io/IOException\n        161: dup\n-       162: ldc           #47                 // String Premature end of stream while reading frame BD byte\n-       164: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       162: ldc           #149                // String Premature end of stream while reading frame BD byte\n+       164: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        167: athrow\n        168: aload_0\n-       169: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       169: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        172: iload_2\n-       173: invokevirtual #39                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+       173: invokevirtual #131                // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n        176: aload_0\n-       177: getfield      #46                 // Field expectContentSize:Z\n+       177: getfield      #146                // Field expectContentSize:Z\n        180: ifeq          232\n        183: bipush        8\n        185: newarray       byte\n        187: astore_3\n        188: aload_0\n-       189: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+       189: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n        192: aload_3\n-       193: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       193: invokestatic  #102                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n        196: istore        4\n        198: aload_0\n        199: iload         4\n-       201: invokevirtual #32                 // Method count:(I)V\n+       201: invokevirtual #108                // Method count:(I)V\n        204: bipush        8\n        206: iload         4\n        208: if_icmpeq     221\n-       211: new           #33                 // class java/io/IOException\n+       211: new           #112                // class java/io/IOException\n        214: dup\n-       215: ldc           #48                 // String Premature end of stream while reading content size\n-       217: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       215: ldc           #151                // String Premature end of stream while reading content size\n+       217: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        220: athrow\n        221: aload_0\n-       222: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       222: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        225: aload_3\n        226: iconst_0\n        227: aload_3\n        228: arraylength\n-       229: invokevirtual #25                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+       229: invokevirtual #84                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n        232: aload_0\n-       233: invokespecial #37                 // Method readOneByte:()I\n+       233: invokespecial #125                // Method readOneByte:()I\n        236: istore_3\n        237: iload_3\n        238: iconst_m1\n        239: if_icmpne     252\n-       242: new           #33                 // class java/io/IOException\n+       242: new           #112                // class java/io/IOException\n        245: dup\n-       246: ldc           #49                 // String Premature end of stream while reading frame header checksum\n-       248: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       246: ldc           #153                // String Premature end of stream while reading frame header checksum\n+       248: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        251: athrow\n        252: aload_0\n-       253: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       256: invokevirtual #50                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+       253: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       256: invokevirtual #155                // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n        259: bipush        8\n        261: lshr\n-       262: ldc2_w        #51                 // long 255l\n+       262: ldc2_w        #158                // long 255l\n        265: land\n        266: l2i\n        267: istore        4\n        269: aload_0\n-       270: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       273: invokevirtual #53                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+       270: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       273: invokevirtual #160                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n        276: iload_3\n        277: iload         4\n        279: if_icmpeq     292\n-       282: new           #33                 // class java/io/IOException\n+       282: new           #112                // class java/io/IOException\n        285: dup\n-       286: ldc           #54                 // String Frame header checksum mismatch\n-       288: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       286: ldc           #163                // String Frame header checksum mismatch\n+       288: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        291: athrow\n        292: return\n       LineNumberTable:\n         line 203: 0\n         line 204: 5\n         line 205: 10\n         line 207: 20\n@@ -1123,102 +1123,102 @@\n \n   private void nextBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=7, args_size=1\n          0: aload_0\n-         1: invokespecial #55                 // Method maybeFinishCurrentBlock:()V\n+         1: invokespecial #165                // Method maybeFinishCurrentBlock:()V\n          4: aload_0\n-         5: getfield      #5                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+         5: getfield      #20                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n          8: iconst_4\n-         9: invokestatic  #56                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+         9: invokestatic  #168                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         12: lstore_1\n         13: lload_1\n-        14: ldc2_w        #57                 // long -2147483648l\n+        14: ldc2_w        #174                // long -2147483648l\n         17: land\n         18: lconst_0\n         19: lcmp\n         20: ifeq          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: istore_3\n         29: lload_1\n-        30: ldc2_w        #59                 // long 2147483647l\n+        30: ldc2_w        #176                // long 2147483647l\n         33: land\n         34: l2i\n         35: istore        4\n         37: iload         4\n         39: ifge          52\n-        42: new           #33                 // class java/io/IOException\n+        42: new           #112                // class java/io/IOException\n         45: dup\n-        46: ldc           #61                 // String Found illegal block with negative size\n-        48: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        46: ldc           #178                // String Found illegal block with negative size\n+        48: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         51: athrow\n         52: iload         4\n         54: ifne          82\n         57: aload_0\n-        58: invokespecial #62                 // Method verifyContentChecksum:()V\n+        58: invokespecial #180                // Method verifyContentChecksum:()V\n         61: aload_0\n-        62: getfield      #13                 // Field decompressConcatenated:Z\n+        62: getfield      #43                 // Field decompressConcatenated:Z\n         65: ifne          76\n         68: aload_0\n         69: iconst_1\n-        70: putfield      #19                 // Field endReached:Z\n+        70: putfield      #65                 // Field endReached:Z\n         73: goto          81\n         76: aload_0\n         77: iconst_0\n-        78: invokespecial #14                 // Method init:(Z)V\n+        78: invokespecial #47                 // Method init:(Z)V\n         81: return\n-        82: new           #63                 // class org/apache/commons/compress/utils/BoundedInputStream\n+        82: new           #183                // class org/apache/commons/compress/utils/BoundedInputStream\n         85: dup\n         86: aload_0\n-        87: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        87: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         90: iload         4\n         92: i2l\n-        93: invokespecial #64                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+        93: invokespecial #185                // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n         96: astore        5\n         98: aload_0\n-        99: getfield      #45                 // Field expectBlockChecksum:Z\n+        99: getfield      #143                // Field expectBlockChecksum:Z\n        102: ifeq          120\n-       105: new           #65                 // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+       105: new           #188                // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n        108: dup\n        109: aload_0\n-       110: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       110: getfield      #31                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        113: aload         5\n-       115: invokespecial #66                 // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+       115: invokespecial #190                // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n        118: astore        5\n        120: iload_3\n        121: ifeq          138\n        124: aload_0\n        125: iconst_1\n-       126: putfield      #67                 // Field inUncompressed:Z\n+       126: putfield      #193                // Field inUncompressed:Z\n        129: aload_0\n        130: aload         5\n-       132: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+       132: putfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n        135: goto          176\n        138: aload_0\n        139: iconst_0\n-       140: putfield      #67                 // Field inUncompressed:Z\n-       143: new           #43                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+       140: putfield      #193                // Field inUncompressed:Z\n+       143: new           #140                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n        146: dup\n        147: aload         5\n-       149: invokespecial #68                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       149: invokespecial #196                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        152: astore        6\n        154: aload_0\n-       155: getfield      #22                 // Field expectBlockDependency:Z\n+       155: getfield      #74                 // Field expectBlockDependency:Z\n        158: ifeq          170\n        161: aload         6\n        163: aload_0\n-       164: getfield      #42                 // Field blockDependencyBuffer:[B\n-       167: invokevirtual #69                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+       164: getfield      #137                // Field blockDependencyBuffer:[B\n+       167: invokevirtual #197                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n        170: aload_0\n        171: aload         6\n-       173: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+       173: putfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n        176: return\n       LineNumberTable:\n         line 248: 0\n         line 249: 4\n         line 250: 13\n         line 251: 29\n         line 252: 37\n@@ -1275,33 +1275,33 @@\n \n   private void maybeFinishCurrentBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+         1: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n          4: ifnull        43\n          7: aload_0\n-         8: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n-        11: invokevirtual #17                 // Method java/io/InputStream.close:()V\n+         8: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n+        11: invokevirtual #59                 // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+        16: putfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n         19: aload_0\n-        20: getfield      #45                 // Field expectBlockChecksum:Z\n+        20: getfield      #143                // Field expectBlockChecksum:Z\n         23: ifeq          43\n         26: aload_0\n         27: aload_0\n-        28: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        31: ldc           #70                 // String block\n-        33: invokespecial #71                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+        28: getfield      #31                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        31: ldc           #201                // String block\n+        33: invokespecial #203                // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n         36: aload_0\n-        37: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        40: invokevirtual #53                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        37: getfield      #31                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        40: invokevirtual #160                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n         43: return\n       LineNumberTable:\n         line 282: 0\n         line 283: 7\n         line 284: 14\n         line 285: 19\n         line 286: 26\n@@ -1317,24 +1317,24 @@\n \n   private void verifyContentChecksum() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field expectContentChecksum:Z\n+         1: getfield      #81                 // Field expectContentChecksum:Z\n          4: ifeq          17\n          7: aload_0\n          8: aload_0\n-         9: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        12: ldc           #72                 // String content\n-        14: invokespecial #71                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+         9: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        12: ldc           #207                // String content\n+        14: invokespecial #203                // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n         17: aload_0\n-        18: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        21: invokevirtual #53                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        18: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        21: invokevirtual #160                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n         24: return\n       LineNumberTable:\n         line 293: 0\n         line 294: 7\n         line 296: 17\n         line 297: 24\n       LocalVariableTable:\n@@ -1350,43 +1350,43 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=7, args_size=3\n          0: iconst_4\n          1: newarray       byte\n          3: astore_3\n          4: aload_0\n-         5: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         5: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n          8: aload_3\n-         9: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+         9: invokestatic  #102                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         12: istore        4\n         14: aload_0\n         15: iload         4\n-        17: invokevirtual #32                 // Method count:(I)V\n+        17: invokevirtual #108                // Method count:(I)V\n         20: iconst_4\n         21: iload         4\n         23: if_icmpeq     40\n-        26: new           #33                 // class java/io/IOException\n+        26: new           #112                // class java/io/IOException\n         29: dup\n         30: aload_2\n-        31: invokedynamic #73,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-        36: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        31: invokedynamic #209,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        36: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         39: athrow\n         40: aload_1\n-        41: invokevirtual #50                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+        41: invokevirtual #155                // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n         44: lstore        5\n         46: lload         5\n         48: aload_3\n-        49: invokestatic  #74                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+        49: invokestatic  #212                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n         52: lcmp\n         53: ifeq          70\n-        56: new           #33                 // class java/io/IOException\n+        56: new           #112                // class java/io/IOException\n         59: dup\n         60: aload_2\n-        61: invokedynamic #75,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n-        66: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        61: invokedynamic #215,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        66: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         69: athrow\n         70: return\n       LineNumberTable:\n         line 300: 0\n         line 301: 4\n         line 302: 14\n         line 303: 20\n@@ -1415,23 +1415,23 @@\n \n   private int readOneByte() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #76                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n+         1: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #216                // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iconst_m1\n         10: if_icmpeq     24\n         13: aload_0\n         14: iconst_1\n-        15: invokevirtual #32                 // Method count:(I)V\n+        15: invokevirtual #108                // Method count:(I)V\n         18: iload_1\n         19: sipush        255\n         22: iand\n         23: ireturn\n         24: iconst_m1\n         25: ireturn\n       LineNumberTable:\n@@ -1453,48 +1453,48 @@\n \n   private int readOnce(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=8, args_size=4\n          0: aload_0\n-         1: getfield      #67                 // Field inUncompressed:Z\n+         1: getfield      #193                // Field inUncompressed:Z\n          4: ifeq          28\n          7: aload_0\n-         8: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+         8: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n         11: aload_1\n         12: iload_2\n         13: iload_3\n-        14: invokevirtual #77                 // Method java/io/InputStream.read:([BII)I\n+        14: invokevirtual #218                // Method java/io/InputStream.read:([BII)I\n         17: istore        4\n         19: aload_0\n         20: iload         4\n-        22: invokevirtual #32                 // Method count:(I)V\n+        22: invokevirtual #108                // Method count:(I)V\n         25: iload         4\n         27: ireturn\n         28: aload_0\n-        29: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n-        32: checkcast     #43                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+        29: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n+        32: checkcast     #140                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n         35: astore        4\n         37: aload         4\n-        39: invokevirtual #78                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        39: invokevirtual #219                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         42: lstore        5\n         44: aload_0\n-        45: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+        45: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n         48: aload_1\n         49: iload_2\n         50: iload_3\n-        51: invokevirtual #77                 // Method java/io/InputStream.read:([BII)I\n+        51: invokevirtual #218                // Method java/io/InputStream.read:([BII)I\n         54: istore        7\n         56: aload_0\n         57: aload         4\n-        59: invokevirtual #78                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        59: invokevirtual #219                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         62: lload         5\n         64: lsub\n-        65: invokevirtual #79                 // Method count:(J)V\n+        65: invokevirtual #220                // Method count:(J)V\n         68: iload         7\n         70: ireturn\n       LineNumberTable:\n         line 322: 0\n         line 323: 7\n         line 324: 19\n         line 325: 25\n@@ -1536,15 +1536,15 @@\n         14: istore_1\n         15: iload_1\n         16: iconst_4\n         17: if_icmpge     41\n         20: aload_0\n         21: iload_1\n         22: baload\n-        23: getstatic     #80                 // Field SKIPPABLE_FRAME_TRAILER:[B\n+        23: getstatic     #223                // Field SKIPPABLE_FRAME_TRAILER:[B\n         26: iload_1\n         27: iconst_1\n         28: isub\n         29: baload\n         30: if_icmpeq     35\n         33: iconst_0\n         34: ireturn\n@@ -1580,55 +1580,55 @@\n       stack=4, locals=7, args_size=2\n          0: iconst_4\n          1: istore_2\n          2: iload_2\n          3: iconst_4\n          4: if_icmpne     89\n          7: aload_1\n-         8: invokestatic  #81                 // Method isSkippableFrameSignature:([B)Z\n+         8: invokestatic  #226                // Method isSkippableFrameSignature:([B)Z\n         11: ifeq          89\n         14: aload_0\n-        15: getfield      #5                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        15: getfield      #20                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         18: iconst_4\n-        19: invokestatic  #56                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+        19: invokestatic  #168                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         22: lstore_3\n         23: lload_3\n         24: lconst_0\n         25: lcmp\n         26: ifge          39\n-        29: new           #33                 // class java/io/IOException\n+        29: new           #112                // class java/io/IOException\n         32: dup\n-        33: ldc           #82                 // String Found illegal skippable frame with negative size\n-        35: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        33: ldc           #230                // String Found illegal skippable frame with negative size\n+        35: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         38: athrow\n         39: aload_0\n-        40: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        40: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         43: lload_3\n-        44: invokestatic  #83                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+        44: invokestatic  #232                // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n         47: lstore        5\n         49: aload_0\n         50: lload         5\n-        52: invokevirtual #79                 // Method count:(J)V\n+        52: invokevirtual #220                // Method count:(J)V\n         55: lload_3\n         56: lload         5\n         58: lcmp\n         59: ifeq          72\n-        62: new           #33                 // class java/io/IOException\n+        62: new           #112                // class java/io/IOException\n         65: dup\n-        66: ldc           #84                 // String Premature end of stream while skipping frame\n-        68: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        66: ldc           #236                // String Premature end of stream while skipping frame\n+        68: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         71: athrow\n         72: aload_0\n-        73: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        73: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         76: aload_1\n-        77: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        77: invokestatic  #102                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         80: istore_2\n         81: aload_0\n         82: iload_2\n-        83: invokevirtual #32                 // Method count:(I)V\n+        83: invokevirtual #108                // Method count:(I)V\n         86: goto          2\n         89: iload_2\n         90: ireturn\n       LineNumberTable:\n         line 355: 0\n         line 356: 2\n         line 357: 14\n@@ -1667,43 +1667,43 @@\n   private void appendToBlockDependencyBuffer(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=4\n          0: iload_3\n          1: aload_0\n-         2: getfield      #42                 // Field blockDependencyBuffer:[B\n+         2: getfield      #137                // Field blockDependencyBuffer:[B\n          5: arraylength\n-         6: invokestatic  #85                 // Method java/lang/Math.min:(II)I\n+         6: invokestatic  #238                // Method java/lang/Math.min:(II)I\n          9: istore_3\n         10: iload_3\n         11: ifle          55\n         14: aload_0\n-        15: getfield      #42                 // Field blockDependencyBuffer:[B\n+        15: getfield      #137                // Field blockDependencyBuffer:[B\n         18: arraylength\n         19: iload_3\n         20: isub\n         21: istore        4\n         23: iload         4\n         25: ifle          43\n         28: aload_0\n-        29: getfield      #42                 // Field blockDependencyBuffer:[B\n+        29: getfield      #137                // Field blockDependencyBuffer:[B\n         32: iload_3\n         33: aload_0\n-        34: getfield      #42                 // Field blockDependencyBuffer:[B\n+        34: getfield      #137                // Field blockDependencyBuffer:[B\n         37: iconst_0\n         38: iload         4\n-        40: invokestatic  #86                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        40: invokestatic  #244                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         43: aload_1\n         44: iload_2\n         45: aload_0\n-        46: getfield      #42                 // Field blockDependencyBuffer:[B\n+        46: getfield      #137                // Field blockDependencyBuffer:[B\n         49: iload         4\n         51: iload_3\n-        52: invokestatic  #86                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        52: invokestatic  #244                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         55: return\n       LineNumberTable:\n         line 373: 0\n         line 374: 10\n         line 375: 14\n         line 376: 23\n         line 378: 28\n@@ -1725,40 +1725,40 @@\n \n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: iload_1\n-         1: getstatic     #87                 // Field LZ4_SIGNATURE:[B\n+         1: getstatic     #250                // Field LZ4_SIGNATURE:[B\n          4: arraylength\n          5: if_icmpge     10\n          8: iconst_0\n          9: ireturn\n         10: aload_0\n         11: astore_2\n         12: aload_0\n         13: arraylength\n-        14: getstatic     #87                 // Field LZ4_SIGNATURE:[B\n+        14: getstatic     #250                // Field LZ4_SIGNATURE:[B\n         17: arraylength\n         18: if_icmple     39\n-        21: getstatic     #87                 // Field LZ4_SIGNATURE:[B\n+        21: getstatic     #250                // Field LZ4_SIGNATURE:[B\n         24: arraylength\n         25: newarray       byte\n         27: astore_2\n         28: aload_0\n         29: iconst_0\n         30: aload_2\n         31: iconst_0\n-        32: getstatic     #87                 // Field LZ4_SIGNATURE:[B\n+        32: getstatic     #250                // Field LZ4_SIGNATURE:[B\n         35: arraylength\n-        36: invokestatic  #86                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        36: invokestatic  #244                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         39: aload_2\n-        40: getstatic     #87                 // Field LZ4_SIGNATURE:[B\n-        43: invokestatic  #88                 // Method java/util/Arrays.equals:([B[B)Z\n+        40: getstatic     #250                // Field LZ4_SIGNATURE:[B\n+        43: invokestatic  #253                // Method java/util/Arrays.equals:([B[B)Z\n         46: ireturn\n       LineNumberTable:\n         line 396: 0\n         line 397: 8\n         line 400: 10\n         line 401: 12\n         line 402: 21\n@@ -1794,47 +1794,47 @@\n         13: iconst_2\n         14: bipush        77\n         16: bastore\n         17: dup\n         18: iconst_3\n         19: bipush        24\n         21: bastore\n-        22: putstatic     #87                 // Field LZ4_SIGNATURE:[B\n+        22: putstatic     #250                // Field LZ4_SIGNATURE:[B\n         25: iconst_3\n         26: newarray       byte\n         28: dup\n         29: iconst_0\n         30: bipush        42\n         32: bastore\n         33: dup\n         34: iconst_1\n         35: bipush        77\n         37: bastore\n         38: dup\n         39: iconst_2\n         40: bipush        24\n         42: bastore\n-        43: putstatic     #80                 // Field SKIPPABLE_FRAME_TRAILER:[B\n+        43: putstatic     #223                // Field SKIPPABLE_FRAME_TRAILER:[B\n         46: return\n       LineNumberTable:\n         line 46: 0\n         line 49: 25\n }\n SourceFile: \"FramedLZ4CompressorInputStream.java\"\n-InnerClasses:\n-  public static #118= #117 of #269;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #353= #352 of #357; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #216 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #330 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #217 ()I\n-      #218 REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-      #217 ()I\n-  1: #255 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #337 ()I\n+      #338 REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+      #337 ()I\n+  1: #339 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #256 Unsupported version \\u0001\n-  2: #255 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #345 Unsupported version \\u0001\n+  2: #339 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #282 Premature end of stream while reading \\u0001 checksum\n-  3: #255 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #347 Premature end of stream while reading \\u0001 checksum\n+  3: #339 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #285 \\u0001 checksum mismatch.\n+      #349 \\u0001 checksum mismatch.\n+InnerClasses:\n+  public static #354= #352 of #169;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static final #359= #355 of #357; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
