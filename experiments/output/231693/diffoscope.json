{"diffoscope-json-version": 1, "source1": "first/NewAttributeBands$Callable.class", "source2": "second/NewAttributeBands$Callable.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -16,51 +16,54 @@\n     private int count;\n     private int index;\n     \n     public Callable(final List<NewAttributeBands.LayoutElement> body) {\n         this.body = body;\n     }\n     \n-    public void addCount(final int count) {\n-        this.count += count;\n+    public void addCount(final int n) {\n+        this.count += n;\n     }\n     \n-    public void addNextToAttribute(final NewAttribute attribute) {\n-        for (final NewAttributeBands.LayoutElement element : this.body) {\n-            element.addToAttribute(this.index, attribute);\n+    public void addNextToAttribute(final NewAttribute newAttribute) {\n+        final Iterator iterator = this.body.iterator();\n+        while (iterator.hasNext()) {\n+            ((NewAttributeBands.LayoutElement)iterator.next()).addToAttribute(this.index, newAttribute);\n         }\n         ++this.index;\n     }\n     \n-    public void addToAttribute(final int n, final NewAttribute attribute) {\n+    public void addToAttribute(final int n, final NewAttribute newAttribute) {\n         if (this.isFirstCallable) {\n-            for (final NewAttributeBands.LayoutElement element : this.body) {\n-                element.addToAttribute(this.index, attribute);\n+            final Iterator iterator = this.body.iterator();\n+            while (iterator.hasNext()) {\n+                ((NewAttributeBands.LayoutElement)iterator.next()).addToAttribute(this.index, newAttribute);\n             }\n             ++this.index;\n         }\n     }\n     \n     public List<NewAttributeBands.LayoutElement> getBody() {\n         return this.body;\n     }\n     \n     public boolean isBackwardsCallable() {\n         return this.isBackwardsCallable;\n     }\n     \n-    public void readBands(final InputStream in, int count) throws IOException, Pack200Exception {\n+    public void readBands(final InputStream inputStream, int count) throws IOException, Pack200Exception {\n         if (this.isFirstCallable) {\n             count += this.count;\n         }\n         else {\n             count = this.count;\n         }\n-        for (final NewAttributeBands.LayoutElement element : this.body) {\n-            element.readBands(in, count);\n+        final Iterator iterator = this.body.iterator();\n+        while (iterator.hasNext()) {\n+            ((NewAttributeBands.LayoutElement)iterator.next()).readBands(inputStream, count);\n         }\n     }\n     \n     public void setBackwardsCallable() {\n         this.isBackwardsCallable = true;\n     }\n     \n"}]}
