{"diffoscope-json-version": 1, "source1": "first/AuditEventDefaultFormatter.class", "source2": "second/AuditEventDefaultFormatter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,50 +6,47 @@\n import com.puppycrawl.tools.checkstyle.api.AuditEvent;\n \n public class AuditEventDefaultFormatter implements AuditEventFormatter\n {\n     private static final int LENGTH_OF_ALL_SEPARATORS = 10;\n     private static final String SUFFIX = \"Check\";\n     \n-    public String format(final AuditEvent event) {\n-        final String fileName = event.getFileName();\n-        final String message = event.getMessage();\n-        final SeverityLevel severityLevel = event.getSeverityLevel();\n-        String severityLevelName;\n+    public String format(final AuditEvent auditEvent) {\n+        final String fileName = auditEvent.getFileName();\n+        final String message = auditEvent.getMessage();\n+        final SeverityLevel severityLevel = auditEvent.getSeverityLevel();\n+        String upperCase;\n         if (severityLevel == SeverityLevel.WARNING) {\n-            severityLevelName = \"WARN\";\n+            upperCase = \"WARN\";\n         }\n         else {\n-            severityLevelName = severityLevel.getName().toUpperCase(Locale.US);\n+            upperCase = severityLevel.getName().toUpperCase(Locale.US);\n         }\n-        final int bufLen = calculateBufferLength(event, severityLevelName.length());\n-        final StringBuilder sb = new StringBuilder(bufLen);\n-        sb.append('[').append(severityLevelName).append(\"] \").append(fileName).append(':').append(event.getLine());\n-        if (event.getColumn() > 0) {\n-            sb.append(':').append(event.getColumn());\n+        final StringBuilder sb = new StringBuilder(calculateBufferLength(auditEvent, upperCase.length()));\n+        sb.append('[').append(upperCase).append(\"] \").append(fileName).append(':').append(auditEvent.getLine());\n+        if (auditEvent.getColumn() > 0) {\n+            sb.append(':').append(auditEvent.getColumn());\n         }\n         sb.append(\": \").append(message).append(\" [\");\n-        if (event.getModuleId() == null) {\n-            final String checkShortName = getCheckShortName(event);\n-            sb.append(checkShortName);\n+        if (auditEvent.getModuleId() == null) {\n+            sb.append(getCheckShortName(auditEvent));\n         }\n         else {\n-            sb.append(event.getModuleId());\n+            sb.append(auditEvent.getModuleId());\n         }\n         sb.append(']');\n         return sb.toString();\n     }\n     \n-    private static int calculateBufferLength(final AuditEvent event, final int severityLevelNameLength) {\n-        return 10 + event.getFileName().length() + event.getMessage().length() + severityLevelNameLength + getCheckShortName(event).length();\n+    private static int calculateBufferLength(final AuditEvent auditEvent, final int n) {\n+        return 10 + auditEvent.getFileName().length() + auditEvent.getMessage().length() + n + getCheckShortName(auditEvent).length();\n     }\n     \n-    private static String getCheckShortName(final AuditEvent event) {\n-        final String checkFullName = event.getSourceName();\n-        String checkShortName = checkFullName.substring(checkFullName.lastIndexOf(46) + 1);\n-        if (checkShortName.endsWith(\"Check\")) {\n-            final int endIndex = checkShortName.length() - \"Check\".length();\n-            checkShortName = checkShortName.substring(0, endIndex);\n+    private static String getCheckShortName(final AuditEvent auditEvent) {\n+        final String sourceName = auditEvent.getSourceName();\n+        String s = sourceName.substring(sourceName.lastIndexOf(46) + 1);\n+        if (s.endsWith(\"Check\")) {\n+            s = s.substring(0, s.length() - \"Check\".length());\n         }\n-        return checkShortName;\n+        return s;\n     }\n }\n"}]}
