{"diffoscope-json-version": 1, "source1": "first/SimplifyBooleanExpressionCheck.class", "source2": "second/SimplifyBooleanExpressionCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -19,27 +19,27 @@\n         return this.getRequiredTokens();\n     }\n     \n     public int[] getRequiredTokens() {\n         return new int[] { 133, 134 };\n     }\n     \n-    public void visitToken(final DetailAST ast) {\n-        final DetailAST parent = ast.getParent();\n+    public void visitToken(final DetailAST detailAST) {\n+        final DetailAST parent = detailAST.getParent();\n         switch (parent.getType()) {\n             case 110:\n             case 111:\n             case 115:\n             case 116:\n             case 132: {\n                 this.log(parent, \"simplify.expression\", new Object[0]);\n                 break;\n             }\n             case 109: {\n-                final DetailAST nextSibling = ast.getNextSibling();\n+                final DetailAST nextSibling = detailAST.getNextSibling();\n                 if (TokenUtil.isBooleanLiteralType(parent.getFirstChild().getType()) || (nextSibling != null && nextSibling.getNextSibling() != null && TokenUtil.isBooleanLiteralType(nextSibling.getNextSibling().getType()))) {\n                     this.log(parent, \"simplify.expression\", new Object[0]);\n                     break;\n                 }\n                 break;\n             }\n         }\n"}]}
