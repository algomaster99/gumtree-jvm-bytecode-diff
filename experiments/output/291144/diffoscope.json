{"diffoscope-json-version": 1, "source1": "first/Memoizer.class", "source2": "second/Memoizer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,46 +1,46 @@\n-  SHA-256 checksum 46fd676b8f700ae4d74d9707accd7cef133fd0e42eb66e961dc07eb8ca9f4dde\n+  SHA-256 checksum 8e5f0a5641b97c992df65ef50f6efd5cbd019c9e5d5100e82edbbec824fcba0a\n   Compiled from \"Memoizer.java\"\n public class org.apache.commons.lang3.concurrent.Memoizer<I extends java.lang.Object, O extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.Computable<I, O>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #27                         // org/apache/commons/lang3/concurrent/Memoizer\n   super_class: #28                        // java/lang/Object\n   interfaces: 1, fields: 3, methods: 5, attributes: 4\n Constant pool:\n-    #1 = Methodref          #27.#62       // org/apache/commons/lang3/concurrent/Memoizer.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n-    #2 = Methodref          #28.#63       // java/lang/Object.\"<init>\":()V\n-    #3 = Class              #64           // java/util/concurrent/ConcurrentHashMap\n-    #4 = Methodref          #3.#63        // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-    #5 = Fieldref           #27.#65       // org/apache/commons/lang3/concurrent/Memoizer.cache:Ljava/util/concurrent/ConcurrentMap;\n-    #6 = Fieldref           #27.#66       // org/apache/commons/lang3/concurrent/Memoizer.computable:Lorg/apache/commons/lang3/concurrent/Computable;\n-    #7 = Fieldref           #27.#67       // org/apache/commons/lang3/concurrent/Memoizer.recalculate:Z\n-    #8 = InterfaceMethodref #68.#69       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-    #9 = Class              #70           // java/util/concurrent/Future\n-   #10 = InvokeDynamic      #0:#75        // #0:call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n-   #11 = Class              #76           // java/util/concurrent/FutureTask\n-   #12 = Methodref          #11.#77       // java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n-   #13 = InterfaceMethodref #68.#78       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #14 = Methodref          #11.#79       // java/util/concurrent/FutureTask.run:()V\n-   #15 = InterfaceMethodref #9.#80        // java/util/concurrent/Future.get:()Ljava/lang/Object;\n-   #16 = Class              #81           // java/util/concurrent/CancellationException\n-   #17 = InterfaceMethodref #68.#82       // java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #18 = Class              #83           // java/util/concurrent/ExecutionException\n-   #19 = Methodref          #18.#84       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-   #20 = Methodref          #27.#85       // org/apache/commons/lang3/concurrent/Memoizer.launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-   #21 = Class              #86           // java/lang/RuntimeException\n-   #22 = Class              #87           // java/lang/Error\n-   #23 = Class              #88           // java/lang/IllegalStateException\n-   #24 = String             #89           // Unchecked exception\n-   #25 = Methodref          #23.#90       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #26 = InterfaceMethodref #29.#91       // org/apache/commons/lang3/concurrent/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #27 = Class              #92           // org/apache/commons/lang3/concurrent/Memoizer\n-   #28 = Class              #93           // java/lang/Object\n-   #29 = Class              #94           // org/apache/commons/lang3/concurrent/Computable\n+    #1 = Methodref          #27.#59       // org/apache/commons/lang3/concurrent/Memoizer.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n+    #2 = Methodref          #28.#60       // java/lang/Object.\"<init>\":()V\n+    #3 = Class              #61           // java/util/concurrent/ConcurrentHashMap\n+    #4 = Methodref          #3.#60        // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+    #5 = Fieldref           #27.#62       // org/apache/commons/lang3/concurrent/Memoizer.cache:Ljava/util/concurrent/ConcurrentMap;\n+    #6 = Fieldref           #27.#63       // org/apache/commons/lang3/concurrent/Memoizer.computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+    #7 = Fieldref           #27.#64       // org/apache/commons/lang3/concurrent/Memoizer.recalculate:Z\n+    #8 = InterfaceMethodref #65.#66       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+    #9 = Class              #67           // java/util/concurrent/Future\n+   #10 = InvokeDynamic      #0:#72        // #0:call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n+   #11 = Class              #73           // java/util/concurrent/FutureTask\n+   #12 = Methodref          #11.#74       // java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n+   #13 = InterfaceMethodref #65.#75       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #14 = Methodref          #11.#76       // java/util/concurrent/FutureTask.run:()V\n+   #15 = InterfaceMethodref #9.#77        // java/util/concurrent/Future.get:()Ljava/lang/Object;\n+   #16 = Class              #78           // java/util/concurrent/CancellationException\n+   #17 = InterfaceMethodref #65.#79       // java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #18 = Class              #80           // java/util/concurrent/ExecutionException\n+   #19 = Methodref          #18.#81       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+   #20 = Methodref          #27.#82       // org/apache/commons/lang3/concurrent/Memoizer.launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #21 = Class              #83           // java/lang/RuntimeException\n+   #22 = Class              #84           // java/lang/Error\n+   #23 = Class              #85           // java/lang/IllegalStateException\n+   #24 = String             #86           // Unchecked exception\n+   #25 = Methodref          #23.#87       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #26 = InterfaceMethodref #29.#88       // org/apache/commons/lang3/concurrent/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #27 = Class              #89           // org/apache/commons/lang3/concurrent/Memoizer\n+   #28 = Class              #90           // java/lang/Object\n+   #29 = Class              #91           // org/apache/commons/lang3/concurrent/Computable\n    #30 = Utf8               cache\n    #31 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n    #32 = Utf8               Signature\n    #33 = Utf8               Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n    #34 = Utf8               computable\n    #35 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable;\n    #36 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n@@ -52,91 +52,88 @@\n    #42 = Utf8               LineNumberTable\n    #43 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;)V\n    #44 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n    #45 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;Z)V\n    #46 = Utf8               compute\n    #47 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n    #48 = Utf8               StackMapTable\n-   #49 = Class              #70           // java/util/concurrent/Future\n-   #50 = Class              #81           // java/util/concurrent/CancellationException\n-   #51 = Class              #83           // java/util/concurrent/ExecutionException\n-   #52 = Utf8               Exceptions\n-   #53 = Class              #95           // java/lang/InterruptedException\n-   #54 = Utf8               (TI;)TO;\n-   #55 = Utf8               launderException\n-   #56 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-   #57 = Utf8               lambda$compute$0\n-   #58 = Class              #96           // java/lang/Exception\n-   #59 = Utf8               <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n-   #60 = Utf8               SourceFile\n-   #61 = Utf8               Memoizer.java\n-   #62 = NameAndType        #39:#44       // \"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n-   #63 = NameAndType        #39:#97       // \"<init>\":()V\n-   #64 = Utf8               java/util/concurrent/ConcurrentHashMap\n-   #65 = NameAndType        #30:#31       // cache:Ljava/util/concurrent/ConcurrentMap;\n-   #66 = NameAndType        #34:#35       // computable:Lorg/apache/commons/lang3/concurrent/Computable;\n-   #67 = NameAndType        #37:#38       // recalculate:Z\n-   #68 = Class              #98           // java/util/concurrent/ConcurrentMap\n-   #69 = NameAndType        #99:#47       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #70 = Utf8               java/util/concurrent/Future\n-   #71 = Utf8               BootstrapMethods\n-   #72 = MethodHandle       6:#100        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #73 = MethodType         #101          //  ()Ljava/lang/Object;\n-   #74 = MethodHandle       7:#102        // REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #75 = NameAndType        #103:#104     // call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n-   #76 = Utf8               java/util/concurrent/FutureTask\n-   #77 = NameAndType        #39:#105      // \"<init>\":(Ljava/util/concurrent/Callable;)V\n-   #78 = NameAndType        #106:#107     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #79 = NameAndType        #108:#97      // run:()V\n-   #80 = NameAndType        #99:#101      // get:()Ljava/lang/Object;\n-   #81 = Utf8               java/util/concurrent/CancellationException\n-   #82 = NameAndType        #109:#110     // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #83 = Utf8               java/util/concurrent/ExecutionException\n-   #84 = NameAndType        #111:#112     // getCause:()Ljava/lang/Throwable;\n-   #85 = NameAndType        #55:#56       // launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-   #86 = Utf8               java/lang/RuntimeException\n-   #87 = Utf8               java/lang/Error\n-   #88 = Utf8               java/lang/IllegalStateException\n-   #89 = Utf8               Unchecked exception\n-   #90 = NameAndType        #39:#113      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #91 = NameAndType        #46:#47       // compute:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #92 = Utf8               org/apache/commons/lang3/concurrent/Memoizer\n-   #93 = Utf8               java/lang/Object\n-   #94 = Utf8               org/apache/commons/lang3/concurrent/Computable\n-   #95 = Utf8               java/lang/InterruptedException\n-   #96 = Utf8               java/lang/Exception\n-   #97 = Utf8               ()V\n-   #98 = Utf8               java/util/concurrent/ConcurrentMap\n-   #99 = Utf8               get\n-  #100 = Methodref          #114.#115     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #101 = Utf8               ()Ljava/lang/Object;\n-  #102 = Methodref          #27.#116      // org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #103 = Utf8               call\n-  #104 = Utf8               (Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n-  #105 = Utf8               (Ljava/util/concurrent/Callable;)V\n-  #106 = Utf8               putIfAbsent\n-  #107 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #108 = Utf8               run\n-  #109 = Utf8               remove\n-  #110 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #111 = Utf8               getCause\n-  #112 = Utf8               ()Ljava/lang/Throwable;\n-  #113 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #114 = Class              #117          // java/lang/invoke/LambdaMetafactory\n-  #115 = NameAndType        #118:#122     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #116 = NameAndType        #57:#47       // lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #117 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #118 = Utf8               metafactory\n-  #119 = Class              #124          // java/lang/invoke/MethodHandles$Lookup\n-  #120 = Utf8               Lookup\n-  #121 = Utf8               InnerClasses\n-  #122 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #123 = Class              #125          // java/lang/invoke/MethodHandles\n-  #124 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #125 = Utf8               java/lang/invoke/MethodHandles\n+   #49 = Utf8               Exceptions\n+   #50 = Class              #92           // java/lang/InterruptedException\n+   #51 = Utf8               (TI;)TO;\n+   #52 = Utf8               launderException\n+   #53 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #54 = Utf8               lambda$compute$0\n+   #55 = Class              #93           // java/lang/Exception\n+   #56 = Utf8               <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n+   #57 = Utf8               SourceFile\n+   #58 = Utf8               Memoizer.java\n+   #59 = NameAndType        #39:#44       // \"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n+   #60 = NameAndType        #39:#94       // \"<init>\":()V\n+   #61 = Utf8               java/util/concurrent/ConcurrentHashMap\n+   #62 = NameAndType        #30:#31       // cache:Ljava/util/concurrent/ConcurrentMap;\n+   #63 = NameAndType        #34:#35       // computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+   #64 = NameAndType        #37:#38       // recalculate:Z\n+   #65 = Class              #95           // java/util/concurrent/ConcurrentMap\n+   #66 = NameAndType        #96:#47       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #67 = Utf8               java/util/concurrent/Future\n+   #68 = Utf8               BootstrapMethods\n+   #69 = MethodHandle       6:#97         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #70 = MethodType         #98           //  ()Ljava/lang/Object;\n+   #71 = MethodHandle       7:#99         // REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #72 = NameAndType        #100:#101     // call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n+   #73 = Utf8               java/util/concurrent/FutureTask\n+   #74 = NameAndType        #39:#102      // \"<init>\":(Ljava/util/concurrent/Callable;)V\n+   #75 = NameAndType        #103:#104     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #76 = NameAndType        #105:#94      // run:()V\n+   #77 = NameAndType        #96:#98       // get:()Ljava/lang/Object;\n+   #78 = Utf8               java/util/concurrent/CancellationException\n+   #79 = NameAndType        #106:#107     // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #80 = Utf8               java/util/concurrent/ExecutionException\n+   #81 = NameAndType        #108:#109     // getCause:()Ljava/lang/Throwable;\n+   #82 = NameAndType        #52:#53       // launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #83 = Utf8               java/lang/RuntimeException\n+   #84 = Utf8               java/lang/Error\n+   #85 = Utf8               java/lang/IllegalStateException\n+   #86 = Utf8               Unchecked exception\n+   #87 = NameAndType        #39:#110      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #88 = NameAndType        #46:#47       // compute:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #89 = Utf8               org/apache/commons/lang3/concurrent/Memoizer\n+   #90 = Utf8               java/lang/Object\n+   #91 = Utf8               org/apache/commons/lang3/concurrent/Computable\n+   #92 = Utf8               java/lang/InterruptedException\n+   #93 = Utf8               java/lang/Exception\n+   #94 = Utf8               ()V\n+   #95 = Utf8               java/util/concurrent/ConcurrentMap\n+   #96 = Utf8               get\n+   #97 = Methodref          #111.#112     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #98 = Utf8               ()Ljava/lang/Object;\n+   #99 = Methodref          #27.#113      // org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #100 = Utf8               call\n+  #101 = Utf8               (Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n+  #102 = Utf8               (Ljava/util/concurrent/Callable;)V\n+  #103 = Utf8               putIfAbsent\n+  #104 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #105 = Utf8               run\n+  #106 = Utf8               remove\n+  #107 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #108 = Utf8               getCause\n+  #109 = Utf8               ()Ljava/lang/Throwable;\n+  #110 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #111 = Class              #114          // java/lang/invoke/LambdaMetafactory\n+  #112 = NameAndType        #115:#119     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #113 = NameAndType        #54:#47       // lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #114 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #115 = Utf8               metafactory\n+  #116 = Class              #121          // java/lang/invoke/MethodHandles$Lookup\n+  #117 = Utf8               Lookup\n+  #118 = Utf8               InnerClasses\n+  #119 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #120 = Class              #122          // java/lang/invoke/MethodHandles\n+  #121 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #122 = Utf8               java/lang/invoke/MethodHandles\n {\n   private final java.util.concurrent.ConcurrentMap<I, java.util.concurrent.Future<O>> cache;\n     descriptor: Ljava/util/concurrent/ConcurrentMap;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #33                          // Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n \n   private final org.apache.commons.lang3.concurrent.Computable<I, O> computable;\n@@ -286,15 +283,15 @@\n         frame_type = 252 /* append */\n           offset_delta = 19\n           locals = [ class java/util/concurrent/ExecutionException ]\n         frame_type = 249 /* chop */\n           offset_delta = 8\n     Exceptions:\n       throws java.lang.InterruptedException\n-    Signature: #54                          // (TI;)TO;\n+    Signature: #51                          // (TI;)TO;\n \n   private java.lang.RuntimeException launderException(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n@@ -336,17 +333,17 @@\n          5: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/lang3/concurrent/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;\n         10: areturn\n       LineNumberTable:\n         line 118: 0\n     Exceptions:\n       throws java.lang.Exception\n }\n-Signature: #59                          // <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n+Signature: #56                          // <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n SourceFile: \"Memoizer.java\"\n InnerClasses:\n-  public static final #120= #119 of #123; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #117= #116 of #120; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #72 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #69 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #73 ()Ljava/lang/Object;\n-      #74 REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-      #73 ()Ljava/lang/Object;\n+      #70 ()Ljava/lang/Object;\n+      #71 REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+      #70 ()Ljava/lang/Object;\n"}]}
