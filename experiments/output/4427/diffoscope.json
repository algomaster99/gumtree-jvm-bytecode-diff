{"diffoscope-json-version": 1, "source1": "first/ChunkedOutputStream.class", "source2": "second/ChunkedOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,27 +1,27 @@\n-  SHA-256 checksum 23112c99b50c0494c584a1e1f78cb71f57beaef72729186deab3c5ce170b65a2\n+  SHA-256 checksum 24e5d2c82b61c835b06e4d7d2e225580d11192c0fe37587d7df225590b4f68c5\n   Compiled from \"ChunkedOutputStream.java\"\n public class org.apache.commons.io.output.ChunkedOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #5                          // org/apache/commons/io/output/ChunkedOutputStream\n   super_class: #10                        // java/io/FilterOutputStream\n   interfaces: 0, fields: 2, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #10.#42        // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Class              #43            // java/lang/IllegalArgumentException\n-   #3 = Methodref          #2.#44         // java/lang/IllegalArgumentException.\"<init>\":()V\n-   #4 = Fieldref           #5.#45         // org/apache/commons/io/output/ChunkedOutputStream.chunkSize:I\n-   #5 = Class              #46            // org/apache/commons/io/output/ChunkedOutputStream\n-   #6 = Methodref          #5.#47         // org/apache/commons/io/output/ChunkedOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n-   #7 = Methodref          #48.#49        // java/lang/Math.min:(II)I\n-   #8 = Fieldref           #5.#50         // org/apache/commons/io/output/ChunkedOutputStream.out:Ljava/io/OutputStream;\n-   #9 = Methodref          #51.#52        // java/io/OutputStream.write:([BII)V\n-  #10 = Class              #53            // java/io/FilterOutputStream\n+   #1 = Methodref          #10.#41        // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #2 = Class              #42            // java/lang/IllegalArgumentException\n+   #3 = Methodref          #2.#43         // java/lang/IllegalArgumentException.\"<init>\":()V\n+   #4 = Fieldref           #5.#44         // org/apache/commons/io/output/ChunkedOutputStream.chunkSize:I\n+   #5 = Class              #45            // org/apache/commons/io/output/ChunkedOutputStream\n+   #6 = Methodref          #5.#46         // org/apache/commons/io/output/ChunkedOutputStream.\"<init>\":(Ljava/io/OutputStream;I)V\n+   #7 = Methodref          #47.#48        // java/lang/Math.min:(II)I\n+   #8 = Fieldref           #5.#49         // org/apache/commons/io/output/ChunkedOutputStream.out:Ljava/io/OutputStream;\n+   #9 = Methodref          #26.#50        // java/io/OutputStream.write:([BII)V\n+  #10 = Class              #51            // java/io/FilterOutputStream\n   #11 = Utf8               DEFAULT_CHUNK_SIZE\n   #12 = Utf8               I\n   #13 = Utf8               ConstantValue\n   #14 = Integer            4096\n   #15 = Utf8               chunkSize\n   #16 = Utf8               <init>\n   #17 = Utf8               (Ljava/io/OutputStream;I)V\n@@ -29,49 +29,47 @@\n   #19 = Utf8               LineNumberTable\n   #20 = Utf8               LocalVariableTable\n   #21 = Utf8               this\n   #22 = Utf8               Lorg/apache/commons/io/output/ChunkedOutputStream;\n   #23 = Utf8               stream\n   #24 = Utf8               Ljava/io/OutputStream;\n   #25 = Utf8               StackMapTable\n-  #26 = Class              #46            // org/apache/commons/io/output/ChunkedOutputStream\n-  #27 = Class              #54            // java/io/OutputStream\n-  #28 = Utf8               (Ljava/io/OutputStream;)V\n-  #29 = Utf8               write\n-  #30 = Utf8               ([BII)V\n-  #31 = Utf8               chunk\n-  #32 = Utf8               data\n-  #33 = Utf8               [B\n-  #34 = Utf8               srcOffset\n-  #35 = Utf8               length\n-  #36 = Utf8               bytes\n-  #37 = Utf8               dstOffset\n-  #38 = Utf8               Exceptions\n-  #39 = Class              #55            // java/io/IOException\n-  #40 = Utf8               SourceFile\n-  #41 = Utf8               ChunkedOutputStream.java\n-  #42 = NameAndType        #16:#28        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #43 = Utf8               java/lang/IllegalArgumentException\n-  #44 = NameAndType        #16:#56        // \"<init>\":()V\n-  #45 = NameAndType        #15:#12        // chunkSize:I\n-  #46 = Utf8               org/apache/commons/io/output/ChunkedOutputStream\n-  #47 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/OutputStream;I)V\n-  #48 = Class              #57            // java/lang/Math\n-  #49 = NameAndType        #58:#59        // min:(II)I\n-  #50 = NameAndType        #60:#24        // out:Ljava/io/OutputStream;\n-  #51 = Class              #54            // java/io/OutputStream\n-  #52 = NameAndType        #29:#30        // write:([BII)V\n-  #53 = Utf8               java/io/FilterOutputStream\n-  #54 = Utf8               java/io/OutputStream\n-  #55 = Utf8               java/io/IOException\n-  #56 = Utf8               ()V\n-  #57 = Utf8               java/lang/Math\n-  #58 = Utf8               min\n-  #59 = Utf8               (II)I\n-  #60 = Utf8               out\n+  #26 = Class              #52            // java/io/OutputStream\n+  #27 = Utf8               (Ljava/io/OutputStream;)V\n+  #28 = Utf8               write\n+  #29 = Utf8               ([BII)V\n+  #30 = Utf8               chunk\n+  #31 = Utf8               data\n+  #32 = Utf8               [B\n+  #33 = Utf8               srcOffset\n+  #34 = Utf8               length\n+  #35 = Utf8               bytes\n+  #36 = Utf8               dstOffset\n+  #37 = Utf8               Exceptions\n+  #38 = Class              #53            // java/io/IOException\n+  #39 = Utf8               SourceFile\n+  #40 = Utf8               ChunkedOutputStream.java\n+  #41 = NameAndType        #16:#27        // \"<init>\":(Ljava/io/OutputStream;)V\n+  #42 = Utf8               java/lang/IllegalArgumentException\n+  #43 = NameAndType        #16:#54        // \"<init>\":()V\n+  #44 = NameAndType        #15:#12        // chunkSize:I\n+  #45 = Utf8               org/apache/commons/io/output/ChunkedOutputStream\n+  #46 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/OutputStream;I)V\n+  #47 = Class              #55            // java/lang/Math\n+  #48 = NameAndType        #56:#57        // min:(II)I\n+  #49 = NameAndType        #58:#24        // out:Ljava/io/OutputStream;\n+  #50 = NameAndType        #28:#29        // write:([BII)V\n+  #51 = Utf8               java/io/FilterOutputStream\n+  #52 = Utf8               java/io/OutputStream\n+  #53 = Utf8               java/io/IOException\n+  #54 = Utf8               ()V\n+  #55 = Utf8               java/lang/Math\n+  #56 = Utf8               min\n+  #57 = Utf8               (II)I\n+  #58 = Utf8               out\n {\n   private static final int DEFAULT_CHUNK_SIZE = 4096;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 4096\n \n   private final int chunkSize;\n"}]}
