{"diffoscope-json-version": 1, "source1": "first/RegexpClassNameMatcher.class", "source2": "second/RegexpClassNameMatcher.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,87 +1,87 @@\n-  SHA-256 checksum 020ffb2eb8fd1c3c0a04082245d5959ff49b9c2b2d7807af061b09ec1bceda51\n+  SHA-256 checksum 445b8077b36645a6af7375122295b968a507a3628bf6c5053a3e7f301967fd27\n   Compiled from \"RegexpClassNameMatcher.java\"\n final class org.apache.commons.io.serialization.RegexpClassNameMatcher implements org.apache.commons.io.serialization.ClassNameMatcher\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/io/serialization/RegexpClassNameMatcher\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/serialization/RegexpClassNameMatcher\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 1, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #4             // java/lang/Object\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/io/serialization/RegexpClassNameMatcher\n+   #2 = Utf8               org/apache/commons/io/serialization/RegexpClassNameMatcher\n+   #3 = Class              #4             // java/lang/Object\n    #4 = Utf8               java/lang/Object\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = String             #8             // pattern\n-   #8 = Utf8               pattern\n-   #9 = Methodref          #10.#11        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #10 = Class              #12            // java/util/Objects\n-  #11 = NameAndType        #13:#14        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #12 = Utf8               java/util/Objects\n-  #13 = Utf8               requireNonNull\n-  #14 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #15 = Class              #16            // java/util/regex/Pattern\n-  #16 = Utf8               java/util/regex/Pattern\n-  #17 = Fieldref           #18.#19        // org/apache/commons/io/serialization/RegexpClassNameMatcher.pattern:Ljava/util/regex/Pattern;\n-  #18 = Class              #20            // org/apache/commons/io/serialization/RegexpClassNameMatcher\n-  #19 = NameAndType        #8:#21         // pattern:Ljava/util/regex/Pattern;\n-  #20 = Utf8               org/apache/commons/io/serialization/RegexpClassNameMatcher\n-  #21 = Utf8               Ljava/util/regex/Pattern;\n-  #22 = Methodref          #15.#23        // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #23 = NameAndType        #24:#25        // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #24 = Utf8               compile\n-  #25 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #26 = Methodref          #18.#27        // org/apache/commons/io/serialization/RegexpClassNameMatcher.\"<init>\":(Ljava/util/regex/Pattern;)V\n-  #27 = NameAndType        #5:#28         // \"<init>\":(Ljava/util/regex/Pattern;)V\n-  #28 = Utf8               (Ljava/util/regex/Pattern;)V\n-  #29 = Methodref          #15.#30        // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #30 = NameAndType        #31:#32        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #31 = Utf8               matcher\n-  #32 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #33 = Methodref          #34.#35        // java/util/regex/Matcher.matches:()Z\n-  #34 = Class              #36            // java/util/regex/Matcher\n-  #35 = NameAndType        #37:#38        // matches:()Z\n-  #36 = Utf8               java/util/regex/Matcher\n-  #37 = Utf8               matches\n-  #38 = Utf8               ()Z\n-  #39 = Class              #40            // org/apache/commons/io/serialization/ClassNameMatcher\n-  #40 = Utf8               org/apache/commons/io/serialization/ClassNameMatcher\n-  #41 = Utf8               Code\n-  #42 = Utf8               LineNumberTable\n-  #43 = Utf8               LocalVariableTable\n-  #44 = Utf8               this\n-  #45 = Utf8               Lorg/apache/commons/io/serialization/RegexpClassNameMatcher;\n-  #46 = Utf8               (Ljava/lang/String;)V\n-  #47 = Utf8               regex\n-  #48 = Utf8               Ljava/lang/String;\n-  #49 = Utf8               (Ljava/lang/String;)Z\n+   #5 = Class              #6             // org/apache/commons/io/serialization/ClassNameMatcher\n+   #6 = Utf8               org/apache/commons/io/serialization/ClassNameMatcher\n+   #7 = Utf8               pattern\n+   #8 = Utf8               Ljava/util/regex/Pattern;\n+   #9 = Utf8               <init>\n+  #10 = Utf8               (Ljava/util/regex/Pattern;)V\n+  #11 = Utf8               Code\n+  #12 = Methodref          #3.#13         // java/lang/Object.\"<init>\":()V\n+  #13 = NameAndType        #9:#14         // \"<init>\":()V\n+  #14 = Utf8               ()V\n+  #15 = String             #7             // pattern\n+  #16 = Methodref          #17.#19        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #17 = Class              #18            // java/util/Objects\n+  #18 = Utf8               java/util/Objects\n+  #19 = NameAndType        #20:#21        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #20 = Utf8               requireNonNull\n+  #21 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #22 = Class              #23            // java/util/regex/Pattern\n+  #23 = Utf8               java/util/regex/Pattern\n+  #24 = Fieldref           #1.#25         // org/apache/commons/io/serialization/RegexpClassNameMatcher.pattern:Ljava/util/regex/Pattern;\n+  #25 = NameAndType        #7:#8          // pattern:Ljava/util/regex/Pattern;\n+  #26 = Utf8               LineNumberTable\n+  #27 = Utf8               LocalVariableTable\n+  #28 = Utf8               this\n+  #29 = Utf8               Lorg/apache/commons/io/serialization/RegexpClassNameMatcher;\n+  #30 = Utf8               (Ljava/lang/String;)V\n+  #31 = Methodref          #22.#32        // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #32 = NameAndType        #33:#34        // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #33 = Utf8               compile\n+  #34 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #35 = Methodref          #1.#36         // org/apache/commons/io/serialization/RegexpClassNameMatcher.\"<init>\":(Ljava/util/regex/Pattern;)V\n+  #36 = NameAndType        #9:#10         // \"<init>\":(Ljava/util/regex/Pattern;)V\n+  #37 = Utf8               regex\n+  #38 = Utf8               Ljava/lang/String;\n+  #39 = Utf8               matches\n+  #40 = Utf8               (Ljava/lang/String;)Z\n+  #41 = Methodref          #22.#42        // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #42 = NameAndType        #43:#44        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #43 = Utf8               matcher\n+  #44 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #45 = Methodref          #46.#48        // java/util/regex/Matcher.matches:()Z\n+  #46 = Class              #47            // java/util/regex/Matcher\n+  #47 = Utf8               java/util/regex/Matcher\n+  #48 = NameAndType        #39:#49        // matches:()Z\n+  #49 = Utf8               ()Z\n   #50 = Utf8               className\n   #51 = Utf8               SourceFile\n   #52 = Utf8               RegexpClassNameMatcher.java\n {\n   private final java.util.regex.Pattern pattern;\n     descriptor: Ljava/util/regex/Pattern;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.io.serialization.RegexpClassNameMatcher(java.util.regex.Pattern);\n     descriptor: (Ljava/util/regex/Pattern;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #12                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #7                  // String pattern\n-         8: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #15                 // class java/util/regex/Pattern\n-        14: putfield      #17                 // Field pattern:Ljava/util/regex/Pattern;\n+         6: ldc           #15                 // String pattern\n+         8: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #22                 // class java/util/regex/Pattern\n+        14: putfield      #24                 // Field pattern:Ljava/util/regex/Pattern;\n         17: return\n       LineNumberTable:\n         line 40: 0\n         line 41: 4\n         line 42: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -91,16 +91,16 @@\n   public org.apache.commons.io.serialization.RegexpClassNameMatcher(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #22                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-         5: invokespecial #26                 // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n+         2: invokestatic  #31                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+         5: invokespecial #35                 // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n          8: return\n       LineNumberTable:\n         line 50: 0\n         line 51: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/serialization/RegexpClassNameMatcher;\n@@ -108,18 +108,18 @@\n \n   public boolean matches(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #17                 // Field pattern:Ljava/util/regex/Pattern;\n+         1: getfield      #24                 // Field pattern:Ljava/util/regex/Pattern;\n          4: aload_1\n-         5: invokevirtual #29                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-         8: invokevirtual #33                 // Method java/util/regex/Matcher.matches:()Z\n+         5: invokevirtual #41                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+         8: invokevirtual #45                 // Method java/util/regex/Matcher.matches:()Z\n         11: ireturn\n       LineNumberTable:\n         line 55: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/serialization/RegexpClassNameMatcher;\n             0      12     1 className   Ljava/lang/String;\n"}]}
