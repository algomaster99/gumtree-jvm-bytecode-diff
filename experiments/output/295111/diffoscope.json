{"diffoscope-json-version": 1, "source1": "first/StackMapEntry.class", "source2": "second/StackMapEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,286 +1,286 @@\n-  SHA-256 checksum 1a0a12309cfeca5ac15164b5d2d4bf766968f53309e4ce5a5ea61c79c4216c30\n+  SHA-256 checksum 38b4a501c57ff6ac3af90ba0c6d59144f5808917c4378d522a287bbcfdf538b3\n   Compiled from \"StackMapEntry.java\"\n public final class org.apache.bcel.classfile.StackMapEntry implements org.apache.bcel.classfile.Node,java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #28                         // org/apache/bcel/classfile/StackMapEntry\n-  super_class: #68                        // java/lang/Object\n+  this_class: #8                          // org/apache/bcel/classfile/StackMapEntry\n+  super_class: #62                        // java/lang/Object\n   interfaces: 2, fields: 6, methods: 27, attributes: 3\n Constant pool:\n-    #1 = InterfaceMethodref #86.#148      // java/io/DataInput.readByte:()B\n-    #2 = Methodref          #28.#149      // org/apache/bcel/classfile/StackMapEntry.\"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-    #3 = Fieldref           #28.#150      // org/apache/bcel/classfile/StackMapEntry.frameType:I\n-    #4 = Class              #151          // org/apache/bcel/Const\n-    #5 = Fieldref           #28.#152      // org/apache/bcel/classfile/StackMapEntry.byteCodeOffset:I\n-    #6 = Class              #153          // org/apache/bcel/classfile/StackMapType\n-    #7 = Methodref          #6.#154       // org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n-    #8 = Fieldref           #28.#155      // org/apache/bcel/classfile/StackMapEntry.typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n-    #9 = InterfaceMethodref #86.#156      // java/io/DataInput.readUnsignedShort:()I\n-   #10 = Fieldref           #28.#157      // org/apache/bcel/classfile/StackMapEntry.typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n-   #11 = Class              #158          // org/apache/bcel/classfile/ClassFormatException\n-   #12 = Class              #159          // java/lang/StringBuilder\n-   #13 = Methodref          #12.#160      // java/lang/StringBuilder.\"<init>\":()V\n-   #14 = String             #161          // Invalid frame type found while parsing stack map table:\n-   #15 = Methodref          #12.#162      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #12.#163      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #12.#164      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Methodref          #11.#165      // org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Methodref          #68.#160      // java/lang/Object.\"<init>\":()V\n-   #20 = Fieldref           #6.#166       // org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-   #21 = Fieldref           #28.#167      // org/apache/bcel/classfile/StackMapEntry.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-   #22 = Class              #168          // java/lang/IllegalArgumentException\n-   #23 = String             #169          // numberOfLocals < 0\n-   #24 = Methodref          #22.#165      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #25 = String             #170          // numberOfStackItems < 0\n-   #26 = InterfaceMethodref #171.#172     // org/apache/bcel/classfile/Visitor.visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n-   #27 = Methodref          #68.#173      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #28 = Class              #174          // org/apache/bcel/classfile/StackMapEntry\n-   #29 = Class              #175          // java/lang/CloneNotSupportedException\n-   #30 = Class              #176          // java/lang/Error\n-   #31 = String             #177          // Clone Not Supported\n-   #32 = Methodref          #30.#165      // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n-   #33 = InvokeDynamic      #0:#183       // #0:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n-   #34 = Methodref          #184.#185     // java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-   #35 = InvokeDynamic      #1:#183       // #1:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n-   #36 = Methodref          #187.#188     // java/io/DataOutputStream.write:(I)V\n-   #37 = Methodref          #6.#189       // org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n-   #38 = Methodref          #187.#190     // java/io/DataOutputStream.writeShort:(I)V\n-   #39 = String             #191          // Invalid Stack map table tag:\n-   #40 = Methodref          #6.#192       // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n-   #41 = Class              #193          // java/lang/IllegalStateException\n-   #42 = String             #194          // Invalid StackMap frameType:\n-   #43 = Methodref          #41.#165      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #44 = String             #195          // Invalid StackMap offset:\n-   #45 = Methodref          #28.#196      // org/apache/bcel/classfile/StackMapEntry.invalidFrameType:(I)Z\n-   #46 = String             #197          // Invalid StackMap frameType\n-   #47 = Methodref          #12.#198      // java/lang/StringBuilder.\"<init>\":(I)V\n-   #48 = String             #199          // (\n-   #49 = String             #200          // SAME\n-   #50 = String             #201          // SAME_LOCALS_1_STACK\n-   #51 = String             #202          // SAME_LOCALS_1_STACK_EXTENDED\n-   #52 = String             #203          // CHOP\n-   #53 = Methodref          #204.#205     // java/lang/String.valueOf:(I)Ljava/lang/String;\n-   #54 = String             #206          // SAME_EXTENDED\n-   #55 = String             #207          // APPEND\n-   #56 = String             #208          // FULL\n-   #57 = String             #209          // UNKNOWN (\n-   #58 = String             #210          // )\n-   #59 = String             #211          // , offset delta=\n-   #60 = String             #212          // , locals={\n-   #61 = Methodref          #12.#213      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #62 = String             #214          // ,\n-   #63 = String             #215          // }\n-   #64 = String             #216          // , stack items={\n-   #65 = Methodref          #28.#217      // org/apache/bcel/classfile/StackMapEntry.setByteCodeOffset:(I)V\n-   #66 = Methodref          #6.#218       // org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n-   #67 = Fieldref           #28.#219      // org/apache/bcel/classfile/StackMapEntry.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapEntry;\n-   #68 = Class              #220          // java/lang/Object\n-   #69 = Class              #221          // org/apache/bcel/classfile/Node\n-   #70 = Class              #222          // java/lang/Cloneable\n-   #71 = Utf8               EMPTY_ARRAY\n-   #72 = Utf8               [Lorg/apache/bcel/classfile/StackMapEntry;\n-   #73 = Utf8               frameType\n-   #74 = Utf8               I\n-   #75 = Utf8               byteCodeOffset\n-   #76 = Utf8               typesOfLocals\n-   #77 = Utf8               [Lorg/apache/bcel/classfile/StackMapType;\n-   #78 = Utf8               typesOfStackItems\n-   #79 = Utf8               constantPool\n-   #80 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n-   #81 = Utf8               <init>\n-   #82 = Utf8               (Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #83 = Utf8               Code\n-   #84 = Utf8               LineNumberTable\n-   #85 = Utf8               StackMapTable\n-   #86 = Class              #223          // java/io/DataInput\n-   #87 = Class              #224          // org/apache/bcel/classfile/ConstantPool\n-   #88 = Utf8               Exceptions\n-   #89 = Class              #225          // java/io/IOException\n-   #90 = Utf8               MethodParameters\n-   #91 = Utf8               dataInput\n-   #92 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;I[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #93 = Class              #77           // \"[Lorg/apache/bcel/classfile/StackMapType;\"\n-   #94 = Utf8               numberOfLocals\n-   #95 = Utf8               numberOfStackItems\n-   #96 = Utf8               Deprecated\n-   #97 = Utf8               RuntimeVisibleAnnotations\n-   #98 = Utf8               Ljava/lang/Deprecated;\n-   #99 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #100 = Utf8               tag\n-  #101 = Utf8               accept\n-  #102 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-  #103 = Utf8               v\n-  #104 = Utf8               copy\n-  #105 = Utf8               ()Lorg/apache/bcel/classfile/StackMapEntry;\n-  #106 = Utf8               dump\n-  #107 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #108 = Utf8               file\n-  #109 = Utf8               getByteCodeOffset\n-  #110 = Utf8               ()I\n-  #111 = Utf8               getConstantPool\n-  #112 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #113 = Utf8               getFrameType\n-  #114 = Utf8               getMapEntrySize\n-  #115 = Utf8               getNumberOfLocals\n-  #116 = Utf8               getNumberOfStackItems\n-  #117 = Utf8               getTypesOfLocals\n-  #118 = Utf8               ()[Lorg/apache/bcel/classfile/StackMapType;\n-  #119 = Utf8               getTypesOfStackItems\n-  #120 = Utf8               invalidFrameType\n-  #121 = Utf8               (I)Z\n-  #122 = Utf8               f\n-  #123 = Utf8               setByteCodeOffset\n-  #124 = Utf8               (I)V\n-  #125 = Utf8               newOffset\n-  #126 = Utf8               setConstantPool\n-  #127 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #128 = Utf8               setFrameType\n-  #129 = Utf8               ft\n-  #130 = Utf8               setNumberOfLocals\n-  #131 = Utf8               n\n-  #132 = Utf8               setNumberOfStackItems\n-  #133 = Utf8               setTypesOfLocals\n-  #134 = Utf8               ([Lorg/apache/bcel/classfile/StackMapType;)V\n-  #135 = Utf8               types\n-  #136 = Utf8               setTypesOfStackItems\n-  #137 = Utf8               toString\n-  #138 = Utf8               ()Ljava/lang/String;\n-  #139 = Utf8               updateByteCodeOffset\n-  #140 = Utf8               delta\n-  #141 = Utf8               lambda$copy$1\n-  #142 = Utf8               (I)Lorg/apache/bcel/classfile/StackMapType;\n-  #143 = Utf8               lambda$copy$0\n-  #144 = Utf8               <clinit>\n-  #145 = Utf8               ()V\n-  #146 = Utf8               SourceFile\n-  #147 = Utf8               StackMapEntry.java\n-  #148 = NameAndType        #226:#227     // readByte:()B\n-  #149 = NameAndType        #81:#99       // \"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #150 = NameAndType        #73:#74       // frameType:I\n-  #151 = Utf8               org/apache/bcel/Const\n-  #152 = NameAndType        #75:#74       // byteCodeOffset:I\n-  #153 = Utf8               org/apache/bcel/classfile/StackMapType\n-  #154 = NameAndType        #81:#82       // \"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #155 = NameAndType        #78:#77       // typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n-  #156 = NameAndType        #228:#110     // readUnsignedShort:()I\n-  #157 = NameAndType        #76:#77       // typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n-  #158 = Utf8               org/apache/bcel/classfile/ClassFormatException\n-  #159 = Utf8               java/lang/StringBuilder\n-  #160 = NameAndType        #81:#145      // \"<init>\":()V\n-  #161 = Utf8               Invalid frame type found while parsing stack map table:\n-  #162 = NameAndType        #229:#230     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #163 = NameAndType        #229:#231     // append:(I)Ljava/lang/StringBuilder;\n-  #164 = NameAndType        #137:#138     // toString:()Ljava/lang/String;\n-  #165 = NameAndType        #81:#232      // \"<init>\":(Ljava/lang/String;)V\n-  #166 = NameAndType        #71:#77       // EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-  #167 = NameAndType        #79:#80       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-  #168 = Utf8               java/lang/IllegalArgumentException\n-  #169 = Utf8               numberOfLocals < 0\n-  #170 = Utf8               numberOfStackItems < 0\n-  #171 = Class              #233          // org/apache/bcel/classfile/Visitor\n-  #172 = NameAndType        #234:#235     // visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n-  #173 = NameAndType        #236:#237     // clone:()Ljava/lang/Object;\n-  #174 = Utf8               org/apache/bcel/classfile/StackMapEntry\n-  #175 = Utf8               java/lang/CloneNotSupportedException\n-  #176 = Utf8               java/lang/Error\n-  #177 = Utf8               Clone Not Supported\n-  #178 = Utf8               BootstrapMethods\n-  #179 = MethodHandle       6:#238        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #180 = MethodType         #239          //  (I)Ljava/lang/Object;\n-  #181 = MethodHandle       7:#240        // REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #182 = MethodType         #142          //  (I)Lorg/apache/bcel/classfile/StackMapType;\n-  #183 = NameAndType        #241:#242     // apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n-  #184 = Class              #243          // java/util/Arrays\n-  #185 = NameAndType        #244:#245     // setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-  #186 = MethodHandle       7:#246        // REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #187 = Class              #247          // java/io/DataOutputStream\n-  #188 = NameAndType        #248:#124     // write:(I)V\n-  #189 = NameAndType        #106:#107     // dump:(Ljava/io/DataOutputStream;)V\n-  #190 = NameAndType        #249:#124     // writeShort:(I)V\n-  #191 = Utf8               Invalid Stack map table tag:\n-  #192 = NameAndType        #250:#251     // hasIndex:()Z\n-  #193 = Utf8               java/lang/IllegalStateException\n-  #194 = Utf8               Invalid StackMap frameType:\n-  #195 = Utf8               Invalid StackMap offset:\n-  #196 = NameAndType        #120:#121     // invalidFrameType:(I)Z\n-  #197 = Utf8               Invalid StackMap frameType\n-  #198 = NameAndType        #81:#124      // \"<init>\":(I)V\n-  #199 = Utf8               (\n-  #200 = Utf8               SAME\n-  #201 = Utf8               SAME_LOCALS_1_STACK\n-  #202 = Utf8               SAME_LOCALS_1_STACK_EXTENDED\n-  #203 = Utf8               CHOP\n-  #204 = Class              #252          // java/lang/String\n-  #205 = NameAndType        #253:#254     // valueOf:(I)Ljava/lang/String;\n-  #206 = Utf8               SAME_EXTENDED\n-  #207 = Utf8               APPEND\n-  #208 = Utf8               FULL\n-  #209 = Utf8               UNKNOWN (\n-  #210 = Utf8               )\n-  #211 = Utf8               , offset delta=\n-  #212 = Utf8               , locals={\n-  #213 = NameAndType        #229:#255     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #214 = Utf8               ,\n-  #215 = Utf8               }\n-  #216 = Utf8               , stack items={\n-  #217 = NameAndType        #123:#124     // setByteCodeOffset:(I)V\n-  #218 = NameAndType        #104:#256     // copy:()Lorg/apache/bcel/classfile/StackMapType;\n-  #219 = NameAndType        #71:#72       // EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapEntry;\n-  #220 = Utf8               java/lang/Object\n-  #221 = Utf8               org/apache/bcel/classfile/Node\n-  #222 = Utf8               java/lang/Cloneable\n-  #223 = Utf8               java/io/DataInput\n-  #224 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #225 = Utf8               java/io/IOException\n-  #226 = Utf8               readByte\n-  #227 = Utf8               ()B\n-  #228 = Utf8               readUnsignedShort\n-  #229 = Utf8               append\n-  #230 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #231 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #232 = Utf8               (Ljava/lang/String;)V\n-  #233 = Utf8               org/apache/bcel/classfile/Visitor\n-  #234 = Utf8               visitStackMapEntry\n-  #235 = Utf8               (Lorg/apache/bcel/classfile/StackMapEntry;)V\n-  #236 = Utf8               clone\n-  #237 = Utf8               ()Ljava/lang/Object;\n-  #238 = Methodref          #257.#258     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #239 = Utf8               (I)Ljava/lang/Object;\n-  #240 = Methodref          #28.#259      // org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #241 = Utf8               apply\n-  #242 = Utf8               (Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n-  #243 = Utf8               java/util/Arrays\n-  #244 = Utf8               setAll\n-  #245 = Utf8               ([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-  #246 = Methodref          #28.#260      // org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #247 = Utf8               java/io/DataOutputStream\n-  #248 = Utf8               write\n-  #249 = Utf8               writeShort\n-  #250 = Utf8               hasIndex\n-  #251 = Utf8               ()Z\n-  #252 = Utf8               java/lang/String\n-  #253 = Utf8               valueOf\n-  #254 = Utf8               (I)Ljava/lang/String;\n-  #255 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #256 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n-  #257 = Class              #261          // java/lang/invoke/LambdaMetafactory\n-  #258 = NameAndType        #262:#266     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #259 = NameAndType        #143:#142     // lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #260 = NameAndType        #141:#142     // lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n-  #261 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #262 = Utf8               metafactory\n-  #263 = Class              #268          // java/lang/invoke/MethodHandles$Lookup\n-  #264 = Utf8               Lookup\n-  #265 = Utf8               InnerClasses\n-  #266 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #267 = Class              #269          // java/lang/invoke/MethodHandles\n-  #268 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #269 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = InterfaceMethodref #2.#3         // java/io/DataInput.readByte:()B\n+    #2 = Class              #4            // java/io/DataInput\n+    #3 = NameAndType        #5:#6         // readByte:()B\n+    #4 = Utf8               java/io/DataInput\n+    #5 = Utf8               readByte\n+    #6 = Utf8               ()B\n+    #7 = Methodref          #8.#9         // org/apache/bcel/classfile/StackMapEntry.\"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+    #8 = Class              #10           // org/apache/bcel/classfile/StackMapEntry\n+    #9 = NameAndType        #11:#12       // \"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #10 = Utf8               org/apache/bcel/classfile/StackMapEntry\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #13 = Fieldref           #8.#14        // org/apache/bcel/classfile/StackMapEntry.frameType:I\n+   #14 = NameAndType        #15:#16       // frameType:I\n+   #15 = Utf8               frameType\n+   #16 = Utf8               I\n+   #17 = Class              #18           // org/apache/bcel/Const\n+   #18 = Utf8               org/apache/bcel/Const\n+   #19 = Fieldref           #8.#20        // org/apache/bcel/classfile/StackMapEntry.byteCodeOffset:I\n+   #20 = NameAndType        #21:#16       // byteCodeOffset:I\n+   #21 = Utf8               byteCodeOffset\n+   #22 = Class              #23           // org/apache/bcel/classfile/StackMapType\n+   #23 = Utf8               org/apache/bcel/classfile/StackMapType\n+   #24 = Methodref          #22.#25       // org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #25 = NameAndType        #11:#26       // \"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #26 = Utf8               (Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #27 = Fieldref           #8.#28        // org/apache/bcel/classfile/StackMapEntry.typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+   #28 = NameAndType        #29:#30       // typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+   #29 = Utf8               typesOfStackItems\n+   #30 = Utf8               [Lorg/apache/bcel/classfile/StackMapType;\n+   #31 = InterfaceMethodref #2.#32        // java/io/DataInput.readUnsignedShort:()I\n+   #32 = NameAndType        #33:#34       // readUnsignedShort:()I\n+   #33 = Utf8               readUnsignedShort\n+   #34 = Utf8               ()I\n+   #35 = Fieldref           #8.#36        // org/apache/bcel/classfile/StackMapEntry.typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+   #36 = NameAndType        #37:#30       // typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+   #37 = Utf8               typesOfLocals\n+   #38 = Class              #39           // org/apache/bcel/classfile/ClassFormatException\n+   #39 = Utf8               org/apache/bcel/classfile/ClassFormatException\n+   #40 = Class              #41           // java/lang/StringBuilder\n+   #41 = Utf8               java/lang/StringBuilder\n+   #42 = Methodref          #40.#43       // java/lang/StringBuilder.\"<init>\":()V\n+   #43 = NameAndType        #11:#44       // \"<init>\":()V\n+   #44 = Utf8               ()V\n+   #45 = String             #46           // Invalid frame type found while parsing stack map table:\n+   #46 = Utf8               Invalid frame type found while parsing stack map table:\n+   #47 = Methodref          #40.#48       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #48 = NameAndType        #49:#50       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #49 = Utf8               append\n+   #50 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #51 = Methodref          #40.#52       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #52 = NameAndType        #49:#53       // append:(I)Ljava/lang/StringBuilder;\n+   #53 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #54 = Methodref          #40.#55       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #55 = NameAndType        #56:#57       // toString:()Ljava/lang/String;\n+   #56 = Utf8               toString\n+   #57 = Utf8               ()Ljava/lang/String;\n+   #58 = Methodref          #38.#59       // org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n+   #59 = NameAndType        #11:#60       // \"<init>\":(Ljava/lang/String;)V\n+   #60 = Utf8               (Ljava/lang/String;)V\n+   #61 = Methodref          #62.#43       // java/lang/Object.\"<init>\":()V\n+   #62 = Class              #63           // java/lang/Object\n+   #63 = Utf8               java/lang/Object\n+   #64 = Fieldref           #22.#65       // org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+   #65 = NameAndType        #66:#30       // EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+   #66 = Utf8               EMPTY_ARRAY\n+   #67 = Fieldref           #8.#68        // org/apache/bcel/classfile/StackMapEntry.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+   #68 = NameAndType        #69:#70       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+   #69 = Utf8               constantPool\n+   #70 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n+   #71 = Class              #72           // java/lang/IllegalArgumentException\n+   #72 = Utf8               java/lang/IllegalArgumentException\n+   #73 = String             #74           // numberOfLocals < 0\n+   #74 = Utf8               numberOfLocals < 0\n+   #75 = Methodref          #71.#59       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #76 = String             #77           // numberOfStackItems < 0\n+   #77 = Utf8               numberOfStackItems < 0\n+   #78 = InterfaceMethodref #79.#80       // org/apache/bcel/classfile/Visitor.visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n+   #79 = Class              #81           // org/apache/bcel/classfile/Visitor\n+   #80 = NameAndType        #82:#83       // visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n+   #81 = Utf8               org/apache/bcel/classfile/Visitor\n+   #82 = Utf8               visitStackMapEntry\n+   #83 = Utf8               (Lorg/apache/bcel/classfile/StackMapEntry;)V\n+   #84 = Methodref          #62.#85       // java/lang/Object.clone:()Ljava/lang/Object;\n+   #85 = NameAndType        #86:#87       // clone:()Ljava/lang/Object;\n+   #86 = Utf8               clone\n+   #87 = Utf8               ()Ljava/lang/Object;\n+   #88 = Class              #89           // java/lang/CloneNotSupportedException\n+   #89 = Utf8               java/lang/CloneNotSupportedException\n+   #90 = Class              #91           // java/lang/Error\n+   #91 = Utf8               java/lang/Error\n+   #92 = String             #93           // Clone Not Supported\n+   #93 = Utf8               Clone Not Supported\n+   #94 = Methodref          #90.#59       // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+   #95 = InvokeDynamic      #0:#96        // #0:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n+   #96 = NameAndType        #97:#98       // apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n+   #97 = Utf8               apply\n+   #98 = Utf8               (Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n+   #99 = Methodref          #100.#101     // java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+  #100 = Class              #102          // java/util/Arrays\n+  #101 = NameAndType        #103:#104     // setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+  #102 = Utf8               java/util/Arrays\n+  #103 = Utf8               setAll\n+  #104 = Utf8               ([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+  #105 = InvokeDynamic      #1:#96        // #1:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n+  #106 = Methodref          #107.#108     // java/io/DataOutputStream.write:(I)V\n+  #107 = Class              #109          // java/io/DataOutputStream\n+  #108 = NameAndType        #110:#111     // write:(I)V\n+  #109 = Utf8               java/io/DataOutputStream\n+  #110 = Utf8               write\n+  #111 = Utf8               (I)V\n+  #112 = Methodref          #22.#113      // org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+  #113 = NameAndType        #114:#115     // dump:(Ljava/io/DataOutputStream;)V\n+  #114 = Utf8               dump\n+  #115 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #116 = Methodref          #107.#117     // java/io/DataOutputStream.writeShort:(I)V\n+  #117 = NameAndType        #118:#111     // writeShort:(I)V\n+  #118 = Utf8               writeShort\n+  #119 = String             #120          // Invalid Stack map table tag:\n+  #120 = Utf8               Invalid Stack map table tag:\n+  #121 = Methodref          #22.#122      // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+  #122 = NameAndType        #123:#124     // hasIndex:()Z\n+  #123 = Utf8               hasIndex\n+  #124 = Utf8               ()Z\n+  #125 = Class              #126          // java/lang/IllegalStateException\n+  #126 = Utf8               java/lang/IllegalStateException\n+  #127 = String             #128          // Invalid StackMap frameType:\n+  #128 = Utf8               Invalid StackMap frameType:\n+  #129 = Methodref          #125.#59      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #130 = String             #131          // Invalid StackMap offset:\n+  #131 = Utf8               Invalid StackMap offset:\n+  #132 = Methodref          #8.#133       // org/apache/bcel/classfile/StackMapEntry.invalidFrameType:(I)Z\n+  #133 = NameAndType        #134:#135     // invalidFrameType:(I)Z\n+  #134 = Utf8               invalidFrameType\n+  #135 = Utf8               (I)Z\n+  #136 = String             #137          // Invalid StackMap frameType\n+  #137 = Utf8               Invalid StackMap frameType\n+  #138 = Methodref          #40.#139      // java/lang/StringBuilder.\"<init>\":(I)V\n+  #139 = NameAndType        #11:#111      // \"<init>\":(I)V\n+  #140 = String             #141          // (\n+  #141 = Utf8               (\n+  #142 = String             #143          // SAME\n+  #143 = Utf8               SAME\n+  #144 = String             #145          // SAME_LOCALS_1_STACK\n+  #145 = Utf8               SAME_LOCALS_1_STACK\n+  #146 = String             #147          // SAME_LOCALS_1_STACK_EXTENDED\n+  #147 = Utf8               SAME_LOCALS_1_STACK_EXTENDED\n+  #148 = String             #149          // CHOP\n+  #149 = Utf8               CHOP\n+  #150 = Methodref          #151.#152     // java/lang/String.valueOf:(I)Ljava/lang/String;\n+  #151 = Class              #153          // java/lang/String\n+  #152 = NameAndType        #154:#155     // valueOf:(I)Ljava/lang/String;\n+  #153 = Utf8               java/lang/String\n+  #154 = Utf8               valueOf\n+  #155 = Utf8               (I)Ljava/lang/String;\n+  #156 = String             #157          // SAME_EXTENDED\n+  #157 = Utf8               SAME_EXTENDED\n+  #158 = String             #159          // APPEND\n+  #159 = Utf8               APPEND\n+  #160 = String             #161          // FULL\n+  #161 = Utf8               FULL\n+  #162 = String             #163          // UNKNOWN (\n+  #163 = Utf8               UNKNOWN (\n+  #164 = String             #165          // )\n+  #165 = Utf8               )\n+  #166 = String             #167          // , offset delta=\n+  #167 = Utf8               , offset delta=\n+  #168 = String             #169          // , locals={\n+  #169 = Utf8               , locals={\n+  #170 = Methodref          #40.#171      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #171 = NameAndType        #49:#172      // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #172 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #173 = String             #174          // ,\n+  #174 = Utf8               ,\n+  #175 = String             #176          // }\n+  #176 = Utf8               }\n+  #177 = String             #178          // , stack items={\n+  #178 = Utf8               , stack items={\n+  #179 = Methodref          #8.#180       // org/apache/bcel/classfile/StackMapEntry.setByteCodeOffset:(I)V\n+  #180 = NameAndType        #181:#111     // setByteCodeOffset:(I)V\n+  #181 = Utf8               setByteCodeOffset\n+  #182 = Methodref          #22.#183      // org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n+  #183 = NameAndType        #184:#185     // copy:()Lorg/apache/bcel/classfile/StackMapType;\n+  #184 = Utf8               copy\n+  #185 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n+  #186 = Fieldref           #8.#187       // org/apache/bcel/classfile/StackMapEntry.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapEntry;\n+  #187 = NameAndType        #66:#188      // EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapEntry;\n+  #188 = Utf8               [Lorg/apache/bcel/classfile/StackMapEntry;\n+  #189 = Class              #190          // org/apache/bcel/classfile/Node\n+  #190 = Utf8               org/apache/bcel/classfile/Node\n+  #191 = Class              #192          // java/lang/Cloneable\n+  #192 = Utf8               java/lang/Cloneable\n+  #193 = Utf8               Code\n+  #194 = Utf8               LineNumberTable\n+  #195 = Utf8               StackMapTable\n+  #196 = Class              #197          // org/apache/bcel/classfile/ConstantPool\n+  #197 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #198 = Utf8               Exceptions\n+  #199 = Class              #200          // java/io/IOException\n+  #200 = Utf8               java/io/IOException\n+  #201 = Utf8               MethodParameters\n+  #202 = Utf8               dataInput\n+  #203 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;I[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #204 = Class              #30           // \"[Lorg/apache/bcel/classfile/StackMapType;\"\n+  #205 = Utf8               numberOfLocals\n+  #206 = Utf8               numberOfStackItems\n+  #207 = Utf8               Deprecated\n+  #208 = Utf8               RuntimeVisibleAnnotations\n+  #209 = Utf8               Ljava/lang/Deprecated;\n+  #210 = Utf8               tag\n+  #211 = Utf8               accept\n+  #212 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #213 = Utf8               v\n+  #214 = Utf8               ()Lorg/apache/bcel/classfile/StackMapEntry;\n+  #215 = Utf8               file\n+  #216 = Utf8               getByteCodeOffset\n+  #217 = Utf8               getConstantPool\n+  #218 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #219 = Utf8               getFrameType\n+  #220 = Utf8               getMapEntrySize\n+  #221 = Utf8               getNumberOfLocals\n+  #222 = Utf8               getNumberOfStackItems\n+  #223 = Utf8               getTypesOfLocals\n+  #224 = Utf8               ()[Lorg/apache/bcel/classfile/StackMapType;\n+  #225 = Utf8               getTypesOfStackItems\n+  #226 = Utf8               f\n+  #227 = Utf8               newOffset\n+  #228 = Utf8               setConstantPool\n+  #229 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #230 = Utf8               setFrameType\n+  #231 = Utf8               ft\n+  #232 = Utf8               setNumberOfLocals\n+  #233 = Utf8               n\n+  #234 = Utf8               setNumberOfStackItems\n+  #235 = Utf8               setTypesOfLocals\n+  #236 = Utf8               ([Lorg/apache/bcel/classfile/StackMapType;)V\n+  #237 = Utf8               types\n+  #238 = Utf8               setTypesOfStackItems\n+  #239 = Utf8               updateByteCodeOffset\n+  #240 = Utf8               delta\n+  #241 = Utf8               lambda$copy$1\n+  #242 = Utf8               (I)Lorg/apache/bcel/classfile/StackMapType;\n+  #243 = Utf8               lambda$copy$0\n+  #244 = Utf8               <clinit>\n+  #245 = Utf8               SourceFile\n+  #246 = Utf8               StackMapEntry.java\n+  #247 = Utf8               BootstrapMethods\n+  #248 = MethodHandle       6:#249        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #249 = Methodref          #250.#251     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #250 = Class              #252          // java/lang/invoke/LambdaMetafactory\n+  #251 = NameAndType        #253:#254     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #252 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #253 = Utf8               metafactory\n+  #254 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #255 = MethodType         #256          //  (I)Ljava/lang/Object;\n+  #256 = Utf8               (I)Ljava/lang/Object;\n+  #257 = MethodHandle       7:#258        // REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #258 = Methodref          #8.#259       // org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #259 = NameAndType        #243:#242     // lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #260 = MethodType         #242          //  (I)Lorg/apache/bcel/classfile/StackMapType;\n+  #261 = MethodHandle       7:#262        // REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #262 = Methodref          #8.#263       // org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #263 = NameAndType        #241:#242     // lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n+  #264 = Utf8               InnerClasses\n+  #265 = Class              #266          // java/lang/invoke/MethodHandles$Lookup\n+  #266 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #267 = Class              #268          // java/lang/invoke/MethodHandles\n+  #268 = Utf8               java/lang/invoke/MethodHandles\n+  #269 = Utf8               Lookup\n {\n   static final org.apache.bcel.classfile.StackMapEntry[] EMPTY_ARRAY;\n     descriptor: [Lorg/apache/bcel/classfile/StackMapEntry;\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private int frameType;\n     descriptor: I\n@@ -312,204 +312,204 @@\n          2: invokeinterface #1,  1            // InterfaceMethod java/io/DataInput.readByte:()B\n          7: sipush        255\n         10: iand\n         11: iconst_m1\n         12: aconst_null\n         13: aconst_null\n         14: aload_2\n-        15: invokespecial #2                  // Method \"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+        15: invokespecial #7                  // Method \"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n         18: aload_0\n-        19: getfield      #3                  // Field frameType:I\n+        19: getfield      #13                 // Field frameType:I\n         22: iflt          47\n         25: aload_0\n-        26: getfield      #3                  // Field frameType:I\n+        26: getfield      #13                 // Field frameType:I\n         29: bipush        63\n         31: if_icmpgt     47\n         34: aload_0\n         35: aload_0\n-        36: getfield      #3                  // Field frameType:I\n+        36: getfield      #13                 // Field frameType:I\n         39: iconst_0\n         40: isub\n-        41: putfield      #5                  // Field byteCodeOffset:I\n+        41: putfield      #19                 // Field byteCodeOffset:I\n         44: goto          427\n         47: aload_0\n-        48: getfield      #3                  // Field frameType:I\n+        48: getfield      #13                 // Field frameType:I\n         51: bipush        64\n         53: if_icmplt     99\n         56: aload_0\n-        57: getfield      #3                  // Field frameType:I\n+        57: getfield      #13                 // Field frameType:I\n         60: bipush        127\n         62: if_icmpgt     99\n         65: aload_0\n         66: aload_0\n-        67: getfield      #3                  // Field frameType:I\n+        67: getfield      #13                 // Field frameType:I\n         70: bipush        64\n         72: isub\n-        73: putfield      #5                  // Field byteCodeOffset:I\n+        73: putfield      #19                 // Field byteCodeOffset:I\n         76: aload_0\n         77: iconst_1\n-        78: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n+        78: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n         81: dup\n         82: iconst_0\n-        83: new           #6                  // class org/apache/bcel/classfile/StackMapType\n+        83: new           #22                 // class org/apache/bcel/classfile/StackMapType\n         86: dup\n         87: aload_1\n         88: aload_2\n-        89: invokespecial #7                  // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+        89: invokespecial #24                 // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n         92: aastore\n-        93: putfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        93: putfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         96: goto          427\n         99: aload_0\n-       100: getfield      #3                  // Field frameType:I\n+       100: getfield      #13                 // Field frameType:I\n        103: sipush        247\n        106: if_icmpne     142\n        109: aload_0\n        110: aload_1\n-       111: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-       116: putfield      #5                  // Field byteCodeOffset:I\n+       111: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+       116: putfield      #19                 // Field byteCodeOffset:I\n        119: aload_0\n        120: iconst_1\n-       121: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n+       121: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n        124: dup\n        125: iconst_0\n-       126: new           #6                  // class org/apache/bcel/classfile/StackMapType\n+       126: new           #22                 // class org/apache/bcel/classfile/StackMapType\n        129: dup\n        130: aload_1\n        131: aload_2\n-       132: invokespecial #7                  // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+       132: invokespecial #24                 // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n        135: aastore\n-       136: putfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       136: putfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        139: goto          427\n        142: aload_0\n-       143: getfield      #3                  // Field frameType:I\n+       143: getfield      #13                 // Field frameType:I\n        146: sipush        248\n        149: if_icmplt     175\n        152: aload_0\n-       153: getfield      #3                  // Field frameType:I\n+       153: getfield      #13                 // Field frameType:I\n        156: sipush        250\n        159: if_icmpgt     175\n        162: aload_0\n        163: aload_1\n-       164: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-       169: putfield      #5                  // Field byteCodeOffset:I\n+       164: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+       169: putfield      #19                 // Field byteCodeOffset:I\n        172: goto          427\n        175: aload_0\n-       176: getfield      #3                  // Field frameType:I\n+       176: getfield      #13                 // Field frameType:I\n        179: sipush        251\n        182: if_icmpne     198\n        185: aload_0\n        186: aload_1\n-       187: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-       192: putfield      #5                  // Field byteCodeOffset:I\n+       187: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+       192: putfield      #19                 // Field byteCodeOffset:I\n        195: goto          427\n        198: aload_0\n-       199: getfield      #3                  // Field frameType:I\n+       199: getfield      #13                 // Field frameType:I\n        202: sipush        252\n        205: if_icmplt     279\n        208: aload_0\n-       209: getfield      #3                  // Field frameType:I\n+       209: getfield      #13                 // Field frameType:I\n        212: sipush        254\n        215: if_icmpgt     279\n        218: aload_0\n        219: aload_1\n-       220: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-       225: putfield      #5                  // Field byteCodeOffset:I\n+       220: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+       225: putfield      #19                 // Field byteCodeOffset:I\n        228: aload_0\n-       229: getfield      #3                  // Field frameType:I\n+       229: getfield      #13                 // Field frameType:I\n        232: sipush        251\n        235: isub\n        236: istore_3\n        237: aload_0\n        238: iload_3\n-       239: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-       242: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       239: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+       242: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        245: iconst_0\n        246: istore        4\n        248: iload         4\n        250: iload_3\n        251: if_icmpge     276\n        254: aload_0\n-       255: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       255: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        258: iload         4\n-       260: new           #6                  // class org/apache/bcel/classfile/StackMapType\n+       260: new           #22                 // class org/apache/bcel/classfile/StackMapType\n        263: dup\n        264: aload_1\n        265: aload_2\n-       266: invokespecial #7                  // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+       266: invokespecial #24                 // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n        269: aastore\n        270: iinc          4, 1\n        273: goto          248\n        276: goto          427\n        279: aload_0\n-       280: getfield      #3                  // Field frameType:I\n+       280: getfield      #13                 // Field frameType:I\n        283: sipush        255\n        286: if_icmpne     397\n        289: aload_0\n        290: aload_1\n-       291: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-       296: putfield      #5                  // Field byteCodeOffset:I\n+       291: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+       296: putfield      #19                 // Field byteCodeOffset:I\n        299: aload_1\n-       300: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+       300: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n        305: istore_3\n        306: aload_0\n        307: iload_3\n-       308: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-       311: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       308: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+       311: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        314: iconst_0\n        315: istore        4\n        317: iload         4\n        319: iload_3\n        320: if_icmpge     345\n        323: aload_0\n-       324: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       324: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        327: iload         4\n-       329: new           #6                  // class org/apache/bcel/classfile/StackMapType\n+       329: new           #22                 // class org/apache/bcel/classfile/StackMapType\n        332: dup\n        333: aload_1\n        334: aload_2\n-       335: invokespecial #7                  // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+       335: invokespecial #24                 // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n        338: aastore\n        339: iinc          4, 1\n        342: goto          317\n        345: aload_1\n-       346: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+       346: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n        351: istore        4\n        353: aload_0\n        354: iload         4\n-       356: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-       359: putfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       356: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+       359: putfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        362: iconst_0\n        363: istore        5\n        365: iload         5\n        367: iload         4\n        369: if_icmpge     394\n        372: aload_0\n-       373: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       373: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        376: iload         5\n-       378: new           #6                  // class org/apache/bcel/classfile/StackMapType\n+       378: new           #22                 // class org/apache/bcel/classfile/StackMapType\n        381: dup\n        382: aload_1\n        383: aload_2\n-       384: invokespecial #7                  // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+       384: invokespecial #24                 // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n        387: aastore\n        388: iinc          5, 1\n        391: goto          365\n        394: goto          427\n-       397: new           #11                 // class org/apache/bcel/classfile/ClassFormatException\n+       397: new           #38                 // class org/apache/bcel/classfile/ClassFormatException\n        400: dup\n-       401: new           #12                 // class java/lang/StringBuilder\n+       401: new           #40                 // class java/lang/StringBuilder\n        404: dup\n-       405: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       408: ldc           #14                 // String Invalid frame type found while parsing stack map table:\n-       410: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       405: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       408: ldc           #45                 // String Invalid frame type found while parsing stack map table:\n+       410: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        413: aload_0\n-       414: getfield      #3                  // Field frameType:I\n-       417: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       420: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       423: invokespecial #18                 // Method org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n+       414: getfield      #13                 // Field frameType:I\n+       417: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       420: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       423: invokespecial #58                 // Method org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n        426: athrow\n        427: return\n       LineNumberTable:\n         line 64: 0\n         line 66: 18\n         line 67: 34\n         line 68: 47\n@@ -580,48 +580,48 @@\n \n   public org.apache.bcel.classfile.StackMapEntry(int, int, org.apache.bcel.classfile.StackMapType[], int, org.apache.bcel.classfile.StackMapType[], org.apache.bcel.classfile.ConstantPool);\n     descriptor: (II[Lorg/apache/bcel/classfile/StackMapType;I[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=7, args_size=7\n          0: aload_0\n-         1: invokespecial #19                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #61                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #5                  // Field byteCodeOffset:I\n+         6: putfield      #19                 // Field byteCodeOffset:I\n          9: aload_0\n         10: aload_3\n         11: ifnull        18\n         14: aload_3\n         15: goto          21\n-        18: getstatic     #20                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-        21: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        18: getstatic     #64                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+        21: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         24: aload_0\n         25: aload         5\n         27: ifnull        35\n         30: aload         5\n         32: goto          38\n-        35: getstatic     #20                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-        38: putfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        35: getstatic     #64                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+        38: putfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         41: aload_0\n         42: aload         6\n-        44: putfield      #21                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+        44: putfield      #67                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n         47: iload_2\n         48: ifge          61\n-        51: new           #22                 // class java/lang/IllegalArgumentException\n+        51: new           #71                 // class java/lang/IllegalArgumentException\n         54: dup\n-        55: ldc           #23                 // String numberOfLocals < 0\n-        57: invokespecial #24                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        55: ldc           #73                 // String numberOfLocals < 0\n+        57: invokespecial #75                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         60: athrow\n         61: iload         4\n         63: ifge          76\n-        66: new           #22                 // class java/lang/IllegalArgumentException\n+        66: new           #71                 // class java/lang/IllegalArgumentException\n         69: dup\n-        70: ldc           #25                 // String numberOfStackItems < 0\n-        72: invokespecial #24                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        70: ldc           #76                 // String numberOfStackItems < 0\n+        72: invokespecial #75                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         75: athrow\n         76: return\n       LineNumberTable:\n         line 116: 0\n         line 117: 4\n         line 118: 9\n         line 119: 24\n@@ -654,47 +654,47 @@\n       numberOfLocals                 final\n       typesOfLocals                  final\n       numberOfStackItems             final\n       typesOfStackItems              final\n       constantPool                   final\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #98()\n+      0: #209()\n         java.lang.Deprecated\n \n   public org.apache.bcel.classfile.StackMapEntry(int, int, org.apache.bcel.classfile.StackMapType[], org.apache.bcel.classfile.StackMapType[], org.apache.bcel.classfile.ConstantPool);\n     descriptor: (II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=6, args_size=6\n          0: aload_0\n-         1: invokespecial #19                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #61                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #3                  // Field frameType:I\n+         6: putfield      #13                 // Field frameType:I\n          9: aload_0\n         10: iload_2\n-        11: putfield      #5                  // Field byteCodeOffset:I\n+        11: putfield      #19                 // Field byteCodeOffset:I\n         14: aload_0\n         15: aload_3\n         16: ifnull        23\n         19: aload_3\n         20: goto          26\n-        23: getstatic     #20                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-        26: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        23: getstatic     #64                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+        26: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         29: aload_0\n         30: aload         4\n         32: ifnull        40\n         35: aload         4\n         37: goto          43\n-        40: getstatic     #20                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-        43: putfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        40: getstatic     #64                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+        43: putfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         46: aload_0\n         47: aload         5\n-        49: putfield      #21                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+        49: putfield      #67                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n         52: return\n       LineNumberTable:\n         line 139: 0\n         line 140: 4\n         line 141: 9\n         line 142: 14\n         line 143: 29\n@@ -726,61 +726,61 @@\n   public void accept(org.apache.bcel.classfile.Visitor);\n     descriptor: (Lorg/apache/bcel/classfile/Visitor;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokeinterface #26,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n+         2: invokeinterface #78,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n          7: return\n       LineNumberTable:\n         line 155: 0\n         line 156: 7\n     MethodParameters:\n       Name                           Flags\n       v                              final\n \n   public org.apache.bcel.classfile.StackMapEntry copy();\n     descriptor: ()Lorg/apache/bcel/classfile/StackMapEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #27                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n-         4: checkcast     #28                 // class org/apache/bcel/classfile/StackMapEntry\n+         1: invokevirtual #84                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         4: checkcast     #8                  // class org/apache/bcel/classfile/StackMapEntry\n          7: astore_1\n          8: goto          22\n         11: astore_2\n-        12: new           #30                 // class java/lang/Error\n+        12: new           #90                 // class java/lang/Error\n         15: dup\n-        16: ldc           #31                 // String Clone Not Supported\n-        18: invokespecial #32                 // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+        16: ldc           #92                 // String Clone Not Supported\n+        18: invokespecial #94                 // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n         22: aload_1\n         23: aload_0\n-        24: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        24: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         27: arraylength\n-        28: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-        31: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        28: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+        31: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         34: aload_1\n-        35: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        35: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         38: aload_0\n-        39: invokedynamic #33,  0             // InvokeDynamic #0:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n-        44: invokestatic  #34                 // Method java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+        39: invokedynamic #95,  0             // InvokeDynamic #0:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n+        44: invokestatic  #99                 // Method java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n         47: aload_1\n         48: aload_0\n-        49: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        49: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         52: arraylength\n-        53: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-        56: putfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        53: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+        56: putfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         59: aload_1\n-        60: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        60: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         63: aload_0\n-        64: invokedynamic #35,  0             // InvokeDynamic #1:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n-        69: invokestatic  #34                 // Method java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+        64: invokedynamic #105,  0            // InvokeDynamic #1:apply:(Lorg/apache/bcel/classfile/StackMapEntry;)Ljava/util/function/IntFunction;\n+        69: invokestatic  #99                 // Method java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n         72: aload_1\n         73: areturn\n       Exception table:\n          from    to  target type\n              0     8    11   Class java/lang/CloneNotSupportedException\n       LineNumberTable:\n         line 164: 0\n@@ -802,82 +802,82 @@\n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #3                  // Field frameType:I\n-         5: invokevirtual #36                 // Method java/io/DataOutputStream.write:(I)V\n+         2: getfield      #13                 // Field frameType:I\n+         5: invokevirtual #106                // Method java/io/DataOutputStream.write:(I)V\n          8: aload_0\n-         9: getfield      #3                  // Field frameType:I\n+         9: getfield      #13                 // Field frameType:I\n         12: bipush        64\n         14: if_icmplt     39\n         17: aload_0\n-        18: getfield      #3                  // Field frameType:I\n+        18: getfield      #13                 // Field frameType:I\n         21: bipush        127\n         23: if_icmpgt     39\n         26: aload_0\n-        27: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        27: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         30: iconst_0\n         31: aaload\n         32: aload_1\n-        33: invokevirtual #37                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+        33: invokevirtual #112                // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n         36: goto          343\n         39: aload_0\n-        40: getfield      #3                  // Field frameType:I\n+        40: getfield      #13                 // Field frameType:I\n         43: sipush        247\n         46: if_icmpne     70\n         49: aload_1\n         50: aload_0\n-        51: getfield      #5                  // Field byteCodeOffset:I\n-        54: invokevirtual #38                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        51: getfield      #19                 // Field byteCodeOffset:I\n+        54: invokevirtual #116                // Method java/io/DataOutputStream.writeShort:(I)V\n         57: aload_0\n-        58: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        58: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         61: iconst_0\n         62: aaload\n         63: aload_1\n-        64: invokevirtual #37                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+        64: invokevirtual #112                // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n         67: goto          343\n         70: aload_0\n-        71: getfield      #3                  // Field frameType:I\n+        71: getfield      #13                 // Field frameType:I\n         74: sipush        248\n         77: if_icmplt     101\n         80: aload_0\n-        81: getfield      #3                  // Field frameType:I\n+        81: getfield      #13                 // Field frameType:I\n         84: sipush        250\n         87: if_icmpgt     101\n         90: aload_1\n         91: aload_0\n-        92: getfield      #5                  // Field byteCodeOffset:I\n-        95: invokevirtual #38                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        92: getfield      #19                 // Field byteCodeOffset:I\n+        95: invokevirtual #116                // Method java/io/DataOutputStream.writeShort:(I)V\n         98: goto          343\n        101: aload_0\n-       102: getfield      #3                  // Field frameType:I\n+       102: getfield      #13                 // Field frameType:I\n        105: sipush        251\n        108: if_icmpne     122\n        111: aload_1\n        112: aload_0\n-       113: getfield      #5                  // Field byteCodeOffset:I\n-       116: invokevirtual #38                 // Method java/io/DataOutputStream.writeShort:(I)V\n+       113: getfield      #19                 // Field byteCodeOffset:I\n+       116: invokevirtual #116                // Method java/io/DataOutputStream.writeShort:(I)V\n        119: goto          343\n        122: aload_0\n-       123: getfield      #3                  // Field frameType:I\n+       123: getfield      #13                 // Field frameType:I\n        126: sipush        252\n        129: if_icmplt     188\n        132: aload_0\n-       133: getfield      #3                  // Field frameType:I\n+       133: getfield      #13                 // Field frameType:I\n        136: sipush        254\n        139: if_icmpgt     188\n        142: aload_1\n        143: aload_0\n-       144: getfield      #5                  // Field byteCodeOffset:I\n-       147: invokevirtual #38                 // Method java/io/DataOutputStream.writeShort:(I)V\n+       144: getfield      #19                 // Field byteCodeOffset:I\n+       147: invokevirtual #116                // Method java/io/DataOutputStream.writeShort:(I)V\n        150: aload_0\n-       151: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       151: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        154: astore_2\n        155: aload_2\n        156: arraylength\n        157: istore_3\n        158: iconst_0\n        159: istore        4\n        161: iload         4\n@@ -885,33 +885,33 @@\n        164: if_icmpge     185\n        167: aload_2\n        168: iload         4\n        170: aaload\n        171: astore        5\n        173: aload         5\n        175: aload_1\n-       176: invokevirtual #37                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+       176: invokevirtual #112                // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n        179: iinc          4, 1\n        182: goto          161\n        185: goto          343\n        188: aload_0\n-       189: getfield      #3                  // Field frameType:I\n+       189: getfield      #13                 // Field frameType:I\n        192: sipush        255\n        195: if_icmpne     297\n        198: aload_1\n        199: aload_0\n-       200: getfield      #5                  // Field byteCodeOffset:I\n-       203: invokevirtual #38                 // Method java/io/DataOutputStream.writeShort:(I)V\n+       200: getfield      #19                 // Field byteCodeOffset:I\n+       203: invokevirtual #116                // Method java/io/DataOutputStream.writeShort:(I)V\n        206: aload_1\n        207: aload_0\n-       208: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       208: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        211: arraylength\n-       212: invokevirtual #38                 // Method java/io/DataOutputStream.writeShort:(I)V\n+       212: invokevirtual #116                // Method java/io/DataOutputStream.writeShort:(I)V\n        215: aload_0\n-       216: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       216: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        219: astore_2\n        220: aload_2\n        221: arraylength\n        222: istore_3\n        223: iconst_0\n        224: istore        4\n        226: iload         4\n@@ -919,24 +919,24 @@\n        229: if_icmpge     250\n        232: aload_2\n        233: iload         4\n        235: aaload\n        236: astore        5\n        238: aload         5\n        240: aload_1\n-       241: invokevirtual #37                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+       241: invokevirtual #112                // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n        244: iinc          4, 1\n        247: goto          226\n        250: aload_1\n        251: aload_0\n-       252: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       252: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        255: arraylength\n-       256: invokevirtual #38                 // Method java/io/DataOutputStream.writeShort:(I)V\n+       256: invokevirtual #116                // Method java/io/DataOutputStream.writeShort:(I)V\n        259: aload_0\n-       260: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       260: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        263: astore_2\n        264: aload_2\n        265: arraylength\n        266: istore_3\n        267: iconst_0\n        268: istore        4\n        270: iload         4\n@@ -944,37 +944,37 @@\n        273: if_icmpge     294\n        276: aload_2\n        277: iload         4\n        279: aaload\n        280: astore        5\n        282: aload         5\n        284: aload_1\n-       285: invokevirtual #37                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+       285: invokevirtual #112                // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n        288: iinc          4, 1\n        291: goto          270\n        294: goto          343\n        297: aload_0\n-       298: getfield      #3                  // Field frameType:I\n+       298: getfield      #13                 // Field frameType:I\n        301: iflt          313\n        304: aload_0\n-       305: getfield      #3                  // Field frameType:I\n+       305: getfield      #13                 // Field frameType:I\n        308: bipush        63\n        310: if_icmple     343\n-       313: new           #11                 // class org/apache/bcel/classfile/ClassFormatException\n+       313: new           #38                 // class org/apache/bcel/classfile/ClassFormatException\n        316: dup\n-       317: new           #12                 // class java/lang/StringBuilder\n+       317: new           #40                 // class java/lang/StringBuilder\n        320: dup\n-       321: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       324: ldc           #39                 // String Invalid Stack map table tag:\n-       326: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       321: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       324: ldc           #119                // String Invalid Stack map table tag:\n+       326: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        329: aload_0\n-       330: getfield      #3                  // Field frameType:I\n-       333: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       336: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       339: invokespecial #18                 // Method org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n+       330: getfield      #13                 // Field frameType:I\n+       333: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       336: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       339: invokespecial #58                 // Method org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n        342: athrow\n        343: return\n       LineNumberTable:\n         line 183: 0\n         line 184: 8\n         line 185: 26\n         line 186: 39\n@@ -1034,117 +1034,117 @@\n \n   public int getByteCodeOffset();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field byteCodeOffset:I\n+         1: getfield      #19                 // Field byteCodeOffset:I\n          4: ireturn\n       LineNumberTable:\n         line 215: 0\n \n   public org.apache.bcel.classfile.ConstantPool getConstantPool();\n     descriptor: ()Lorg/apache/bcel/classfile/ConstantPool;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+         1: getfield      #67                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n          4: areturn\n       LineNumberTable:\n         line 222: 0\n \n   public int getFrameType();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field frameType:I\n+         1: getfield      #13                 // Field frameType:I\n          4: ireturn\n       LineNumberTable:\n         line 226: 0\n \n   int getMapEntrySize();\n     descriptor: ()I\n     flags: (0x0000)\n     Code:\n       stack=4, locals=6, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field frameType:I\n+         1: getfield      #13                 // Field frameType:I\n          4: iflt          18\n          7: aload_0\n-         8: getfield      #3                  // Field frameType:I\n+         8: getfield      #13                 // Field frameType:I\n         11: bipush        63\n         13: if_icmpgt     18\n         16: iconst_1\n         17: ireturn\n         18: aload_0\n-        19: getfield      #3                  // Field frameType:I\n+        19: getfield      #13                 // Field frameType:I\n         22: bipush        64\n         24: if_icmplt     56\n         27: aload_0\n-        28: getfield      #3                  // Field frameType:I\n+        28: getfield      #13                 // Field frameType:I\n         31: bipush        127\n         33: if_icmpgt     56\n         36: iconst_1\n         37: aload_0\n-        38: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        38: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         41: iconst_0\n         42: aaload\n-        43: invokevirtual #40                 // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+        43: invokevirtual #121                // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n         46: ifeq          53\n         49: iconst_3\n         50: goto          54\n         53: iconst_1\n         54: iadd\n         55: ireturn\n         56: aload_0\n-        57: getfield      #3                  // Field frameType:I\n+        57: getfield      #13                 // Field frameType:I\n         60: sipush        247\n         63: if_icmpne     86\n         66: iconst_3\n         67: aload_0\n-        68: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        68: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         71: iconst_0\n         72: aaload\n-        73: invokevirtual #40                 // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+        73: invokevirtual #121                // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n         76: ifeq          83\n         79: iconst_3\n         80: goto          84\n         83: iconst_1\n         84: iadd\n         85: ireturn\n         86: aload_0\n-        87: getfield      #3                  // Field frameType:I\n+        87: getfield      #13                 // Field frameType:I\n         90: sipush        248\n         93: if_icmplt     106\n         96: aload_0\n-        97: getfield      #3                  // Field frameType:I\n+        97: getfield      #13                 // Field frameType:I\n        100: sipush        250\n        103: if_icmple     116\n        106: aload_0\n-       107: getfield      #3                  // Field frameType:I\n+       107: getfield      #13                 // Field frameType:I\n        110: sipush        251\n        113: if_icmpne     118\n        116: iconst_3\n        117: ireturn\n        118: aload_0\n-       119: getfield      #3                  // Field frameType:I\n+       119: getfield      #13                 // Field frameType:I\n        122: sipush        252\n        125: if_icmplt     187\n        128: aload_0\n-       129: getfield      #3                  // Field frameType:I\n+       129: getfield      #13                 // Field frameType:I\n        132: sipush        254\n        135: if_icmpgt     187\n        138: iconst_3\n        139: istore_1\n        140: aload_0\n-       141: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       141: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        144: astore_2\n        145: aload_2\n        146: arraylength\n        147: istore_3\n        148: iconst_0\n        149: istore        4\n        151: iload         4\n@@ -1152,46 +1152,46 @@\n        154: if_icmpge     185\n        157: aload_2\n        158: iload         4\n        160: aaload\n        161: astore        5\n        163: iload_1\n        164: aload         5\n-       166: invokevirtual #40                 // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+       166: invokevirtual #121                // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n        169: ifeq          176\n        172: iconst_3\n        173: goto          177\n        176: iconst_1\n        177: iadd\n        178: istore_1\n        179: iinc          4, 1\n        182: goto          151\n        185: iload_1\n        186: ireturn\n        187: aload_0\n-       188: getfield      #3                  // Field frameType:I\n+       188: getfield      #13                 // Field frameType:I\n        191: sipush        255\n        194: if_icmpeq     227\n-       197: new           #41                 // class java/lang/IllegalStateException\n+       197: new           #125                // class java/lang/IllegalStateException\n        200: dup\n-       201: new           #12                 // class java/lang/StringBuilder\n+       201: new           #40                 // class java/lang/StringBuilder\n        204: dup\n-       205: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       208: ldc           #42                 // String Invalid StackMap frameType:\n-       210: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       205: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       208: ldc           #127                // String Invalid StackMap frameType:\n+       210: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        213: aload_0\n-       214: getfield      #3                  // Field frameType:I\n-       217: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       220: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       223: invokespecial #43                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       214: getfield      #13                 // Field frameType:I\n+       217: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       220: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       223: invokespecial #129                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n        226: athrow\n        227: bipush        7\n        229: istore_1\n        230: aload_0\n-       231: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       231: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        234: astore_2\n        235: aload_2\n        236: arraylength\n        237: istore_3\n        238: iconst_0\n        239: istore        4\n        241: iload         4\n@@ -1199,25 +1199,25 @@\n        244: if_icmpge     275\n        247: aload_2\n        248: iload         4\n        250: aaload\n        251: astore        5\n        253: iload_1\n        254: aload         5\n-       256: invokevirtual #40                 // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+       256: invokevirtual #121                // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n        259: ifeq          266\n        262: iconst_3\n        263: goto          267\n        266: iconst_1\n        267: iadd\n        268: istore_1\n        269: iinc          4, 1\n        272: goto          241\n        275: aload_0\n-       276: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       276: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        279: astore_2\n        280: aload_2\n        281: arraylength\n        282: istore_3\n        283: iconst_0\n        284: istore        4\n        286: iload         4\n@@ -1225,15 +1225,15 @@\n        289: if_icmpge     320\n        292: aload_2\n        293: iload         4\n        295: aaload\n        296: astore        5\n        298: iload_1\n        299: aload         5\n-       301: invokevirtual #40                 // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+       301: invokevirtual #121                // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n        304: ifeq          311\n        307: iconst_3\n        308: goto          312\n        311: iconst_1\n        312: iadd\n        313: istore_1\n        314: iinc          4, 1\n@@ -1337,50 +1337,50 @@\n \n   public int getNumberOfLocals();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+         1: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n          4: arraylength\n          5: ireturn\n       LineNumberTable:\n         line 267: 0\n \n   public int getNumberOfStackItems();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+         1: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n          4: arraylength\n          5: ireturn\n       LineNumberTable:\n         line 271: 0\n \n   public org.apache.bcel.classfile.StackMapType[] getTypesOfLocals();\n     descriptor: ()[Lorg/apache/bcel/classfile/StackMapType;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+         1: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n          4: areturn\n       LineNumberTable:\n         line 275: 0\n \n   public org.apache.bcel.classfile.StackMapType[] getTypesOfStackItems();\n     descriptor: ()[Lorg/apache/bcel/classfile/StackMapType;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+         1: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n          4: areturn\n       LineNumberTable:\n         line 279: 0\n \n   private boolean invalidFrameType(int);\n     descriptor: (I)Z\n     flags: (0x0002) ACC_PRIVATE\n@@ -1429,86 +1429,86 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: iload_1\n          1: iflt          11\n          4: iload_1\n          5: sipush        32767\n          8: if_icmple     38\n-        11: new           #22                 // class java/lang/IllegalArgumentException\n+        11: new           #71                 // class java/lang/IllegalArgumentException\n         14: dup\n-        15: new           #12                 // class java/lang/StringBuilder\n+        15: new           #40                 // class java/lang/StringBuilder\n         18: dup\n-        19: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        22: ldc           #44                 // String Invalid StackMap offset:\n-        24: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        19: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        22: ldc           #130                // String Invalid StackMap offset:\n+        24: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         27: iload_1\n-        28: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        31: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        34: invokespecial #24                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        28: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        31: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        34: invokespecial #75                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         37: athrow\n         38: aload_0\n-        39: getfield      #3                  // Field frameType:I\n+        39: getfield      #13                 // Field frameType:I\n         42: iflt          78\n         45: aload_0\n-        46: getfield      #3                  // Field frameType:I\n+        46: getfield      #13                 // Field frameType:I\n         49: bipush        63\n         51: if_icmpgt     78\n         54: iload_1\n         55: bipush        63\n         57: if_icmple     70\n         60: aload_0\n         61: sipush        251\n-        64: putfield      #3                  // Field frameType:I\n+        64: putfield      #13                 // Field frameType:I\n         67: goto          164\n         70: aload_0\n         71: iload_1\n-        72: putfield      #3                  // Field frameType:I\n+        72: putfield      #13                 // Field frameType:I\n         75: goto          164\n         78: aload_0\n-        79: getfield      #3                  // Field frameType:I\n+        79: getfield      #13                 // Field frameType:I\n         82: bipush        64\n         84: if_icmplt     123\n         87: aload_0\n-        88: getfield      #3                  // Field frameType:I\n+        88: getfield      #13                 // Field frameType:I\n         91: bipush        127\n         93: if_icmpgt     123\n         96: iload_1\n         97: bipush        63\n         99: if_icmple     112\n        102: aload_0\n        103: sipush        247\n-       106: putfield      #3                  // Field frameType:I\n+       106: putfield      #13                 // Field frameType:I\n        109: goto          164\n        112: aload_0\n        113: bipush        64\n        115: iload_1\n        116: iadd\n-       117: putfield      #3                  // Field frameType:I\n+       117: putfield      #13                 // Field frameType:I\n        120: goto          164\n        123: aload_0\n        124: aload_0\n-       125: getfield      #3                  // Field frameType:I\n-       128: invokespecial #45                 // Method invalidFrameType:(I)Z\n+       125: getfield      #13                 // Field frameType:I\n+       128: invokespecial #132                // Method invalidFrameType:(I)Z\n        131: ifeq          164\n-       134: new           #41                 // class java/lang/IllegalStateException\n+       134: new           #125                // class java/lang/IllegalStateException\n        137: dup\n-       138: new           #12                 // class java/lang/StringBuilder\n+       138: new           #40                 // class java/lang/StringBuilder\n        141: dup\n-       142: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       145: ldc           #42                 // String Invalid StackMap frameType:\n-       147: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       142: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       145: ldc           #127                // String Invalid StackMap frameType:\n+       147: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        150: aload_0\n-       151: getfield      #3                  // Field frameType:I\n-       154: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       157: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       160: invokespecial #43                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       151: getfield      #13                 // Field frameType:I\n+       154: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       157: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       160: invokespecial #129                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n        163: athrow\n        164: aload_0\n        165: iload_1\n-       166: putfield      #5                  // Field byteCodeOffset:I\n+       166: putfield      #19                 // Field byteCodeOffset:I\n        169: return\n       LineNumberTable:\n         line 293: 0\n         line 294: 11\n         line 297: 38\n         line 298: 54\n         line 299: 60\n@@ -1536,15 +1536,15 @@\n   public void setConstantPool(org.apache.bcel.classfile.ConstantPool);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #21                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+         2: putfield      #67                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n          5: return\n       LineNumberTable:\n         line 319: 0\n         line 320: 5\n     MethodParameters:\n       Name                           Flags\n       constantPool                   final\n@@ -1559,40 +1559,40 @@\n          4: iload_1\n          5: bipush        63\n          7: if_icmpgt     20\n         10: aload_0\n         11: iload_1\n         12: iconst_0\n         13: isub\n-        14: putfield      #5                  // Field byteCodeOffset:I\n+        14: putfield      #19                 // Field byteCodeOffset:I\n         17: goto          61\n         20: iload_1\n         21: bipush        64\n         23: if_icmplt     43\n         26: iload_1\n         27: bipush        127\n         29: if_icmpgt     43\n         32: aload_0\n         33: iload_1\n         34: bipush        64\n         36: isub\n-        37: putfield      #5                  // Field byteCodeOffset:I\n+        37: putfield      #19                 // Field byteCodeOffset:I\n         40: goto          61\n         43: aload_0\n         44: iload_1\n-        45: invokespecial #45                 // Method invalidFrameType:(I)Z\n+        45: invokespecial #132                // Method invalidFrameType:(I)Z\n         48: ifeq          61\n-        51: new           #22                 // class java/lang/IllegalArgumentException\n+        51: new           #71                 // class java/lang/IllegalArgumentException\n         54: dup\n-        55: ldc           #46                 // String Invalid StackMap frameType\n-        57: invokespecial #24                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        55: ldc           #136                // String Invalid StackMap frameType\n+        57: invokespecial #75                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         60: athrow\n         61: aload_0\n         62: iload_1\n-        63: putfield      #3                  // Field frameType:I\n+        63: putfield      #13                 // Field frameType:I\n         66: return\n       LineNumberTable:\n         line 323: 0\n         line 324: 10\n         line 325: 20\n         line 326: 32\n         line 327: 43\n@@ -1616,15 +1616,15 @@\n       LineNumberTable:\n         line 339: 0\n     MethodParameters:\n       Name                           Flags\n       n                              final\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #98()\n+      0: #209()\n         java.lang.Deprecated\n \n   public void setNumberOfStackItems(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=0, locals=2, args_size=2\n@@ -1632,29 +1632,29 @@\n       LineNumberTable:\n         line 347: 0\n     MethodParameters:\n       Name                           Flags\n       n                              final\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #98()\n+      0: #209()\n         java.lang.Deprecated\n \n   public void setTypesOfLocals(org.apache.bcel.classfile.StackMapType[]);\n     descriptor: ([Lorg/apache/bcel/classfile/StackMapType;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnull        9\n          5: aload_1\n          6: goto          12\n-         9: getstatic     #20                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-        12: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+         9: getstatic     #64                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+        12: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         15: return\n       LineNumberTable:\n         line 350: 0\n         line 351: 15\n       StackMapTable: number_of_entries = 2\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class org/apache/bcel/classfile/StackMapEntry ]\n@@ -1672,16 +1672,16 @@\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnull        9\n          5: aload_1\n          6: goto          12\n-         9: getstatic     #20                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-        12: putfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+         9: getstatic     #64                 // Field org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+        12: putfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         15: return\n       LineNumberTable:\n         line 354: 0\n         line 355: 15\n       StackMapTable: number_of_entries = 2\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class org/apache/bcel/classfile/StackMapEntry ]\n@@ -1694,213 +1694,213 @@\n       types                          final\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n-         0: new           #12                 // class java/lang/StringBuilder\n+         0: new           #40                 // class java/lang/StringBuilder\n          3: dup\n          4: bipush        64\n-         6: invokespecial #47                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n+         6: invokespecial #138                // Method java/lang/StringBuilder.\"<init>\":(I)V\n          9: astore_1\n         10: aload_1\n-        11: ldc           #48                 // String (\n-        13: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        11: ldc           #140                // String (\n+        13: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         16: pop\n         17: aload_0\n-        18: getfield      #3                  // Field frameType:I\n+        18: getfield      #13                 // Field frameType:I\n         21: iflt          43\n         24: aload_0\n-        25: getfield      #3                  // Field frameType:I\n+        25: getfield      #13                 // Field frameType:I\n         28: bipush        63\n         30: if_icmpgt     43\n         33: aload_1\n-        34: ldc           #49                 // String SAME\n-        36: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        34: ldc           #142                // String SAME\n+        36: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         39: pop\n         40: goto          238\n         43: aload_0\n-        44: getfield      #3                  // Field frameType:I\n+        44: getfield      #13                 // Field frameType:I\n         47: bipush        64\n         49: if_icmplt     71\n         52: aload_0\n-        53: getfield      #3                  // Field frameType:I\n+        53: getfield      #13                 // Field frameType:I\n         56: bipush        127\n         58: if_icmpgt     71\n         61: aload_1\n-        62: ldc           #50                 // String SAME_LOCALS_1_STACK\n-        64: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        62: ldc           #144                // String SAME_LOCALS_1_STACK\n+        64: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         67: pop\n         68: goto          238\n         71: aload_0\n-        72: getfield      #3                  // Field frameType:I\n+        72: getfield      #13                 // Field frameType:I\n         75: sipush        247\n         78: if_icmpne     91\n         81: aload_1\n-        82: ldc           #51                 // String SAME_LOCALS_1_STACK_EXTENDED\n-        84: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        82: ldc           #146                // String SAME_LOCALS_1_STACK_EXTENDED\n+        84: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         87: pop\n         88: goto          238\n         91: aload_0\n-        92: getfield      #3                  // Field frameType:I\n+        92: getfield      #13                 // Field frameType:I\n         95: sipush        248\n         98: if_icmplt     135\n        101: aload_0\n-       102: getfield      #3                  // Field frameType:I\n+       102: getfield      #13                 // Field frameType:I\n        105: sipush        250\n        108: if_icmpgt     135\n        111: aload_1\n-       112: ldc           #52                 // String CHOP\n-       114: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       112: ldc           #148                // String CHOP\n+       114: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        117: sipush        251\n        120: aload_0\n-       121: getfield      #3                  // Field frameType:I\n+       121: getfield      #13                 // Field frameType:I\n        124: isub\n-       125: invokestatic  #53                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n-       128: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       125: invokestatic  #150                // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n+       128: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        131: pop\n        132: goto          238\n        135: aload_0\n-       136: getfield      #3                  // Field frameType:I\n+       136: getfield      #13                 // Field frameType:I\n        139: sipush        251\n        142: if_icmpne     155\n        145: aload_1\n-       146: ldc           #54                 // String SAME_EXTENDED\n-       148: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       146: ldc           #156                // String SAME_EXTENDED\n+       148: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        151: pop\n        152: goto          238\n        155: aload_0\n-       156: getfield      #3                  // Field frameType:I\n+       156: getfield      #13                 // Field frameType:I\n        159: sipush        252\n        162: if_icmplt     199\n        165: aload_0\n-       166: getfield      #3                  // Field frameType:I\n+       166: getfield      #13                 // Field frameType:I\n        169: sipush        254\n        172: if_icmpgt     199\n        175: aload_1\n-       176: ldc           #55                 // String APPEND\n-       178: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       176: ldc           #158                // String APPEND\n+       178: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        181: aload_0\n-       182: getfield      #3                  // Field frameType:I\n+       182: getfield      #13                 // Field frameType:I\n        185: sipush        251\n        188: isub\n-       189: invokestatic  #53                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n-       192: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       189: invokestatic  #150                // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n+       192: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        195: pop\n        196: goto          238\n        199: aload_0\n-       200: getfield      #3                  // Field frameType:I\n+       200: getfield      #13                 // Field frameType:I\n        203: sipush        255\n        206: if_icmpne     219\n        209: aload_1\n-       210: ldc           #56                 // String FULL\n-       212: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       210: ldc           #160                // String FULL\n+       212: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        215: pop\n        216: goto          238\n        219: aload_1\n-       220: ldc           #57                 // String UNKNOWN (\n-       222: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       220: ldc           #162                // String UNKNOWN (\n+       222: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        225: aload_0\n-       226: getfield      #3                  // Field frameType:I\n-       229: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       232: ldc           #58                 // String )\n-       234: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       226: getfield      #13                 // Field frameType:I\n+       229: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       232: ldc           #164                // String )\n+       234: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        237: pop\n        238: aload_1\n-       239: ldc           #59                 // String , offset delta=\n-       241: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       239: ldc           #166                // String , offset delta=\n+       241: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        244: aload_0\n-       245: getfield      #5                  // Field byteCodeOffset:I\n-       248: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       245: getfield      #19                 // Field byteCodeOffset:I\n+       248: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n        251: pop\n        252: aload_0\n-       253: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       253: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        256: arraylength\n        257: ifle          320\n        260: aload_1\n-       261: ldc           #60                 // String , locals={\n-       263: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       261: ldc           #168                // String , locals={\n+       263: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        266: pop\n        267: iconst_0\n        268: istore_2\n        269: iload_2\n        270: aload_0\n-       271: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       271: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        274: arraylength\n        275: if_icmpge     313\n        278: aload_1\n        279: aload_0\n-       280: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       280: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        283: iload_2\n        284: aaload\n-       285: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       285: invokevirtual #170                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n        288: pop\n        289: iload_2\n        290: aload_0\n-       291: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       291: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        294: arraylength\n        295: iconst_1\n        296: isub\n        297: if_icmpge     307\n        300: aload_1\n-       301: ldc           #62                 // String ,\n-       303: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       301: ldc           #173                // String ,\n+       303: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        306: pop\n        307: iinc          2, 1\n        310: goto          269\n        313: aload_1\n-       314: ldc           #63                 // String }\n-       316: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       314: ldc           #175                // String }\n+       316: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        319: pop\n        320: aload_0\n-       321: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       321: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        324: arraylength\n        325: ifle          388\n        328: aload_1\n-       329: ldc           #64                 // String , stack items={\n-       331: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       329: ldc           #177                // String , stack items={\n+       331: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        334: pop\n        335: iconst_0\n        336: istore_2\n        337: iload_2\n        338: aload_0\n-       339: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       339: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        342: arraylength\n        343: if_icmpge     381\n        346: aload_1\n        347: aload_0\n-       348: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       348: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        351: iload_2\n        352: aaload\n-       353: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       353: invokevirtual #170                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n        356: pop\n        357: iload_2\n        358: aload_0\n-       359: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       359: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        362: arraylength\n        363: iconst_1\n        364: isub\n        365: if_icmpge     375\n        368: aload_1\n-       369: ldc           #62                 // String ,\n-       371: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       369: ldc           #173                // String ,\n+       371: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        374: pop\n        375: iinc          2, 1\n        378: goto          337\n        381: aload_1\n-       382: ldc           #63                 // String }\n-       384: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       382: ldc           #175                // String }\n+       384: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        387: pop\n        388: aload_1\n-       389: ldc           #58                 // String )\n-       391: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       389: ldc           #164                // String )\n+       391: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        394: pop\n        395: aload_1\n-       396: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       396: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        399: areturn\n       LineNumberTable:\n         line 362: 0\n         line 363: 10\n         line 364: 17\n         line 365: 33\n         line 366: 43\n@@ -1964,73 +1964,73 @@\n   public void updateByteCodeOffset(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: getfield      #5                  // Field byteCodeOffset:I\n+         2: getfield      #19                 // Field byteCodeOffset:I\n          5: iload_1\n          6: iadd\n-         7: invokevirtual #65                 // Method setByteCodeOffset:(I)V\n+         7: invokevirtual #179                // Method setByteCodeOffset:(I)V\n         10: return\n       LineNumberTable:\n         line 413: 0\n         line 414: 10\n     MethodParameters:\n       Name                           Flags\n       delta                          final\n \n   private org.apache.bcel.classfile.StackMapType lambda$copy$1(int);\n     descriptor: (I)Lorg/apache/bcel/classfile/StackMapType;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+         1: getfield      #27                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n          4: iload_1\n          5: aaload\n-         6: invokevirtual #66                 // Method org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n+         6: invokevirtual #182                // Method org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n          9: areturn\n       LineNumberTable:\n         line 172: 0\n \n   private org.apache.bcel.classfile.StackMapType lambda$copy$0(int);\n     descriptor: (I)Lorg/apache/bcel/classfile/StackMapType;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+         1: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n          4: iload_1\n          5: aaload\n-         6: invokevirtual #66                 // Method org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n+         6: invokevirtual #182                // Method org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n          9: areturn\n       LineNumberTable:\n         line 170: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #28                 // class org/apache/bcel/classfile/StackMapEntry\n-         4: putstatic     #67                 // Field EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapEntry;\n+         1: anewarray     #8                  // class org/apache/bcel/classfile/StackMapEntry\n+         4: putstatic     #186                // Field EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapEntry;\n          7: return\n       LineNumberTable:\n         line 49: 0\n }\n SourceFile: \"StackMapEntry.java\"\n-InnerClasses:\n-  public static final #264= #263 of #267; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #179 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #248 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #180 (I)Ljava/lang/Object;\n-      #181 REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n-      #182 (I)Lorg/apache/bcel/classfile/StackMapType;\n-  1: #179 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #255 (I)Ljava/lang/Object;\n+      #257 REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$0:(I)Lorg/apache/bcel/classfile/StackMapType;\n+      #260 (I)Lorg/apache/bcel/classfile/StackMapType;\n+  1: #248 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #180 (I)Ljava/lang/Object;\n-      #186 REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n-      #182 (I)Lorg/apache/bcel/classfile/StackMapType;\n+      #255 (I)Ljava/lang/Object;\n+      #261 REF_invokeSpecial org/apache/bcel/classfile/StackMapEntry.lambda$copy$1:(I)Lorg/apache/bcel/classfile/StackMapType;\n+      #260 (I)Lorg/apache/bcel/classfile/StackMapType;\n+InnerClasses:\n+  public static final #269= #265 of #267; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
