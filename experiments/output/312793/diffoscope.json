{"diffoscope-json-version": 1, "source1": "first/ReadWriteSynchronizer.class", "source2": "second/ReadWriteSynchronizer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,66 +1,66 @@\n-  SHA-256 checksum e3ef6a37a8db220324fa7f782084098ec09f93503956f1860efa19f11ccd1364\n+  SHA-256 checksum cd60a306100357a0f19a11f6d66f51df2e04dcf19e6670abdc0b6e3324b0be9d\n   Compiled from \"ReadWriteSynchronizer.java\"\n public class org.apache.commons.configuration2.sync.ReadWriteSynchronizer implements org.apache.commons.configuration2.sync.Synchronizer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #11                         // org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n-  super_class: #12                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 1, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Methodref          #12.#31        // java/lang/Object.\"<init>\":()V\n-   #2 = Methodref          #11.#32        // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n-   #3 = Fieldref           #11.#33        // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-   #4 = Methodref          #11.#34        // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.\"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n-   #5 = InterfaceMethodref #21.#35        // java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n-   #6 = InterfaceMethodref #36.#37        // java/util/concurrent/locks/Lock.lock:()V\n-   #7 = InterfaceMethodref #36.#38        // java/util/concurrent/locks/Lock.unlock:()V\n-   #8 = InterfaceMethodref #21.#39        // java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n-   #9 = Class              #40            // java/util/concurrent/locks/ReentrantReadWriteLock\n-  #10 = Methodref          #9.#31         // java/util/concurrent/locks/ReentrantReadWriteLock.\"<init>\":()V\n-  #11 = Class              #41            // org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n-  #12 = Class              #42            // java/lang/Object\n-  #13 = Class              #43            // org/apache/commons/configuration2/sync/Synchronizer\n-  #14 = Utf8               lock\n-  #15 = Utf8               Ljava/util/concurrent/locks/ReadWriteLock;\n-  #16 = Utf8               <init>\n-  #17 = Utf8               (Ljava/util/concurrent/locks/ReadWriteLock;)V\n-  #18 = Utf8               Code\n-  #19 = Utf8               LineNumberTable\n-  #20 = Utf8               StackMapTable\n-  #21 = Class              #44            // java/util/concurrent/locks/ReadWriteLock\n-  #22 = Utf8               ()V\n-  #23 = Utf8               beginRead\n-  #24 = Utf8               endRead\n-  #25 = Utf8               beginWrite\n-  #26 = Utf8               endWrite\n-  #27 = Utf8               createDefaultLock\n-  #28 = Utf8               ()Ljava/util/concurrent/locks/ReadWriteLock;\n-  #29 = Utf8               SourceFile\n-  #30 = Utf8               ReadWriteSynchronizer.java\n-  #31 = NameAndType        #16:#22        // \"<init>\":()V\n-  #32 = NameAndType        #27:#28        // createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n-  #33 = NameAndType        #14:#15        // lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-  #34 = NameAndType        #16:#17        // \"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n-  #35 = NameAndType        #45:#46        // readLock:()Ljava/util/concurrent/locks/Lock;\n-  #36 = Class              #47            // java/util/concurrent/locks/Lock\n-  #37 = NameAndType        #14:#22        // lock:()V\n-  #38 = NameAndType        #48:#22        // unlock:()V\n-  #39 = NameAndType        #49:#46        // writeLock:()Ljava/util/concurrent/locks/Lock;\n-  #40 = Utf8               java/util/concurrent/locks/ReentrantReadWriteLock\n-  #41 = Utf8               org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n-  #42 = Utf8               java/lang/Object\n-  #43 = Utf8               org/apache/commons/configuration2/sync/Synchronizer\n-  #44 = Utf8               java/util/concurrent/locks/ReadWriteLock\n-  #45 = Utf8               readLock\n-  #46 = Utf8               ()Ljava/util/concurrent/locks/Lock;\n-  #47 = Utf8               java/util/concurrent/locks/Lock\n-  #48 = Utf8               unlock\n-  #49 = Utf8               writeLock\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n+   #8 = Class              #10            // org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n+   #9 = NameAndType        #11:#12        // createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n+  #10 = Utf8               org/apache/commons/configuration2/sync/ReadWriteSynchronizer\n+  #11 = Utf8               createDefaultLock\n+  #12 = Utf8               ()Ljava/util/concurrent/locks/ReadWriteLock;\n+  #13 = Fieldref           #8.#14         // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+  #14 = NameAndType        #15:#16        // lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+  #15 = Utf8               lock\n+  #16 = Utf8               Ljava/util/concurrent/locks/ReadWriteLock;\n+  #17 = Methodref          #8.#18         // org/apache/commons/configuration2/sync/ReadWriteSynchronizer.\"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n+  #18 = NameAndType        #5:#19         // \"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n+  #19 = Utf8               (Ljava/util/concurrent/locks/ReadWriteLock;)V\n+  #20 = InterfaceMethodref #21.#22        // java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n+  #21 = Class              #23            // java/util/concurrent/locks/ReadWriteLock\n+  #22 = NameAndType        #24:#25        // readLock:()Ljava/util/concurrent/locks/Lock;\n+  #23 = Utf8               java/util/concurrent/locks/ReadWriteLock\n+  #24 = Utf8               readLock\n+  #25 = Utf8               ()Ljava/util/concurrent/locks/Lock;\n+  #26 = InterfaceMethodref #27.#28        // java/util/concurrent/locks/Lock.lock:()V\n+  #27 = Class              #29            // java/util/concurrent/locks/Lock\n+  #28 = NameAndType        #15:#6         // lock:()V\n+  #29 = Utf8               java/util/concurrent/locks/Lock\n+  #30 = InterfaceMethodref #27.#31        // java/util/concurrent/locks/Lock.unlock:()V\n+  #31 = NameAndType        #32:#6         // unlock:()V\n+  #32 = Utf8               unlock\n+  #33 = InterfaceMethodref #21.#34        // java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n+  #34 = NameAndType        #35:#25        // writeLock:()Ljava/util/concurrent/locks/Lock;\n+  #35 = Utf8               writeLock\n+  #36 = Class              #37            // java/util/concurrent/locks/ReentrantReadWriteLock\n+  #37 = Utf8               java/util/concurrent/locks/ReentrantReadWriteLock\n+  #38 = Methodref          #36.#3         // java/util/concurrent/locks/ReentrantReadWriteLock.\"<init>\":()V\n+  #39 = Class              #40            // org/apache/commons/configuration2/sync/Synchronizer\n+  #40 = Utf8               org/apache/commons/configuration2/sync/Synchronizer\n+  #41 = Utf8               Code\n+  #42 = Utf8               LineNumberTable\n+  #43 = Utf8               StackMapTable\n+  #44 = Utf8               beginRead\n+  #45 = Utf8               endRead\n+  #46 = Utf8               beginWrite\n+  #47 = Utf8               endWrite\n+  #48 = Utf8               SourceFile\n+  #49 = Utf8               ReadWriteSynchronizer.java\n {\n   private final java.util.concurrent.locks.ReadWriteLock lock;\n     descriptor: Ljava/util/concurrent/locks/ReadWriteLock;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.configuration2.sync.ReadWriteSynchronizer(java.util.concurrent.locks.ReadWriteLock);\n     descriptor: (Ljava/util/concurrent/locks/ReadWriteLock;)V\n@@ -70,16 +70,16 @@\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: ifnull        13\n          9: aload_1\n         10: goto          16\n-        13: invokestatic  #2                  // Method createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n-        16: putfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+        13: invokestatic  #7                  // Method createDefaultLock:()Ljava/util/concurrent/locks/ReadWriteLock;\n+        16: putfield      #13                 // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n         19: return\n       LineNumberTable:\n         line 49: 0\n         line 50: 4\n         line 51: 19\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n@@ -94,82 +94,82 @@\n   public org.apache.commons.configuration2.sync.ReadWriteSynchronizer();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: invokespecial #4                  // Method \"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n+         2: invokespecial #17                 // Method \"<init>\":(Ljava/util/concurrent/locks/ReadWriteLock;)V\n          5: return\n       LineNumberTable:\n         line 58: 0\n         line 59: 5\n \n   public void beginRead();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-         4: invokeinterface #5,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n-         9: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V\n+         1: getfield      #13                 // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+         4: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n+         9: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V\n         14: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 14\n \n   public void endRead();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-         4: invokeinterface #5,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n-         9: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V\n+         1: getfield      #13                 // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+         4: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;\n+         9: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V\n         14: return\n       LineNumberTable:\n         line 68: 0\n         line 69: 14\n \n   public void beginWrite();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-         4: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n-         9: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V\n+         1: getfield      #13                 // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+         4: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n+         9: invokeinterface #26,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V\n         14: return\n       LineNumberTable:\n         line 73: 0\n         line 74: 14\n \n   public void endWrite();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n-         4: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n-         9: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V\n+         1: getfield      #13                 // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;\n+         4: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;\n+         9: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V\n         14: return\n       LineNumberTable:\n         line 78: 0\n         line 79: 14\n \n   private static java.util.concurrent.locks.ReadWriteLock createDefaultLock();\n     descriptor: ()Ljava/util/concurrent/locks/ReadWriteLock;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #9                  // class java/util/concurrent/locks/ReentrantReadWriteLock\n+         0: new           #36                 // class java/util/concurrent/locks/ReentrantReadWriteLock\n          3: dup\n-         4: invokespecial #10                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.\"<init>\":()V\n+         4: invokespecial #38                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.\"<init>\":()V\n          7: areturn\n       LineNumberTable:\n         line 87: 0\n }\n SourceFile: \"ReadWriteSynchronizer.java\"\n"}]}
