{"diffoscope-json-version": 1, "source1": "first/Pass2Verifier$CPESSC_Visitor.class", "source2": "second/Pass2Verifier$CPESSC_Visitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,350 +1,350 @@\n-  SHA-256 checksum 455f6babfe54eaeb2a14052712404da5fcfe79e982f54db7699ec7396982cbc4\n+  SHA-256 checksum 57c38c44cb150724dfd7059eb962ddb6d88c18b68dae678d594ba4f3a33d1e62\n   Compiled from \"Pass2Verifier.java\"\n final class org.apache.bcel.verifier.statics.Pass2Verifier$CPESSC_Visitor extends org.apache.bcel.classfile.EmptyVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n   this_class: #332                        // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n   super_class: #333                       // org/apache/bcel/classfile/EmptyVisitor\n   interfaces: 0, fields: 16, methods: 33, attributes: 3\n Constant pool:\n-     #1 = Methodref          #332.#565    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.\"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n-     #2 = Fieldref           #332.#566    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n-     #3 = Methodref          #333.#567    // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n-     #4 = Class              #568         // java/util/HashSet\n-     #5 = Methodref          #4.#567      // java/util/HashSet.\"<init>\":()V\n-     #6 = Fieldref           #332.#569    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.field_names:Ljava/util/Set;\n-     #7 = Fieldref           #332.#570    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.field_names_and_desc:Ljava/util/Set;\n-     #8 = Fieldref           #332.#571    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.method_names_and_desc:Ljava/util/Set;\n-     #9 = Fieldref           #332.#572    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.jc:Lorg/apache/bcel/classfile/JavaClass;\n-    #10 = Methodref          #573.#574    // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-    #11 = Fieldref           #332.#575    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.cp:Lorg/apache/bcel/classfile/ConstantPool;\n-    #12 = Methodref          #576.#577    // org/apache/bcel/classfile/ConstantPool.getLength:()I\n-    #13 = Fieldref           #332.#578    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.cplen:I\n-    #14 = Class              #579         // org/apache/bcel/classfile/ConstantClass\n-    #15 = Fieldref           #332.#580    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Class:Ljava/lang/Class;\n-    #16 = Class              #581         // org/apache/bcel/classfile/ConstantString\n-    #17 = Fieldref           #332.#582    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_String:Ljava/lang/Class;\n-    #18 = Class              #583         // org/apache/bcel/classfile/ConstantInteger\n-    #19 = Fieldref           #332.#584    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Integer:Ljava/lang/Class;\n-    #20 = Class              #585         // org/apache/bcel/classfile/ConstantFloat\n-    #21 = Fieldref           #332.#586    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Float:Ljava/lang/Class;\n-    #22 = Class              #587         // org/apache/bcel/classfile/ConstantLong\n-    #23 = Fieldref           #332.#588    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Long:Ljava/lang/Class;\n-    #24 = Class              #589         // org/apache/bcel/classfile/ConstantDouble\n-    #25 = Fieldref           #332.#590    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Double:Ljava/lang/Class;\n-    #26 = Class              #591         // org/apache/bcel/classfile/ConstantNameAndType\n-    #27 = Fieldref           #332.#592    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_NameAndType:Ljava/lang/Class;\n-    #28 = Class              #593         // org/apache/bcel/classfile/ConstantUtf8\n-    #29 = Fieldref           #332.#594    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Utf8:Ljava/lang/Class;\n-    #30 = Class              #595         // org/apache/bcel/classfile/DescendingVisitor\n-    #31 = Methodref          #30.#596     // org/apache/bcel/classfile/DescendingVisitor.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n-    #32 = Fieldref           #332.#597    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.carrier:Lorg/apache/bcel/classfile/DescendingVisitor;\n-    #33 = Methodref          #30.#598     // org/apache/bcel/classfile/DescendingVisitor.visit:()V\n-    #34 = Class              #599         // org/apache/bcel/verifier/exc/ClassConstraintException\n-    #35 = Class              #600         // java/lang/StringBuilder\n-    #36 = Methodref          #35.#567     // java/lang/StringBuilder.\"<init>\":()V\n-    #37 = String             #601         // Invalid index \\'\n-    #38 = Methodref          #35.#602     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #39 = Methodref          #35.#603     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-    #40 = String             #604         // \\' used by \\'\n-    #41 = Methodref          #605.#606    // org/apache/bcel/verifier/statics/Pass2Verifier.access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n-    #42 = String             #607         // \\'.\n-    #43 = Methodref          #35.#608     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-    #44 = Methodref          #34.#609     // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;)V\n-    #45 = Methodref          #576.#610    // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-    #46 = Methodref          #611.#612    // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-    #47 = String             #613         // Illegal constant \\'\n-    #48 = String             #614         // \\' at index \\'\n-    #49 = String             #615         // \\'. \\'\n-    #50 = String             #616         // \\' expects a \\'\n-    #51 = Methodref          #35.#617     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-    #52 = Methodref          #296.#618    // org/apache/bcel/classfile/Code.getNameIndex:()I\n-    #53 = Methodref          #332.#619    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.checkIndex:(Lorg/apache/bcel/classfile/Node;ILjava/lang/Class;)V\n-    #54 = Methodref          #28.#620     // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+     #1 = Methodref          #332.#554    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.\"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n+     #2 = Fieldref           #332.#555    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n+     #3 = Methodref          #333.#556    // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n+     #4 = Class              #557         // java/util/HashSet\n+     #5 = Methodref          #4.#556      // java/util/HashSet.\"<init>\":()V\n+     #6 = Fieldref           #332.#558    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.field_names:Ljava/util/Set;\n+     #7 = Fieldref           #332.#559    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.field_names_and_desc:Ljava/util/Set;\n+     #8 = Fieldref           #332.#560    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.method_names_and_desc:Ljava/util/Set;\n+     #9 = Fieldref           #332.#561    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.jc:Lorg/apache/bcel/classfile/JavaClass;\n+    #10 = Methodref          #432.#562    // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+    #11 = Fieldref           #332.#563    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.cp:Lorg/apache/bcel/classfile/ConstantPool;\n+    #12 = Methodref          #564.#565    // org/apache/bcel/classfile/ConstantPool.getLength:()I\n+    #13 = Fieldref           #332.#566    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.cplen:I\n+    #14 = Class              #567         // org/apache/bcel/classfile/ConstantClass\n+    #15 = Fieldref           #332.#568    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Class:Ljava/lang/Class;\n+    #16 = Class              #569         // org/apache/bcel/classfile/ConstantString\n+    #17 = Fieldref           #332.#570    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_String:Ljava/lang/Class;\n+    #18 = Class              #571         // org/apache/bcel/classfile/ConstantInteger\n+    #19 = Fieldref           #332.#572    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Integer:Ljava/lang/Class;\n+    #20 = Class              #573         // org/apache/bcel/classfile/ConstantFloat\n+    #21 = Fieldref           #332.#574    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Float:Ljava/lang/Class;\n+    #22 = Class              #575         // org/apache/bcel/classfile/ConstantLong\n+    #23 = Fieldref           #332.#576    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Long:Ljava/lang/Class;\n+    #24 = Class              #577         // org/apache/bcel/classfile/ConstantDouble\n+    #25 = Fieldref           #332.#578    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Double:Ljava/lang/Class;\n+    #26 = Class              #579         // org/apache/bcel/classfile/ConstantNameAndType\n+    #27 = Fieldref           #332.#580    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_NameAndType:Ljava/lang/Class;\n+    #28 = Class              #581         // org/apache/bcel/classfile/ConstantUtf8\n+    #29 = Fieldref           #332.#582    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Utf8:Ljava/lang/Class;\n+    #30 = Class              #583         // org/apache/bcel/classfile/DescendingVisitor\n+    #31 = Methodref          #30.#584     // org/apache/bcel/classfile/DescendingVisitor.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n+    #32 = Fieldref           #332.#585    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.carrier:Lorg/apache/bcel/classfile/DescendingVisitor;\n+    #33 = Methodref          #30.#586     // org/apache/bcel/classfile/DescendingVisitor.visit:()V\n+    #34 = Class              #587         // org/apache/bcel/verifier/exc/ClassConstraintException\n+    #35 = Class              #588         // java/lang/StringBuilder\n+    #36 = Methodref          #35.#556     // java/lang/StringBuilder.\"<init>\":()V\n+    #37 = String             #589         // Invalid index \\'\n+    #38 = Methodref          #35.#590     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #39 = Methodref          #35.#591     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+    #40 = String             #592         // \\' used by \\'\n+    #41 = Methodref          #593.#594    // org/apache/bcel/verifier/statics/Pass2Verifier.access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n+    #42 = String             #595         // \\'.\n+    #43 = Methodref          #35.#596     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+    #44 = Methodref          #34.#597     // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;)V\n+    #45 = Methodref          #564.#598    // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+    #46 = Methodref          #599.#600    // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+    #47 = String             #601         // Illegal constant \\'\n+    #48 = String             #602         // \\' at index \\'\n+    #49 = String             #603         // \\'. \\'\n+    #50 = String             #604         // \\' expects a \\'\n+    #51 = Methodref          #35.#605     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+    #52 = Methodref          #296.#606    // org/apache/bcel/classfile/Code.getNameIndex:()I\n+    #53 = Methodref          #332.#607    // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.checkIndex:(Lorg/apache/bcel/classfile/Node;ILjava/lang/Class;)V\n+    #54 = Methodref          #28.#608     // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n     #55 = String             #362         // Code\n-    #56 = Methodref          #621.#622    // java/lang/String.equals:(Ljava/lang/Object;)Z\n-    #57 = String             #623         // The Code attribute \\'\n-    #58 = String             #624         // \\' is not correctly named \\'Code\\' but \\'\n-    #59 = Methodref          #30.#625     // org/apache/bcel/classfile/DescendingVisitor.predecessor:()Ljava/lang/Object;\n-    #60 = Class              #626         // org/apache/bcel/classfile/Method\n-    #61 = String             #627         // Code attribute \\'\n-    #62 = String             #628         // \\' is not declared in a method_info structure but in \\'\n-    #63 = String             #629         // \\'. Ignored.\n-    #64 = Methodref          #605.#630    // org/apache/bcel/verifier/statics/Pass2Verifier.addMessage:(Ljava/lang/String;)V\n-    #65 = Methodref          #296.#631    // org/apache/bcel/classfile/Code.getCode:()[B\n-    #66 = String             #632         // Code array of Code attribute \\'\n-    #67 = String             #633         // \\' (method \\'\n-    #68 = String             #634         // \\') must not be empty.\n-    #69 = Methodref          #296.#635    // org/apache/bcel/classfile/Code.getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n-    #70 = Methodref          #636.#637    // org/apache/bcel/classfile/CodeException.getCatchType:()I\n-    #71 = Methodref          #14.#618     // org/apache/bcel/classfile/ConstantClass.getNameIndex:()I\n-    #72 = Methodref          #638.#639    // org/apache/bcel/classfile/Utility.pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n-    #73 = Methodref          #640.#641    // org/apache/bcel/verifier/VerifierFactory.getVerifier:(Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n-    #74 = Methodref          #642.#643    // org/apache/bcel/verifier/Verifier.doPass1:()Lorg/apache/bcel/verifier/VerificationResult;\n-    #75 = Fieldref           #644.#645    // org/apache/bcel/verifier/VerificationResult.VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n-    #76 = String             #646         // \\') has an exception_table entry \\'\n-    #77 = String             #647         // \\' that references \\'\n-    #78 = String             #648         // \\' as an Exception but it does not pass verification pass 1:\n-    #79 = Methodref          #649.#650    // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-    #80 = Fieldref           #651.#652    // org/apache/bcel/generic/Type.THROWABLE:Lorg/apache/bcel/generic/ObjectType;\n-    #81 = Methodref          #262.#653    // org/apache/bcel/generic/ObjectType.getClassName:()Ljava/lang/String;\n-    #82 = Fieldref           #651.#654    // org/apache/bcel/generic/Type.OBJECT:Lorg/apache/bcel/generic/ObjectType;\n-    #83 = Methodref          #573.#655    // org/apache/bcel/classfile/JavaClass.getSuperclassName:()Ljava/lang/String;\n-    #84 = String             #656         // \\' as an Exception but \\'\n-    #85 = String             #657         // \\' in the ancestor hierachy does not pass verification pass 1:\n-    #86 = String             #658         // \\' as an Exception but it is not a subclass of \\'\n-    #87 = Methodref          #573.#653    // org/apache/bcel/classfile/JavaClass.getClassName:()Ljava/lang/String;\n-    #88 = Methodref          #605.#659    // org/apache/bcel/verifier/statics/Pass2Verifier.access$100:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n-    #89 = Methodref          #642.#653    // org/apache/bcel/verifier/Verifier.getClassName:()Ljava/lang/String;\n-    #90 = Methodref          #573.#660    // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n-    #91 = Methodref          #60.#661     // org/apache/bcel/classfile/Method.getName:()Ljava/lang/String;\n-    #92 = Class              #662         // org/apache/bcel/verifier/exc/AssertionViolatedException\n-    #93 = String             #663         // Could not find a known BCEL Method object in the corresponding BCEL JavaClass object.\n-    #94 = Methodref          #92.#609     // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n-    #95 = Methodref          #605.#664    // org/apache/bcel/verifier/statics/Pass2Verifier.access$200:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n-    #96 = Class              #665         // org/apache/bcel/verifier/statics/LocalVariablesInfo\n-    #97 = Methodref          #296.#666    // org/apache/bcel/classfile/Code.getMaxLocals:()I\n-    #98 = Methodref          #96.#667     // org/apache/bcel/verifier/statics/LocalVariablesInfo.\"<init>\":(I)V\n-    #99 = Methodref          #296.#668    // org/apache/bcel/classfile/Code.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-   #100 = Class              #669         // org/apache/bcel/classfile/LineNumberTable\n-   #101 = Class              #670         // org/apache/bcel/classfile/LocalVariableTable\n-   #102 = String             #671         // Attribute \\'\n-   #103 = String             #672         // \\' as an attribute of Code attribute \\'\n-   #104 = String             #673         // \\') is unknown and will therefore be ignored.\n-   #105 = String             #674         // \\') will effectively be ignored and is only useful for debuggers and such.\n-   #106 = Methodref          #101.#618    // org/apache/bcel/classfile/LocalVariableTable.getNameIndex:()I\n+    #56 = Methodref          #427.#609    // java/lang/String.equals:(Ljava/lang/Object;)Z\n+    #57 = String             #610         // The Code attribute \\'\n+    #58 = String             #611         // \\' is not correctly named \\'Code\\' but \\'\n+    #59 = Methodref          #30.#612     // org/apache/bcel/classfile/DescendingVisitor.predecessor:()Ljava/lang/Object;\n+    #60 = Class              #613         // org/apache/bcel/classfile/Method\n+    #61 = String             #614         // Code attribute \\'\n+    #62 = String             #615         // \\' is not declared in a method_info structure but in \\'\n+    #63 = String             #616         // \\'. Ignored.\n+    #64 = Methodref          #593.#617    // org/apache/bcel/verifier/statics/Pass2Verifier.addMessage:(Ljava/lang/String;)V\n+    #65 = Methodref          #296.#618    // org/apache/bcel/classfile/Code.getCode:()[B\n+    #66 = String             #619         // Code array of Code attribute \\'\n+    #67 = String             #620         // \\' (method \\'\n+    #68 = String             #621         // \\') must not be empty.\n+    #69 = Methodref          #296.#622    // org/apache/bcel/classfile/Code.getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n+    #70 = Methodref          #429.#623    // org/apache/bcel/classfile/CodeException.getCatchType:()I\n+    #71 = Methodref          #14.#606     // org/apache/bcel/classfile/ConstantClass.getNameIndex:()I\n+    #72 = Methodref          #624.#625    // org/apache/bcel/classfile/Utility.pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n+    #73 = Methodref          #626.#627    // org/apache/bcel/verifier/VerifierFactory.getVerifier:(Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n+    #74 = Methodref          #430.#628    // org/apache/bcel/verifier/Verifier.doPass1:()Lorg/apache/bcel/verifier/VerificationResult;\n+    #75 = Fieldref           #431.#629    // org/apache/bcel/verifier/VerificationResult.VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n+    #76 = String             #630         // \\') has an exception_table entry \\'\n+    #77 = String             #631         // \\' that references \\'\n+    #78 = String             #632         // \\' as an Exception but it does not pass verification pass 1:\n+    #79 = Methodref          #633.#634    // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+    #80 = Fieldref           #438.#635    // org/apache/bcel/generic/Type.THROWABLE:Lorg/apache/bcel/generic/ObjectType;\n+    #81 = Methodref          #262.#636    // org/apache/bcel/generic/ObjectType.getClassName:()Ljava/lang/String;\n+    #82 = Fieldref           #438.#637    // org/apache/bcel/generic/Type.OBJECT:Lorg/apache/bcel/generic/ObjectType;\n+    #83 = Methodref          #432.#638    // org/apache/bcel/classfile/JavaClass.getSuperclassName:()Ljava/lang/String;\n+    #84 = String             #639         // \\' as an Exception but \\'\n+    #85 = String             #640         // \\' in the ancestor hierachy does not pass verification pass 1:\n+    #86 = String             #641         // \\' as an Exception but it is not a subclass of \\'\n+    #87 = Methodref          #432.#636    // org/apache/bcel/classfile/JavaClass.getClassName:()Ljava/lang/String;\n+    #88 = Methodref          #593.#642    // org/apache/bcel/verifier/statics/Pass2Verifier.access$100:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n+    #89 = Methodref          #430.#636    // org/apache/bcel/verifier/Verifier.getClassName:()Ljava/lang/String;\n+    #90 = Methodref          #432.#643    // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n+    #91 = Methodref          #60.#644     // org/apache/bcel/classfile/Method.getName:()Ljava/lang/String;\n+    #92 = Class              #645         // org/apache/bcel/verifier/exc/AssertionViolatedException\n+    #93 = String             #646         // Could not find a known BCEL Method object in the corresponding BCEL JavaClass object.\n+    #94 = Methodref          #92.#597     // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n+    #95 = Methodref          #593.#647    // org/apache/bcel/verifier/statics/Pass2Verifier.access$200:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n+    #96 = Class              #648         // org/apache/bcel/verifier/statics/LocalVariablesInfo\n+    #97 = Methodref          #296.#649    // org/apache/bcel/classfile/Code.getMaxLocals:()I\n+    #98 = Methodref          #96.#650     // org/apache/bcel/verifier/statics/LocalVariablesInfo.\"<init>\":(I)V\n+    #99 = Methodref          #296.#651    // org/apache/bcel/classfile/Code.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+   #100 = Class              #652         // org/apache/bcel/classfile/LineNumberTable\n+   #101 = Class              #653         // org/apache/bcel/classfile/LocalVariableTable\n+   #102 = String             #654         // Attribute \\'\n+   #103 = String             #655         // \\' as an attribute of Code attribute \\'\n+   #104 = String             #656         // \\') is unknown and will therefore be ignored.\n+   #105 = String             #657         // \\') will effectively be ignored and is only useful for debuggers and such.\n+   #106 = Methodref          #101.#606    // org/apache/bcel/classfile/LocalVariableTable.getNameIndex:()I\n    #107 = String             #364         // LocalVariableTable\n-   #108 = String             #675         // The LocalVariableTable attribute \\'\n-   #109 = String             #676         // \\' is not correctly named \\'LocalVariableTable\\' but \\'\n-   #110 = Methodref          #101.#677    // org/apache/bcel/classfile/LocalVariableTable.getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n-   #111 = Methodref          #678.#618    // org/apache/bcel/classfile/LocalVariable.getNameIndex:()I\n-   #112 = Methodref          #605.#679    // org/apache/bcel/verifier/statics/Pass2Verifier.access$300:(Ljava/lang/String;)Z\n-   #113 = String             #680         // LocalVariableTable \\'\n-   #114 = String             #681         // \\' references a local variable by the name \\'\n-   #115 = String             #682         // \\' which is not a legal Java simple name.\n-   #116 = Methodref          #678.#683    // org/apache/bcel/classfile/LocalVariable.getSignatureIndex:()I\n-   #117 = Methodref          #651.#684    // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-   #118 = Class              #685         // org/apache/bcel/classfile/ClassFormatException\n-   #119 = String             #686         // Illegal descriptor (==signature) \\'\n-   #120 = String             #687         // \\' used by LocalVariable \\'\n-   #121 = String             #688         // \\' referenced by \\'\n-   #122 = Methodref          #34.#689     // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #123 = Methodref          #678.#690    // org/apache/bcel/classfile/LocalVariable.getIndex:()I\n-   #124 = Fieldref           #651.#691    // org/apache/bcel/generic/Type.LONG:Lorg/apache/bcel/generic/BasicType;\n-   #125 = Fieldref           #651.#692    // org/apache/bcel/generic/Type.DOUBLE:Lorg/apache/bcel/generic/BasicType;\n-   #126 = String             #693         // LocalVariableTable attribute \\'\n-   #127 = String             #694         // \\' references a LocalVariable \\'\n-   #128 = String             #695         // \\' with an index that exceeds the surrounding Code attribute\\'s max_locals value of \\'\n-   #129 = Methodref          #678.#696    // org/apache/bcel/classfile/LocalVariable.getStartPC:()I\n-   #130 = Methodref          #678.#577    // org/apache/bcel/classfile/LocalVariable.getLength:()I\n-   #131 = Methodref          #96.#697     // org/apache/bcel/verifier/statics/LocalVariablesInfo.add:(ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n-   #132 = Class              #698         // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n-   #133 = String             #699         // Conflicting information in LocalVariableTable \\'\n-   #134 = String             #700         // \\' found in Code attribute \\'\n-   #135 = String             #701         // \\').\n-   #136 = Methodref          #132.#702    // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException.getMessage:()Ljava/lang/String;\n-   #137 = Methodref          #60.#703     // org/apache/bcel/classfile/Method.isStatic:()Z\n-   #138 = String             #704         // Number of LocalVariableTable attributes of Code attribute \\'\n-   #139 = String             #705         // \\') exceeds number of local variable slots \\'\n-   #140 = String             #706         // \\' (\\'There may be at most one LocalVariableTable attribute per local variable in the Code attribute.\\').\n-   #141 = Class              #707         // java/lang/ClassNotFoundException\n-   #142 = String             #708         // Missing class:\n-   #143 = Methodref          #92.#689     // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #144 = Methodref          #14.#709     // org/apache/bcel/classfile/ConstantClass.getTag:()B\n-   #145 = Class              #710         // org/apache/bcel/Const\n-   #146 = String             #711         // Wrong constant tag in \\'\n-   #147 = Methodref          #24.#709     // org/apache/bcel/classfile/ConstantDouble.getTag:()B\n-   #148 = Methodref          #712.#709    // org/apache/bcel/classfile/ConstantFieldref.getTag:()B\n-   #149 = Methodref          #712.#713    // org/apache/bcel/classfile/ConstantFieldref.getClassIndex:()I\n-   #150 = Methodref          #712.#714    // org/apache/bcel/classfile/ConstantFieldref.getNameAndTypeIndex:()I\n-   #151 = Methodref          #20.#709     // org/apache/bcel/classfile/ConstantFloat.getTag:()B\n-   #152 = Methodref          #18.#709     // org/apache/bcel/classfile/ConstantInteger.getTag:()B\n-   #153 = Methodref          #715.#709    // org/apache/bcel/classfile/ConstantInterfaceMethodref.getTag:()B\n-   #154 = Methodref          #715.#713    // org/apache/bcel/classfile/ConstantInterfaceMethodref.getClassIndex:()I\n-   #155 = Methodref          #715.#714    // org/apache/bcel/classfile/ConstantInterfaceMethodref.getNameAndTypeIndex:()I\n-   #156 = Methodref          #22.#709     // org/apache/bcel/classfile/ConstantLong.getTag:()B\n-   #157 = Methodref          #716.#709    // org/apache/bcel/classfile/ConstantMethodref.getTag:()B\n-   #158 = Methodref          #716.#713    // org/apache/bcel/classfile/ConstantMethodref.getClassIndex:()I\n-   #159 = Methodref          #716.#714    // org/apache/bcel/classfile/ConstantMethodref.getNameAndTypeIndex:()I\n-   #160 = Methodref          #26.#709     // org/apache/bcel/classfile/ConstantNameAndType.getTag:()B\n-   #161 = Methodref          #26.#618     // org/apache/bcel/classfile/ConstantNameAndType.getNameIndex:()I\n-   #162 = Methodref          #26.#683     // org/apache/bcel/classfile/ConstantNameAndType.getSignatureIndex:()I\n-   #163 = Methodref          #16.#709     // org/apache/bcel/classfile/ConstantString.getTag:()B\n-   #164 = Methodref          #16.#717     // org/apache/bcel/classfile/ConstantString.getStringIndex:()I\n-   #165 = Methodref          #28.#709     // org/apache/bcel/classfile/ConstantUtf8.getTag:()B\n-   #166 = Methodref          #223.#618    // org/apache/bcel/classfile/ConstantValue.getNameIndex:()I\n-   #167 = String             #718         // ConstantValue\n-   #168 = String             #719         // The ConstantValue attribute \\'\n-   #169 = String             #720         // \\' is not correctly named \\'ConstantValue\\' but \\'\n-   #170 = Class              #721         // org/apache/bcel/classfile/Field\n-   #171 = Methodref          #170.#683    // org/apache/bcel/classfile/Field.getSignatureIndex:()I\n-   #172 = Methodref          #223.#722    // org/apache/bcel/classfile/ConstantValue.getConstantValueIndex:()I\n-   #173 = Methodref          #651.#622    // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n-   #174 = Fieldref           #651.#723    // org/apache/bcel/generic/Type.FLOAT:Lorg/apache/bcel/generic/BasicType;\n-   #175 = Fieldref           #651.#724    // org/apache/bcel/generic/Type.INT:Lorg/apache/bcel/generic/BasicType;\n-   #176 = Fieldref           #651.#725    // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n-   #177 = Fieldref           #651.#726    // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n-   #178 = Fieldref           #651.#727    // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n-   #179 = Fieldref           #651.#728    // org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n-   #180 = Fieldref           #651.#729    // org/apache/bcel/generic/Type.STRING:Lorg/apache/bcel/generic/ObjectType;\n-   #181 = String             #730         // Illegal type of ConstantValue \\'\n-   #182 = String             #731         // \\' embedding Constant \\'\n-   #183 = String             #732         // \\'. It is referenced by field \\'\n-   #184 = String             #733         // \\' expecting a different type: \\'\n-   #185 = Methodref          #225.#618    // org/apache/bcel/classfile/Deprecated.getNameIndex:()I\n-   #186 = String             #734         // Deprecated\n-   #187 = String             #735         // The Deprecated attribute \\'\n-   #188 = String             #736         // \\' is not correctly named \\'Deprecated\\' but \\'\n-   #189 = Methodref          #297.#618    // org/apache/bcel/classfile/ExceptionTable.getNameIndex:()I\n-   #190 = String             #737         // Exceptions\n-   #191 = String             #738         // The Exceptions attribute \\'\n-   #192 = String             #739         // \\' is not correctly named \\'Exceptions\\' but \\'\n-   #193 = Methodref          #297.#740    // org/apache/bcel/classfile/ExceptionTable.getExceptionIndexTable:()[I\n-   #194 = String             #741         // Exceptions attribute \\'\n-   #195 = String             #742         // \\' references \\'\n-   #196 = Methodref          #573.#743    // org/apache/bcel/classfile/JavaClass.isClass:()Z\n-   #197 = Methodref          #170.#744    // org/apache/bcel/classfile/Field.isPrivate:()Z\n-   #198 = Methodref          #170.#745    // org/apache/bcel/classfile/Field.isProtected:()Z\n-   #199 = Methodref          #170.#746    // org/apache/bcel/classfile/Field.isPublic:()Z\n-   #200 = String             #747         // Field \\'\n-   #201 = String             #748         // \\' must only have at most one of its ACC_PRIVATE, ACC_PROTECTED, ACC_PUBLIC modifiers set.\n-   #202 = Methodref          #170.#749    // org/apache/bcel/classfile/Field.isFinal:()Z\n-   #203 = Methodref          #170.#750    // org/apache/bcel/classfile/Field.isVolatile:()Z\n-   #204 = String             #751         // \\' must only have at most one of its ACC_FINAL, ACC_VOLATILE modifiers set.\n-   #205 = String             #752         // Interface field \\'\n-   #206 = String             #753         // \\' must have the ACC_PUBLIC modifier set but hasn\\'t!\n-   #207 = Methodref          #170.#703    // org/apache/bcel/classfile/Field.isStatic:()Z\n-   #208 = String             #754         // \\' must have the ACC_STATIC modifier set but hasn\\'t!\n-   #209 = String             #755         // \\' must have the ACC_FINAL modifier set but hasn\\'t!\n-   #210 = Methodref          #170.#756    // org/apache/bcel/classfile/Field.getAccessFlags:()I\n-   #211 = String             #757         // \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_VOLATILE, ACC_TRANSIENT set (ignored).\n-   #212 = Methodref          #170.#618    // org/apache/bcel/classfile/Field.getNameIndex:()I\n-   #213 = Methodref          #170.#661    // org/apache/bcel/classfile/Field.getName:()Ljava/lang/String;\n-   #214 = Methodref          #605.#758    // org/apache/bcel/verifier/statics/Pass2Verifier.access$400:(Ljava/lang/String;)Z\n-   #215 = String             #759         // \\' has illegal name \\'\n-   #216 = InterfaceMethodref #760.#761    // java/util/Set.contains:(Ljava/lang/Object;)Z\n-   #217 = String             #762         // No two fields (like \\'\n-   #218 = String             #763         // \\') are allowed have same names and descriptors!\n-   #219 = String             #764         // More than one field of name \\'\n-   #220 = String             #765         // \\' detected (but with different type descriptors). This is very unusual.\n-   #221 = InterfaceMethodref #760.#766    // java/util/Set.add:(Ljava/lang/Object;)Z\n-   #222 = Methodref          #170.#668    // org/apache/bcel/classfile/Field.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-   #223 = Class              #767         // org/apache/bcel/classfile/ConstantValue\n-   #224 = Class              #768         // org/apache/bcel/classfile/Synthetic\n-   #225 = Class              #769         // org/apache/bcel/classfile/Deprecated\n-   #226 = String             #770         // \\' as an attribute of Field \\'\n-   #227 = String             #771         // \\' is unknown and will therefore be ignored.\n-   #228 = String             #772         // \\' is not a ConstantValue and is therefore only of use for debuggers and such.\n-   #229 = Methodref          #240.#618    // org/apache/bcel/classfile/InnerClasses.getNameIndex:()I\n+   #108 = String             #658         // The LocalVariableTable attribute \\'\n+   #109 = String             #659         // \\' is not correctly named \\'LocalVariableTable\\' but \\'\n+   #110 = Methodref          #101.#660    // org/apache/bcel/classfile/LocalVariableTable.getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n+   #111 = Methodref          #437.#606    // org/apache/bcel/classfile/LocalVariable.getNameIndex:()I\n+   #112 = Methodref          #593.#661    // org/apache/bcel/verifier/statics/Pass2Verifier.access$300:(Ljava/lang/String;)Z\n+   #113 = String             #662         // LocalVariableTable \\'\n+   #114 = String             #663         // \\' references a local variable by the name \\'\n+   #115 = String             #664         // \\' which is not a legal Java simple name.\n+   #116 = Methodref          #437.#665    // org/apache/bcel/classfile/LocalVariable.getSignatureIndex:()I\n+   #117 = Methodref          #438.#666    // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+   #118 = Class              #667         // org/apache/bcel/classfile/ClassFormatException\n+   #119 = String             #668         // Illegal descriptor (==signature) \\'\n+   #120 = String             #669         // \\' used by LocalVariable \\'\n+   #121 = String             #670         // \\' referenced by \\'\n+   #122 = Methodref          #34.#671     // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #123 = Methodref          #437.#672    // org/apache/bcel/classfile/LocalVariable.getIndex:()I\n+   #124 = Fieldref           #438.#673    // org/apache/bcel/generic/Type.LONG:Lorg/apache/bcel/generic/BasicType;\n+   #125 = Fieldref           #438.#674    // org/apache/bcel/generic/Type.DOUBLE:Lorg/apache/bcel/generic/BasicType;\n+   #126 = String             #675         // LocalVariableTable attribute \\'\n+   #127 = String             #676         // \\' references a LocalVariable \\'\n+   #128 = String             #677         // \\' with an index that exceeds the surrounding Code attribute\\'s max_locals value of \\'\n+   #129 = Methodref          #437.#678    // org/apache/bcel/classfile/LocalVariable.getStartPC:()I\n+   #130 = Methodref          #437.#565    // org/apache/bcel/classfile/LocalVariable.getLength:()I\n+   #131 = Methodref          #96.#679     // org/apache/bcel/verifier/statics/LocalVariablesInfo.add:(ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n+   #132 = Class              #680         // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n+   #133 = String             #681         // Conflicting information in LocalVariableTable \\'\n+   #134 = String             #682         // \\' found in Code attribute \\'\n+   #135 = String             #683         // \\').\n+   #136 = Methodref          #132.#684    // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException.getMessage:()Ljava/lang/String;\n+   #137 = Methodref          #60.#685     // org/apache/bcel/classfile/Method.isStatic:()Z\n+   #138 = String             #686         // Number of LocalVariableTable attributes of Code attribute \\'\n+   #139 = String             #687         // \\') exceeds number of local variable slots \\'\n+   #140 = String             #688         // \\' (\\'There may be at most one LocalVariableTable attribute per local variable in the Code attribute.\\').\n+   #141 = Class              #689         // java/lang/ClassNotFoundException\n+   #142 = String             #690         // Missing class:\n+   #143 = Methodref          #92.#671     // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #144 = Methodref          #14.#691     // org/apache/bcel/classfile/ConstantClass.getTag:()B\n+   #145 = Class              #692         // org/apache/bcel/Const\n+   #146 = String             #693         // Wrong constant tag in \\'\n+   #147 = Methodref          #24.#691     // org/apache/bcel/classfile/ConstantDouble.getTag:()B\n+   #148 = Methodref          #694.#691    // org/apache/bcel/classfile/ConstantFieldref.getTag:()B\n+   #149 = Methodref          #694.#695    // org/apache/bcel/classfile/ConstantFieldref.getClassIndex:()I\n+   #150 = Methodref          #694.#696    // org/apache/bcel/classfile/ConstantFieldref.getNameAndTypeIndex:()I\n+   #151 = Methodref          #20.#691     // org/apache/bcel/classfile/ConstantFloat.getTag:()B\n+   #152 = Methodref          #18.#691     // org/apache/bcel/classfile/ConstantInteger.getTag:()B\n+   #153 = Methodref          #697.#691    // org/apache/bcel/classfile/ConstantInterfaceMethodref.getTag:()B\n+   #154 = Methodref          #697.#695    // org/apache/bcel/classfile/ConstantInterfaceMethodref.getClassIndex:()I\n+   #155 = Methodref          #697.#696    // org/apache/bcel/classfile/ConstantInterfaceMethodref.getNameAndTypeIndex:()I\n+   #156 = Methodref          #22.#691     // org/apache/bcel/classfile/ConstantLong.getTag:()B\n+   #157 = Methodref          #698.#691    // org/apache/bcel/classfile/ConstantMethodref.getTag:()B\n+   #158 = Methodref          #698.#695    // org/apache/bcel/classfile/ConstantMethodref.getClassIndex:()I\n+   #159 = Methodref          #698.#696    // org/apache/bcel/classfile/ConstantMethodref.getNameAndTypeIndex:()I\n+   #160 = Methodref          #26.#691     // org/apache/bcel/classfile/ConstantNameAndType.getTag:()B\n+   #161 = Methodref          #26.#606     // org/apache/bcel/classfile/ConstantNameAndType.getNameIndex:()I\n+   #162 = Methodref          #26.#665     // org/apache/bcel/classfile/ConstantNameAndType.getSignatureIndex:()I\n+   #163 = Methodref          #16.#691     // org/apache/bcel/classfile/ConstantString.getTag:()B\n+   #164 = Methodref          #16.#699     // org/apache/bcel/classfile/ConstantString.getStringIndex:()I\n+   #165 = Methodref          #28.#691     // org/apache/bcel/classfile/ConstantUtf8.getTag:()B\n+   #166 = Methodref          #223.#606    // org/apache/bcel/classfile/ConstantValue.getNameIndex:()I\n+   #167 = String             #700         // ConstantValue\n+   #168 = String             #701         // The ConstantValue attribute \\'\n+   #169 = String             #702         // \\' is not correctly named \\'ConstantValue\\' but \\'\n+   #170 = Class              #703         // org/apache/bcel/classfile/Field\n+   #171 = Methodref          #170.#665    // org/apache/bcel/classfile/Field.getSignatureIndex:()I\n+   #172 = Methodref          #223.#704    // org/apache/bcel/classfile/ConstantValue.getConstantValueIndex:()I\n+   #173 = Methodref          #438.#609    // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n+   #174 = Fieldref           #438.#705    // org/apache/bcel/generic/Type.FLOAT:Lorg/apache/bcel/generic/BasicType;\n+   #175 = Fieldref           #438.#706    // org/apache/bcel/generic/Type.INT:Lorg/apache/bcel/generic/BasicType;\n+   #176 = Fieldref           #438.#707    // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n+   #177 = Fieldref           #438.#708    // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n+   #178 = Fieldref           #438.#709    // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n+   #179 = Fieldref           #438.#710    // org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+   #180 = Fieldref           #438.#711    // org/apache/bcel/generic/Type.STRING:Lorg/apache/bcel/generic/ObjectType;\n+   #181 = String             #712         // Illegal type of ConstantValue \\'\n+   #182 = String             #713         // \\' embedding Constant \\'\n+   #183 = String             #714         // \\'. It is referenced by field \\'\n+   #184 = String             #715         // \\' expecting a different type: \\'\n+   #185 = Methodref          #225.#606    // org/apache/bcel/classfile/Deprecated.getNameIndex:()I\n+   #186 = String             #716         // Deprecated\n+   #187 = String             #717         // The Deprecated attribute \\'\n+   #188 = String             #718         // \\' is not correctly named \\'Deprecated\\' but \\'\n+   #189 = Methodref          #297.#606    // org/apache/bcel/classfile/ExceptionTable.getNameIndex:()I\n+   #190 = String             #719         // Exceptions\n+   #191 = String             #720         // The Exceptions attribute \\'\n+   #192 = String             #721         // \\' is not correctly named \\'Exceptions\\' but \\'\n+   #193 = Methodref          #297.#722    // org/apache/bcel/classfile/ExceptionTable.getExceptionIndexTable:()[I\n+   #194 = String             #723         // Exceptions attribute \\'\n+   #195 = String             #724         // \\' references \\'\n+   #196 = Methodref          #432.#725    // org/apache/bcel/classfile/JavaClass.isClass:()Z\n+   #197 = Methodref          #170.#726    // org/apache/bcel/classfile/Field.isPrivate:()Z\n+   #198 = Methodref          #170.#727    // org/apache/bcel/classfile/Field.isProtected:()Z\n+   #199 = Methodref          #170.#728    // org/apache/bcel/classfile/Field.isPublic:()Z\n+   #200 = String             #729         // Field \\'\n+   #201 = String             #730         // \\' must only have at most one of its ACC_PRIVATE, ACC_PROTECTED, ACC_PUBLIC modifiers set.\n+   #202 = Methodref          #170.#731    // org/apache/bcel/classfile/Field.isFinal:()Z\n+   #203 = Methodref          #170.#732    // org/apache/bcel/classfile/Field.isVolatile:()Z\n+   #204 = String             #733         // \\' must only have at most one of its ACC_FINAL, ACC_VOLATILE modifiers set.\n+   #205 = String             #734         // Interface field \\'\n+   #206 = String             #735         // \\' must have the ACC_PUBLIC modifier set but hasn\\'t!\n+   #207 = Methodref          #170.#685    // org/apache/bcel/classfile/Field.isStatic:()Z\n+   #208 = String             #736         // \\' must have the ACC_STATIC modifier set but hasn\\'t!\n+   #209 = String             #737         // \\' must have the ACC_FINAL modifier set but hasn\\'t!\n+   #210 = Methodref          #170.#738    // org/apache/bcel/classfile/Field.getAccessFlags:()I\n+   #211 = String             #739         // \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_VOLATILE, ACC_TRANSIENT set (ignored).\n+   #212 = Methodref          #170.#606    // org/apache/bcel/classfile/Field.getNameIndex:()I\n+   #213 = Methodref          #170.#644    // org/apache/bcel/classfile/Field.getName:()Ljava/lang/String;\n+   #214 = Methodref          #593.#740    // org/apache/bcel/verifier/statics/Pass2Verifier.access$400:(Ljava/lang/String;)Z\n+   #215 = String             #741         // \\' has illegal name \\'\n+   #216 = InterfaceMethodref #742.#743    // java/util/Set.contains:(Ljava/lang/Object;)Z\n+   #217 = String             #744         // No two fields (like \\'\n+   #218 = String             #745         // \\') are allowed have same names and descriptors!\n+   #219 = String             #746         // More than one field of name \\'\n+   #220 = String             #747         // \\' detected (but with different type descriptors). This is very unusual.\n+   #221 = InterfaceMethodref #742.#748    // java/util/Set.add:(Ljava/lang/Object;)Z\n+   #222 = Methodref          #170.#651    // org/apache/bcel/classfile/Field.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+   #223 = Class              #749         // org/apache/bcel/classfile/ConstantValue\n+   #224 = Class              #750         // org/apache/bcel/classfile/Synthetic\n+   #225 = Class              #751         // org/apache/bcel/classfile/Deprecated\n+   #226 = String             #752         // \\' as an attribute of Field \\'\n+   #227 = String             #753         // \\' is unknown and will therefore be ignored.\n+   #228 = String             #754         // \\' is not a ConstantValue and is therefore only of use for debuggers and such.\n+   #229 = Methodref          #240.#606    // org/apache/bcel/classfile/InnerClasses.getNameIndex:()I\n    #230 = String             #367         // InnerClasses\n-   #231 = String             #773         // The InnerClasses attribute \\'\n-   #232 = String             #774         // \\' is not correctly named \\'InnerClasses\\' but \\'\n-   #233 = InvokeDynamic      #0:#780      // #0:accept:(Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n-   #234 = Methodref          #240.#781    // org/apache/bcel/classfile/InnerClasses.forEach:(Ljava/util/function/Consumer;)V\n-   #235 = Methodref          #573.#668    // org/apache/bcel/classfile/JavaClass.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-   #236 = Class              #782         // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector\n-   #237 = Methodref          #236.#784    // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;)V\n-   #238 = Methodref          #236.#785    // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector.innerClassReferenced:()Z\n-   #239 = Class              #786         // org/apache/bcel/classfile/SourceFile\n-   #240 = Class              #787         // org/apache/bcel/classfile/InnerClasses\n-   #241 = String             #788         // \\' as an attribute of the ClassFile structure \\'\n-   #242 = String             #789         // A ClassFile structure (like \\'\n-   #243 = String             #790         // \\') may have no more than one SourceFile attribute.\n-   #244 = String             #791         // A Classfile structure (like \\'\n-   #245 = String             #792         // \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). More than one InnerClasses attribute was found.\n-   #246 = String             #793         // No referenced Inner Class found, but InnerClasses attribute \\'\n-   #247 = String             #794         // \\' found. Strongly suggest removal of that attribute.\n-   #248 = String             #795         // \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). No InnerClasses attribute was found.\n-   #249 = Methodref          #100.#618    // org/apache/bcel/classfile/LineNumberTable.getNameIndex:()I\n+   #231 = String             #755         // The InnerClasses attribute \\'\n+   #232 = String             #756         // \\' is not correctly named \\'InnerClasses\\' but \\'\n+   #233 = InvokeDynamic      #0:#762      // #0:accept:(Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n+   #234 = Methodref          #240.#763    // org/apache/bcel/classfile/InnerClasses.forEach:(Ljava/util/function/Consumer;)V\n+   #235 = Methodref          #432.#651    // org/apache/bcel/classfile/JavaClass.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+   #236 = Class              #764         // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector\n+   #237 = Methodref          #236.#766    // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;)V\n+   #238 = Methodref          #236.#767    // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector.innerClassReferenced:()Z\n+   #239 = Class              #768         // org/apache/bcel/classfile/SourceFile\n+   #240 = Class              #769         // org/apache/bcel/classfile/InnerClasses\n+   #241 = String             #770         // \\' as an attribute of the ClassFile structure \\'\n+   #242 = String             #771         // A ClassFile structure (like \\'\n+   #243 = String             #772         // \\') may have no more than one SourceFile attribute.\n+   #244 = String             #773         // A Classfile structure (like \\'\n+   #245 = String             #774         // \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). More than one InnerClasses attribute was found.\n+   #246 = String             #775         // No referenced Inner Class found, but InnerClasses attribute \\'\n+   #247 = String             #776         // \\' found. Strongly suggest removal of that attribute.\n+   #248 = String             #777         // \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). No InnerClasses attribute was found.\n+   #249 = Methodref          #100.#606    // org/apache/bcel/classfile/LineNumberTable.getNameIndex:()I\n    #250 = String             #363         // LineNumberTable\n-   #251 = String             #796         // The LineNumberTable attribute \\'\n-   #252 = String             #797         // \\' is not correctly named \\'LineNumberTable\\' but \\'\n-   #253 = Methodref          #60.#618     // org/apache/bcel/classfile/Method.getNameIndex:()I\n-   #254 = Methodref          #605.#798    // org/apache/bcel/verifier/statics/Pass2Verifier.access$500:(Ljava/lang/String;Z)Z\n-   #255 = String             #799         // Method \\'\n-   #256 = Methodref          #60.#683     // org/apache/bcel/classfile/Method.getSignatureIndex:()I\n-   #257 = Methodref          #651.#800    // org/apache/bcel/generic/Type.getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-   #258 = Methodref          #651.#801    // org/apache/bcel/generic/Type.getArgumentTypes:(Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n-   #259 = String             #802         // \\' used by Method \\'\n-   #260 = Class              #803         // org/apache/bcel/generic/ArrayType\n-   #261 = Methodref          #260.#804    // org/apache/bcel/generic/ArrayType.getBasicType:()Lorg/apache/bcel/generic/Type;\n-   #262 = Class              #805         // org/apache/bcel/generic/ObjectType\n-   #263 = String             #806         // \\' has a return type that does not pass verification pass 1: \\'\n-   #264 = String             #807         // \\' has an argument type that does not pass verification pass 1: \\'\n-   #265 = String             #808         // <clinit>\n-   #266 = String             #809         // \\'. Its name resembles the class or interface initialization method which it isn\\'t because of its arguments (==descriptor).\n-   #267 = Methodref          #60.#744     // org/apache/bcel/classfile/Method.isPrivate:()Z\n-   #268 = Methodref          #60.#745     // org/apache/bcel/classfile/Method.isProtected:()Z\n-   #269 = Methodref          #60.#746     // org/apache/bcel/classfile/Method.isPublic:()Z\n-   #270 = Methodref          #60.#810     // org/apache/bcel/classfile/Method.isAbstract:()Z\n-   #271 = Methodref          #60.#749     // org/apache/bcel/classfile/Method.isFinal:()Z\n-   #272 = String             #811         // Abstract method \\'\n-   #273 = String             #812         // \\' must not have the ACC_FINAL modifier set.\n-   #274 = Methodref          #60.#813     // org/apache/bcel/classfile/Method.isNative:()Z\n-   #275 = String             #814         // \\' must not have the ACC_NATIVE modifier set.\n-   #276 = String             #815         // \\' must not have the ACC_PRIVATE modifier set.\n-   #277 = String             #816         // \\' must not have the ACC_STATIC modifier set.\n-   #278 = Methodref          #60.#817     // org/apache/bcel/classfile/Method.isStrictfp:()Z\n-   #279 = String             #818         // \\' must not have the ACC_STRICT modifier set.\n-   #280 = Methodref          #60.#819     // org/apache/bcel/classfile/Method.isSynchronized:()Z\n-   #281 = String             #820         // \\' must not have the ACC_SYNCHRONIZED modifier set.\n+   #251 = String             #778         // The LineNumberTable attribute \\'\n+   #252 = String             #779         // \\' is not correctly named \\'LineNumberTable\\' but \\'\n+   #253 = Methodref          #60.#606     // org/apache/bcel/classfile/Method.getNameIndex:()I\n+   #254 = Methodref          #593.#780    // org/apache/bcel/verifier/statics/Pass2Verifier.access$500:(Ljava/lang/String;Z)Z\n+   #255 = String             #781         // Method \\'\n+   #256 = Methodref          #60.#665     // org/apache/bcel/classfile/Method.getSignatureIndex:()I\n+   #257 = Methodref          #438.#782    // org/apache/bcel/generic/Type.getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+   #258 = Methodref          #438.#783    // org/apache/bcel/generic/Type.getArgumentTypes:(Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n+   #259 = String             #784         // \\' used by Method \\'\n+   #260 = Class              #785         // org/apache/bcel/generic/ArrayType\n+   #261 = Methodref          #260.#786    // org/apache/bcel/generic/ArrayType.getBasicType:()Lorg/apache/bcel/generic/Type;\n+   #262 = Class              #787         // org/apache/bcel/generic/ObjectType\n+   #263 = String             #788         // \\' has a return type that does not pass verification pass 1: \\'\n+   #264 = String             #789         // \\' has an argument type that does not pass verification pass 1: \\'\n+   #265 = String             #790         // <clinit>\n+   #266 = String             #791         // \\'. Its name resembles the class or interface initialization method which it isn\\'t because of its arguments (==descriptor).\n+   #267 = Methodref          #60.#726     // org/apache/bcel/classfile/Method.isPrivate:()Z\n+   #268 = Methodref          #60.#727     // org/apache/bcel/classfile/Method.isProtected:()Z\n+   #269 = Methodref          #60.#728     // org/apache/bcel/classfile/Method.isPublic:()Z\n+   #270 = Methodref          #60.#792     // org/apache/bcel/classfile/Method.isAbstract:()Z\n+   #271 = Methodref          #60.#731     // org/apache/bcel/classfile/Method.isFinal:()Z\n+   #272 = String             #793         // Abstract method \\'\n+   #273 = String             #794         // \\' must not have the ACC_FINAL modifier set.\n+   #274 = Methodref          #60.#795     // org/apache/bcel/classfile/Method.isNative:()Z\n+   #275 = String             #796         // \\' must not have the ACC_NATIVE modifier set.\n+   #276 = String             #797         // \\' must not have the ACC_PRIVATE modifier set.\n+   #277 = String             #798         // \\' must not have the ACC_STATIC modifier set.\n+   #278 = Methodref          #60.#799     // org/apache/bcel/classfile/Method.isStrictfp:()Z\n+   #279 = String             #800         // \\' must not have the ACC_STRICT modifier set.\n+   #280 = Methodref          #60.#801     // org/apache/bcel/classfile/Method.isSynchronized:()Z\n+   #281 = String             #802         // \\' must not have the ACC_SYNCHRONIZED modifier set.\n    #282 = String             #360         // <init>\n-   #283 = String             #821         // Instance initialization method \\'\n-   #284 = String             #822         // \\' must not have any of the ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT modifiers set.\n-   #285 = Methodref          #573.#823    // org/apache/bcel/classfile/JavaClass.getMajor:()I\n-   #286 = String             #824         // Interface method \\'\n-   #287 = String             #825         // \\' must have exactly one of its ACC_PUBLIC and ACC_PRIVATE modifiers set.\n-   #288 = String             #826         // \\' must not have any of the ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED, or ACC_NATIVE modifiers set.\n-   #289 = String             #827         // \\' must have the ACC_ABSTRACT modifier set but hasn\\'t!\n-   #290 = String             #828         // \\' must not have any of the ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT modifiers set.\n-   #291 = Methodref          #60.#756     // org/apache/bcel/classfile/Method.getAccessFlags:()I\n-   #292 = String             #829         // \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT set (ignored).\n-   #293 = String             #830         // No two methods (like \\'\n-   #294 = String             #831         // \\') are allowed have same names and desciptors!\n-   #295 = Methodref          #60.#668     // org/apache/bcel/classfile/Method.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-   #296 = Class              #832         // org/apache/bcel/classfile/Code\n-   #297 = Class              #833         // org/apache/bcel/classfile/ExceptionTable\n-   #298 = String             #834         // \\' as an attribute of Method \\'\n-   #299 = String             #835         // \\' is neither Code nor Exceptions and is therefore only of use for debuggers and such.\n-   #300 = String             #836         // Native or abstract methods like \\'\n-   #301 = String             #837         // \\' must not have a Code attribute like \\'\n-   #302 = String             #838         // Non-native, non-abstract methods like \\'\n-   #303 = String             #839         // \\' must have exactly one Code attribute (found:\n-   #304 = String             #840         // ).\n-   #305 = Methodref          #239.#618    // org/apache/bcel/classfile/SourceFile.getNameIndex:()I\n-   #306 = String             #563         // SourceFile\n-   #307 = String             #841         // The SourceFile attribute \\'\n-   #308 = String             #842         // \\' is not correctly named \\'SourceFile\\' but \\'\n-   #309 = Methodref          #239.#843    // org/apache/bcel/classfile/SourceFile.getSourceFileIndex:()I\n-   #310 = Fieldref           #844.#845    // java/util/Locale.ENGLISH:Ljava/util/Locale;\n-   #311 = Methodref          #621.#846    // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #312 = Methodref          #621.#847    // java/lang/String.indexOf:(I)I\n-   #313 = String             #848         // .java\n-   #314 = Methodref          #621.#849    // java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n-   #315 = String             #850         // SourceFile attribute \\'\n-   #316 = String             #851         // \\' has a funny name: remember not to confuse certain parsers working on javap\\'s output. Also, this name (\\'\n-   #317 = String             #852         // \\') is considered an unqualified (simple) file name only.\n-   #318 = Methodref          #224.#618    // org/apache/bcel/classfile/Synthetic.getNameIndex:()I\n-   #319 = String             #853         // Synthetic\n-   #320 = String             #854         // The Synthetic attribute \\'\n-   #321 = String             #855         // \\' is not correctly named \\'Synthetic\\' but \\'\n-   #322 = Methodref          #856.#618    // org/apache/bcel/classfile/Unknown.getNameIndex:()I\n-   #323 = String             #857         // Unknown attribute \\'\n-   #324 = String             #858         // \\'. This attribute is not known in any context!\n-   #325 = Methodref          #859.#860    // org/apache/bcel/classfile/InnerClass.getInnerClassIndex:()I\n-   #326 = Methodref          #859.#861    // org/apache/bcel/classfile/InnerClass.getOuterClassIndex:()I\n-   #327 = Methodref          #859.#862    // org/apache/bcel/classfile/InnerClass.getInnerNameIndex:()I\n-   #328 = Methodref          #859.#863    // org/apache/bcel/classfile/InnerClass.getInnerAccessFlags:()I\n-   #329 = String             #864         // Unknown access flag for inner class \\'\n-   #330 = String             #865         // \\' set (InnerClasses attribute \\'\n-   #331 = String             #866         // \\').\n-   #332 = Class              #867         // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n-   #333 = Class              #868         // org/apache/bcel/classfile/EmptyVisitor\n+   #283 = String             #803         // Instance initialization method \\'\n+   #284 = String             #804         // \\' must not have any of the ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT modifiers set.\n+   #285 = Methodref          #432.#805    // org/apache/bcel/classfile/JavaClass.getMajor:()I\n+   #286 = String             #806         // Interface method \\'\n+   #287 = String             #807         // \\' must have exactly one of its ACC_PUBLIC and ACC_PRIVATE modifiers set.\n+   #288 = String             #808         // \\' must not have any of the ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED, or ACC_NATIVE modifiers set.\n+   #289 = String             #809         // \\' must have the ACC_ABSTRACT modifier set but hasn\\'t!\n+   #290 = String             #810         // \\' must not have any of the ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT modifiers set.\n+   #291 = Methodref          #60.#738     // org/apache/bcel/classfile/Method.getAccessFlags:()I\n+   #292 = String             #811         // \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT set (ignored).\n+   #293 = String             #812         // No two methods (like \\'\n+   #294 = String             #813         // \\') are allowed have same names and desciptors!\n+   #295 = Methodref          #60.#651     // org/apache/bcel/classfile/Method.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+   #296 = Class              #814         // org/apache/bcel/classfile/Code\n+   #297 = Class              #815         // org/apache/bcel/classfile/ExceptionTable\n+   #298 = String             #816         // \\' as an attribute of Method \\'\n+   #299 = String             #817         // \\' is neither Code nor Exceptions and is therefore only of use for debuggers and such.\n+   #300 = String             #818         // Native or abstract methods like \\'\n+   #301 = String             #819         // \\' must not have a Code attribute like \\'\n+   #302 = String             #820         // Non-native, non-abstract methods like \\'\n+   #303 = String             #821         // \\' must have exactly one Code attribute (found:\n+   #304 = String             #822         // ).\n+   #305 = Methodref          #239.#606    // org/apache/bcel/classfile/SourceFile.getNameIndex:()I\n+   #306 = String             #552         // SourceFile\n+   #307 = String             #823         // The SourceFile attribute \\'\n+   #308 = String             #824         // \\' is not correctly named \\'SourceFile\\' but \\'\n+   #309 = Methodref          #239.#825    // org/apache/bcel/classfile/SourceFile.getSourceFileIndex:()I\n+   #310 = Fieldref           #826.#827    // java/util/Locale.ENGLISH:Ljava/util/Locale;\n+   #311 = Methodref          #427.#828    // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #312 = Methodref          #427.#829    // java/lang/String.indexOf:(I)I\n+   #313 = String             #830         // .java\n+   #314 = Methodref          #427.#831    // java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n+   #315 = String             #832         // SourceFile attribute \\'\n+   #316 = String             #833         // \\' has a funny name: remember not to confuse certain parsers working on javap\\'s output. Also, this name (\\'\n+   #317 = String             #834         // \\') is considered an unqualified (simple) file name only.\n+   #318 = Methodref          #224.#606    // org/apache/bcel/classfile/Synthetic.getNameIndex:()I\n+   #319 = String             #835         // Synthetic\n+   #320 = String             #836         // The Synthetic attribute \\'\n+   #321 = String             #837         // \\' is not correctly named \\'Synthetic\\' but \\'\n+   #322 = Methodref          #838.#606    // org/apache/bcel/classfile/Unknown.getNameIndex:()I\n+   #323 = String             #839         // Unknown attribute \\'\n+   #324 = String             #840         // \\'. This attribute is not known in any context!\n+   #325 = Methodref          #841.#842    // org/apache/bcel/classfile/InnerClass.getInnerClassIndex:()I\n+   #326 = Methodref          #841.#843    // org/apache/bcel/classfile/InnerClass.getOuterClassIndex:()I\n+   #327 = Methodref          #841.#844    // org/apache/bcel/classfile/InnerClass.getInnerNameIndex:()I\n+   #328 = Methodref          #841.#845    // org/apache/bcel/classfile/InnerClass.getInnerAccessFlags:()I\n+   #329 = String             #846         // Unknown access flag for inner class \\'\n+   #330 = String             #847         // \\' set (InnerClasses attribute \\'\n+   #331 = String             #848         // \\').\n+   #332 = Class              #849         // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n+   #333 = Class              #850         // org/apache/bcel/classfile/EmptyVisitor\n    #334 = Utf8               CONST_Class\n    #335 = Utf8               Ljava/lang/Class;\n    #336 = Utf8               Signature\n    #337 = Utf8               Ljava/lang/Class<*>;\n    #338 = Utf8               CONST_String\n    #339 = Utf8               CONST_Integer\n    #340 = Utf8               CONST_Float\n@@ -382,15 +382,15 @@\n    #372 = Utf8               Lorg/apache/bcel/classfile/Node;\n    #373 = Utf8               index\n    #374 = Utf8               shouldbe\n    #375 = Utf8               c\n    #376 = Utf8               Lorg/apache/bcel/classfile/Constant;\n    #377 = Utf8               LocalVariableTypeTable\n    #378 = Utf8               StackMapTable\n-   #379 = Class              #869         // org/apache/bcel/classfile/Constant\n+   #379 = Class              #851         // org/apache/bcel/classfile/Constant\n    #380 = Utf8               (Lorg/apache/bcel/classfile/Node;ILjava/lang/Class<*>;)V\n    #381 = Utf8               visitCode\n    #382 = Utf8               (Lorg/apache/bcel/classfile/Code;)V\n    #383 = Utf8               cc\n    #384 = Utf8               Lorg/apache/bcel/classfile/ConstantClass;\n    #385 = Utf8               cname\n    #386 = Utf8               Ljava/lang/String;\n@@ -430,623 +430,605 @@\n    #420 = Utf8               [Lorg/apache/bcel/classfile/Method;\n    #421 = Utf8               num_of_lvt_attribs\n    #422 = Utf8               atts\n    #423 = Utf8               [Lorg/apache/bcel/classfile/Attribute;\n    #424 = Utf8               Ljava/lang/ClassNotFoundException;\n    #425 = Utf8               obj\n    #426 = Utf8               Lorg/apache/bcel/classfile/Code;\n-   #427 = Class              #870         // java/lang/String\n-   #428 = Class              #626         // org/apache/bcel/classfile/Method\n-   #429 = Class              #867         // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n-   #430 = Class              #832         // org/apache/bcel/classfile/Code\n-   #431 = Class              #417         // \"[Lorg/apache/bcel/classfile/CodeException;\"\n-   #432 = Class              #871         // org/apache/bcel/classfile/CodeException\n-   #433 = Class              #579         // org/apache/bcel/classfile/ConstantClass\n-   #434 = Class              #872         // org/apache/bcel/verifier/Verifier\n-   #435 = Class              #873         // org/apache/bcel/verifier/VerificationResult\n-   #436 = Class              #874         // org/apache/bcel/classfile/JavaClass\n-   #437 = Class              #420         // \"[Lorg/apache/bcel/classfile/Method;\"\n-   #438 = Class              #423         // \"[Lorg/apache/bcel/classfile/Attribute;\"\n-   #439 = Class              #875         // org/apache/bcel/classfile/Attribute\n-   #440 = Class              #670         // org/apache/bcel/classfile/LocalVariableTable\n-   #441 = Class              #876         // \"[Lorg/apache/bcel/classfile/LocalVariable;\"\n-   #442 = Class              #877         // org/apache/bcel/classfile/LocalVariable\n-   #443 = Class              #685         // org/apache/bcel/classfile/ClassFormatException\n-   #444 = Class              #878         // org/apache/bcel/generic/Type\n-   #445 = Class              #698         // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n-   #446 = Class              #707         // java/lang/ClassNotFoundException\n-   #447 = Utf8               visitCodeException\n-   #448 = Utf8               (Lorg/apache/bcel/classfile/CodeException;)V\n-   #449 = Utf8               visitConstantClass\n-   #450 = Utf8               (Lorg/apache/bcel/classfile/ConstantClass;)V\n-   #451 = Utf8               visitConstantDouble\n-   #452 = Utf8               (Lorg/apache/bcel/classfile/ConstantDouble;)V\n-   #453 = Utf8               Lorg/apache/bcel/classfile/ConstantDouble;\n-   #454 = Utf8               visitConstantFieldref\n-   #455 = Utf8               (Lorg/apache/bcel/classfile/ConstantFieldref;)V\n-   #456 = Utf8               Lorg/apache/bcel/classfile/ConstantFieldref;\n-   #457 = Utf8               visitConstantFloat\n-   #458 = Utf8               (Lorg/apache/bcel/classfile/ConstantFloat;)V\n-   #459 = Utf8               Lorg/apache/bcel/classfile/ConstantFloat;\n-   #460 = Utf8               visitConstantInteger\n-   #461 = Utf8               (Lorg/apache/bcel/classfile/ConstantInteger;)V\n-   #462 = Utf8               Lorg/apache/bcel/classfile/ConstantInteger;\n-   #463 = Utf8               visitConstantInterfaceMethodref\n-   #464 = Utf8               (Lorg/apache/bcel/classfile/ConstantInterfaceMethodref;)V\n-   #465 = Utf8               Lorg/apache/bcel/classfile/ConstantInterfaceMethodref;\n-   #466 = Utf8               visitConstantLong\n-   #467 = Utf8               (Lorg/apache/bcel/classfile/ConstantLong;)V\n-   #468 = Utf8               Lorg/apache/bcel/classfile/ConstantLong;\n-   #469 = Utf8               visitConstantMethodref\n-   #470 = Utf8               (Lorg/apache/bcel/classfile/ConstantMethodref;)V\n-   #471 = Utf8               Lorg/apache/bcel/classfile/ConstantMethodref;\n-   #472 = Utf8               visitConstantNameAndType\n-   #473 = Utf8               (Lorg/apache/bcel/classfile/ConstantNameAndType;)V\n-   #474 = Utf8               Lorg/apache/bcel/classfile/ConstantNameAndType;\n-   #475 = Utf8               visitConstantPool\n-   #476 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #477 = Utf8               visitConstantString\n-   #478 = Utf8               (Lorg/apache/bcel/classfile/ConstantString;)V\n-   #479 = Utf8               Lorg/apache/bcel/classfile/ConstantString;\n-   #480 = Utf8               visitConstantUtf8\n-   #481 = Utf8               (Lorg/apache/bcel/classfile/ConstantUtf8;)V\n-   #482 = Utf8               Lorg/apache/bcel/classfile/ConstantUtf8;\n-   #483 = Utf8               visitConstantValue\n-   #484 = Utf8               (Lorg/apache/bcel/classfile/ConstantValue;)V\n-   #485 = Utf8               f\n-   #486 = Utf8               Lorg/apache/bcel/classfile/Field;\n-   #487 = Utf8               fieldType\n-   #488 = Utf8               Lorg/apache/bcel/classfile/ConstantValue;\n-   #489 = Utf8               pred\n-   #490 = Utf8               Ljava/lang/Object;\n-   #491 = Class              #767         // org/apache/bcel/classfile/ConstantValue\n-   #492 = Class              #879         // java/lang/Object\n-   #493 = Class              #721         // org/apache/bcel/classfile/Field\n-   #494 = Utf8               visitDeprecated\n-   #495 = Utf8               (Lorg/apache/bcel/classfile/Deprecated;)V\n-   #496 = Utf8               Lorg/apache/bcel/classfile/Deprecated;\n-   #497 = Utf8               visitExceptionTable\n-   #498 = Utf8               (Lorg/apache/bcel/classfile/ExceptionTable;)V\n-   #499 = Utf8               exc_indice\n-   #500 = Utf8               exc_indices\n-   #501 = Utf8               [I\n-   #502 = Utf8               Lorg/apache/bcel/classfile/ExceptionTable;\n-   #503 = Class              #833         // org/apache/bcel/classfile/ExceptionTable\n-   #504 = Class              #501         // \"[I\"\n-   #505 = Utf8               visitField\n-   #506 = Utf8               (Lorg/apache/bcel/classfile/Field;)V\n-   #507 = Utf8               maxone\n-   #508 = Utf8               sig\n-   #509 = Utf8               nameanddesc\n-   #510 = Utf8               visitInnerClass\n-   #511 = Utf8               (Lorg/apache/bcel/classfile/InnerClass;)V\n-   #512 = Utf8               Lorg/apache/bcel/classfile/InnerClass;\n-   #513 = Utf8               visitInnerClasses\n-   #514 = Utf8               (Lorg/apache/bcel/classfile/InnerClasses;)V\n-   #515 = Utf8               innerClasses\n-   #516 = Utf8               Lorg/apache/bcel/classfile/InnerClasses;\n-   #517 = Utf8               visitJavaClass\n-   #518 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;)V\n-   #519 = Utf8               foundSourceFile\n-   #520 = Utf8               Z\n-   #521 = Utf8               foundInnerClasses\n-   #522 = Utf8               hasInnerClass\n-   #523 = Utf8               visitLineNumber\n-   #524 = Utf8               (Lorg/apache/bcel/classfile/LineNumber;)V\n-   #525 = Utf8               Lorg/apache/bcel/classfile/LineNumber;\n-   #526 = Utf8               visitLineNumberTable\n-   #527 = Utf8               (Lorg/apache/bcel/classfile/LineNumberTable;)V\n-   #528 = Utf8               Lorg/apache/bcel/classfile/LineNumberTable;\n-   #529 = Utf8               visitLocalVariable\n-   #530 = Utf8               (Lorg/apache/bcel/classfile/LocalVariable;)V\n-   #531 = Utf8               visitLocalVariableTable\n-   #532 = Utf8               (Lorg/apache/bcel/classfile/LocalVariableTable;)V\n-   #533 = Utf8               visitMethod\n-   #534 = Utf8               (Lorg/apache/bcel/classfile/Method;)V\n-   #535 = Utf8               ts\n-   #536 = Utf8               [Lorg/apache/bcel/generic/Type;\n-   #537 = Utf8               act\n-   #538 = Utf8               num_code_atts\n-   #539 = Class              #536         // \"[Lorg/apache/bcel/generic/Type;\"\n-   #540 = Utf8               visitSourceFile\n-   #541 = Utf8               (Lorg/apache/bcel/classfile/SourceFile;)V\n-   #542 = Utf8               Lorg/apache/bcel/classfile/SourceFile;\n-   #543 = Utf8               sourceFileName\n-   #544 = Utf8               sourceFileNameLc\n-   #545 = Utf8               visitSynthetic\n-   #546 = Utf8               (Lorg/apache/bcel/classfile/Synthetic;)V\n-   #547 = Utf8               Lorg/apache/bcel/classfile/Synthetic;\n-   #548 = Utf8               visitUnknown\n-   #549 = Utf8               (Lorg/apache/bcel/classfile/Unknown;)V\n-   #550 = Utf8               Lorg/apache/bcel/classfile/Unknown;\n-   #551 = Utf8               lambda$visitInnerClasses$0\n-   #552 = Utf8               (Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n-   #553 = Utf8               ic\n-   #554 = Utf8               outer_idx\n-   #555 = Utf8               innername_idx\n-   #556 = Utf8               acc\n-   #557 = Class              #880         // org/apache/bcel/verifier/statics/Pass2Verifier$1\n-   #558 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/verifier/statics/Pass2Verifier$1;)V\n-   #559 = Utf8               x0\n-   #560 = Utf8               x1\n-   #561 = Utf8               x2\n-   #562 = Utf8               Lorg/apache/bcel/verifier/statics/Pass2Verifier$1;\n-   #563 = Utf8               SourceFile\n-   #564 = Utf8               Pass2Verifier.java\n-   #565 = NameAndType        #360:#361    // \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n-   #566 = NameAndType        #358:#359    // this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n-   #567 = NameAndType        #360:#881    // \"<init>\":()V\n-   #568 = Utf8               java/util/HashSet\n-   #569 = NameAndType        #353:#354    // field_names:Ljava/util/Set;\n-   #570 = NameAndType        #356:#354    // field_names_and_desc:Ljava/util/Set;\n-   #571 = NameAndType        #357:#354    // method_names_and_desc:Ljava/util/Set;\n-   #572 = NameAndType        #345:#346    // jc:Lorg/apache/bcel/classfile/JavaClass;\n-   #573 = Class              #874         // org/apache/bcel/classfile/JavaClass\n-   #574 = NameAndType        #882:#883    // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #575 = NameAndType        #347:#348    // cp:Lorg/apache/bcel/classfile/ConstantPool;\n-   #576 = Class              #884         // org/apache/bcel/classfile/ConstantPool\n-   #577 = NameAndType        #885:#886    // getLength:()I\n-   #578 = NameAndType        #349:#350    // cplen:I\n-   #579 = Utf8               org/apache/bcel/classfile/ConstantClass\n-   #580 = NameAndType        #334:#335    // CONST_Class:Ljava/lang/Class;\n-   #581 = Utf8               org/apache/bcel/classfile/ConstantString\n-   #582 = NameAndType        #338:#335    // CONST_String:Ljava/lang/Class;\n-   #583 = Utf8               org/apache/bcel/classfile/ConstantInteger\n-   #584 = NameAndType        #339:#335    // CONST_Integer:Ljava/lang/Class;\n-   #585 = Utf8               org/apache/bcel/classfile/ConstantFloat\n-   #586 = NameAndType        #340:#335    // CONST_Float:Ljava/lang/Class;\n-   #587 = Utf8               org/apache/bcel/classfile/ConstantLong\n-   #588 = NameAndType        #341:#335    // CONST_Long:Ljava/lang/Class;\n-   #589 = Utf8               org/apache/bcel/classfile/ConstantDouble\n-   #590 = NameAndType        #342:#335    // CONST_Double:Ljava/lang/Class;\n-   #591 = Utf8               org/apache/bcel/classfile/ConstantNameAndType\n-   #592 = NameAndType        #343:#335    // CONST_NameAndType:Ljava/lang/Class;\n-   #593 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-   #594 = NameAndType        #344:#335    // CONST_Utf8:Ljava/lang/Class;\n-   #595 = Utf8               org/apache/bcel/classfile/DescendingVisitor\n-   #596 = NameAndType        #360:#887    // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n-   #597 = NameAndType        #351:#352    // carrier:Lorg/apache/bcel/classfile/DescendingVisitor;\n-   #598 = NameAndType        #888:#881    // visit:()V\n-   #599 = Utf8               org/apache/bcel/verifier/exc/ClassConstraintException\n-   #600 = Utf8               java/lang/StringBuilder\n-   #601 = Utf8               Invalid index \\'\n-   #602 = NameAndType        #889:#890    // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #603 = NameAndType        #889:#891    // append:(I)Ljava/lang/StringBuilder;\n-   #604 = Utf8               \\' used by \\'\n-   #605 = Class              #892         // org/apache/bcel/verifier/statics/Pass2Verifier\n-   #606 = NameAndType        #893:#894    // access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n-   #607 = Utf8               \\'.\n-   #608 = NameAndType        #895:#896    // toString:()Ljava/lang/String;\n-   #609 = NameAndType        #360:#897    // \"<init>\":(Ljava/lang/String;)V\n-   #610 = NameAndType        #898:#899    // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #611 = Class              #900         // java/lang/Class\n-   #612 = NameAndType        #901:#902    // isInstance:(Ljava/lang/Object;)Z\n-   #613 = Utf8               Illegal constant \\'\n-   #614 = Utf8               \\' at index \\'\n-   #615 = Utf8               \\'. \\'\n-   #616 = Utf8               \\' expects a \\'\n-   #617 = NameAndType        #889:#903    // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #618 = NameAndType        #904:#886    // getNameIndex:()I\n-   #619 = NameAndType        #369:#370    // checkIndex:(Lorg/apache/bcel/classfile/Node;ILjava/lang/Class;)V\n-   #620 = NameAndType        #905:#896    // getBytes:()Ljava/lang/String;\n-   #621 = Class              #870         // java/lang/String\n-   #622 = NameAndType        #906:#902    // equals:(Ljava/lang/Object;)Z\n-   #623 = Utf8               The Code attribute \\'\n-   #624 = Utf8               \\' is not correctly named \\'Code\\' but \\'\n-   #625 = NameAndType        #907:#908    // predecessor:()Ljava/lang/Object;\n-   #626 = Utf8               org/apache/bcel/classfile/Method\n-   #627 = Utf8               Code attribute \\'\n-   #628 = Utf8               \\' is not declared in a method_info structure but in \\'\n-   #629 = Utf8               \\'. Ignored.\n-   #630 = NameAndType        #909:#897    // addMessage:(Ljava/lang/String;)V\n-   #631 = NameAndType        #910:#911    // getCode:()[B\n-   #632 = Utf8               Code array of Code attribute \\'\n-   #633 = Utf8               \\' (method \\'\n-   #634 = Utf8               \\') must not be empty.\n-   #635 = NameAndType        #912:#913    // getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n-   #636 = Class              #871         // org/apache/bcel/classfile/CodeException\n-   #637 = NameAndType        #914:#886    // getCatchType:()I\n-   #638 = Class              #915         // org/apache/bcel/classfile/Utility\n-   #639 = NameAndType        #916:#917    // pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n-   #640 = Class              #918         // org/apache/bcel/verifier/VerifierFactory\n-   #641 = NameAndType        #919:#920    // getVerifier:(Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n-   #642 = Class              #872         // org/apache/bcel/verifier/Verifier\n-   #643 = NameAndType        #921:#922    // doPass1:()Lorg/apache/bcel/verifier/VerificationResult;\n-   #644 = Class              #873         // org/apache/bcel/verifier/VerificationResult\n-   #645 = NameAndType        #923:#390    // VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n-   #646 = Utf8               \\') has an exception_table entry \\'\n-   #647 = Utf8               \\' that references \\'\n-   #648 = Utf8               \\' as an Exception but it does not pass verification pass 1:\n-   #649 = Class              #924         // org/apache/bcel/Repository\n-   #650 = NameAndType        #925:#926    // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-   #651 = Class              #878         // org/apache/bcel/generic/Type\n-   #652 = NameAndType        #927:#928    // THROWABLE:Lorg/apache/bcel/generic/ObjectType;\n-   #653 = NameAndType        #929:#896    // getClassName:()Ljava/lang/String;\n-   #654 = NameAndType        #930:#928    // OBJECT:Lorg/apache/bcel/generic/ObjectType;\n-   #655 = NameAndType        #931:#896    // getSuperclassName:()Ljava/lang/String;\n-   #656 = Utf8               \\' as an Exception but \\'\n-   #657 = Utf8               \\' in the ancestor hierachy does not pass verification pass 1:\n-   #658 = Utf8               \\' as an Exception but it is not a subclass of \\'\n-   #659 = NameAndType        #932:#933    // access$100:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n-   #660 = NameAndType        #934:#935    // getMethods:()[Lorg/apache/bcel/classfile/Method;\n-   #661 = NameAndType        #936:#896    // getName:()Ljava/lang/String;\n-   #662 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n-   #663 = Utf8               Could not find a known BCEL Method object in the corresponding BCEL JavaClass object.\n-   #664 = NameAndType        #937:#938    // access$200:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n-   #665 = Utf8               org/apache/bcel/verifier/statics/LocalVariablesInfo\n-   #666 = NameAndType        #939:#886    // getMaxLocals:()I\n-   #667 = NameAndType        #360:#940    // \"<init>\":(I)V\n-   #668 = NameAndType        #941:#942    // getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-   #669 = Utf8               org/apache/bcel/classfile/LineNumberTable\n-   #670 = Utf8               org/apache/bcel/classfile/LocalVariableTable\n-   #671 = Utf8               Attribute \\'\n-   #672 = Utf8               \\' as an attribute of Code attribute \\'\n-   #673 = Utf8               \\') is unknown and will therefore be ignored.\n-   #674 = Utf8               \\') will effectively be ignored and is only useful for debuggers and such.\n-   #675 = Utf8               The LocalVariableTable attribute \\'\n-   #676 = Utf8               \\' is not correctly named \\'LocalVariableTable\\' but \\'\n-   #677 = NameAndType        #943:#944    // getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n-   #678 = Class              #877         // org/apache/bcel/classfile/LocalVariable\n-   #679 = NameAndType        #945:#946    // access$300:(Ljava/lang/String;)Z\n-   #680 = Utf8               LocalVariableTable \\'\n-   #681 = Utf8               \\' references a local variable by the name \\'\n-   #682 = Utf8               \\' which is not a legal Java simple name.\n-   #683 = NameAndType        #947:#886    // getSignatureIndex:()I\n-   #684 = NameAndType        #948:#949    // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-   #685 = Utf8               org/apache/bcel/classfile/ClassFormatException\n-   #686 = Utf8               Illegal descriptor (==signature) \\'\n-   #687 = Utf8               \\' used by LocalVariable \\'\n-   #688 = Utf8               \\' referenced by \\'\n-   #689 = NameAndType        #360:#950    // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #690 = NameAndType        #951:#886    // getIndex:()I\n-   #691 = NameAndType        #952:#953    // LONG:Lorg/apache/bcel/generic/BasicType;\n-   #692 = NameAndType        #954:#953    // DOUBLE:Lorg/apache/bcel/generic/BasicType;\n-   #693 = Utf8               LocalVariableTable attribute \\'\n-   #694 = Utf8               \\' references a LocalVariable \\'\n-   #695 = Utf8               \\' with an index that exceeds the surrounding Code attribute\\'s max_locals value of \\'\n-   #696 = NameAndType        #955:#886    // getStartPC:()I\n-   #697 = NameAndType        #956:#957    // add:(ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n-   #698 = Utf8               org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n-   #699 = Utf8               Conflicting information in LocalVariableTable \\'\n-   #700 = Utf8               \\' found in Code attribute \\'\n-   #701 = Utf8               \\').\n-   #702 = NameAndType        #958:#896    // getMessage:()Ljava/lang/String;\n-   #703 = NameAndType        #959:#960    // isStatic:()Z\n-   #704 = Utf8               Number of LocalVariableTable attributes of Code attribute \\'\n-   #705 = Utf8               \\') exceeds number of local variable slots \\'\n-   #706 = Utf8               \\' (\\'There may be at most one LocalVariableTable attribute per local variable in the Code attribute.\\').\n-   #707 = Utf8               java/lang/ClassNotFoundException\n-   #708 = Utf8               Missing class:\n-   #709 = NameAndType        #961:#962    // getTag:()B\n-   #710 = Utf8               org/apache/bcel/Const\n-   #711 = Utf8               Wrong constant tag in \\'\n-   #712 = Class              #963         // org/apache/bcel/classfile/ConstantFieldref\n-   #713 = NameAndType        #964:#886    // getClassIndex:()I\n-   #714 = NameAndType        #965:#886    // getNameAndTypeIndex:()I\n-   #715 = Class              #966         // org/apache/bcel/classfile/ConstantInterfaceMethodref\n-   #716 = Class              #967         // org/apache/bcel/classfile/ConstantMethodref\n-   #717 = NameAndType        #968:#886    // getStringIndex:()I\n-   #718 = Utf8               ConstantValue\n-   #719 = Utf8               The ConstantValue attribute \\'\n-   #720 = Utf8               \\' is not correctly named \\'ConstantValue\\' but \\'\n-   #721 = Utf8               org/apache/bcel/classfile/Field\n-   #722 = NameAndType        #969:#886    // getConstantValueIndex:()I\n-   #723 = NameAndType        #970:#953    // FLOAT:Lorg/apache/bcel/generic/BasicType;\n-   #724 = NameAndType        #971:#953    // INT:Lorg/apache/bcel/generic/BasicType;\n-   #725 = NameAndType        #972:#953    // SHORT:Lorg/apache/bcel/generic/BasicType;\n-   #726 = NameAndType        #973:#953    // CHAR:Lorg/apache/bcel/generic/BasicType;\n-   #727 = NameAndType        #974:#953    // BYTE:Lorg/apache/bcel/generic/BasicType;\n-   #728 = NameAndType        #975:#953    // BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n-   #729 = NameAndType        #976:#928    // STRING:Lorg/apache/bcel/generic/ObjectType;\n-   #730 = Utf8               Illegal type of ConstantValue \\'\n-   #731 = Utf8               \\' embedding Constant \\'\n-   #732 = Utf8               \\'. It is referenced by field \\'\n-   #733 = Utf8               \\' expecting a different type: \\'\n-   #734 = Utf8               Deprecated\n-   #735 = Utf8               The Deprecated attribute \\'\n-   #736 = Utf8               \\' is not correctly named \\'Deprecated\\' but \\'\n-   #737 = Utf8               Exceptions\n-   #738 = Utf8               The Exceptions attribute \\'\n-   #739 = Utf8               \\' is not correctly named \\'Exceptions\\' but \\'\n-   #740 = NameAndType        #977:#978    // getExceptionIndexTable:()[I\n-   #741 = Utf8               Exceptions attribute \\'\n-   #742 = Utf8               \\' references \\'\n-   #743 = NameAndType        #979:#960    // isClass:()Z\n-   #744 = NameAndType        #980:#960    // isPrivate:()Z\n-   #745 = NameAndType        #981:#960    // isProtected:()Z\n-   #746 = NameAndType        #982:#960    // isPublic:()Z\n-   #747 = Utf8               Field \\'\n-   #748 = Utf8               \\' must only have at most one of its ACC_PRIVATE, ACC_PROTECTED, ACC_PUBLIC modifiers set.\n-   #749 = NameAndType        #983:#960    // isFinal:()Z\n-   #750 = NameAndType        #984:#960    // isVolatile:()Z\n-   #751 = Utf8               \\' must only have at most one of its ACC_FINAL, ACC_VOLATILE modifiers set.\n-   #752 = Utf8               Interface field \\'\n-   #753 = Utf8               \\' must have the ACC_PUBLIC modifier set but hasn\\'t!\n-   #754 = Utf8               \\' must have the ACC_STATIC modifier set but hasn\\'t!\n-   #755 = Utf8               \\' must have the ACC_FINAL modifier set but hasn\\'t!\n-   #756 = NameAndType        #985:#886    // getAccessFlags:()I\n-   #757 = Utf8               \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_VOLATILE, ACC_TRANSIENT set (ignored).\n-   #758 = NameAndType        #986:#946    // access$400:(Ljava/lang/String;)Z\n-   #759 = Utf8               \\' has illegal name \\'\n-   #760 = Class              #987         // java/util/Set\n-   #761 = NameAndType        #988:#902    // contains:(Ljava/lang/Object;)Z\n-   #762 = Utf8               No two fields (like \\'\n-   #763 = Utf8               \\') are allowed have same names and descriptors!\n-   #764 = Utf8               More than one field of name \\'\n-   #765 = Utf8               \\' detected (but with different type descriptors). This is very unusual.\n-   #766 = NameAndType        #956:#902    // add:(Ljava/lang/Object;)Z\n-   #767 = Utf8               org/apache/bcel/classfile/ConstantValue\n-   #768 = Utf8               org/apache/bcel/classfile/Synthetic\n-   #769 = Utf8               org/apache/bcel/classfile/Deprecated\n-   #770 = Utf8               \\' as an attribute of Field \\'\n-   #771 = Utf8               \\' is unknown and will therefore be ignored.\n-   #772 = Utf8               \\' is not a ConstantValue and is therefore only of use for debuggers and such.\n-   #773 = Utf8               The InnerClasses attribute \\'\n-   #774 = Utf8               \\' is not correctly named \\'InnerClasses\\' but \\'\n-   #775 = Utf8               BootstrapMethods\n-   #776 = MethodHandle       6:#989       // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #777 = MethodType         #990         //  (Ljava/lang/Object;)V\n-   #778 = MethodHandle       7:#991       // REF_invokeSpecial org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n-   #779 = MethodType         #511         //  (Lorg/apache/bcel/classfile/InnerClass;)V\n-   #780 = NameAndType        #992:#993    // accept:(Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n-   #781 = NameAndType        #994:#995    // forEach:(Ljava/util/function/Consumer;)V\n-   #782 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector\n-   #783 = Utf8               InnerClassDetector\n-   #784 = NameAndType        #360:#518    // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;)V\n-   #785 = NameAndType        #996:#960    // innerClassReferenced:()Z\n-   #786 = Utf8               org/apache/bcel/classfile/SourceFile\n-   #787 = Utf8               org/apache/bcel/classfile/InnerClasses\n-   #788 = Utf8               \\' as an attribute of the ClassFile structure \\'\n-   #789 = Utf8               A ClassFile structure (like \\'\n-   #790 = Utf8               \\') may have no more than one SourceFile attribute.\n-   #791 = Utf8               A Classfile structure (like \\'\n-   #792 = Utf8               \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). More than one InnerClasses attribute was found.\n-   #793 = Utf8               No referenced Inner Class found, but InnerClasses attribute \\'\n-   #794 = Utf8               \\' found. Strongly suggest removal of that attribute.\n-   #795 = Utf8               \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). No InnerClasses attribute was found.\n-   #796 = Utf8               The LineNumberTable attribute \\'\n-   #797 = Utf8               \\' is not correctly named \\'LineNumberTable\\' but \\'\n-   #798 = NameAndType        #997:#998    // access$500:(Ljava/lang/String;Z)Z\n-   #799 = Utf8               Method \\'\n-   #800 = NameAndType        #999:#949    // getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-   #801 = NameAndType        #1000:#1001  // getArgumentTypes:(Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n-   #802 = Utf8               \\' used by Method \\'\n-   #803 = Utf8               org/apache/bcel/generic/ArrayType\n-   #804 = NameAndType        #1002:#1003  // getBasicType:()Lorg/apache/bcel/generic/Type;\n-   #805 = Utf8               org/apache/bcel/generic/ObjectType\n-   #806 = Utf8               \\' has a return type that does not pass verification pass 1: \\'\n-   #807 = Utf8               \\' has an argument type that does not pass verification pass 1: \\'\n-   #808 = Utf8               <clinit>\n-   #809 = Utf8               \\'. Its name resembles the class or interface initialization method which it isn\\'t because of its arguments (==descriptor).\n-   #810 = NameAndType        #1004:#960   // isAbstract:()Z\n-   #811 = Utf8               Abstract method \\'\n-   #812 = Utf8               \\' must not have the ACC_FINAL modifier set.\n-   #813 = NameAndType        #1005:#960   // isNative:()Z\n-   #814 = Utf8               \\' must not have the ACC_NATIVE modifier set.\n-   #815 = Utf8               \\' must not have the ACC_PRIVATE modifier set.\n-   #816 = Utf8               \\' must not have the ACC_STATIC modifier set.\n-   #817 = NameAndType        #1006:#960   // isStrictfp:()Z\n-   #818 = Utf8               \\' must not have the ACC_STRICT modifier set.\n-   #819 = NameAndType        #1007:#960   // isSynchronized:()Z\n-   #820 = Utf8               \\' must not have the ACC_SYNCHRONIZED modifier set.\n-   #821 = Utf8               Instance initialization method \\'\n-   #822 = Utf8               \\' must not have any of the ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT modifiers set.\n-   #823 = NameAndType        #1008:#886   // getMajor:()I\n-   #824 = Utf8               Interface method \\'\n-   #825 = Utf8               \\' must have exactly one of its ACC_PUBLIC and ACC_PRIVATE modifiers set.\n-   #826 = Utf8               \\' must not have any of the ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED, or ACC_NATIVE modifiers set.\n-   #827 = Utf8               \\' must have the ACC_ABSTRACT modifier set but hasn\\'t!\n-   #828 = Utf8               \\' must not have any of the ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT modifiers set.\n-   #829 = Utf8               \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT set (ignored).\n-   #830 = Utf8               No two methods (like \\'\n-   #831 = Utf8               \\') are allowed have same names and desciptors!\n-   #832 = Utf8               org/apache/bcel/classfile/Code\n-   #833 = Utf8               org/apache/bcel/classfile/ExceptionTable\n-   #834 = Utf8               \\' as an attribute of Method \\'\n-   #835 = Utf8               \\' is neither Code nor Exceptions and is therefore only of use for debuggers and such.\n-   #836 = Utf8               Native or abstract methods like \\'\n-   #837 = Utf8               \\' must not have a Code attribute like \\'\n-   #838 = Utf8               Non-native, non-abstract methods like \\'\n-   #839 = Utf8               \\' must have exactly one Code attribute (found:\n-   #840 = Utf8               ).\n-   #841 = Utf8               The SourceFile attribute \\'\n-   #842 = Utf8               \\' is not correctly named \\'SourceFile\\' but \\'\n-   #843 = NameAndType        #1009:#886   // getSourceFileIndex:()I\n-   #844 = Class              #1010        // java/util/Locale\n-   #845 = NameAndType        #1011:#1012  // ENGLISH:Ljava/util/Locale;\n-   #846 = NameAndType        #1013:#1014  // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #847 = NameAndType        #1015:#1016  // indexOf:(I)I\n-   #848 = Utf8               .java\n-   #849 = NameAndType        #1017:#1018  // lastIndexOf:(Ljava/lang/String;)I\n-   #850 = Utf8               SourceFile attribute \\'\n-   #851 = Utf8               \\' has a funny name: remember not to confuse certain parsers working on javap\\'s output. Also, this name (\\'\n-   #852 = Utf8               \\') is considered an unqualified (simple) file name only.\n-   #853 = Utf8               Synthetic\n-   #854 = Utf8               The Synthetic attribute \\'\n-   #855 = Utf8               \\' is not correctly named \\'Synthetic\\' but \\'\n-   #856 = Class              #1019        // org/apache/bcel/classfile/Unknown\n-   #857 = Utf8               Unknown attribute \\'\n-   #858 = Utf8               \\'. This attribute is not known in any context!\n-   #859 = Class              #1020        // org/apache/bcel/classfile/InnerClass\n-   #860 = NameAndType        #1021:#886   // getInnerClassIndex:()I\n-   #861 = NameAndType        #1022:#886   // getOuterClassIndex:()I\n-   #862 = NameAndType        #1023:#886   // getInnerNameIndex:()I\n-   #863 = NameAndType        #1024:#886   // getInnerAccessFlags:()I\n-   #864 = Utf8               Unknown access flag for inner class \\'\n-   #865 = Utf8               \\' set (InnerClasses attribute \\'\n-   #866 = Utf8               \\').\n-   #867 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n-   #868 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n-   #869 = Utf8               org/apache/bcel/classfile/Constant\n-   #870 = Utf8               java/lang/String\n-   #871 = Utf8               org/apache/bcel/classfile/CodeException\n-   #872 = Utf8               org/apache/bcel/verifier/Verifier\n-   #873 = Utf8               org/apache/bcel/verifier/VerificationResult\n-   #874 = Utf8               org/apache/bcel/classfile/JavaClass\n-   #875 = Utf8               org/apache/bcel/classfile/Attribute\n-   #876 = Utf8               [Lorg/apache/bcel/classfile/LocalVariable;\n-   #877 = Utf8               org/apache/bcel/classfile/LocalVariable\n-   #878 = Utf8               org/apache/bcel/generic/Type\n-   #879 = Utf8               java/lang/Object\n-   #880 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$1\n-   #881 = Utf8               ()V\n-   #882 = Utf8               getConstantPool\n-   #883 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-   #884 = Utf8               org/apache/bcel/classfile/ConstantPool\n-   #885 = Utf8               getLength\n-   #886 = Utf8               ()I\n-   #887 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n-   #888 = Utf8               visit\n-   #889 = Utf8               append\n-   #890 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #891 = Utf8               (I)Ljava/lang/StringBuilder;\n-   #892 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier\n-   #893 = Utf8               access$000\n-   #894 = Utf8               (Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n-   #895 = Utf8               toString\n-   #896 = Utf8               ()Ljava/lang/String;\n-   #897 = Utf8               (Ljava/lang/String;)V\n-   #898 = Utf8               getConstant\n-   #899 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-   #900 = Utf8               java/lang/Class\n-   #901 = Utf8               isInstance\n-   #902 = Utf8               (Ljava/lang/Object;)Z\n-   #903 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #904 = Utf8               getNameIndex\n-   #905 = Utf8               getBytes\n-   #906 = Utf8               equals\n-   #907 = Utf8               predecessor\n-   #908 = Utf8               ()Ljava/lang/Object;\n-   #909 = Utf8               addMessage\n-   #910 = Utf8               getCode\n-   #911 = Utf8               ()[B\n-   #912 = Utf8               getExceptionTable\n-   #913 = Utf8               ()[Lorg/apache/bcel/classfile/CodeException;\n-   #914 = Utf8               getCatchType\n-   #915 = Utf8               org/apache/bcel/classfile/Utility\n-   #916 = Utf8               pathToPackage\n-   #917 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #918 = Utf8               org/apache/bcel/verifier/VerifierFactory\n-   #919 = Utf8               getVerifier\n-   #920 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n-   #921 = Utf8               doPass1\n-   #922 = Utf8               ()Lorg/apache/bcel/verifier/VerificationResult;\n-   #923 = Utf8               VR_OK\n-   #924 = Utf8               org/apache/bcel/Repository\n-   #925 = Utf8               lookupClass\n-   #926 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-   #927 = Utf8               THROWABLE\n-   #928 = Utf8               Lorg/apache/bcel/generic/ObjectType;\n-   #929 = Utf8               getClassName\n-   #930 = Utf8               OBJECT\n-   #931 = Utf8               getSuperclassName\n-   #932 = Utf8               access$100\n-   #933 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n-   #934 = Utf8               getMethods\n-   #935 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n-   #936 = Utf8               getName\n-   #937 = Utf8               access$200\n-   #938 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n-   #939 = Utf8               getMaxLocals\n-   #940 = Utf8               (I)V\n-   #941 = Utf8               getAttributes\n-   #942 = Utf8               ()[Lorg/apache/bcel/classfile/Attribute;\n-   #943 = Utf8               getLocalVariableTable\n-   #944 = Utf8               ()[Lorg/apache/bcel/classfile/LocalVariable;\n-   #945 = Utf8               access$300\n-   #946 = Utf8               (Ljava/lang/String;)Z\n-   #947 = Utf8               getSignatureIndex\n-   #948 = Utf8               getType\n-   #949 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-   #950 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #951 = Utf8               getIndex\n-   #952 = Utf8               LONG\n-   #953 = Utf8               Lorg/apache/bcel/generic/BasicType;\n-   #954 = Utf8               DOUBLE\n-   #955 = Utf8               getStartPC\n-   #956 = Utf8               add\n-   #957 = Utf8               (ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n-   #958 = Utf8               getMessage\n-   #959 = Utf8               isStatic\n-   #960 = Utf8               ()Z\n-   #961 = Utf8               getTag\n-   #962 = Utf8               ()B\n-   #963 = Utf8               org/apache/bcel/classfile/ConstantFieldref\n-   #964 = Utf8               getClassIndex\n-   #965 = Utf8               getNameAndTypeIndex\n-   #966 = Utf8               org/apache/bcel/classfile/ConstantInterfaceMethodref\n-   #967 = Utf8               org/apache/bcel/classfile/ConstantMethodref\n-   #968 = Utf8               getStringIndex\n-   #969 = Utf8               getConstantValueIndex\n-   #970 = Utf8               FLOAT\n-   #971 = Utf8               INT\n-   #972 = Utf8               SHORT\n-   #973 = Utf8               CHAR\n-   #974 = Utf8               BYTE\n-   #975 = Utf8               BOOLEAN\n-   #976 = Utf8               STRING\n-   #977 = Utf8               getExceptionIndexTable\n-   #978 = Utf8               ()[I\n-   #979 = Utf8               isClass\n-   #980 = Utf8               isPrivate\n-   #981 = Utf8               isProtected\n-   #982 = Utf8               isPublic\n-   #983 = Utf8               isFinal\n-   #984 = Utf8               isVolatile\n-   #985 = Utf8               getAccessFlags\n-   #986 = Utf8               access$400\n-   #987 = Utf8               java/util/Set\n-   #988 = Utf8               contains\n-   #989 = Methodref          #1025.#1026  // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #990 = Utf8               (Ljava/lang/Object;)V\n-   #991 = Methodref          #332.#1027   // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n-   #992 = Utf8               accept\n-   #993 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n-   #994 = Utf8               forEach\n-   #995 = Utf8               (Ljava/util/function/Consumer;)V\n-   #996 = Utf8               innerClassReferenced\n-   #997 = Utf8               access$500\n-   #998 = Utf8               (Ljava/lang/String;Z)Z\n-   #999 = Utf8               getReturnType\n-  #1000 = Utf8               getArgumentTypes\n-  #1001 = Utf8               (Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n-  #1002 = Utf8               getBasicType\n-  #1003 = Utf8               ()Lorg/apache/bcel/generic/Type;\n-  #1004 = Utf8               isAbstract\n-  #1005 = Utf8               isNative\n-  #1006 = Utf8               isStrictfp\n-  #1007 = Utf8               isSynchronized\n-  #1008 = Utf8               getMajor\n-  #1009 = Utf8               getSourceFileIndex\n-  #1010 = Utf8               java/util/Locale\n-  #1011 = Utf8               ENGLISH\n-  #1012 = Utf8               Ljava/util/Locale;\n-  #1013 = Utf8               toLowerCase\n-  #1014 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #1015 = Utf8               indexOf\n-  #1016 = Utf8               (I)I\n-  #1017 = Utf8               lastIndexOf\n-  #1018 = Utf8               (Ljava/lang/String;)I\n-  #1019 = Utf8               org/apache/bcel/classfile/Unknown\n-  #1020 = Utf8               org/apache/bcel/classfile/InnerClass\n-  #1021 = Utf8               getInnerClassIndex\n-  #1022 = Utf8               getOuterClassIndex\n-  #1023 = Utf8               getInnerNameIndex\n-  #1024 = Utf8               getInnerAccessFlags\n-  #1025 = Class              #1028        // java/lang/invoke/LambdaMetafactory\n-  #1026 = NameAndType        #1029:#1032  // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #1027 = NameAndType        #551:#552    // lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n-  #1028 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #1029 = Utf8               metafactory\n-  #1030 = Class              #1034        // java/lang/invoke/MethodHandles$Lookup\n-  #1031 = Utf8               Lookup\n-  #1032 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #1033 = Class              #1035        // java/lang/invoke/MethodHandles\n-  #1034 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #1035 = Utf8               java/lang/invoke/MethodHandles\n+   #427 = Class              #852         // java/lang/String\n+   #428 = Class              #417         // \"[Lorg/apache/bcel/classfile/CodeException;\"\n+   #429 = Class              #853         // org/apache/bcel/classfile/CodeException\n+   #430 = Class              #854         // org/apache/bcel/verifier/Verifier\n+   #431 = Class              #855         // org/apache/bcel/verifier/VerificationResult\n+   #432 = Class              #856         // org/apache/bcel/classfile/JavaClass\n+   #433 = Class              #420         // \"[Lorg/apache/bcel/classfile/Method;\"\n+   #434 = Class              #423         // \"[Lorg/apache/bcel/classfile/Attribute;\"\n+   #435 = Class              #857         // org/apache/bcel/classfile/Attribute\n+   #436 = Class              #858         // \"[Lorg/apache/bcel/classfile/LocalVariable;\"\n+   #437 = Class              #859         // org/apache/bcel/classfile/LocalVariable\n+   #438 = Class              #860         // org/apache/bcel/generic/Type\n+   #439 = Utf8               visitCodeException\n+   #440 = Utf8               (Lorg/apache/bcel/classfile/CodeException;)V\n+   #441 = Utf8               visitConstantClass\n+   #442 = Utf8               (Lorg/apache/bcel/classfile/ConstantClass;)V\n+   #443 = Utf8               visitConstantDouble\n+   #444 = Utf8               (Lorg/apache/bcel/classfile/ConstantDouble;)V\n+   #445 = Utf8               Lorg/apache/bcel/classfile/ConstantDouble;\n+   #446 = Utf8               visitConstantFieldref\n+   #447 = Utf8               (Lorg/apache/bcel/classfile/ConstantFieldref;)V\n+   #448 = Utf8               Lorg/apache/bcel/classfile/ConstantFieldref;\n+   #449 = Utf8               visitConstantFloat\n+   #450 = Utf8               (Lorg/apache/bcel/classfile/ConstantFloat;)V\n+   #451 = Utf8               Lorg/apache/bcel/classfile/ConstantFloat;\n+   #452 = Utf8               visitConstantInteger\n+   #453 = Utf8               (Lorg/apache/bcel/classfile/ConstantInteger;)V\n+   #454 = Utf8               Lorg/apache/bcel/classfile/ConstantInteger;\n+   #455 = Utf8               visitConstantInterfaceMethodref\n+   #456 = Utf8               (Lorg/apache/bcel/classfile/ConstantInterfaceMethodref;)V\n+   #457 = Utf8               Lorg/apache/bcel/classfile/ConstantInterfaceMethodref;\n+   #458 = Utf8               visitConstantLong\n+   #459 = Utf8               (Lorg/apache/bcel/classfile/ConstantLong;)V\n+   #460 = Utf8               Lorg/apache/bcel/classfile/ConstantLong;\n+   #461 = Utf8               visitConstantMethodref\n+   #462 = Utf8               (Lorg/apache/bcel/classfile/ConstantMethodref;)V\n+   #463 = Utf8               Lorg/apache/bcel/classfile/ConstantMethodref;\n+   #464 = Utf8               visitConstantNameAndType\n+   #465 = Utf8               (Lorg/apache/bcel/classfile/ConstantNameAndType;)V\n+   #466 = Utf8               Lorg/apache/bcel/classfile/ConstantNameAndType;\n+   #467 = Utf8               visitConstantPool\n+   #468 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #469 = Utf8               visitConstantString\n+   #470 = Utf8               (Lorg/apache/bcel/classfile/ConstantString;)V\n+   #471 = Utf8               Lorg/apache/bcel/classfile/ConstantString;\n+   #472 = Utf8               visitConstantUtf8\n+   #473 = Utf8               (Lorg/apache/bcel/classfile/ConstantUtf8;)V\n+   #474 = Utf8               Lorg/apache/bcel/classfile/ConstantUtf8;\n+   #475 = Utf8               visitConstantValue\n+   #476 = Utf8               (Lorg/apache/bcel/classfile/ConstantValue;)V\n+   #477 = Utf8               f\n+   #478 = Utf8               Lorg/apache/bcel/classfile/Field;\n+   #479 = Utf8               fieldType\n+   #480 = Utf8               Lorg/apache/bcel/classfile/ConstantValue;\n+   #481 = Utf8               pred\n+   #482 = Utf8               Ljava/lang/Object;\n+   #483 = Class              #861         // java/lang/Object\n+   #484 = Utf8               visitDeprecated\n+   #485 = Utf8               (Lorg/apache/bcel/classfile/Deprecated;)V\n+   #486 = Utf8               Lorg/apache/bcel/classfile/Deprecated;\n+   #487 = Utf8               visitExceptionTable\n+   #488 = Utf8               (Lorg/apache/bcel/classfile/ExceptionTable;)V\n+   #489 = Utf8               exc_indice\n+   #490 = Utf8               exc_indices\n+   #491 = Utf8               [I\n+   #492 = Utf8               Lorg/apache/bcel/classfile/ExceptionTable;\n+   #493 = Class              #491         // \"[I\"\n+   #494 = Utf8               visitField\n+   #495 = Utf8               (Lorg/apache/bcel/classfile/Field;)V\n+   #496 = Utf8               maxone\n+   #497 = Utf8               sig\n+   #498 = Utf8               nameanddesc\n+   #499 = Utf8               visitInnerClass\n+   #500 = Utf8               (Lorg/apache/bcel/classfile/InnerClass;)V\n+   #501 = Utf8               Lorg/apache/bcel/classfile/InnerClass;\n+   #502 = Utf8               visitInnerClasses\n+   #503 = Utf8               (Lorg/apache/bcel/classfile/InnerClasses;)V\n+   #504 = Utf8               innerClasses\n+   #505 = Utf8               Lorg/apache/bcel/classfile/InnerClasses;\n+   #506 = Utf8               visitJavaClass\n+   #507 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;)V\n+   #508 = Utf8               foundSourceFile\n+   #509 = Utf8               Z\n+   #510 = Utf8               foundInnerClasses\n+   #511 = Utf8               hasInnerClass\n+   #512 = Utf8               visitLineNumber\n+   #513 = Utf8               (Lorg/apache/bcel/classfile/LineNumber;)V\n+   #514 = Utf8               Lorg/apache/bcel/classfile/LineNumber;\n+   #515 = Utf8               visitLineNumberTable\n+   #516 = Utf8               (Lorg/apache/bcel/classfile/LineNumberTable;)V\n+   #517 = Utf8               Lorg/apache/bcel/classfile/LineNumberTable;\n+   #518 = Utf8               visitLocalVariable\n+   #519 = Utf8               (Lorg/apache/bcel/classfile/LocalVariable;)V\n+   #520 = Utf8               visitLocalVariableTable\n+   #521 = Utf8               (Lorg/apache/bcel/classfile/LocalVariableTable;)V\n+   #522 = Utf8               visitMethod\n+   #523 = Utf8               (Lorg/apache/bcel/classfile/Method;)V\n+   #524 = Utf8               ts\n+   #525 = Utf8               [Lorg/apache/bcel/generic/Type;\n+   #526 = Utf8               act\n+   #527 = Utf8               num_code_atts\n+   #528 = Class              #525         // \"[Lorg/apache/bcel/generic/Type;\"\n+   #529 = Utf8               visitSourceFile\n+   #530 = Utf8               (Lorg/apache/bcel/classfile/SourceFile;)V\n+   #531 = Utf8               Lorg/apache/bcel/classfile/SourceFile;\n+   #532 = Utf8               sourceFileName\n+   #533 = Utf8               sourceFileNameLc\n+   #534 = Utf8               visitSynthetic\n+   #535 = Utf8               (Lorg/apache/bcel/classfile/Synthetic;)V\n+   #536 = Utf8               Lorg/apache/bcel/classfile/Synthetic;\n+   #537 = Utf8               visitUnknown\n+   #538 = Utf8               (Lorg/apache/bcel/classfile/Unknown;)V\n+   #539 = Utf8               Lorg/apache/bcel/classfile/Unknown;\n+   #540 = Utf8               lambda$visitInnerClasses$0\n+   #541 = Utf8               (Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n+   #542 = Utf8               ic\n+   #543 = Utf8               outer_idx\n+   #544 = Utf8               innername_idx\n+   #545 = Utf8               acc\n+   #546 = Class              #862         // org/apache/bcel/verifier/statics/Pass2Verifier$1\n+   #547 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/verifier/statics/Pass2Verifier$1;)V\n+   #548 = Utf8               x0\n+   #549 = Utf8               x1\n+   #550 = Utf8               x2\n+   #551 = Utf8               Lorg/apache/bcel/verifier/statics/Pass2Verifier$1;\n+   #552 = Utf8               SourceFile\n+   #553 = Utf8               Pass2Verifier.java\n+   #554 = NameAndType        #360:#361    // \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n+   #555 = NameAndType        #358:#359    // this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n+   #556 = NameAndType        #360:#863    // \"<init>\":()V\n+   #557 = Utf8               java/util/HashSet\n+   #558 = NameAndType        #353:#354    // field_names:Ljava/util/Set;\n+   #559 = NameAndType        #356:#354    // field_names_and_desc:Ljava/util/Set;\n+   #560 = NameAndType        #357:#354    // method_names_and_desc:Ljava/util/Set;\n+   #561 = NameAndType        #345:#346    // jc:Lorg/apache/bcel/classfile/JavaClass;\n+   #562 = NameAndType        #864:#865    // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #563 = NameAndType        #347:#348    // cp:Lorg/apache/bcel/classfile/ConstantPool;\n+   #564 = Class              #866         // org/apache/bcel/classfile/ConstantPool\n+   #565 = NameAndType        #867:#868    // getLength:()I\n+   #566 = NameAndType        #349:#350    // cplen:I\n+   #567 = Utf8               org/apache/bcel/classfile/ConstantClass\n+   #568 = NameAndType        #334:#335    // CONST_Class:Ljava/lang/Class;\n+   #569 = Utf8               org/apache/bcel/classfile/ConstantString\n+   #570 = NameAndType        #338:#335    // CONST_String:Ljava/lang/Class;\n+   #571 = Utf8               org/apache/bcel/classfile/ConstantInteger\n+   #572 = NameAndType        #339:#335    // CONST_Integer:Ljava/lang/Class;\n+   #573 = Utf8               org/apache/bcel/classfile/ConstantFloat\n+   #574 = NameAndType        #340:#335    // CONST_Float:Ljava/lang/Class;\n+   #575 = Utf8               org/apache/bcel/classfile/ConstantLong\n+   #576 = NameAndType        #341:#335    // CONST_Long:Ljava/lang/Class;\n+   #577 = Utf8               org/apache/bcel/classfile/ConstantDouble\n+   #578 = NameAndType        #342:#335    // CONST_Double:Ljava/lang/Class;\n+   #579 = Utf8               org/apache/bcel/classfile/ConstantNameAndType\n+   #580 = NameAndType        #343:#335    // CONST_NameAndType:Ljava/lang/Class;\n+   #581 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+   #582 = NameAndType        #344:#335    // CONST_Utf8:Ljava/lang/Class;\n+   #583 = Utf8               org/apache/bcel/classfile/DescendingVisitor\n+   #584 = NameAndType        #360:#869    // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n+   #585 = NameAndType        #351:#352    // carrier:Lorg/apache/bcel/classfile/DescendingVisitor;\n+   #586 = NameAndType        #870:#863    // visit:()V\n+   #587 = Utf8               org/apache/bcel/verifier/exc/ClassConstraintException\n+   #588 = Utf8               java/lang/StringBuilder\n+   #589 = Utf8               Invalid index \\'\n+   #590 = NameAndType        #871:#872    // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #591 = NameAndType        #871:#873    // append:(I)Ljava/lang/StringBuilder;\n+   #592 = Utf8               \\' used by \\'\n+   #593 = Class              #874         // org/apache/bcel/verifier/statics/Pass2Verifier\n+   #594 = NameAndType        #875:#876    // access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n+   #595 = Utf8               \\'.\n+   #596 = NameAndType        #877:#878    // toString:()Ljava/lang/String;\n+   #597 = NameAndType        #360:#879    // \"<init>\":(Ljava/lang/String;)V\n+   #598 = NameAndType        #880:#881    // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #599 = Class              #882         // java/lang/Class\n+   #600 = NameAndType        #883:#884    // isInstance:(Ljava/lang/Object;)Z\n+   #601 = Utf8               Illegal constant \\'\n+   #602 = Utf8               \\' at index \\'\n+   #603 = Utf8               \\'. \\'\n+   #604 = Utf8               \\' expects a \\'\n+   #605 = NameAndType        #871:#885    // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #606 = NameAndType        #886:#868    // getNameIndex:()I\n+   #607 = NameAndType        #369:#370    // checkIndex:(Lorg/apache/bcel/classfile/Node;ILjava/lang/Class;)V\n+   #608 = NameAndType        #887:#878    // getBytes:()Ljava/lang/String;\n+   #609 = NameAndType        #888:#884    // equals:(Ljava/lang/Object;)Z\n+   #610 = Utf8               The Code attribute \\'\n+   #611 = Utf8               \\' is not correctly named \\'Code\\' but \\'\n+   #612 = NameAndType        #889:#890    // predecessor:()Ljava/lang/Object;\n+   #613 = Utf8               org/apache/bcel/classfile/Method\n+   #614 = Utf8               Code attribute \\'\n+   #615 = Utf8               \\' is not declared in a method_info structure but in \\'\n+   #616 = Utf8               \\'. Ignored.\n+   #617 = NameAndType        #891:#879    // addMessage:(Ljava/lang/String;)V\n+   #618 = NameAndType        #892:#893    // getCode:()[B\n+   #619 = Utf8               Code array of Code attribute \\'\n+   #620 = Utf8               \\' (method \\'\n+   #621 = Utf8               \\') must not be empty.\n+   #622 = NameAndType        #894:#895    // getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n+   #623 = NameAndType        #896:#868    // getCatchType:()I\n+   #624 = Class              #897         // org/apache/bcel/classfile/Utility\n+   #625 = NameAndType        #898:#899    // pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n+   #626 = Class              #900         // org/apache/bcel/verifier/VerifierFactory\n+   #627 = NameAndType        #901:#902    // getVerifier:(Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n+   #628 = NameAndType        #903:#904    // doPass1:()Lorg/apache/bcel/verifier/VerificationResult;\n+   #629 = NameAndType        #905:#390    // VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n+   #630 = Utf8               \\') has an exception_table entry \\'\n+   #631 = Utf8               \\' that references \\'\n+   #632 = Utf8               \\' as an Exception but it does not pass verification pass 1:\n+   #633 = Class              #906         // org/apache/bcel/Repository\n+   #634 = NameAndType        #907:#908    // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+   #635 = NameAndType        #909:#910    // THROWABLE:Lorg/apache/bcel/generic/ObjectType;\n+   #636 = NameAndType        #911:#878    // getClassName:()Ljava/lang/String;\n+   #637 = NameAndType        #912:#910    // OBJECT:Lorg/apache/bcel/generic/ObjectType;\n+   #638 = NameAndType        #913:#878    // getSuperclassName:()Ljava/lang/String;\n+   #639 = Utf8               \\' as an Exception but \\'\n+   #640 = Utf8               \\' in the ancestor hierachy does not pass verification pass 1:\n+   #641 = Utf8               \\' as an Exception but it is not a subclass of \\'\n+   #642 = NameAndType        #914:#915    // access$100:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n+   #643 = NameAndType        #916:#917    // getMethods:()[Lorg/apache/bcel/classfile/Method;\n+   #644 = NameAndType        #918:#878    // getName:()Ljava/lang/String;\n+   #645 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n+   #646 = Utf8               Could not find a known BCEL Method object in the corresponding BCEL JavaClass object.\n+   #647 = NameAndType        #919:#920    // access$200:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n+   #648 = Utf8               org/apache/bcel/verifier/statics/LocalVariablesInfo\n+   #649 = NameAndType        #921:#868    // getMaxLocals:()I\n+   #650 = NameAndType        #360:#922    // \"<init>\":(I)V\n+   #651 = NameAndType        #923:#924    // getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+   #652 = Utf8               org/apache/bcel/classfile/LineNumberTable\n+   #653 = Utf8               org/apache/bcel/classfile/LocalVariableTable\n+   #654 = Utf8               Attribute \\'\n+   #655 = Utf8               \\' as an attribute of Code attribute \\'\n+   #656 = Utf8               \\') is unknown and will therefore be ignored.\n+   #657 = Utf8               \\') will effectively be ignored and is only useful for debuggers and such.\n+   #658 = Utf8               The LocalVariableTable attribute \\'\n+   #659 = Utf8               \\' is not correctly named \\'LocalVariableTable\\' but \\'\n+   #660 = NameAndType        #925:#926    // getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n+   #661 = NameAndType        #927:#928    // access$300:(Ljava/lang/String;)Z\n+   #662 = Utf8               LocalVariableTable \\'\n+   #663 = Utf8               \\' references a local variable by the name \\'\n+   #664 = Utf8               \\' which is not a legal Java simple name.\n+   #665 = NameAndType        #929:#868    // getSignatureIndex:()I\n+   #666 = NameAndType        #930:#931    // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+   #667 = Utf8               org/apache/bcel/classfile/ClassFormatException\n+   #668 = Utf8               Illegal descriptor (==signature) \\'\n+   #669 = Utf8               \\' used by LocalVariable \\'\n+   #670 = Utf8               \\' referenced by \\'\n+   #671 = NameAndType        #360:#932    // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #672 = NameAndType        #933:#868    // getIndex:()I\n+   #673 = NameAndType        #934:#935    // LONG:Lorg/apache/bcel/generic/BasicType;\n+   #674 = NameAndType        #936:#935    // DOUBLE:Lorg/apache/bcel/generic/BasicType;\n+   #675 = Utf8               LocalVariableTable attribute \\'\n+   #676 = Utf8               \\' references a LocalVariable \\'\n+   #677 = Utf8               \\' with an index that exceeds the surrounding Code attribute\\'s max_locals value of \\'\n+   #678 = NameAndType        #937:#868    // getStartPC:()I\n+   #679 = NameAndType        #938:#939    // add:(ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n+   #680 = Utf8               org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n+   #681 = Utf8               Conflicting information in LocalVariableTable \\'\n+   #682 = Utf8               \\' found in Code attribute \\'\n+   #683 = Utf8               \\').\n+   #684 = NameAndType        #940:#878    // getMessage:()Ljava/lang/String;\n+   #685 = NameAndType        #941:#942    // isStatic:()Z\n+   #686 = Utf8               Number of LocalVariableTable attributes of Code attribute \\'\n+   #687 = Utf8               \\') exceeds number of local variable slots \\'\n+   #688 = Utf8               \\' (\\'There may be at most one LocalVariableTable attribute per local variable in the Code attribute.\\').\n+   #689 = Utf8               java/lang/ClassNotFoundException\n+   #690 = Utf8               Missing class:\n+   #691 = NameAndType        #943:#944    // getTag:()B\n+   #692 = Utf8               org/apache/bcel/Const\n+   #693 = Utf8               Wrong constant tag in \\'\n+   #694 = Class              #945         // org/apache/bcel/classfile/ConstantFieldref\n+   #695 = NameAndType        #946:#868    // getClassIndex:()I\n+   #696 = NameAndType        #947:#868    // getNameAndTypeIndex:()I\n+   #697 = Class              #948         // org/apache/bcel/classfile/ConstantInterfaceMethodref\n+   #698 = Class              #949         // org/apache/bcel/classfile/ConstantMethodref\n+   #699 = NameAndType        #950:#868    // getStringIndex:()I\n+   #700 = Utf8               ConstantValue\n+   #701 = Utf8               The ConstantValue attribute \\'\n+   #702 = Utf8               \\' is not correctly named \\'ConstantValue\\' but \\'\n+   #703 = Utf8               org/apache/bcel/classfile/Field\n+   #704 = NameAndType        #951:#868    // getConstantValueIndex:()I\n+   #705 = NameAndType        #952:#935    // FLOAT:Lorg/apache/bcel/generic/BasicType;\n+   #706 = NameAndType        #953:#935    // INT:Lorg/apache/bcel/generic/BasicType;\n+   #707 = NameAndType        #954:#935    // SHORT:Lorg/apache/bcel/generic/BasicType;\n+   #708 = NameAndType        #955:#935    // CHAR:Lorg/apache/bcel/generic/BasicType;\n+   #709 = NameAndType        #956:#935    // BYTE:Lorg/apache/bcel/generic/BasicType;\n+   #710 = NameAndType        #957:#935    // BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+   #711 = NameAndType        #958:#910    // STRING:Lorg/apache/bcel/generic/ObjectType;\n+   #712 = Utf8               Illegal type of ConstantValue \\'\n+   #713 = Utf8               \\' embedding Constant \\'\n+   #714 = Utf8               \\'. It is referenced by field \\'\n+   #715 = Utf8               \\' expecting a different type: \\'\n+   #716 = Utf8               Deprecated\n+   #717 = Utf8               The Deprecated attribute \\'\n+   #718 = Utf8               \\' is not correctly named \\'Deprecated\\' but \\'\n+   #719 = Utf8               Exceptions\n+   #720 = Utf8               The Exceptions attribute \\'\n+   #721 = Utf8               \\' is not correctly named \\'Exceptions\\' but \\'\n+   #722 = NameAndType        #959:#960    // getExceptionIndexTable:()[I\n+   #723 = Utf8               Exceptions attribute \\'\n+   #724 = Utf8               \\' references \\'\n+   #725 = NameAndType        #961:#942    // isClass:()Z\n+   #726 = NameAndType        #962:#942    // isPrivate:()Z\n+   #727 = NameAndType        #963:#942    // isProtected:()Z\n+   #728 = NameAndType        #964:#942    // isPublic:()Z\n+   #729 = Utf8               Field \\'\n+   #730 = Utf8               \\' must only have at most one of its ACC_PRIVATE, ACC_PROTECTED, ACC_PUBLIC modifiers set.\n+   #731 = NameAndType        #965:#942    // isFinal:()Z\n+   #732 = NameAndType        #966:#942    // isVolatile:()Z\n+   #733 = Utf8               \\' must only have at most one of its ACC_FINAL, ACC_VOLATILE modifiers set.\n+   #734 = Utf8               Interface field \\'\n+   #735 = Utf8               \\' must have the ACC_PUBLIC modifier set but hasn\\'t!\n+   #736 = Utf8               \\' must have the ACC_STATIC modifier set but hasn\\'t!\n+   #737 = Utf8               \\' must have the ACC_FINAL modifier set but hasn\\'t!\n+   #738 = NameAndType        #967:#868    // getAccessFlags:()I\n+   #739 = Utf8               \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_VOLATILE, ACC_TRANSIENT set (ignored).\n+   #740 = NameAndType        #968:#928    // access$400:(Ljava/lang/String;)Z\n+   #741 = Utf8               \\' has illegal name \\'\n+   #742 = Class              #969         // java/util/Set\n+   #743 = NameAndType        #970:#884    // contains:(Ljava/lang/Object;)Z\n+   #744 = Utf8               No two fields (like \\'\n+   #745 = Utf8               \\') are allowed have same names and descriptors!\n+   #746 = Utf8               More than one field of name \\'\n+   #747 = Utf8               \\' detected (but with different type descriptors). This is very unusual.\n+   #748 = NameAndType        #938:#884    // add:(Ljava/lang/Object;)Z\n+   #749 = Utf8               org/apache/bcel/classfile/ConstantValue\n+   #750 = Utf8               org/apache/bcel/classfile/Synthetic\n+   #751 = Utf8               org/apache/bcel/classfile/Deprecated\n+   #752 = Utf8               \\' as an attribute of Field \\'\n+   #753 = Utf8               \\' is unknown and will therefore be ignored.\n+   #754 = Utf8               \\' is not a ConstantValue and is therefore only of use for debuggers and such.\n+   #755 = Utf8               The InnerClasses attribute \\'\n+   #756 = Utf8               \\' is not correctly named \\'InnerClasses\\' but \\'\n+   #757 = Utf8               BootstrapMethods\n+   #758 = MethodHandle       6:#971       // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #759 = MethodType         #972         //  (Ljava/lang/Object;)V\n+   #760 = MethodHandle       7:#973       // REF_invokeSpecial org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n+   #761 = MethodType         #500         //  (Lorg/apache/bcel/classfile/InnerClass;)V\n+   #762 = NameAndType        #974:#975    // accept:(Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n+   #763 = NameAndType        #976:#977    // forEach:(Ljava/util/function/Consumer;)V\n+   #764 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector\n+   #765 = Utf8               InnerClassDetector\n+   #766 = NameAndType        #360:#507    // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;)V\n+   #767 = NameAndType        #978:#942    // innerClassReferenced:()Z\n+   #768 = Utf8               org/apache/bcel/classfile/SourceFile\n+   #769 = Utf8               org/apache/bcel/classfile/InnerClasses\n+   #770 = Utf8               \\' as an attribute of the ClassFile structure \\'\n+   #771 = Utf8               A ClassFile structure (like \\'\n+   #772 = Utf8               \\') may have no more than one SourceFile attribute.\n+   #773 = Utf8               A Classfile structure (like \\'\n+   #774 = Utf8               \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). More than one InnerClasses attribute was found.\n+   #775 = Utf8               No referenced Inner Class found, but InnerClasses attribute \\'\n+   #776 = Utf8               \\' found. Strongly suggest removal of that attribute.\n+   #777 = Utf8               \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). No InnerClasses attribute was found.\n+   #778 = Utf8               The LineNumberTable attribute \\'\n+   #779 = Utf8               \\' is not correctly named \\'LineNumberTable\\' but \\'\n+   #780 = NameAndType        #979:#980    // access$500:(Ljava/lang/String;Z)Z\n+   #781 = Utf8               Method \\'\n+   #782 = NameAndType        #981:#931    // getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+   #783 = NameAndType        #982:#983    // getArgumentTypes:(Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n+   #784 = Utf8               \\' used by Method \\'\n+   #785 = Utf8               org/apache/bcel/generic/ArrayType\n+   #786 = NameAndType        #984:#985    // getBasicType:()Lorg/apache/bcel/generic/Type;\n+   #787 = Utf8               org/apache/bcel/generic/ObjectType\n+   #788 = Utf8               \\' has a return type that does not pass verification pass 1: \\'\n+   #789 = Utf8               \\' has an argument type that does not pass verification pass 1: \\'\n+   #790 = Utf8               <clinit>\n+   #791 = Utf8               \\'. Its name resembles the class or interface initialization method which it isn\\'t because of its arguments (==descriptor).\n+   #792 = NameAndType        #986:#942    // isAbstract:()Z\n+   #793 = Utf8               Abstract method \\'\n+   #794 = Utf8               \\' must not have the ACC_FINAL modifier set.\n+   #795 = NameAndType        #987:#942    // isNative:()Z\n+   #796 = Utf8               \\' must not have the ACC_NATIVE modifier set.\n+   #797 = Utf8               \\' must not have the ACC_PRIVATE modifier set.\n+   #798 = Utf8               \\' must not have the ACC_STATIC modifier set.\n+   #799 = NameAndType        #988:#942    // isStrictfp:()Z\n+   #800 = Utf8               \\' must not have the ACC_STRICT modifier set.\n+   #801 = NameAndType        #989:#942    // isSynchronized:()Z\n+   #802 = Utf8               \\' must not have the ACC_SYNCHRONIZED modifier set.\n+   #803 = Utf8               Instance initialization method \\'\n+   #804 = Utf8               \\' must not have any of the ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT modifiers set.\n+   #805 = NameAndType        #990:#868    // getMajor:()I\n+   #806 = Utf8               Interface method \\'\n+   #807 = Utf8               \\' must have exactly one of its ACC_PUBLIC and ACC_PRIVATE modifiers set.\n+   #808 = Utf8               \\' must not have any of the ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED, or ACC_NATIVE modifiers set.\n+   #809 = Utf8               \\' must have the ACC_ABSTRACT modifier set but hasn\\'t!\n+   #810 = Utf8               \\' must not have any of the ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT modifiers set.\n+   #811 = Utf8               \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT set (ignored).\n+   #812 = Utf8               No two methods (like \\'\n+   #813 = Utf8               \\') are allowed have same names and desciptors!\n+   #814 = Utf8               org/apache/bcel/classfile/Code\n+   #815 = Utf8               org/apache/bcel/classfile/ExceptionTable\n+   #816 = Utf8               \\' as an attribute of Method \\'\n+   #817 = Utf8               \\' is neither Code nor Exceptions and is therefore only of use for debuggers and such.\n+   #818 = Utf8               Native or abstract methods like \\'\n+   #819 = Utf8               \\' must not have a Code attribute like \\'\n+   #820 = Utf8               Non-native, non-abstract methods like \\'\n+   #821 = Utf8               \\' must have exactly one Code attribute (found:\n+   #822 = Utf8               ).\n+   #823 = Utf8               The SourceFile attribute \\'\n+   #824 = Utf8               \\' is not correctly named \\'SourceFile\\' but \\'\n+   #825 = NameAndType        #991:#868    // getSourceFileIndex:()I\n+   #826 = Class              #992         // java/util/Locale\n+   #827 = NameAndType        #993:#994    // ENGLISH:Ljava/util/Locale;\n+   #828 = NameAndType        #995:#996    // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #829 = NameAndType        #997:#998    // indexOf:(I)I\n+   #830 = Utf8               .java\n+   #831 = NameAndType        #999:#1000   // lastIndexOf:(Ljava/lang/String;)I\n+   #832 = Utf8               SourceFile attribute \\'\n+   #833 = Utf8               \\' has a funny name: remember not to confuse certain parsers working on javap\\'s output. Also, this name (\\'\n+   #834 = Utf8               \\') is considered an unqualified (simple) file name only.\n+   #835 = Utf8               Synthetic\n+   #836 = Utf8               The Synthetic attribute \\'\n+   #837 = Utf8               \\' is not correctly named \\'Synthetic\\' but \\'\n+   #838 = Class              #1001        // org/apache/bcel/classfile/Unknown\n+   #839 = Utf8               Unknown attribute \\'\n+   #840 = Utf8               \\'. This attribute is not known in any context!\n+   #841 = Class              #1002        // org/apache/bcel/classfile/InnerClass\n+   #842 = NameAndType        #1003:#868   // getInnerClassIndex:()I\n+   #843 = NameAndType        #1004:#868   // getOuterClassIndex:()I\n+   #844 = NameAndType        #1005:#868   // getInnerNameIndex:()I\n+   #845 = NameAndType        #1006:#868   // getInnerAccessFlags:()I\n+   #846 = Utf8               Unknown access flag for inner class \\'\n+   #847 = Utf8               \\' set (InnerClasses attribute \\'\n+   #848 = Utf8               \\').\n+   #849 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n+   #850 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n+   #851 = Utf8               org/apache/bcel/classfile/Constant\n+   #852 = Utf8               java/lang/String\n+   #853 = Utf8               org/apache/bcel/classfile/CodeException\n+   #854 = Utf8               org/apache/bcel/verifier/Verifier\n+   #855 = Utf8               org/apache/bcel/verifier/VerificationResult\n+   #856 = Utf8               org/apache/bcel/classfile/JavaClass\n+   #857 = Utf8               org/apache/bcel/classfile/Attribute\n+   #858 = Utf8               [Lorg/apache/bcel/classfile/LocalVariable;\n+   #859 = Utf8               org/apache/bcel/classfile/LocalVariable\n+   #860 = Utf8               org/apache/bcel/generic/Type\n+   #861 = Utf8               java/lang/Object\n+   #862 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$1\n+   #863 = Utf8               ()V\n+   #864 = Utf8               getConstantPool\n+   #865 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+   #866 = Utf8               org/apache/bcel/classfile/ConstantPool\n+   #867 = Utf8               getLength\n+   #868 = Utf8               ()I\n+   #869 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n+   #870 = Utf8               visit\n+   #871 = Utf8               append\n+   #872 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #873 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #874 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier\n+   #875 = Utf8               access$000\n+   #876 = Utf8               (Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n+   #877 = Utf8               toString\n+   #878 = Utf8               ()Ljava/lang/String;\n+   #879 = Utf8               (Ljava/lang/String;)V\n+   #880 = Utf8               getConstant\n+   #881 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+   #882 = Utf8               java/lang/Class\n+   #883 = Utf8               isInstance\n+   #884 = Utf8               (Ljava/lang/Object;)Z\n+   #885 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #886 = Utf8               getNameIndex\n+   #887 = Utf8               getBytes\n+   #888 = Utf8               equals\n+   #889 = Utf8               predecessor\n+   #890 = Utf8               ()Ljava/lang/Object;\n+   #891 = Utf8               addMessage\n+   #892 = Utf8               getCode\n+   #893 = Utf8               ()[B\n+   #894 = Utf8               getExceptionTable\n+   #895 = Utf8               ()[Lorg/apache/bcel/classfile/CodeException;\n+   #896 = Utf8               getCatchType\n+   #897 = Utf8               org/apache/bcel/classfile/Utility\n+   #898 = Utf8               pathToPackage\n+   #899 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #900 = Utf8               org/apache/bcel/verifier/VerifierFactory\n+   #901 = Utf8               getVerifier\n+   #902 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n+   #903 = Utf8               doPass1\n+   #904 = Utf8               ()Lorg/apache/bcel/verifier/VerificationResult;\n+   #905 = Utf8               VR_OK\n+   #906 = Utf8               org/apache/bcel/Repository\n+   #907 = Utf8               lookupClass\n+   #908 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+   #909 = Utf8               THROWABLE\n+   #910 = Utf8               Lorg/apache/bcel/generic/ObjectType;\n+   #911 = Utf8               getClassName\n+   #912 = Utf8               OBJECT\n+   #913 = Utf8               getSuperclassName\n+   #914 = Utf8               access$100\n+   #915 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n+   #916 = Utf8               getMethods\n+   #917 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n+   #918 = Utf8               getName\n+   #919 = Utf8               access$200\n+   #920 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n+   #921 = Utf8               getMaxLocals\n+   #922 = Utf8               (I)V\n+   #923 = Utf8               getAttributes\n+   #924 = Utf8               ()[Lorg/apache/bcel/classfile/Attribute;\n+   #925 = Utf8               getLocalVariableTable\n+   #926 = Utf8               ()[Lorg/apache/bcel/classfile/LocalVariable;\n+   #927 = Utf8               access$300\n+   #928 = Utf8               (Ljava/lang/String;)Z\n+   #929 = Utf8               getSignatureIndex\n+   #930 = Utf8               getType\n+   #931 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+   #932 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #933 = Utf8               getIndex\n+   #934 = Utf8               LONG\n+   #935 = Utf8               Lorg/apache/bcel/generic/BasicType;\n+   #936 = Utf8               DOUBLE\n+   #937 = Utf8               getStartPC\n+   #938 = Utf8               add\n+   #939 = Utf8               (ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n+   #940 = Utf8               getMessage\n+   #941 = Utf8               isStatic\n+   #942 = Utf8               ()Z\n+   #943 = Utf8               getTag\n+   #944 = Utf8               ()B\n+   #945 = Utf8               org/apache/bcel/classfile/ConstantFieldref\n+   #946 = Utf8               getClassIndex\n+   #947 = Utf8               getNameAndTypeIndex\n+   #948 = Utf8               org/apache/bcel/classfile/ConstantInterfaceMethodref\n+   #949 = Utf8               org/apache/bcel/classfile/ConstantMethodref\n+   #950 = Utf8               getStringIndex\n+   #951 = Utf8               getConstantValueIndex\n+   #952 = Utf8               FLOAT\n+   #953 = Utf8               INT\n+   #954 = Utf8               SHORT\n+   #955 = Utf8               CHAR\n+   #956 = Utf8               BYTE\n+   #957 = Utf8               BOOLEAN\n+   #958 = Utf8               STRING\n+   #959 = Utf8               getExceptionIndexTable\n+   #960 = Utf8               ()[I\n+   #961 = Utf8               isClass\n+   #962 = Utf8               isPrivate\n+   #963 = Utf8               isProtected\n+   #964 = Utf8               isPublic\n+   #965 = Utf8               isFinal\n+   #966 = Utf8               isVolatile\n+   #967 = Utf8               getAccessFlags\n+   #968 = Utf8               access$400\n+   #969 = Utf8               java/util/Set\n+   #970 = Utf8               contains\n+   #971 = Methodref          #1007.#1008  // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #972 = Utf8               (Ljava/lang/Object;)V\n+   #973 = Methodref          #332.#1009   // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n+   #974 = Utf8               accept\n+   #975 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n+   #976 = Utf8               forEach\n+   #977 = Utf8               (Ljava/util/function/Consumer;)V\n+   #978 = Utf8               innerClassReferenced\n+   #979 = Utf8               access$500\n+   #980 = Utf8               (Ljava/lang/String;Z)Z\n+   #981 = Utf8               getReturnType\n+   #982 = Utf8               getArgumentTypes\n+   #983 = Utf8               (Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n+   #984 = Utf8               getBasicType\n+   #985 = Utf8               ()Lorg/apache/bcel/generic/Type;\n+   #986 = Utf8               isAbstract\n+   #987 = Utf8               isNative\n+   #988 = Utf8               isStrictfp\n+   #989 = Utf8               isSynchronized\n+   #990 = Utf8               getMajor\n+   #991 = Utf8               getSourceFileIndex\n+   #992 = Utf8               java/util/Locale\n+   #993 = Utf8               ENGLISH\n+   #994 = Utf8               Ljava/util/Locale;\n+   #995 = Utf8               toLowerCase\n+   #996 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+   #997 = Utf8               indexOf\n+   #998 = Utf8               (I)I\n+   #999 = Utf8               lastIndexOf\n+  #1000 = Utf8               (Ljava/lang/String;)I\n+  #1001 = Utf8               org/apache/bcel/classfile/Unknown\n+  #1002 = Utf8               org/apache/bcel/classfile/InnerClass\n+  #1003 = Utf8               getInnerClassIndex\n+  #1004 = Utf8               getOuterClassIndex\n+  #1005 = Utf8               getInnerNameIndex\n+  #1006 = Utf8               getInnerAccessFlags\n+  #1007 = Class              #1010        // java/lang/invoke/LambdaMetafactory\n+  #1008 = NameAndType        #1011:#1014  // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #1009 = NameAndType        #540:#541    // lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n+  #1010 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #1011 = Utf8               metafactory\n+  #1012 = Class              #1016        // java/lang/invoke/MethodHandles$Lookup\n+  #1013 = Utf8               Lookup\n+  #1014 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #1015 = Class              #1017        // java/lang/invoke/MethodHandles\n+  #1016 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #1017 = Utf8               java/lang/invoke/MethodHandles\n {\n   private final java.lang.Class<?> CONST_Class;\n     descriptor: Ljava/lang/Class;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #337                         // Ljava/lang/Class<*>;\n \n   private final java.lang.Class<?> CONST_String;\n@@ -5425,17 +5407,17 @@\n             0       7     0  this   Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;\n             0       7     1    x0   Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n             0       7     2    x1   Lorg/apache/bcel/classfile/JavaClass;\n             0       7     3    x2   Lorg/apache/bcel/verifier/statics/Pass2Verifier$1;\n }\n SourceFile: \"Pass2Verifier.java\"\n InnerClasses:\n-  private final #366= #332 of #605;       // CPESSC_Visitor=class org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor of class org/apache/bcel/verifier/statics/Pass2Verifier\n-  static #557;                            // class org/apache/bcel/verifier/statics/Pass2Verifier$1\n-  private static #783= #236 of #605;      // InnerClassDetector=class org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector of class org/apache/bcel/verifier/statics/Pass2Verifier\n-  public static final #1031= #1030 of #1033; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  private final #366= #332 of #593;       // CPESSC_Visitor=class org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor of class org/apache/bcel/verifier/statics/Pass2Verifier\n+  static #546;                            // class org/apache/bcel/verifier/statics/Pass2Verifier$1\n+  private static #765= #236 of #593;      // InnerClassDetector=class org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector of class org/apache/bcel/verifier/statics/Pass2Verifier\n+  public static final #1013= #1012 of #1015; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #776 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #758 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #777 (Ljava/lang/Object;)V\n-      #778 REF_invokeSpecial org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n-      #779 (Lorg/apache/bcel/classfile/InnerClass;)V\n+      #759 (Ljava/lang/Object;)V\n+      #760 REF_invokeSpecial org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n+      #761 (Lorg/apache/bcel/classfile/InnerClass;)V\n"}]}
