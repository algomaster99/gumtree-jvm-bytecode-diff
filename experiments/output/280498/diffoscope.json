{"diffoscope-json-version": 1, "source1": "first/ReloadingMultiFileConfigurationBuilder.class", "source2": "second/ReloadingMultiFileConfigurationBuilder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,46 +1,44 @@\n \n package org.apache.commons.configuration2.builder.combined;\n \n-import java.util.Set;\n import java.util.Collection;\n import java.util.Collections;\n import org.apache.commons.configuration2.ex.ConfigurationException;\n import org.apache.commons.configuration2.builder.ReloadingFileBasedConfigurationBuilder;\n import org.apache.commons.configuration2.builder.FileBasedConfigurationBuilder;\n import java.util.Map;\n import org.apache.commons.configuration2.reloading.ReloadingController;\n import org.apache.commons.configuration2.reloading.ReloadingControllerSupport;\n import org.apache.commons.configuration2.FileBasedConfiguration;\n \n public class ReloadingMultiFileConfigurationBuilder<T extends FileBasedConfiguration> extends MultiFileConfigurationBuilder<T> implements ReloadingControllerSupport\n {\n     private final ReloadingController reloadingController;\n     \n-    public ReloadingMultiFileConfigurationBuilder(final Class<T> resCls, final Map<String, Object> params, final boolean allowFailOnInit) {\n-        super((Class)resCls, (Map)params, allowFailOnInit);\n+    public ReloadingMultiFileConfigurationBuilder(final Class<T> clazz, final Map<String, Object> map, final boolean b) {\n+        super((Class)clazz, (Map)map, b);\n         this.reloadingController = this.createReloadingController();\n     }\n     \n-    public ReloadingMultiFileConfigurationBuilder(final Class<T> resCls, final Map<String, Object> params) {\n-        super((Class)resCls, (Map)params);\n+    public ReloadingMultiFileConfigurationBuilder(final Class<T> clazz, final Map<String, Object> map) {\n+        super((Class)clazz, (Map)map);\n         this.reloadingController = this.createReloadingController();\n     }\n     \n-    public ReloadingMultiFileConfigurationBuilder(final Class<T> resCls) {\n-        super((Class)resCls);\n+    public ReloadingMultiFileConfigurationBuilder(final Class<T> clazz) {\n+        super((Class)clazz);\n         this.reloadingController = this.createReloadingController();\n     }\n     \n     public ReloadingController getReloadingController() {\n         return this.reloadingController;\n     }\n     \n-    protected FileBasedConfigurationBuilder<T> createManagedBuilder(final String fileName, final Map<String, Object> params) throws ConfigurationException {\n-        return (FileBasedConfigurationBuilder<T>)new ReloadingFileBasedConfigurationBuilder(this.getResultClass(), (Map)params, this.isAllowFailOnInit());\n+    protected FileBasedConfigurationBuilder<T> createManagedBuilder(final String s, final Map<String, Object> map) throws ConfigurationException {\n+        return (FileBasedConfigurationBuilder<T>)new ReloadingFileBasedConfigurationBuilder(this.getResultClass(), (Map)map, this.isAllowFailOnInit());\n     }\n     \n     private ReloadingController createReloadingController() {\n-        final Set<ReloadingController> empty = Collections.emptySet();\n-        return (ReloadingController)new ReloadingMultiFileConfigurationBuilder.ReloadingMultiFileConfigurationBuilder$1(this, (Collection)empty);\n+        return (ReloadingController)new ReloadingMultiFileConfigurationBuilder.ReloadingMultiFileConfigurationBuilder$1(this, (Collection)Collections.emptySet());\n     }\n }\n"}]}
