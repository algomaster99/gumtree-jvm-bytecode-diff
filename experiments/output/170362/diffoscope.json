{"diffoscope-json-version": 1, "source1": "first/HTTP.class", "source2": "second/HTTP.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,60 +1,60 @@\n-  SHA-256 checksum 8bc00711ffcd1b55570a085147976ddd11e64c507df751cfbaccfb20809411ea\n+  SHA-256 checksum 3f3ebe84635087eff2c6430772441dd8e8671f2e9e612dc40ebd8e8da0e55d52\n   Compiled from \"HTTP.java\"\n public class org.json.HTTP\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #30                         // org/json/HTTP\n   super_class: #43                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 3, attributes: 1\n Constant pool:\n-    #1 = Methodref          #43.#78       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #79           // org/json/JSONObject\n-    #3 = Methodref          #2.#78        // org/json/JSONObject.\"<init>\":()V\n-    #4 = Class              #80           // org/json/HTTPTokener\n-    #5 = Methodref          #4.#81        // org/json/HTTPTokener.\"<init>\":(Ljava/lang/String;)V\n-    #6 = Methodref          #4.#82        // org/json/HTTPTokener.nextToken:()Ljava/lang/String;\n-    #7 = Fieldref           #83.#84       // java/util/Locale.ROOT:Ljava/util/Locale;\n-    #8 = Methodref          #36.#85       // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-    #9 = String             #86           // HTTP\n-   #10 = Methodref          #36.#87       // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #11 = String             #88           // HTTP-Version\n-   #12 = Methodref          #2.#89        // org/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-   #13 = String             #90           // Status-Code\n-   #14 = String             #91           // Reason-Phrase\n-   #15 = Methodref          #4.#92        // org/json/HTTPTokener.nextTo:(C)Ljava/lang/String;\n-   #16 = Methodref          #4.#93        // org/json/HTTPTokener.next:()C\n-   #17 = String             #94           // Method\n-   #18 = String             #95           // Request-URI\n-   #19 = Methodref          #4.#96        // org/json/HTTPTokener.more:()Z\n-   #20 = Methodref          #4.#97        // org/json/HTTPTokener.next:(C)C\n-   #21 = Class              #98           // java/lang/StringBuilder\n-   #22 = Methodref          #21.#78       // java/lang/StringBuilder.\"<init>\":()V\n-   #23 = Methodref          #2.#99        // org/json/JSONObject.has:(Ljava/lang/String;)Z\n-   #24 = Methodref          #2.#100       // org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;\n-   #25 = Methodref          #21.#101      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #26 = Methodref          #21.#102      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #27 = Class              #103          // org/json/JSONException\n-   #28 = String             #104          // Not enough material for an HTTP header.\n-   #29 = Methodref          #27.#81       // org/json/JSONException.\"<init>\":(Ljava/lang/String;)V\n-   #30 = Class              #105          // org/json/HTTP\n-   #31 = String             #106          // \\r\\n\n-   #32 = Methodref          #2.#107       // org/json/JSONObject.keySet:()Ljava/util/Set;\n-   #33 = InterfaceMethodref #108.#109     // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #34 = InterfaceMethodref #110.#111     // java/util/Iterator.hasNext:()Z\n-   #35 = InterfaceMethodref #110.#112     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #36 = Class              #113          // java/lang/String\n-   #37 = Methodref          #2.#114       // org/json/JSONObject.optString:(Ljava/lang/String;)Ljava/lang/String;\n-   #38 = Methodref          #36.#115      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #39 = Fieldref           #2.#116       // org/json/JSONObject.NULL:Ljava/lang/Object;\n-   #40 = Methodref          #43.#115      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #41 = String             #117          // :\n-   #42 = Methodref          #21.#118      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #43 = Class              #119          // java/lang/Object\n+    #1 = Methodref          #43.#74       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #75           // org/json/JSONObject\n+    #3 = Methodref          #2.#74        // org/json/JSONObject.\"<init>\":()V\n+    #4 = Class              #76           // org/json/HTTPTokener\n+    #5 = Methodref          #4.#77        // org/json/HTTPTokener.\"<init>\":(Ljava/lang/String;)V\n+    #6 = Methodref          #4.#78        // org/json/HTTPTokener.nextToken:()Ljava/lang/String;\n+    #7 = Fieldref           #79.#80       // java/util/Locale.ROOT:Ljava/util/Locale;\n+    #8 = Methodref          #36.#81       // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+    #9 = String             #82           // HTTP\n+   #10 = Methodref          #36.#83       // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #11 = String             #84           // HTTP-Version\n+   #12 = Methodref          #2.#85        // org/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+   #13 = String             #86           // Status-Code\n+   #14 = String             #87           // Reason-Phrase\n+   #15 = Methodref          #4.#88        // org/json/HTTPTokener.nextTo:(C)Ljava/lang/String;\n+   #16 = Methodref          #4.#89        // org/json/HTTPTokener.next:()C\n+   #17 = String             #90           // Method\n+   #18 = String             #91           // Request-URI\n+   #19 = Methodref          #4.#92        // org/json/HTTPTokener.more:()Z\n+   #20 = Methodref          #4.#93        // org/json/HTTPTokener.next:(C)C\n+   #21 = Class              #94           // java/lang/StringBuilder\n+   #22 = Methodref          #21.#74       // java/lang/StringBuilder.\"<init>\":()V\n+   #23 = Methodref          #2.#95        // org/json/JSONObject.has:(Ljava/lang/String;)Z\n+   #24 = Methodref          #2.#96        // org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;\n+   #25 = Methodref          #21.#97       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #26 = Methodref          #21.#98       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #27 = Class              #99           // org/json/JSONException\n+   #28 = String             #100          // Not enough material for an HTTP header.\n+   #29 = Methodref          #27.#77       // org/json/JSONException.\"<init>\":(Ljava/lang/String;)V\n+   #30 = Class              #101          // org/json/HTTP\n+   #31 = String             #102          // \\r\\n\n+   #32 = Methodref          #2.#103       // org/json/JSONObject.keySet:()Ljava/util/Set;\n+   #33 = InterfaceMethodref #104.#105     // java/util/Set.iterator:()Ljava/util/Iterator;\n+   #34 = InterfaceMethodref #71.#106      // java/util/Iterator.hasNext:()Z\n+   #35 = InterfaceMethodref #71.#107      // java/util/Iterator.next:()Ljava/lang/Object;\n+   #36 = Class              #108          // java/lang/String\n+   #37 = Methodref          #2.#109       // org/json/JSONObject.optString:(Ljava/lang/String;)Ljava/lang/String;\n+   #38 = Methodref          #36.#110      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #39 = Fieldref           #2.#111       // org/json/JSONObject.NULL:Ljava/lang/Object;\n+   #40 = Methodref          #43.#110      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+   #41 = String             #112          // :\n+   #42 = Methodref          #21.#113      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #43 = Class              #114          // java/lang/Object\n    #44 = Utf8               CRLF\n    #45 = Utf8               Ljava/lang/String;\n    #46 = Utf8               ConstantValue\n    #47 = Utf8               <init>\n    #48 = Utf8               ()V\n    #49 = Utf8               Code\n    #50 = Utf8               LineNumberTable\n@@ -67,108 +67,103 @@\n    #57 = Utf8               string\n    #58 = Utf8               jo\n    #59 = Utf8               Lorg/json/JSONObject;\n    #60 = Utf8               x\n    #61 = Utf8               Lorg/json/HTTPTokener;\n    #62 = Utf8               token\n    #63 = Utf8               StackMapTable\n-   #64 = Class              #79           // org/json/JSONObject\n-   #65 = Class              #80           // org/json/HTTPTokener\n-   #66 = Class              #113          // java/lang/String\n-   #67 = Utf8               Exceptions\n-   #68 = Utf8               toString\n-   #69 = Utf8               (Lorg/json/JSONObject;)Ljava/lang/String;\n-   #70 = Utf8               value\n-   #71 = Utf8               key\n-   #72 = Utf8               sb\n-   #73 = Utf8               Ljava/lang/StringBuilder;\n-   #74 = Class              #98           // java/lang/StringBuilder\n-   #75 = Class              #120          // java/util/Iterator\n-   #76 = Utf8               SourceFile\n-   #77 = Utf8               HTTP.java\n-   #78 = NameAndType        #47:#48       // \"<init>\":()V\n-   #79 = Utf8               org/json/JSONObject\n-   #80 = Utf8               org/json/HTTPTokener\n-   #81 = NameAndType        #47:#121      // \"<init>\":(Ljava/lang/String;)V\n-   #82 = NameAndType        #122:#123     // nextToken:()Ljava/lang/String;\n-   #83 = Class              #124          // java/util/Locale\n-   #84 = NameAndType        #125:#126     // ROOT:Ljava/util/Locale;\n-   #85 = NameAndType        #127:#128     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #86 = Utf8               HTTP\n-   #87 = NameAndType        #129:#130     // startsWith:(Ljava/lang/String;)Z\n-   #88 = Utf8               HTTP-Version\n-   #89 = NameAndType        #131:#132     // put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-   #90 = Utf8               Status-Code\n-   #91 = Utf8               Reason-Phrase\n-   #92 = NameAndType        #133:#134     // nextTo:(C)Ljava/lang/String;\n-   #93 = NameAndType        #135:#136     // next:()C\n-   #94 = Utf8               Method\n-   #95 = Utf8               Request-URI\n-   #96 = NameAndType        #137:#138     // more:()Z\n-   #97 = NameAndType        #135:#139     // next:(C)C\n-   #98 = Utf8               java/lang/StringBuilder\n-   #99 = NameAndType        #140:#130     // has:(Ljava/lang/String;)Z\n-  #100 = NameAndType        #141:#142     // getString:(Ljava/lang/String;)Ljava/lang/String;\n-  #101 = NameAndType        #143:#144     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #102 = NameAndType        #143:#145     // append:(C)Ljava/lang/StringBuilder;\n-  #103 = Utf8               org/json/JSONException\n-  #104 = Utf8               Not enough material for an HTTP header.\n-  #105 = Utf8               org/json/HTTP\n-  #106 = Utf8               \\r\\n\n-  #107 = NameAndType        #146:#147     // keySet:()Ljava/util/Set;\n-  #108 = Class              #148          // java/util/Set\n-  #109 = NameAndType        #149:#150     // iterator:()Ljava/util/Iterator;\n-  #110 = Class              #120          // java/util/Iterator\n-  #111 = NameAndType        #151:#138     // hasNext:()Z\n-  #112 = NameAndType        #135:#152     // next:()Ljava/lang/Object;\n-  #113 = Utf8               java/lang/String\n-  #114 = NameAndType        #153:#142     // optString:(Ljava/lang/String;)Ljava/lang/String;\n-  #115 = NameAndType        #154:#155     // equals:(Ljava/lang/Object;)Z\n-  #116 = NameAndType        #156:#157     // NULL:Ljava/lang/Object;\n-  #117 = Utf8               :\n-  #118 = NameAndType        #68:#123      // toString:()Ljava/lang/String;\n-  #119 = Utf8               java/lang/Object\n-  #120 = Utf8               java/util/Iterator\n-  #121 = Utf8               (Ljava/lang/String;)V\n-  #122 = Utf8               nextToken\n-  #123 = Utf8               ()Ljava/lang/String;\n-  #124 = Utf8               java/util/Locale\n-  #125 = Utf8               ROOT\n-  #126 = Utf8               Ljava/util/Locale;\n-  #127 = Utf8               toUpperCase\n-  #128 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #129 = Utf8               startsWith\n-  #130 = Utf8               (Ljava/lang/String;)Z\n-  #131 = Utf8               put\n-  #132 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-  #133 = Utf8               nextTo\n-  #134 = Utf8               (C)Ljava/lang/String;\n-  #135 = Utf8               next\n-  #136 = Utf8               ()C\n-  #137 = Utf8               more\n-  #138 = Utf8               ()Z\n-  #139 = Utf8               (C)C\n-  #140 = Utf8               has\n-  #141 = Utf8               getString\n-  #142 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #143 = Utf8               append\n-  #144 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #145 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #146 = Utf8               keySet\n-  #147 = Utf8               ()Ljava/util/Set;\n-  #148 = Utf8               java/util/Set\n-  #149 = Utf8               iterator\n-  #150 = Utf8               ()Ljava/util/Iterator;\n-  #151 = Utf8               hasNext\n-  #152 = Utf8               ()Ljava/lang/Object;\n-  #153 = Utf8               optString\n-  #154 = Utf8               equals\n-  #155 = Utf8               (Ljava/lang/Object;)Z\n-  #156 = Utf8               NULL\n-  #157 = Utf8               Ljava/lang/Object;\n+   #64 = Utf8               Exceptions\n+   #65 = Utf8               toString\n+   #66 = Utf8               (Lorg/json/JSONObject;)Ljava/lang/String;\n+   #67 = Utf8               value\n+   #68 = Utf8               key\n+   #69 = Utf8               sb\n+   #70 = Utf8               Ljava/lang/StringBuilder;\n+   #71 = Class              #115          // java/util/Iterator\n+   #72 = Utf8               SourceFile\n+   #73 = Utf8               HTTP.java\n+   #74 = NameAndType        #47:#48       // \"<init>\":()V\n+   #75 = Utf8               org/json/JSONObject\n+   #76 = Utf8               org/json/HTTPTokener\n+   #77 = NameAndType        #47:#116      // \"<init>\":(Ljava/lang/String;)V\n+   #78 = NameAndType        #117:#118     // nextToken:()Ljava/lang/String;\n+   #79 = Class              #119          // java/util/Locale\n+   #80 = NameAndType        #120:#121     // ROOT:Ljava/util/Locale;\n+   #81 = NameAndType        #122:#123     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #82 = Utf8               HTTP\n+   #83 = NameAndType        #124:#125     // startsWith:(Ljava/lang/String;)Z\n+   #84 = Utf8               HTTP-Version\n+   #85 = NameAndType        #126:#127     // put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+   #86 = Utf8               Status-Code\n+   #87 = Utf8               Reason-Phrase\n+   #88 = NameAndType        #128:#129     // nextTo:(C)Ljava/lang/String;\n+   #89 = NameAndType        #130:#131     // next:()C\n+   #90 = Utf8               Method\n+   #91 = Utf8               Request-URI\n+   #92 = NameAndType        #132:#133     // more:()Z\n+   #93 = NameAndType        #130:#134     // next:(C)C\n+   #94 = Utf8               java/lang/StringBuilder\n+   #95 = NameAndType        #135:#125     // has:(Ljava/lang/String;)Z\n+   #96 = NameAndType        #136:#137     // getString:(Ljava/lang/String;)Ljava/lang/String;\n+   #97 = NameAndType        #138:#139     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #98 = NameAndType        #138:#140     // append:(C)Ljava/lang/StringBuilder;\n+   #99 = Utf8               org/json/JSONException\n+  #100 = Utf8               Not enough material for an HTTP header.\n+  #101 = Utf8               org/json/HTTP\n+  #102 = Utf8               \\r\\n\n+  #103 = NameAndType        #141:#142     // keySet:()Ljava/util/Set;\n+  #104 = Class              #143          // java/util/Set\n+  #105 = NameAndType        #144:#145     // iterator:()Ljava/util/Iterator;\n+  #106 = NameAndType        #146:#133     // hasNext:()Z\n+  #107 = NameAndType        #130:#147     // next:()Ljava/lang/Object;\n+  #108 = Utf8               java/lang/String\n+  #109 = NameAndType        #148:#137     // optString:(Ljava/lang/String;)Ljava/lang/String;\n+  #110 = NameAndType        #149:#150     // equals:(Ljava/lang/Object;)Z\n+  #111 = NameAndType        #151:#152     // NULL:Ljava/lang/Object;\n+  #112 = Utf8               :\n+  #113 = NameAndType        #65:#118      // toString:()Ljava/lang/String;\n+  #114 = Utf8               java/lang/Object\n+  #115 = Utf8               java/util/Iterator\n+  #116 = Utf8               (Ljava/lang/String;)V\n+  #117 = Utf8               nextToken\n+  #118 = Utf8               ()Ljava/lang/String;\n+  #119 = Utf8               java/util/Locale\n+  #120 = Utf8               ROOT\n+  #121 = Utf8               Ljava/util/Locale;\n+  #122 = Utf8               toUpperCase\n+  #123 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #124 = Utf8               startsWith\n+  #125 = Utf8               (Ljava/lang/String;)Z\n+  #126 = Utf8               put\n+  #127 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+  #128 = Utf8               nextTo\n+  #129 = Utf8               (C)Ljava/lang/String;\n+  #130 = Utf8               next\n+  #131 = Utf8               ()C\n+  #132 = Utf8               more\n+  #133 = Utf8               ()Z\n+  #134 = Utf8               (C)C\n+  #135 = Utf8               has\n+  #136 = Utf8               getString\n+  #137 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #138 = Utf8               append\n+  #139 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #140 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #141 = Utf8               keySet\n+  #142 = Utf8               ()Ljava/util/Set;\n+  #143 = Utf8               java/util/Set\n+  #144 = Utf8               iterator\n+  #145 = Utf8               ()Ljava/util/Iterator;\n+  #146 = Utf8               hasNext\n+  #147 = Utf8               ()Ljava/lang/Object;\n+  #148 = Utf8               optString\n+  #149 = Utf8               equals\n+  #150 = Utf8               (Ljava/lang/Object;)Z\n+  #151 = Utf8               NULL\n+  #152 = Utf8               Ljava/lang/Object;\n {\n   public static final java.lang.String CRLF = \"\\r\\n\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String \\r\\n\n \n   public org.json.HTTP();\n"}]}
