{"diffoscope-json-version": 1, "source1": "first/TFTP.class", "source2": "second/TFTP.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,154 +1,151 @@\n-  SHA-256 checksum fc9dec709e0dec08182333b8ce3b33338a48be1b5c9b9b26b2c4cb63a5223856\n+  SHA-256 checksum a831d1268f945ed1384c9b7123bf3d2db657ff197c6608d121ab2292e1679bf6\n   Compiled from \"TFTP.java\"\n public class org.apache.commons.net.tftp.TFTP extends org.apache.commons.net.DatagramSocketClient\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #4                          // org/apache/commons/net/tftp/TFTP\n-  super_class: #27                        // org/apache/commons/net/DatagramSocketClient\n+  this_class: #1                          // org/apache/commons/net/tftp/TFTP\n+  super_class: #3                         // org/apache/commons/net/DatagramSocketClient\n   interfaces: 0, fields: 12, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Class              #86           // org/apache/commons/net/tftp/TFTPPacket\n-    #2 = Fieldref           #87.#88       // org/apache/commons/net/tftp/TFTPRequestPacket._modeStrings:[Ljava/lang/String;\n-    #3 = Methodref          #27.#89       // org/apache/commons/net/DatagramSocketClient.\"<init>\":()V\n-    #4 = Class              #90           // org/apache/commons/net/tftp/TFTP\n-    #5 = Methodref          #4.#91        // org/apache/commons/net/tftp/TFTP.setDefaultTimeout:(I)V\n-    #6 = Fieldref           #4.#92        // org/apache/commons/net/tftp/TFTP.receiveBuffer:[B\n-    #7 = Fieldref           #4.#93        // org/apache/commons/net/tftp/TFTP.receiveDatagram:Ljava/net/DatagramPacket;\n-    #8 = Class              #94           // java/net/DatagramPacket\n-    #9 = Methodref          #8.#95        // java/net/DatagramPacket.\"<init>\":([BI)V\n-   #10 = Methodref          #4.#96        // org/apache/commons/net/tftp/TFTP.getSoTimeout:()I\n-   #11 = Methodref          #4.#97        // org/apache/commons/net/tftp/TFTP.setSoTimeout:(I)V\n-   #12 = Fieldref           #4.#98        // org/apache/commons/net/tftp/TFTP._socket_:Ljava/net/DatagramSocket;\n-   #13 = Methodref          #99.#100      // java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V\n-   #14 = Class              #101          // java/net/SocketException\n-   #15 = Class              #102          // java/io/InterruptedIOException\n-   #16 = Methodref          #8.#103       // java/net/DatagramPacket.setData:([B)V\n-   #17 = Methodref          #8.#104       // java/net/DatagramPacket.setLength:(I)V\n-   #18 = Methodref          #1.#105       // org/apache/commons/net/tftp/TFTPPacket.newTFTPPacket:(Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;\n-   #19 = String             #106          // <\n-   #20 = Methodref          #4.#107       // org/apache/commons/net/tftp/TFTP.trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n-   #21 = String             #108          // >\n-   #22 = Fieldref           #4.#109       // org/apache/commons/net/tftp/TFTP.sendDatagram:Ljava/net/DatagramPacket;\n-   #23 = Fieldref           #4.#110       // org/apache/commons/net/tftp/TFTP.sendBuffer:[B\n-   #24 = Methodref          #1.#111       // org/apache/commons/net/tftp/TFTPPacket._newDatagram:(Ljava/net/DatagramPacket;[B)Ljava/net/DatagramPacket;\n-   #25 = Methodref          #99.#112      // java/net/DatagramSocket.send:(Ljava/net/DatagramPacket;)V\n-   #26 = Methodref          #1.#113       // org/apache/commons/net/tftp/TFTPPacket.newDatagram:()Ljava/net/DatagramPacket;\n-   #27 = Class              #114          // org/apache/commons/net/DatagramSocketClient\n-   #28 = Utf8               ASCII_MODE\n-   #29 = Utf8               I\n-   #30 = Utf8               ConstantValue\n-   #31 = Integer            0\n-   #32 = Utf8               NETASCII_MODE\n-   #33 = Utf8               BINARY_MODE\n-   #34 = Integer            1\n-   #35 = Utf8               IMAGE_MODE\n-   #36 = Utf8               OCTET_MODE\n-   #37 = Utf8               DEFAULT_TIMEOUT\n-   #38 = Integer            5000\n-   #39 = Utf8               DEFAULT_PORT\n-   #40 = Integer            69\n-   #41 = Utf8               PACKET_SIZE\n-   #42 = Integer            516\n-   #43 = Utf8               receiveBuffer\n-   #44 = Utf8               [B\n-   #45 = Utf8               receiveDatagram\n-   #46 = Utf8               Ljava/net/DatagramPacket;\n-   #47 = Utf8               sendDatagram\n-   #48 = Utf8               sendBuffer\n-   #49 = Utf8               getModeName\n-   #50 = Utf8               (I)Ljava/lang/String;\n-   #51 = Utf8               Code\n-   #52 = Utf8               LineNumberTable\n-   #53 = Utf8               LocalVariableTable\n-   #54 = Utf8               mode\n-   #55 = Utf8               <init>\n-   #56 = Utf8               ()V\n-   #57 = Utf8               this\n-   #58 = Utf8               Lorg/apache/commons/net/tftp/TFTP;\n-   #59 = Utf8               discardPackets\n-   #60 = Utf8               to\n-   #61 = Utf8               datagram\n-   #62 = Utf8               StackMapTable\n-   #63 = Class              #94           // java/net/DatagramPacket\n-   #64 = Class              #101          // java/net/SocketException\n-   #65 = Class              #102          // java/io/InterruptedIOException\n-   #66 = Utf8               Exceptions\n-   #67 = Class              #115          // java/io/IOException\n-   #68 = Utf8               bufferedReceive\n-   #69 = Utf8               ()Lorg/apache/commons/net/tftp/TFTPPacket;\n-   #70 = Utf8               newTFTPPacket\n-   #71 = Utf8               Lorg/apache/commons/net/tftp/TFTPPacket;\n-   #72 = Class              #116          // org/apache/commons/net/tftp/TFTPPacketException\n-   #73 = Utf8               bufferedSend\n-   #74 = Utf8               (Lorg/apache/commons/net/tftp/TFTPPacket;)V\n-   #75 = Utf8               packet\n-   #76 = Utf8               beginBufferedOps\n-   #77 = Utf8               endBufferedOps\n-   #78 = Utf8               send\n-   #79 = Utf8               receive\n-   #80 = Utf8               trace\n-   #81 = Utf8               (Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n-   #82 = Utf8               direction\n-   #83 = Utf8               Ljava/lang/String;\n-   #84 = Utf8               SourceFile\n-   #85 = Utf8               TFTP.java\n-   #86 = Utf8               org/apache/commons/net/tftp/TFTPPacket\n-   #87 = Class              #117          // org/apache/commons/net/tftp/TFTPRequestPacket\n-   #88 = NameAndType        #118:#119     // _modeStrings:[Ljava/lang/String;\n-   #89 = NameAndType        #55:#56       // \"<init>\":()V\n-   #90 = Utf8               org/apache/commons/net/tftp/TFTP\n-   #91 = NameAndType        #120:#121     // setDefaultTimeout:(I)V\n-   #92 = NameAndType        #43:#44       // receiveBuffer:[B\n-   #93 = NameAndType        #45:#46       // receiveDatagram:Ljava/net/DatagramPacket;\n-   #94 = Utf8               java/net/DatagramPacket\n-   #95 = NameAndType        #55:#122      // \"<init>\":([BI)V\n-   #96 = NameAndType        #123:#124     // getSoTimeout:()I\n-   #97 = NameAndType        #125:#121     // setSoTimeout:(I)V\n-   #98 = NameAndType        #126:#127     // _socket_:Ljava/net/DatagramSocket;\n-   #99 = Class              #128          // java/net/DatagramSocket\n-  #100 = NameAndType        #79:#129      // receive:(Ljava/net/DatagramPacket;)V\n-  #101 = Utf8               java/net/SocketException\n-  #102 = Utf8               java/io/InterruptedIOException\n-  #103 = NameAndType        #130:#131     // setData:([B)V\n-  #104 = NameAndType        #132:#121     // setLength:(I)V\n-  #105 = NameAndType        #70:#133      // newTFTPPacket:(Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;\n-  #106 = Utf8               <\n-  #107 = NameAndType        #80:#81       // trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n-  #108 = Utf8               >\n-  #109 = NameAndType        #47:#46       // sendDatagram:Ljava/net/DatagramPacket;\n-  #110 = NameAndType        #48:#44       // sendBuffer:[B\n-  #111 = NameAndType        #134:#135     // _newDatagram:(Ljava/net/DatagramPacket;[B)Ljava/net/DatagramPacket;\n-  #112 = NameAndType        #78:#129      // send:(Ljava/net/DatagramPacket;)V\n-  #113 = NameAndType        #136:#137     // newDatagram:()Ljava/net/DatagramPacket;\n-  #114 = Utf8               org/apache/commons/net/DatagramSocketClient\n-  #115 = Utf8               java/io/IOException\n-  #116 = Utf8               org/apache/commons/net/tftp/TFTPPacketException\n-  #117 = Utf8               org/apache/commons/net/tftp/TFTPRequestPacket\n-  #118 = Utf8               _modeStrings\n-  #119 = Utf8               [Ljava/lang/String;\n-  #120 = Utf8               setDefaultTimeout\n-  #121 = Utf8               (I)V\n-  #122 = Utf8               ([BI)V\n-  #123 = Utf8               getSoTimeout\n-  #124 = Utf8               ()I\n-  #125 = Utf8               setSoTimeout\n-  #126 = Utf8               _socket_\n-  #127 = Utf8               Ljava/net/DatagramSocket;\n-  #128 = Utf8               java/net/DatagramSocket\n-  #129 = Utf8               (Ljava/net/DatagramPacket;)V\n-  #130 = Utf8               setData\n-  #131 = Utf8               ([B)V\n-  #132 = Utf8               setLength\n-  #133 = Utf8               (Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;\n-  #134 = Utf8               _newDatagram\n-  #135 = Utf8               (Ljava/net/DatagramPacket;[B)Ljava/net/DatagramPacket;\n-  #136 = Utf8               newDatagram\n-  #137 = Utf8               ()Ljava/net/DatagramPacket;\n+    #1 = Class              #2            // org/apache/commons/net/tftp/TFTP\n+    #2 = Utf8               org/apache/commons/net/tftp/TFTP\n+    #3 = Class              #4            // org/apache/commons/net/DatagramSocketClient\n+    #4 = Utf8               org/apache/commons/net/DatagramSocketClient\n+    #5 = Utf8               ASCII_MODE\n+    #6 = Utf8               I\n+    #7 = Utf8               ConstantValue\n+    #8 = Integer            0\n+    #9 = Utf8               NETASCII_MODE\n+   #10 = Utf8               BINARY_MODE\n+   #11 = Integer            1\n+   #12 = Utf8               IMAGE_MODE\n+   #13 = Utf8               OCTET_MODE\n+   #14 = Utf8               DEFAULT_TIMEOUT\n+   #15 = Integer            5000\n+   #16 = Utf8               DEFAULT_PORT\n+   #17 = Integer            69\n+   #18 = Utf8               PACKET_SIZE\n+   #19 = Integer            516\n+   #20 = Utf8               receiveBuffer\n+   #21 = Utf8               [B\n+   #22 = Utf8               receiveDatagram\n+   #23 = Utf8               Ljava/net/DatagramPacket;\n+   #24 = Utf8               sendDatagram\n+   #25 = Utf8               sendBuffer\n+   #26 = Utf8               getModeName\n+   #27 = Utf8               (I)Ljava/lang/String;\n+   #28 = Utf8               Code\n+   #29 = Fieldref           #30.#32       // org/apache/commons/net/tftp/TFTPRequestPacket._modeStrings:[Ljava/lang/String;\n+   #30 = Class              #31           // org/apache/commons/net/tftp/TFTPRequestPacket\n+   #31 = Utf8               org/apache/commons/net/tftp/TFTPRequestPacket\n+   #32 = NameAndType        #33:#34       // _modeStrings:[Ljava/lang/String;\n+   #33 = Utf8               _modeStrings\n+   #34 = Utf8               [Ljava/lang/String;\n+   #35 = Utf8               LineNumberTable\n+   #36 = Utf8               LocalVariableTable\n+   #37 = Utf8               mode\n+   #38 = Utf8               <init>\n+   #39 = Utf8               ()V\n+   #40 = Methodref          #3.#41        // org/apache/commons/net/DatagramSocketClient.\"<init>\":()V\n+   #41 = NameAndType        #38:#39       // \"<init>\":()V\n+   #42 = Methodref          #1.#43        // org/apache/commons/net/tftp/TFTP.setDefaultTimeout:(I)V\n+   #43 = NameAndType        #44:#45       // setDefaultTimeout:(I)V\n+   #44 = Utf8               setDefaultTimeout\n+   #45 = Utf8               (I)V\n+   #46 = Fieldref           #1.#47        // org/apache/commons/net/tftp/TFTP.receiveBuffer:[B\n+   #47 = NameAndType        #20:#21       // receiveBuffer:[B\n+   #48 = Fieldref           #1.#49        // org/apache/commons/net/tftp/TFTP.receiveDatagram:Ljava/net/DatagramPacket;\n+   #49 = NameAndType        #22:#23       // receiveDatagram:Ljava/net/DatagramPacket;\n+   #50 = Utf8               this\n+   #51 = Utf8               Lorg/apache/commons/net/tftp/TFTP;\n+   #52 = Utf8               discardPackets\n+   #53 = Utf8               Exceptions\n+   #54 = Class              #55           // java/io/IOException\n+   #55 = Utf8               java/io/IOException\n+   #56 = Class              #57           // java/net/DatagramPacket\n+   #57 = Utf8               java/net/DatagramPacket\n+   #58 = Methodref          #56.#59       // java/net/DatagramPacket.\"<init>\":([BI)V\n+   #59 = NameAndType        #38:#60       // \"<init>\":([BI)V\n+   #60 = Utf8               ([BI)V\n+   #61 = Methodref          #1.#62        // org/apache/commons/net/tftp/TFTP.getSoTimeout:()I\n+   #62 = NameAndType        #63:#64       // getSoTimeout:()I\n+   #63 = Utf8               getSoTimeout\n+   #64 = Utf8               ()I\n+   #65 = Methodref          #1.#66        // org/apache/commons/net/tftp/TFTP.setSoTimeout:(I)V\n+   #66 = NameAndType        #67:#45       // setSoTimeout:(I)V\n+   #67 = Utf8               setSoTimeout\n+   #68 = Fieldref           #1.#69        // org/apache/commons/net/tftp/TFTP._socket_:Ljava/net/DatagramSocket;\n+   #69 = NameAndType        #70:#71       // _socket_:Ljava/net/DatagramSocket;\n+   #70 = Utf8               _socket_\n+   #71 = Utf8               Ljava/net/DatagramSocket;\n+   #72 = Methodref          #73.#75       // java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V\n+   #73 = Class              #74           // java/net/DatagramSocket\n+   #74 = Utf8               java/net/DatagramSocket\n+   #75 = NameAndType        #76:#77       // receive:(Ljava/net/DatagramPacket;)V\n+   #76 = Utf8               receive\n+   #77 = Utf8               (Ljava/net/DatagramPacket;)V\n+   #78 = Class              #79           // java/net/SocketException\n+   #79 = Utf8               java/net/SocketException\n+   #80 = Class              #81           // java/io/InterruptedIOException\n+   #81 = Utf8               java/io/InterruptedIOException\n+   #82 = Utf8               to\n+   #83 = Utf8               datagram\n+   #84 = Utf8               StackMapTable\n+   #85 = Utf8               bufferedReceive\n+   #86 = Utf8               ()Lorg/apache/commons/net/tftp/TFTPPacket;\n+   #87 = Class              #88           // org/apache/commons/net/tftp/TFTPPacketException\n+   #88 = Utf8               org/apache/commons/net/tftp/TFTPPacketException\n+   #89 = Methodref          #56.#90       // java/net/DatagramPacket.setData:([B)V\n+   #90 = NameAndType        #91:#92       // setData:([B)V\n+   #91 = Utf8               setData\n+   #92 = Utf8               ([B)V\n+   #93 = Methodref          #56.#94       // java/net/DatagramPacket.setLength:(I)V\n+   #94 = NameAndType        #95:#45       // setLength:(I)V\n+   #95 = Utf8               setLength\n+   #96 = Methodref          #97.#99       // org/apache/commons/net/tftp/TFTPPacket.newTFTPPacket:(Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;\n+   #97 = Class              #98           // org/apache/commons/net/tftp/TFTPPacket\n+   #98 = Utf8               org/apache/commons/net/tftp/TFTPPacket\n+   #99 = NameAndType        #100:#101     // newTFTPPacket:(Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;\n+  #100 = Utf8               newTFTPPacket\n+  #101 = Utf8               (Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;\n+  #102 = String             #103          // <\n+  #103 = Utf8               <\n+  #104 = Methodref          #1.#105       // org/apache/commons/net/tftp/TFTP.trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n+  #105 = NameAndType        #106:#107     // trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n+  #106 = Utf8               trace\n+  #107 = Utf8               (Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n+  #108 = Utf8               Lorg/apache/commons/net/tftp/TFTPPacket;\n+  #109 = Utf8               bufferedSend\n+  #110 = Utf8               (Lorg/apache/commons/net/tftp/TFTPPacket;)V\n+  #111 = String             #112          // >\n+  #112 = Utf8               >\n+  #113 = Fieldref           #1.#114       // org/apache/commons/net/tftp/TFTP.sendDatagram:Ljava/net/DatagramPacket;\n+  #114 = NameAndType        #24:#23       // sendDatagram:Ljava/net/DatagramPacket;\n+  #115 = Fieldref           #1.#116       // org/apache/commons/net/tftp/TFTP.sendBuffer:[B\n+  #116 = NameAndType        #25:#21       // sendBuffer:[B\n+  #117 = Methodref          #97.#118      // org/apache/commons/net/tftp/TFTPPacket._newDatagram:(Ljava/net/DatagramPacket;[B)Ljava/net/DatagramPacket;\n+  #118 = NameAndType        #119:#120     // _newDatagram:(Ljava/net/DatagramPacket;[B)Ljava/net/DatagramPacket;\n+  #119 = Utf8               _newDatagram\n+  #120 = Utf8               (Ljava/net/DatagramPacket;[B)Ljava/net/DatagramPacket;\n+  #121 = Methodref          #73.#122      // java/net/DatagramSocket.send:(Ljava/net/DatagramPacket;)V\n+  #122 = NameAndType        #123:#77      // send:(Ljava/net/DatagramPacket;)V\n+  #123 = Utf8               send\n+  #124 = Utf8               packet\n+  #125 = Utf8               beginBufferedOps\n+  #126 = Utf8               endBufferedOps\n+  #127 = Methodref          #97.#128      // org/apache/commons/net/tftp/TFTPPacket.newDatagram:()Ljava/net/DatagramPacket;\n+  #128 = NameAndType        #129:#130     // newDatagram:()Ljava/net/DatagramPacket;\n+  #129 = Utf8               newDatagram\n+  #130 = Utf8               ()Ljava/net/DatagramPacket;\n+  #131 = Utf8               direction\n+  #132 = Utf8               Ljava/lang/String;\n+  #133 = Utf8               SourceFile\n+  #134 = Utf8               TFTP.java\n {\n   public static final int ASCII_MODE = 0;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 0\n \n   public static final int NETASCII_MODE = 0;\n@@ -203,15 +200,15 @@\n     flags: (0x0000)\n \n   public static final java.lang.String getModeName(int);\n     descriptor: (I)Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: getstatic     #2                  // Field org/apache/commons/net/tftp/TFTPRequestPacket._modeStrings:[Ljava/lang/String;\n+         0: getstatic     #29                 // Field org/apache/commons/net/tftp/TFTPRequestPacket._modeStrings:[Ljava/lang/String;\n          3: iload_0\n          4: aaload\n          5: areturn\n       LineNumberTable:\n         line 120: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -219,76 +216,78 @@\n \n   public org.apache.commons.net.tftp.TFTP();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #3                  // Method org/apache/commons/net/DatagramSocketClient.\"<init>\":()V\n+         1: invokespecial #40                 // Method org/apache/commons/net/DatagramSocketClient.\"<init>\":()V\n          4: aload_0\n          5: sipush        5000\n-         8: invokevirtual #5                  // Method setDefaultTimeout:(I)V\n+         8: invokevirtual #42                 // Method setDefaultTimeout:(I)V\n         11: aload_0\n         12: aconst_null\n-        13: putfield      #6                  // Field receiveBuffer:[B\n+        13: putfield      #46                 // Field receiveBuffer:[B\n         16: aload_0\n         17: aconst_null\n-        18: putfield      #7                  // Field receiveDatagram:Ljava/net/DatagramPacket;\n+        18: putfield      #48                 // Field receiveDatagram:Ljava/net/DatagramPacket;\n         21: return\n       LineNumberTable:\n-        line 128: 0\n+        line 127: 0\n         line 129: 4\n         line 130: 11\n         line 131: 16\n         line 132: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/net/tftp/TFTP;\n \n   public final void discardPackets() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n-      stack=4, locals=4, args_size=1\n-         0: new           #8                  // class java/net/DatagramPacket\n+      stack=4, locals=3, args_size=1\n+         0: new           #56                 // class java/net/DatagramPacket\n          3: dup\n          4: sipush        516\n          7: newarray       byte\n          9: sipush        516\n-        12: invokespecial #9                  // Method java/net/DatagramPacket.\"<init>\":([BI)V\n+        12: invokespecial #58                 // Method java/net/DatagramPacket.\"<init>\":([BI)V\n         15: astore_2\n         16: aload_0\n-        17: invokevirtual #10                 // Method getSoTimeout:()I\n+        17: invokevirtual #61                 // Method getSoTimeout:()I\n         20: istore_1\n         21: aload_0\n         22: iconst_1\n-        23: invokevirtual #11                 // Method setSoTimeout:(I)V\n+        23: invokevirtual #65                 // Method setSoTimeout:(I)V\n         26: aload_0\n-        27: getfield      #12                 // Field _socket_:Ljava/net/DatagramSocket;\n+        27: getfield      #68                 // Field _socket_:Ljava/net/DatagramSocket;\n         30: aload_2\n-        31: invokevirtual #13                 // Method java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V\n+        31: invokevirtual #72                 // Method java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V\n         34: goto          26\n-        37: astore_3\n+        37: pop\n         38: goto          42\n-        41: astore_3\n+        41: pop\n         42: aload_0\n         43: iload_1\n-        44: invokevirtual #11                 // Method setSoTimeout:(I)V\n+        44: invokevirtual #65                 // Method setSoTimeout:(I)V\n         47: return\n       Exception table:\n          from    to  target type\n             26    37    37   Class java/net/SocketException\n             26    37    41   Class java/io/InterruptedIOException\n       LineNumberTable:\n         line 146: 0\n         line 148: 16\n         line 149: 21\n         line 154: 26\n+        line 153: 34\n         line 157: 37\n-        line 164: 38\n         line 161: 41\n         line 166: 42\n         line 167: 47\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      48     0  this   Lorg/apache/commons/net/tftp/TFTP;\n            21      27     1    to   I\n@@ -298,228 +297,230 @@\n           offset_delta = 26\n           locals = [ int, class java/net/DatagramPacket ]\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/net/SocketException ]\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/io/InterruptedIOException ]\n         frame_type = 0 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public final org.apache.commons.net.tftp.TFTPPacket bufferedReceive() throws java.io.IOException, java.io.InterruptedIOException, java.net.SocketException, org.apache.commons.net.tftp.TFTPPacketException;\n     descriptor: ()Lorg/apache/commons/net/tftp/TFTPPacket;\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n+    Exceptions:\n+      throws java.io.IOException, java.io.InterruptedIOException, java.net.SocketException, org.apache.commons.net.tftp.TFTPPacketException\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field receiveDatagram:Ljava/net/DatagramPacket;\n+         1: getfield      #48                 // Field receiveDatagram:Ljava/net/DatagramPacket;\n          4: aload_0\n-         5: getfield      #6                  // Field receiveBuffer:[B\n-         8: invokevirtual #16                 // Method java/net/DatagramPacket.setData:([B)V\n+         5: getfield      #46                 // Field receiveBuffer:[B\n+         8: invokevirtual #89                 // Method java/net/DatagramPacket.setData:([B)V\n         11: aload_0\n-        12: getfield      #7                  // Field receiveDatagram:Ljava/net/DatagramPacket;\n+        12: getfield      #48                 // Field receiveDatagram:Ljava/net/DatagramPacket;\n         15: aload_0\n-        16: getfield      #6                  // Field receiveBuffer:[B\n+        16: getfield      #46                 // Field receiveBuffer:[B\n         19: arraylength\n-        20: invokevirtual #17                 // Method java/net/DatagramPacket.setLength:(I)V\n+        20: invokevirtual #93                 // Method java/net/DatagramPacket.setLength:(I)V\n         23: aload_0\n-        24: getfield      #12                 // Field _socket_:Ljava/net/DatagramSocket;\n+        24: getfield      #68                 // Field _socket_:Ljava/net/DatagramSocket;\n         27: aload_0\n-        28: getfield      #7                  // Field receiveDatagram:Ljava/net/DatagramPacket;\n-        31: invokevirtual #13                 // Method java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V\n+        28: getfield      #48                 // Field receiveDatagram:Ljava/net/DatagramPacket;\n+        31: invokevirtual #72                 // Method java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V\n         34: aload_0\n-        35: getfield      #7                  // Field receiveDatagram:Ljava/net/DatagramPacket;\n-        38: invokestatic  #18                 // Method org/apache/commons/net/tftp/TFTPPacket.newTFTPPacket:(Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;\n+        35: getfield      #48                 // Field receiveDatagram:Ljava/net/DatagramPacket;\n+        38: invokestatic  #96                 // Method org/apache/commons/net/tftp/TFTPPacket.newTFTPPacket:(Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;\n         41: astore_1\n         42: aload_0\n-        43: ldc           #19                 // String <\n+        43: ldc           #102                // String <\n         45: aload_1\n-        46: invokevirtual #20                 // Method trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n+        46: invokevirtual #104                // Method trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n         49: aload_1\n         50: areturn\n       LineNumberTable:\n         line 200: 0\n         line 201: 11\n         line 202: 23\n         line 204: 34\n         line 205: 42\n         line 206: 49\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      51     0  this   Lorg/apache/commons/net/tftp/TFTP;\n            42       9     1 newTFTPPacket   Lorg/apache/commons/net/tftp/TFTPPacket;\n-    Exceptions:\n-      throws java.io.IOException, java.io.InterruptedIOException, java.net.SocketException, org.apache.commons.net.tftp.TFTPPacketException\n \n   public final void bufferedSend(org.apache.commons.net.tftp.TFTPPacket) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/net/tftp/TFTPPacket;)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #21                 // String >\n+         1: ldc           #111                // String >\n          3: aload_1\n-         4: invokevirtual #20                 // Method trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n+         4: invokevirtual #104                // Method trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n          7: aload_0\n-         8: getfield      #12                 // Field _socket_:Ljava/net/DatagramSocket;\n+         8: getfield      #68                 // Field _socket_:Ljava/net/DatagramSocket;\n         11: aload_1\n         12: aload_0\n-        13: getfield      #22                 // Field sendDatagram:Ljava/net/DatagramPacket;\n+        13: getfield      #113                // Field sendDatagram:Ljava/net/DatagramPacket;\n         16: aload_0\n-        17: getfield      #23                 // Field sendBuffer:[B\n-        20: invokevirtual #24                 // Method org/apache/commons/net/tftp/TFTPPacket._newDatagram:(Ljava/net/DatagramPacket;[B)Ljava/net/DatagramPacket;\n-        23: invokevirtual #25                 // Method java/net/DatagramSocket.send:(Ljava/net/DatagramPacket;)V\n+        17: getfield      #115                // Field sendBuffer:[B\n+        20: invokevirtual #117                // Method org/apache/commons/net/tftp/TFTPPacket._newDatagram:(Ljava/net/DatagramPacket;[B)Ljava/net/DatagramPacket;\n+        23: invokevirtual #121                // Method java/net/DatagramSocket.send:(Ljava/net/DatagramPacket;)V\n         26: return\n       LineNumberTable:\n         line 229: 0\n         line 230: 7\n         line 231: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      27     0  this   Lorg/apache/commons/net/tftp/TFTP;\n             0      27     1 packet   Lorg/apache/commons/net/tftp/TFTPPacket;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public final void beginBufferedOps();\n     descriptor: ()V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: sipush        516\n          4: newarray       byte\n-         6: putfield      #6                  // Field receiveBuffer:[B\n+         6: putfield      #46                 // Field receiveBuffer:[B\n          9: aload_0\n-        10: new           #8                  // class java/net/DatagramPacket\n+        10: new           #56                 // class java/net/DatagramPacket\n         13: dup\n         14: aload_0\n-        15: getfield      #6                  // Field receiveBuffer:[B\n+        15: getfield      #46                 // Field receiveBuffer:[B\n         18: aload_0\n-        19: getfield      #6                  // Field receiveBuffer:[B\n+        19: getfield      #46                 // Field receiveBuffer:[B\n         22: arraylength\n-        23: invokespecial #9                  // Method java/net/DatagramPacket.\"<init>\":([BI)V\n-        26: putfield      #7                  // Field receiveDatagram:Ljava/net/DatagramPacket;\n+        23: invokespecial #58                 // Method java/net/DatagramPacket.\"<init>\":([BI)V\n+        26: putfield      #48                 // Field receiveDatagram:Ljava/net/DatagramPacket;\n         29: aload_0\n         30: sipush        516\n         33: newarray       byte\n-        35: putfield      #23                 // Field sendBuffer:[B\n+        35: putfield      #115                // Field sendBuffer:[B\n         38: aload_0\n-        39: new           #8                  // class java/net/DatagramPacket\n+        39: new           #56                 // class java/net/DatagramPacket\n         42: dup\n         43: aload_0\n-        44: getfield      #23                 // Field sendBuffer:[B\n+        44: getfield      #115                // Field sendBuffer:[B\n         47: aload_0\n-        48: getfield      #23                 // Field sendBuffer:[B\n+        48: getfield      #115                // Field sendBuffer:[B\n         51: arraylength\n-        52: invokespecial #9                  // Method java/net/DatagramPacket.\"<init>\":([BI)V\n-        55: putfield      #22                 // Field sendDatagram:Ljava/net/DatagramPacket;\n+        52: invokespecial #58                 // Method java/net/DatagramPacket.\"<init>\":([BI)V\n+        55: putfield      #113                // Field sendDatagram:Ljava/net/DatagramPacket;\n         58: return\n       LineNumberTable:\n         line 244: 0\n         line 245: 9\n+        line 246: 10\n+        line 245: 26\n         line 247: 29\n         line 248: 38\n+        line 249: 39\n+        line 248: 55\n         line 250: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      59     0  this   Lorg/apache/commons/net/tftp/TFTP;\n \n   public final void endBufferedOps();\n     descriptor: ()V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: putfield      #6                  // Field receiveBuffer:[B\n+         2: putfield      #46                 // Field receiveBuffer:[B\n          5: aload_0\n          6: aconst_null\n-         7: putfield      #7                  // Field receiveDatagram:Ljava/net/DatagramPacket;\n+         7: putfield      #48                 // Field receiveDatagram:Ljava/net/DatagramPacket;\n         10: aload_0\n         11: aconst_null\n-        12: putfield      #23                 // Field sendBuffer:[B\n+        12: putfield      #115                // Field sendBuffer:[B\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #22                 // Field sendDatagram:Ljava/net/DatagramPacket;\n+        17: putfield      #113                // Field sendDatagram:Ljava/net/DatagramPacket;\n         20: return\n       LineNumberTable:\n         line 257: 0\n         line 258: 5\n         line 259: 10\n         line 260: 15\n         line 261: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/net/tftp/TFTP;\n \n   public final void send(org.apache.commons.net.tftp.TFTPPacket) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/net/tftp/TFTPPacket;)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #21                 // String >\n+         1: ldc           #111                // String >\n          3: aload_1\n-         4: invokevirtual #20                 // Method trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n+         4: invokevirtual #104                // Method trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n          7: aload_0\n-         8: getfield      #12                 // Field _socket_:Ljava/net/DatagramSocket;\n+         8: getfield      #68                 // Field _socket_:Ljava/net/DatagramSocket;\n         11: aload_1\n-        12: invokevirtual #26                 // Method org/apache/commons/net/tftp/TFTPPacket.newDatagram:()Ljava/net/DatagramPacket;\n-        15: invokevirtual #25                 // Method java/net/DatagramSocket.send:(Ljava/net/DatagramPacket;)V\n+        12: invokevirtual #127                // Method org/apache/commons/net/tftp/TFTPPacket.newDatagram:()Ljava/net/DatagramPacket;\n+        15: invokevirtual #121                // Method java/net/DatagramSocket.send:(Ljava/net/DatagramPacket;)V\n         18: return\n       LineNumberTable:\n         line 272: 0\n         line 273: 7\n         line 274: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/net/tftp/TFTP;\n             0      19     1 packet   Lorg/apache/commons/net/tftp/TFTPPacket;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public final org.apache.commons.net.tftp.TFTPPacket receive() throws java.io.IOException, java.io.InterruptedIOException, java.net.SocketException, org.apache.commons.net.tftp.TFTPPacketException;\n     descriptor: ()Lorg/apache/commons/net/tftp/TFTPPacket;\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n+    Exceptions:\n+      throws java.io.IOException, java.io.InterruptedIOException, java.net.SocketException, org.apache.commons.net.tftp.TFTPPacketException\n     Code:\n       stack=4, locals=3, args_size=1\n-         0: new           #8                  // class java/net/DatagramPacket\n+         0: new           #56                 // class java/net/DatagramPacket\n          3: dup\n          4: sipush        516\n          7: newarray       byte\n          9: sipush        516\n-        12: invokespecial #9                  // Method java/net/DatagramPacket.\"<init>\":([BI)V\n+        12: invokespecial #58                 // Method java/net/DatagramPacket.\"<init>\":([BI)V\n         15: astore_1\n         16: aload_0\n-        17: getfield      #12                 // Field _socket_:Ljava/net/DatagramSocket;\n+        17: getfield      #68                 // Field _socket_:Ljava/net/DatagramSocket;\n         20: aload_1\n-        21: invokevirtual #13                 // Method java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V\n+        21: invokevirtual #72                 // Method java/net/DatagramSocket.receive:(Ljava/net/DatagramPacket;)V\n         24: aload_1\n-        25: invokestatic  #18                 // Method org/apache/commons/net/tftp/TFTPPacket.newTFTPPacket:(Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;\n+        25: invokestatic  #96                 // Method org/apache/commons/net/tftp/TFTPPacket.newTFTPPacket:(Ljava/net/DatagramPacket;)Lorg/apache/commons/net/tftp/TFTPPacket;\n         28: astore_2\n         29: aload_0\n-        30: ldc           #19                 // String <\n+        30: ldc           #102                // String <\n         32: aload_2\n-        33: invokevirtual #20                 // Method trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n+        33: invokevirtual #104                // Method trace:(Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n         36: aload_2\n         37: areturn\n       LineNumberTable:\n         line 297: 0\n         line 299: 16\n         line 301: 24\n         line 302: 29\n         line 303: 36\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      38     0  this   Lorg/apache/commons/net/tftp/TFTP;\n            16      22     1 packet   Ljava/net/DatagramPacket;\n            29       9     2 newTFTPPacket   Lorg/apache/commons/net/tftp/TFTPPacket;\n-    Exceptions:\n-      throws java.io.IOException, java.io.InterruptedIOException, java.net.SocketException, org.apache.commons.net.tftp.TFTPPacketException\n \n   protected void trace(java.lang.String, org.apache.commons.net.tftp.TFTPPacket);\n     descriptor: (Ljava/lang/String;Lorg/apache/commons/net/tftp/TFTPPacket;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=0, locals=3, args_size=3\n          0: return\n"}]}
