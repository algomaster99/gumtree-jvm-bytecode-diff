{"diffoscope-json-version": 1, "source1": "first/Range.class", "source2": "second/Range.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,56 +1,56 @@\n-  SHA-256 checksum ee2005374b6c3da649f5edf2f3ddf490bc4b0608df74e18fa525ffe932626340\n+  SHA-256 checksum 0061b8d23a792ed54db54d25513131ab00c45411a2319c79a4d2c74da6214cfc\n   Compiled from \"Range.java\"\n public final class org.apache.commons.lang3.Range<T extends java.lang.Object> extends java.lang.Object implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #2                          // org/apache/commons/lang3/Range\n   super_class: #20                        // java/lang/Object\n   interfaces: 1, fields: 6, methods: 24, attributes: 3\n Constant pool:\n-    #1 = Methodref          #2.#113       // org/apache/commons/lang3/Range.between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n-    #2 = Class              #114          // org/apache/commons/lang3/Range\n-    #3 = Methodref          #2.#115       // org/apache/commons/lang3/Range.\"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n-    #4 = Methodref          #20.#116      // java/lang/Object.\"<init>\":()V\n-    #5 = Class              #117          // java/lang/IllegalArgumentException\n-    #6 = Class              #118          // java/lang/StringBuilder\n-    #7 = Methodref          #6.#116       // java/lang/StringBuilder.\"<init>\":()V\n-    #8 = String             #119          // Elements in a range must not be null: element1=\n-    #9 = Methodref          #6.#120       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #10 = Methodref          #6.#121       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #11 = String             #122          // , element2=\n-   #12 = Methodref          #6.#123       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #13 = Methodref          #5.#124       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #14 = Fieldref           #39.#125      // org/apache/commons/lang3/Range$ComparableComparator.INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n-   #15 = Fieldref           #2.#126       // org/apache/commons/lang3/Range.comparator:Ljava/util/Comparator;\n-   #16 = InterfaceMethodref #127.#128     // java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n-   #17 = Fieldref           #2.#129       // org/apache/commons/lang3/Range.minimum:Ljava/lang/Object;\n-   #18 = Fieldref           #2.#130       // org/apache/commons/lang3/Range.maximum:Ljava/lang/Object;\n-   #19 = String             #131          // Element is null\n-   #20 = Class              #132          // java/lang/Object\n-   #21 = Methodref          #133.#134     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #22 = Methodref          #2.#135       // org/apache/commons/lang3/Range.isAfter:(Ljava/lang/Object;)Z\n-   #23 = Methodref          #2.#136       // org/apache/commons/lang3/Range.isBefore:(Ljava/lang/Object;)Z\n-   #24 = Methodref          #2.#137       // org/apache/commons/lang3/Range.contains:(Ljava/lang/Object;)Z\n-   #25 = Methodref          #2.#138       // org/apache/commons/lang3/Range.isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n-   #26 = String             #139          // Cannot calculate intersection with non-overlapping range %s\n-   #27 = Methodref          #140.#141     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #28 = Methodref          #2.#142       // org/apache/commons/lang3/Range.equals:(Ljava/lang/Object;)Z\n-   #29 = Methodref          #2.#143       // org/apache/commons/lang3/Range.getComparator:()Ljava/util/Comparator;\n-   #30 = Methodref          #20.#144      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #31 = Methodref          #20.#142      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #32 = Fieldref           #2.#145       // org/apache/commons/lang3/Range.hashCode:I\n-   #33 = Methodref          #20.#146      // java/lang/Object.hashCode:()I\n-   #34 = Fieldref           #2.#147       // org/apache/commons/lang3/Range.toString:Ljava/lang/String;\n-   #35 = String             #148          // [\n-   #36 = String             #149          // ..\n-   #37 = String             #150          // ]\n-   #38 = Class              #151          // java/io/Serializable\n-   #39 = Class              #152          // org/apache/commons/lang3/Range$ComparableComparator\n+    #1 = Methodref          #2.#111       // org/apache/commons/lang3/Range.between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n+    #2 = Class              #112          // org/apache/commons/lang3/Range\n+    #3 = Methodref          #2.#113       // org/apache/commons/lang3/Range.\"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n+    #4 = Methodref          #20.#114      // java/lang/Object.\"<init>\":()V\n+    #5 = Class              #115          // java/lang/IllegalArgumentException\n+    #6 = Class              #116          // java/lang/StringBuilder\n+    #7 = Methodref          #6.#114       // java/lang/StringBuilder.\"<init>\":()V\n+    #8 = String             #117          // Elements in a range must not be null: element1=\n+    #9 = Methodref          #6.#118       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #10 = Methodref          #6.#119       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #11 = String             #120          // , element2=\n+   #12 = Methodref          #6.#121       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #13 = Methodref          #5.#122       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #14 = Fieldref           #39.#123      // org/apache/commons/lang3/Range$ComparableComparator.INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n+   #15 = Fieldref           #2.#124       // org/apache/commons/lang3/Range.comparator:Ljava/util/Comparator;\n+   #16 = InterfaceMethodref #74.#125      // java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+   #17 = Fieldref           #2.#126       // org/apache/commons/lang3/Range.minimum:Ljava/lang/Object;\n+   #18 = Fieldref           #2.#127       // org/apache/commons/lang3/Range.maximum:Ljava/lang/Object;\n+   #19 = String             #128          // Element is null\n+   #20 = Class              #129          // java/lang/Object\n+   #21 = Methodref          #130.#131     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #22 = Methodref          #2.#132       // org/apache/commons/lang3/Range.isAfter:(Ljava/lang/Object;)Z\n+   #23 = Methodref          #2.#133       // org/apache/commons/lang3/Range.isBefore:(Ljava/lang/Object;)Z\n+   #24 = Methodref          #2.#134       // org/apache/commons/lang3/Range.contains:(Ljava/lang/Object;)Z\n+   #25 = Methodref          #2.#135       // org/apache/commons/lang3/Range.isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n+   #26 = String             #136          // Cannot calculate intersection with non-overlapping range %s\n+   #27 = Methodref          #137.#138     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #28 = Methodref          #2.#139       // org/apache/commons/lang3/Range.equals:(Ljava/lang/Object;)Z\n+   #29 = Methodref          #2.#140       // org/apache/commons/lang3/Range.getComparator:()Ljava/util/Comparator;\n+   #30 = Methodref          #20.#141      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #31 = Methodref          #20.#139      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+   #32 = Fieldref           #2.#142       // org/apache/commons/lang3/Range.hashCode:I\n+   #33 = Methodref          #20.#143      // java/lang/Object.hashCode:()I\n+   #34 = Fieldref           #2.#144       // org/apache/commons/lang3/Range.toString:Ljava/lang/String;\n+   #35 = String             #145          // [\n+   #36 = String             #146          // ..\n+   #37 = String             #147          // ]\n+   #38 = Class              #148          // java/io/Serializable\n+   #39 = Class              #149          // org/apache/commons/lang3/Range$ComparableComparator\n    #40 = Utf8               ComparableComparator\n    #41 = Utf8               InnerClasses\n    #42 = Utf8               serialVersionUID\n    #43 = Utf8               J\n    #44 = Utf8               ConstantValue\n    #45 = Long               1l\n    #47 = Utf8               comparator\n@@ -76,111 +76,108 @@\n    #67 = Utf8               (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lorg/apache/commons/lang3/Range;\n    #68 = Utf8               <T::Ljava/lang/Comparable<TT;>;>(TT;TT;)Lorg/apache/commons/lang3/Range<TT;>;\n    #69 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n    #70 = Utf8               <T:Ljava/lang/Object;>(TT;TT;Ljava/util/Comparator<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n    #71 = Utf8               <init>\n    #72 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n    #73 = Utf8               StackMapTable\n-   #74 = Class              #114          // org/apache/commons/lang3/Range\n-   #75 = Class              #132          // java/lang/Object\n-   #76 = Class              #153          // java/util/Comparator\n-   #77 = Utf8               (TT;TT;Ljava/util/Comparator<TT;>;)V\n-   #78 = Utf8               getMinimum\n-   #79 = Utf8               ()Ljava/lang/Object;\n-   #80 = Utf8               ()TT;\n-   #81 = Utf8               getMaximum\n-   #82 = Utf8               getComparator\n-   #83 = Utf8               ()Ljava/util/Comparator;\n-   #84 = Utf8               ()Ljava/util/Comparator<TT;>;\n-   #85 = Utf8               isNaturalOrdering\n-   #86 = Utf8               ()Z\n-   #87 = Utf8               contains\n-   #88 = Utf8               (Ljava/lang/Object;)Z\n-   #89 = Utf8               (TT;)Z\n-   #90 = Utf8               isAfter\n-   #91 = Utf8               isStartedBy\n-   #92 = Utf8               isEndedBy\n-   #93 = Utf8               isBefore\n-   #94 = Utf8               elementCompareTo\n-   #95 = Utf8               (Ljava/lang/Object;)I\n-   #96 = Utf8               (TT;)I\n-   #97 = Utf8               containsRange\n-   #98 = Utf8               (Lorg/apache/commons/lang3/Range;)Z\n-   #99 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Z\n-  #100 = Utf8               isAfterRange\n-  #101 = Utf8               isOverlappedBy\n-  #102 = Utf8               isBeforeRange\n-  #103 = Utf8               intersectionWith\n-  #104 = Utf8               (Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;\n-  #105 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n-  #106 = Utf8               equals\n-  #107 = Utf8               ()I\n-  #108 = Utf8               ()Ljava/lang/String;\n-  #109 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #110 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n-  #111 = Utf8               SourceFile\n-  #112 = Utf8               Range.java\n-  #113 = NameAndType        #66:#69       // between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n-  #114 = Utf8               org/apache/commons/lang3/Range\n-  #115 = NameAndType        #71:#72       // \"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n-  #116 = NameAndType        #71:#154      // \"<init>\":()V\n-  #117 = Utf8               java/lang/IllegalArgumentException\n-  #118 = Utf8               java/lang/StringBuilder\n-  #119 = Utf8               Elements in a range must not be null: element1=\n-  #120 = NameAndType        #155:#156     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #121 = NameAndType        #155:#157     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #122 = Utf8               , element2=\n-  #123 = NameAndType        #57:#108      // toString:()Ljava/lang/String;\n-  #124 = NameAndType        #71:#158      // \"<init>\":(Ljava/lang/String;)V\n-  #125 = NameAndType        #159:#160     // INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n-  #126 = NameAndType        #47:#48       // comparator:Ljava/util/Comparator;\n-  #127 = Class              #153          // java/util/Comparator\n-  #128 = NameAndType        #161:#162     // compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n-  #129 = NameAndType        #51:#52       // minimum:Ljava/lang/Object;\n-  #130 = NameAndType        #54:#52       // maximum:Ljava/lang/Object;\n-  #131 = Utf8               Element is null\n-  #132 = Utf8               java/lang/Object\n-  #133 = Class              #163          // org/apache/commons/lang3/Validate\n-  #134 = NameAndType        #164:#165     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #135 = NameAndType        #90:#88       // isAfter:(Ljava/lang/Object;)Z\n-  #136 = NameAndType        #93:#88       // isBefore:(Ljava/lang/Object;)Z\n-  #137 = NameAndType        #87:#88       // contains:(Ljava/lang/Object;)Z\n-  #138 = NameAndType        #101:#98      // isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n-  #139 = Utf8               Cannot calculate intersection with non-overlapping range %s\n-  #140 = Class              #166          // java/lang/String\n-  #141 = NameAndType        #167:#168     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #142 = NameAndType        #106:#88      // equals:(Ljava/lang/Object;)Z\n-  #143 = NameAndType        #82:#83       // getComparator:()Ljava/util/Comparator;\n-  #144 = NameAndType        #169:#170     // getClass:()Ljava/lang/Class;\n-  #145 = NameAndType        #55:#56       // hashCode:I\n-  #146 = NameAndType        #55:#107      // hashCode:()I\n-  #147 = NameAndType        #57:#58       // toString:Ljava/lang/String;\n-  #148 = Utf8               [\n-  #149 = Utf8               ..\n-  #150 = Utf8               ]\n-  #151 = Utf8               java/io/Serializable\n-  #152 = Utf8               org/apache/commons/lang3/Range$ComparableComparator\n-  #153 = Utf8               java/util/Comparator\n-  #154 = Utf8               ()V\n-  #155 = Utf8               append\n-  #156 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #157 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #158 = Utf8               (Ljava/lang/String;)V\n-  #159 = Utf8               INSTANCE\n-  #160 = Utf8               Lorg/apache/commons/lang3/Range$ComparableComparator;\n-  #161 = Utf8               compare\n-  #162 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n-  #163 = Utf8               org/apache/commons/lang3/Validate\n-  #164 = Utf8               notNull\n-  #165 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #166 = Utf8               java/lang/String\n-  #167 = Utf8               format\n-  #168 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #169 = Utf8               getClass\n-  #170 = Utf8               ()Ljava/lang/Class;\n+   #74 = Class              #150          // java/util/Comparator\n+   #75 = Utf8               (TT;TT;Ljava/util/Comparator<TT;>;)V\n+   #76 = Utf8               getMinimum\n+   #77 = Utf8               ()Ljava/lang/Object;\n+   #78 = Utf8               ()TT;\n+   #79 = Utf8               getMaximum\n+   #80 = Utf8               getComparator\n+   #81 = Utf8               ()Ljava/util/Comparator;\n+   #82 = Utf8               ()Ljava/util/Comparator<TT;>;\n+   #83 = Utf8               isNaturalOrdering\n+   #84 = Utf8               ()Z\n+   #85 = Utf8               contains\n+   #86 = Utf8               (Ljava/lang/Object;)Z\n+   #87 = Utf8               (TT;)Z\n+   #88 = Utf8               isAfter\n+   #89 = Utf8               isStartedBy\n+   #90 = Utf8               isEndedBy\n+   #91 = Utf8               isBefore\n+   #92 = Utf8               elementCompareTo\n+   #93 = Utf8               (Ljava/lang/Object;)I\n+   #94 = Utf8               (TT;)I\n+   #95 = Utf8               containsRange\n+   #96 = Utf8               (Lorg/apache/commons/lang3/Range;)Z\n+   #97 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+   #98 = Utf8               isAfterRange\n+   #99 = Utf8               isOverlappedBy\n+  #100 = Utf8               isBeforeRange\n+  #101 = Utf8               intersectionWith\n+  #102 = Utf8               (Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;\n+  #103 = Utf8               (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n+  #104 = Utf8               equals\n+  #105 = Utf8               ()I\n+  #106 = Utf8               ()Ljava/lang/String;\n+  #107 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #108 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n+  #109 = Utf8               SourceFile\n+  #110 = Utf8               Range.java\n+  #111 = NameAndType        #66:#69       // between:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/apache/commons/lang3/Range;\n+  #112 = Utf8               org/apache/commons/lang3/Range\n+  #113 = NameAndType        #71:#72       // \"<init>\":(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V\n+  #114 = NameAndType        #71:#151      // \"<init>\":()V\n+  #115 = Utf8               java/lang/IllegalArgumentException\n+  #116 = Utf8               java/lang/StringBuilder\n+  #117 = Utf8               Elements in a range must not be null: element1=\n+  #118 = NameAndType        #152:#153     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #119 = NameAndType        #152:#154     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #120 = Utf8               , element2=\n+  #121 = NameAndType        #57:#106      // toString:()Ljava/lang/String;\n+  #122 = NameAndType        #71:#155      // \"<init>\":(Ljava/lang/String;)V\n+  #123 = NameAndType        #156:#157     // INSTANCE:Lorg/apache/commons/lang3/Range$ComparableComparator;\n+  #124 = NameAndType        #47:#48       // comparator:Ljava/util/Comparator;\n+  #125 = NameAndType        #158:#159     // compare:(Ljava/lang/Object;Ljava/lang/Object;)I\n+  #126 = NameAndType        #51:#52       // minimum:Ljava/lang/Object;\n+  #127 = NameAndType        #54:#52       // maximum:Ljava/lang/Object;\n+  #128 = Utf8               Element is null\n+  #129 = Utf8               java/lang/Object\n+  #130 = Class              #160          // org/apache/commons/lang3/Validate\n+  #131 = NameAndType        #161:#162     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #132 = NameAndType        #88:#86       // isAfter:(Ljava/lang/Object;)Z\n+  #133 = NameAndType        #91:#86       // isBefore:(Ljava/lang/Object;)Z\n+  #134 = NameAndType        #85:#86       // contains:(Ljava/lang/Object;)Z\n+  #135 = NameAndType        #99:#96       // isOverlappedBy:(Lorg/apache/commons/lang3/Range;)Z\n+  #136 = Utf8               Cannot calculate intersection with non-overlapping range %s\n+  #137 = Class              #163          // java/lang/String\n+  #138 = NameAndType        #164:#165     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #139 = NameAndType        #104:#86      // equals:(Ljava/lang/Object;)Z\n+  #140 = NameAndType        #80:#81       // getComparator:()Ljava/util/Comparator;\n+  #141 = NameAndType        #166:#167     // getClass:()Ljava/lang/Class;\n+  #142 = NameAndType        #55:#56       // hashCode:I\n+  #143 = NameAndType        #55:#105      // hashCode:()I\n+  #144 = NameAndType        #57:#58       // toString:Ljava/lang/String;\n+  #145 = Utf8               [\n+  #146 = Utf8               ..\n+  #147 = Utf8               ]\n+  #148 = Utf8               java/io/Serializable\n+  #149 = Utf8               org/apache/commons/lang3/Range$ComparableComparator\n+  #150 = Utf8               java/util/Comparator\n+  #151 = Utf8               ()V\n+  #152 = Utf8               append\n+  #153 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #154 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #155 = Utf8               (Ljava/lang/String;)V\n+  #156 = Utf8               INSTANCE\n+  #157 = Utf8               Lorg/apache/commons/lang3/Range$ComparableComparator;\n+  #158 = Utf8               compare\n+  #159 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n+  #160 = Utf8               org/apache/commons/lang3/Validate\n+  #161 = Utf8               notNull\n+  #162 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #163 = Utf8               java/lang/String\n+  #164 = Utf8               format\n+  #165 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #166 = Utf8               getClass\n+  #167 = Utf8               ()Ljava/lang/Class;\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   private final java.util.Comparator<T> comparator;\n@@ -340,51 +337,51 @@\n           locals = [ class org/apache/commons/lang3/Range, class java/lang/Object, class java/lang/Object, class java/util/Comparator ]\n           stack = []\n         frame_type = 35 /* same */\n         frame_type = 13 /* same */\n         frame_type = 4 /* same */\n         frame_type = 27 /* same */\n         frame_type = 9 /* same */\n-    Signature: #77                          // (TT;TT;Ljava/util/Comparator<TT;>;)V\n+    Signature: #75                          // (TT;TT;Ljava/util/Comparator<TT;>;)V\n \n   public T getMinimum();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #17                 // Field minimum:Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 173: 0\n-    Signature: #80                          // ()TT;\n+    Signature: #78                          // ()TT;\n \n   public T getMaximum();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #18                 // Field maximum:Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 182: 0\n-    Signature: #80                          // ()TT;\n+    Signature: #78                          // ()TT;\n \n   public java.util.Comparator<T> getComparator();\n     descriptor: ()Ljava/util/Comparator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n          4: areturn\n       LineNumberTable:\n         line 194: 0\n-    Signature: #84                          // ()Ljava/util/Comparator<TT;>;\n+    Signature: #82                          // ()Ljava/util/Comparator<TT;>;\n \n   public boolean isNaturalOrdering();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n@@ -436,15 +433,15 @@\n         line 220: 4\n         line 222: 6\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 39 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #89                          // (TT;)Z\n+    Signature: #87                          // (TT;)Z\n \n   public boolean isAfter(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n@@ -467,15 +464,15 @@\n         line 233: 4\n         line 235: 6\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #89                          // (TT;)Z\n+    Signature: #87                          // (TT;)Z\n \n   public boolean isStartedBy(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n@@ -498,15 +495,15 @@\n         line 246: 4\n         line 248: 6\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #89                          // (TT;)Z\n+    Signature: #87                          // (TT;)Z\n \n   public boolean isEndedBy(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n@@ -529,15 +526,15 @@\n         line 259: 4\n         line 261: 6\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #89                          // (TT;)Z\n+    Signature: #87                          // (TT;)Z\n \n   public boolean isBefore(T);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n@@ -560,15 +557,15 @@\n         line 272: 4\n         line 274: 6\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 20 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #89                          // (TT;)Z\n+    Signature: #87                          // (TT;)Z\n \n   public int elementCompareTo(T);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n@@ -597,15 +594,15 @@\n         line 291: 19\n         line 292: 21\n         line 293: 29\n         line 295: 31\n       StackMapTable: number_of_entries = 2\n         frame_type = 21 /* same */\n         frame_type = 9 /* same */\n-    Signature: #96                          // (TT;)I\n+    Signature: #94                          // (TT;)I\n \n   public boolean containsRange(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n@@ -633,15 +630,15 @@\n         line 316: 22\n         line 315: 33\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 25 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #99                          // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #97                          // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public boolean isAfterRange(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n@@ -655,15 +652,15 @@\n         14: ireturn\n       LineNumberTable:\n         line 329: 0\n         line 330: 4\n         line 332: 6\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n-    Signature: #99                          // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #97                          // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public boolean isOverlappedBy(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n@@ -698,15 +695,15 @@\n         line 351: 44\n       StackMapTable: number_of_entries = 4\n         frame_type = 6 /* same */\n         frame_type = 32 /* same */\n         frame_type = 3 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #99                          // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #97                          // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public boolean isBeforeRange(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n@@ -720,15 +717,15 @@\n         14: ireturn\n       LineNumberTable:\n         line 366: 0\n         line 367: 4\n         line 369: 6\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n-    Signature: #99                          // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n+    Signature: #97                          // (Lorg/apache/commons/lang3/Range<TT;>;)Z\n \n   public org.apache.commons.lang3.Range<T> intersectionWith(org.apache.commons.lang3.Range<T>);\n     descriptor: (Lorg/apache/commons/lang3/Range;)Lorg/apache/commons/lang3/Range;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=4, args_size=2\n          0: aload_0\n@@ -802,15 +799,15 @@\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n         frame_type = 252 /* append */\n           offset_delta = 27\n           locals = [ class java/lang/Object ]\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n-    Signature: #105                         // (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n+    Signature: #103                         // (Lorg/apache/commons/lang3/Range<TT;>;)Lorg/apache/commons/lang3/Range<TT;>;\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n@@ -981,11 +978,11 @@\n         22: getfield      #15                 // Field comparator:Ljava/util/Comparator;\n         25: aastore\n         26: invokestatic  #27                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n         29: areturn\n       LineNumberTable:\n         line 465: 0\n }\n-Signature: #110                         // <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n+Signature: #108                         // <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/io/Serializable;\n SourceFile: \"Range.java\"\n InnerClasses:\n   private static final #40= #39 of #2;    // ComparableComparator=class org/apache/commons/lang3/Range$ComparableComparator of class org/apache/commons/lang3/Range\n"}]}
