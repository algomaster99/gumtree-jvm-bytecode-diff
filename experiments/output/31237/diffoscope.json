{"diffoscope-json-version": 1, "source1": "first/CleaningPathVisitor.class", "source2": "second/CleaningPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,201 +1,200 @@\n-  SHA-256 checksum 339de0622252fa37c04d2dba28c84c50d2f4fe6068182245409151e88123b33f\n+  SHA-256 checksum 24c365b00ea492feab339919c774efb48d114e7225affa62cf841ab6e8f29b14\n   Compiled from \"CleaningPathVisitor.java\"\n public class org.apache.commons.io.file.CleaningPathVisitor extends org.apache.commons.io.file.CountingPathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/CleaningPathVisitor\n-  super_class: #40                        // org/apache/commons/io/file/CountingPathVisitor\n+  super_class: #19                        // org/apache/commons/io/file/CountingPathVisitor\n   interfaces: 0, fields: 2, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Class              #93           // org/apache/commons/io/file/CleaningPathVisitor\n-    #2 = Methodref          #94.#95       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #3 = Class              #96           // java/lang/String\n-    #4 = Methodref          #1.#97        // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-    #5 = Methodref          #94.#98       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #6 = Methodref          #40.#99       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #7 = Methodref          #100.#101     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-    #8 = Class              #42           // \"[Ljava/lang/String;\"\n-    #9 = Fieldref           #1.#102       // org/apache/commons/io/file/CleaningPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #10 = Methodref          #103.#104     // java/util/Arrays.sort:([Ljava/lang/Object;)V\n-   #11 = Fieldref           #1.#105       // org/apache/commons/io/file/CleaningPathVisitor.skip:[Ljava/lang/String;\n-   #12 = Methodref          #106.#107     // org/apache/commons/io/file/StandardDeleteOption.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n-   #13 = Fieldref           #1.#108       // org/apache/commons/io/file/CleaningPathVisitor.overrideReadOnly:Z\n-   #14 = Fieldref           #109.#110     // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-   #15 = Methodref          #1.#111       // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-   #16 = InterfaceMethodref #37.#112      // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #17 = Methodref          #113.#114     // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #18 = Methodref          #103.#115     // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-   #19 = Methodref          #40.#116      // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n-   #20 = Methodref          #24.#117      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #21 = Methodref          #103.#118     // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-   #22 = Methodref          #40.#119      // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n-   #23 = Methodref          #103.#120     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n-   #24 = Class              #121          // java/lang/Object\n-   #25 = Methodref          #122.#123     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-   #26 = Methodref          #113.#124     // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #27 = Methodref          #40.#125      // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #28 = Methodref          #1.#126       // org/apache/commons/io/file/CleaningPathVisitor.accept:(Ljava/nio/file/Path;)Z\n-   #29 = Fieldref           #85.#127      // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #30 = Fieldref           #85.#128      // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-   #31 = Class              #129          // java/nio/file/LinkOption\n-   #32 = Fieldref           #31.#130      // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n-   #33 = Methodref          #131.#132     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #34 = Methodref          #109.#133     // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-   #35 = Methodref          #131.#134     // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n-   #36 = Methodref          #1.#135       // org/apache/commons/io/file/CleaningPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #37 = Class              #136          // java/nio/file/Path\n-   #38 = Methodref          #1.#137       // org/apache/commons/io/file/CleaningPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #39 = Methodref          #1.#125       // org/apache/commons/io/file/CleaningPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #40 = Class              #138          // org/apache/commons/io/file/CountingPathVisitor\n-   #41 = Utf8               skip\n-   #42 = Utf8               [Ljava/lang/String;\n-   #43 = Utf8               overrideReadOnly\n-   #44 = Utf8               Z\n-   #45 = Utf8               withBigIntegerCounters\n-   #46 = Utf8               ()Lorg/apache/commons/io/file/CountingPathVisitor;\n-   #47 = Utf8               Code\n-   #48 = Utf8               LineNumberTable\n-   #49 = Utf8               withLongCounters\n-   #50 = Utf8               <init>\n-   #51 = Class              #139          // org/apache/commons/io/file/Counters$PathCounters\n-   #52 = Utf8               PathCounters\n-   #53 = Utf8               InnerClasses\n-   #54 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-   #55 = Utf8               LocalVariableTable\n-   #56 = Utf8               this\n-   #57 = Utf8               Lorg/apache/commons/io/file/CleaningPathVisitor;\n-   #58 = Utf8               pathCounter\n-   #59 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #60 = Utf8               deleteOption\n-   #61 = Utf8               [Lorg/apache/commons/io/file/DeleteOption;\n-   #62 = Utf8               temp\n-   #63 = Utf8               StackMapTable\n-   #64 = Class              #61           // \"[Lorg/apache/commons/io/file/DeleteOption;\"\n-   #65 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-   #66 = Utf8               accept\n-   #67 = Utf8               (Ljava/nio/file/Path;)Z\n-   #68 = Utf8               path\n-   #69 = Utf8               Ljava/nio/file/Path;\n-   #70 = Utf8               equals\n-   #71 = Utf8               (Ljava/lang/Object;)Z\n-   #72 = Utf8               obj\n-   #73 = Utf8               Ljava/lang/Object;\n-   #74 = Utf8               other\n-   #75 = Utf8               hashCode\n-   #76 = Utf8               ()I\n-   #77 = Utf8               prime\n-   #78 = Utf8               I\n-   #79 = Utf8               result\n-   #80 = Utf8               preVisitDirectory\n-   #81 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #82 = Utf8               dir\n-   #83 = Utf8               attributes\n-   #84 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #85 = Class              #140          // java/nio/file/FileVisitResult\n-   #86 = Utf8               Exceptions\n-   #87 = Class              #141          // java/io/IOException\n-   #88 = Utf8               visitFile\n-   #89 = Utf8               file\n-   #90 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #91 = Utf8               SourceFile\n-   #92 = Utf8               CleaningPathVisitor.java\n-   #93 = Utf8               org/apache/commons/io/file/CleaningPathVisitor\n-   #94 = Class              #142          // org/apache/commons/io/file/Counters\n-   #95 = NameAndType        #143:#144     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #96 = Utf8               java/lang/String\n-   #97 = NameAndType        #50:#65       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-   #98 = NameAndType        #145:#144     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #99 = NameAndType        #50:#146      // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-  #100 = Class              #42           // \"[Ljava/lang/String;\"\n-  #101 = NameAndType        #147:#148     // clone:()Ljava/lang/Object;\n-  #102 = NameAndType        #149:#42      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #103 = Class              #150          // java/util/Arrays\n-  #104 = NameAndType        #151:#152     // sort:([Ljava/lang/Object;)V\n-  #105 = NameAndType        #41:#42       // skip:[Ljava/lang/String;\n-  #106 = Class              #153          // org/apache/commons/io/file/StandardDeleteOption\n-  #107 = NameAndType        #43:#154      // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n-  #108 = NameAndType        #43:#44       // overrideReadOnly:Z\n-  #109 = Class              #155          // org/apache/commons/io/file/PathUtils\n-  #110 = NameAndType        #156:#61      // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-  #111 = NameAndType        #50:#54       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-  #112 = NameAndType        #157:#158     // getFileName:()Ljava/nio/file/Path;\n-  #113 = Class              #159          // java/util/Objects\n-  #114 = NameAndType        #160:#161     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #115 = NameAndType        #162:#163     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-  #116 = NameAndType        #70:#71       // equals:(Ljava/lang/Object;)Z\n-  #117 = NameAndType        #164:#165     // getClass:()Ljava/lang/Class;\n-  #118 = NameAndType        #70:#166      // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #119 = NameAndType        #75:#76       // hashCode:()I\n-  #120 = NameAndType        #75:#167      // hashCode:([Ljava/lang/Object;)I\n-  #121 = Utf8               java/lang/Object\n-  #122 = Class              #168          // java/lang/Boolean\n-  #123 = NameAndType        #169:#170     // valueOf:(Z)Ljava/lang/Boolean;\n-  #124 = NameAndType        #171:#167     // hash:([Ljava/lang/Object;)I\n-  #125 = NameAndType        #80:#81       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #126 = NameAndType        #66:#67       // accept:(Ljava/nio/file/Path;)Z\n-  #127 = NameAndType        #172:#173     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #128 = NameAndType        #174:#173     // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-  #129 = Utf8               java/nio/file/LinkOption\n-  #130 = NameAndType        #175:#176     // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n-  #131 = Class              #177          // java/nio/file/Files\n-  #132 = NameAndType        #178:#179     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #133 = NameAndType        #180:#181     // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-  #134 = NameAndType        #182:#67      // deleteIfExists:(Ljava/nio/file/Path;)Z\n-  #135 = NameAndType        #183:#184     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-  #136 = Utf8               java/nio/file/Path\n-  #137 = NameAndType        #88:#81       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #138 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-  #139 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-  #140 = Utf8               java/nio/file/FileVisitResult\n-  #141 = Utf8               java/io/IOException\n-  #142 = Utf8               org/apache/commons/io/file/Counters\n-  #143 = Utf8               bigIntegerPathCounters\n-  #144 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #145 = Utf8               longPathCounters\n-  #146 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-  #147 = Utf8               clone\n-  #148 = Utf8               ()Ljava/lang/Object;\n-  #149 = Utf8               EMPTY_STRING_ARRAY\n-  #150 = Utf8               java/util/Arrays\n-  #151 = Utf8               sort\n-  #152 = Utf8               ([Ljava/lang/Object;)V\n-  #153 = Utf8               org/apache/commons/io/file/StandardDeleteOption\n-  #154 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z\n-  #155 = Utf8               org/apache/commons/io/file/PathUtils\n-  #156 = Utf8               EMPTY_DELETE_OPTION_ARRAY\n-  #157 = Utf8               getFileName\n-  #158 = Utf8               ()Ljava/nio/file/Path;\n-  #159 = Utf8               java/util/Objects\n-  #160 = Utf8               toString\n-  #161 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #162 = Utf8               binarySearch\n-  #163 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n-  #164 = Utf8               getClass\n-  #165 = Utf8               ()Ljava/lang/Class;\n-  #166 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #167 = Utf8               ([Ljava/lang/Object;)I\n-  #168 = Utf8               java/lang/Boolean\n-  #169 = Utf8               valueOf\n-  #170 = Utf8               (Z)Ljava/lang/Boolean;\n-  #171 = Utf8               hash\n-  #172 = Utf8               CONTINUE\n-  #173 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #174 = Utf8               SKIP_SUBTREE\n-  #175 = Utf8               NOFOLLOW_LINKS\n-  #176 = Utf8               Ljava/nio/file/LinkOption;\n-  #177 = Utf8               java/nio/file/Files\n-  #178 = Utf8               exists\n-  #179 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #180 = Utf8               setReadOnly\n-  #181 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-  #182 = Utf8               deleteIfExists\n-  #183 = Utf8               updateFileCounters\n-  #184 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+    #1 = Class              #2            // org/apache/commons/io/file/CleaningPathVisitor\n+    #2 = Utf8               org/apache/commons/io/file/CleaningPathVisitor\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #4 = Class              #6            // org/apache/commons/io/file/Counters\n+    #5 = NameAndType        #7:#8         // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #6 = Utf8               org/apache/commons/io/file/Counters\n+    #7 = Utf8               bigIntegerPathCounters\n+    #8 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #9 = Class              #10           // java/lang/String\n+   #10 = Utf8               java/lang/String\n+   #11 = Methodref          #1.#12        // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+   #12 = NameAndType        #13:#14       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+   #13 = Utf8               <init>\n+   #14 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+   #15 = Methodref          #4.#16        // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #16 = NameAndType        #17:#8        // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #17 = Utf8               longPathCounters\n+   #18 = Methodref          #19.#20       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #19 = Class              #21           // org/apache/commons/io/file/CountingPathVisitor\n+   #20 = NameAndType        #13:#22       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #21 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+   #22 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #23 = Methodref          #24.#25       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+   #24 = Class              #26           // \"[Ljava/lang/String;\"\n+   #25 = NameAndType        #27:#28       // clone:()Ljava/lang/Object;\n+   #26 = Utf8               [Ljava/lang/String;\n+   #27 = Utf8               clone\n+   #28 = Utf8               ()Ljava/lang/Object;\n+   #29 = Fieldref           #1.#30        // org/apache/commons/io/file/CleaningPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #30 = NameAndType        #31:#26       // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #31 = Utf8               EMPTY_STRING_ARRAY\n+   #32 = Methodref          #33.#34       // java/util/Arrays.sort:([Ljava/lang/Object;)V\n+   #33 = Class              #35           // java/util/Arrays\n+   #34 = NameAndType        #36:#37       // sort:([Ljava/lang/Object;)V\n+   #35 = Utf8               java/util/Arrays\n+   #36 = Utf8               sort\n+   #37 = Utf8               ([Ljava/lang/Object;)V\n+   #38 = Fieldref           #1.#39        // org/apache/commons/io/file/CleaningPathVisitor.skip:[Ljava/lang/String;\n+   #39 = NameAndType        #40:#26       // skip:[Ljava/lang/String;\n+   #40 = Utf8               skip\n+   #41 = Methodref          #42.#43       // org/apache/commons/io/file/StandardDeleteOption.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+   #42 = Class              #44           // org/apache/commons/io/file/StandardDeleteOption\n+   #43 = NameAndType        #45:#46       // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+   #44 = Utf8               org/apache/commons/io/file/StandardDeleteOption\n+   #45 = Utf8               overrideReadOnly\n+   #46 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z\n+   #47 = Fieldref           #1.#48        // org/apache/commons/io/file/CleaningPathVisitor.overrideReadOnly:Z\n+   #48 = NameAndType        #45:#49       // overrideReadOnly:Z\n+   #49 = Utf8               Z\n+   #50 = Fieldref           #51.#52       // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+   #51 = Class              #53           // org/apache/commons/io/file/PathUtils\n+   #52 = NameAndType        #54:#55       // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+   #53 = Utf8               org/apache/commons/io/file/PathUtils\n+   #54 = Utf8               EMPTY_DELETE_OPTION_ARRAY\n+   #55 = Utf8               [Lorg/apache/commons/io/file/DeleteOption;\n+   #56 = Methodref          #1.#57        // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #57 = NameAndType        #13:#58       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #58 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #59 = InterfaceMethodref #60.#61       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #60 = Class              #62           // java/nio/file/Path\n+   #61 = NameAndType        #63:#64       // getFileName:()Ljava/nio/file/Path;\n+   #62 = Utf8               java/nio/file/Path\n+   #63 = Utf8               getFileName\n+   #64 = Utf8               ()Ljava/nio/file/Path;\n+   #65 = Methodref          #66.#67       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #66 = Class              #68           // java/util/Objects\n+   #67 = NameAndType        #69:#70       // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #68 = Utf8               java/util/Objects\n+   #69 = Utf8               toString\n+   #70 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #71 = Methodref          #33.#72       // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #72 = NameAndType        #73:#74       // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #73 = Utf8               binarySearch\n+   #74 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #75 = Methodref          #19.#76       // org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+   #76 = NameAndType        #77:#78       // equals:(Ljava/lang/Object;)Z\n+   #77 = Utf8               equals\n+   #78 = Utf8               (Ljava/lang/Object;)Z\n+   #79 = Methodref          #80.#81       // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #80 = Class              #82           // java/lang/Object\n+   #81 = NameAndType        #83:#84       // getClass:()Ljava/lang/Class;\n+   #82 = Utf8               java/lang/Object\n+   #83 = Utf8               getClass\n+   #84 = Utf8               ()Ljava/lang/Class;\n+   #85 = Methodref          #33.#86       // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #86 = NameAndType        #77:#87       // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #87 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #88 = Methodref          #19.#89       // org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+   #89 = NameAndType        #90:#91       // hashCode:()I\n+   #90 = Utf8               hashCode\n+   #91 = Utf8               ()I\n+   #92 = Methodref          #33.#93       // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+   #93 = NameAndType        #90:#94       // hashCode:([Ljava/lang/Object;)I\n+   #94 = Utf8               ([Ljava/lang/Object;)I\n+   #95 = Methodref          #96.#97       // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+   #96 = Class              #98           // java/lang/Boolean\n+   #97 = NameAndType        #99:#100      // valueOf:(Z)Ljava/lang/Boolean;\n+   #98 = Utf8               java/lang/Boolean\n+   #99 = Utf8               valueOf\n+  #100 = Utf8               (Z)Ljava/lang/Boolean;\n+  #101 = Methodref          #66.#102      // java/util/Objects.hash:([Ljava/lang/Object;)I\n+  #102 = NameAndType        #103:#94      // hash:([Ljava/lang/Object;)I\n+  #103 = Utf8               hash\n+  #104 = Methodref          #19.#105      // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #105 = NameAndType        #106:#107     // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #106 = Utf8               preVisitDirectory\n+  #107 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #108 = Methodref          #1.#109       // org/apache/commons/io/file/CleaningPathVisitor.accept:(Ljava/nio/file/Path;)Z\n+  #109 = NameAndType        #110:#111     // accept:(Ljava/nio/file/Path;)Z\n+  #110 = Utf8               accept\n+  #111 = Utf8               (Ljava/nio/file/Path;)Z\n+  #112 = Fieldref           #113.#114     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #113 = Class              #115          // java/nio/file/FileVisitResult\n+  #114 = NameAndType        #116:#117     // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #115 = Utf8               java/nio/file/FileVisitResult\n+  #116 = Utf8               CONTINUE\n+  #117 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #118 = Fieldref           #113.#119     // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+  #119 = NameAndType        #120:#117     // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+  #120 = Utf8               SKIP_SUBTREE\n+  #121 = Class              #122          // java/nio/file/LinkOption\n+  #122 = Utf8               java/nio/file/LinkOption\n+  #123 = Fieldref           #121.#124     // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+  #124 = NameAndType        #125:#126     // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+  #125 = Utf8               NOFOLLOW_LINKS\n+  #126 = Utf8               Ljava/nio/file/LinkOption;\n+  #127 = Methodref          #128.#129     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #128 = Class              #130          // java/nio/file/Files\n+  #129 = NameAndType        #131:#132     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #130 = Utf8               java/nio/file/Files\n+  #131 = Utf8               exists\n+  #132 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #133 = Methodref          #51.#134      // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+  #134 = NameAndType        #135:#136     // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+  #135 = Utf8               setReadOnly\n+  #136 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+  #137 = Methodref          #128.#138     // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+  #138 = NameAndType        #139:#111     // deleteIfExists:(Ljava/nio/file/Path;)Z\n+  #139 = Utf8               deleteIfExists\n+  #140 = Methodref          #1.#141       // org/apache/commons/io/file/CleaningPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #141 = NameAndType        #142:#143     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #142 = Utf8               updateFileCounters\n+  #143 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #144 = Methodref          #1.#145       // org/apache/commons/io/file/CleaningPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #145 = NameAndType        #146:#107     // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #146 = Utf8               visitFile\n+  #147 = Methodref          #1.#105       // org/apache/commons/io/file/CleaningPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #148 = Utf8               withBigIntegerCounters\n+  #149 = Utf8               ()Lorg/apache/commons/io/file/CountingPathVisitor;\n+  #150 = Utf8               Code\n+  #151 = Utf8               LineNumberTable\n+  #152 = Utf8               withLongCounters\n+  #153 = Utf8               LocalVariableTable\n+  #154 = Utf8               this\n+  #155 = Utf8               Lorg/apache/commons/io/file/CleaningPathVisitor;\n+  #156 = Utf8               pathCounter\n+  #157 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #158 = Utf8               deleteOption\n+  #159 = Utf8               temp\n+  #160 = Utf8               StackMapTable\n+  #161 = Class              #162          // org/apache/commons/io/file/Counters$PathCounters\n+  #162 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+  #163 = Class              #55           // \"[Lorg/apache/commons/io/file/DeleteOption;\"\n+  #164 = Utf8               path\n+  #165 = Utf8               Ljava/nio/file/Path;\n+  #166 = Utf8               obj\n+  #167 = Utf8               Ljava/lang/Object;\n+  #168 = Utf8               other\n+  #169 = Utf8               prime\n+  #170 = Utf8               I\n+  #171 = Utf8               result\n+  #172 = Utf8               dir\n+  #173 = Utf8               attributes\n+  #174 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #175 = Utf8               Exceptions\n+  #176 = Class              #177          // java/io/IOException\n+  #177 = Utf8               java/io/IOException\n+  #178 = Utf8               file\n+  #179 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #180 = Utf8               SourceFile\n+  #181 = Utf8               CleaningPathVisitor.java\n+  #182 = Utf8               InnerClasses\n+  #183 = Utf8               PathCounters\n {\n   private final java.lang.String[] skip;\n     descriptor: [Ljava/lang/String;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean overrideReadOnly;\n     descriptor: Z\n@@ -204,62 +203,62 @@\n   public static org.apache.commons.io.file.CountingPathVisitor withBigIntegerCounters();\n     descriptor: ()Lorg/apache/commons/io/file/CountingPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/io/file/CleaningPathVisitor\n          3: dup\n-         4: invokestatic  #2                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #3                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: iconst_0\n-         8: anewarray     #3                  // class java/lang/String\n-        11: invokespecial #4                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+         8: anewarray     #9                  // class java/lang/String\n+        11: invokespecial #11                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n         14: areturn\n       LineNumberTable:\n         line 44: 0\n \n   public static org.apache.commons.io.file.CountingPathVisitor withLongCounters();\n     descriptor: ()Lorg/apache/commons/io/file/CountingPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/io/file/CleaningPathVisitor\n          3: dup\n-         4: invokestatic  #5                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #15                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: iconst_0\n-         8: anewarray     #3                  // class java/lang/String\n-        11: invokespecial #4                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+         8: anewarray     #9                  // class java/lang/String\n+        11: invokespecial #11                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n         14: areturn\n       LineNumberTable:\n         line 53: 0\n \n   public org.apache.commons.io.file.CleaningPathVisitor(org.apache.commons.io.file.Counters$PathCounters, org.apache.commons.io.file.DeleteOption[], java.lang.String...);\n     descriptor: (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=5, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #6                  // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         2: invokespecial #18                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n          5: aload_3\n          6: ifnull        19\n          9: aload_3\n-        10: invokevirtual #7                  // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-        13: checkcast     #8                  // class \"[Ljava/lang/String;\"\n+        10: invokevirtual #23                 // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+        13: checkcast     #24                 // class \"[Ljava/lang/String;\"\n         16: goto          22\n-        19: getstatic     #9                  // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+        19: getstatic     #29                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n         22: astore        4\n         24: aload         4\n-        26: invokestatic  #10                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V\n+        26: invokestatic  #32                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V\n         29: aload_0\n         30: aload         4\n-        32: putfield      #11                 // Field skip:[Ljava/lang/String;\n+        32: putfield      #38                 // Field skip:[Ljava/lang/String;\n         35: aload_0\n         36: aload_2\n-        37: invokestatic  #12                 // Method org/apache/commons/io/file/StandardDeleteOption.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n-        40: putfield      #13                 // Field overrideReadOnly:Z\n+        37: invokestatic  #41                 // Method org/apache/commons/io/file/StandardDeleteOption.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+        40: putfield      #47                 // Field overrideReadOnly:Z\n         43: return\n       LineNumberTable:\n         line 69: 0\n         line 70: 5\n         line 71: 24\n         line 72: 29\n         line 73: 35\n@@ -282,17 +281,17 @@\n   public org.apache.commons.io.file.CleaningPathVisitor(org.apache.commons.io.file.Counters$PathCounters, java.lang.String...);\n     descriptor: (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #14                 // Field org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+         2: getstatic     #50                 // Field org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n          5: aload_2\n-         6: invokespecial #15                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+         6: invokespecial #56                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n          9: return\n       LineNumberTable:\n         line 83: 0\n         line 84: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;\n@@ -301,20 +300,20 @@\n \n   private boolean accept(java.nio.file.Path);\n     descriptor: (Ljava/nio/file/Path;)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #11                 // Field skip:[Ljava/lang/String;\n+         1: getfield      #38                 // Field skip:[Ljava/lang/String;\n          4: aload_1\n-         5: invokeinterface #16,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+         5: invokeinterface #59,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n         10: aconst_null\n-        11: invokestatic  #17                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-        14: invokestatic  #18                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+        11: invokestatic  #65                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+        14: invokestatic  #71                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n         17: ifge          24\n         20: iconst_1\n         21: goto          25\n         24: iconst_0\n         25: ireturn\n       LineNumberTable:\n         line 93: 0\n@@ -335,38 +334,38 @@\n          0: aload_0\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #19                 // Method org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n+         9: invokespecial #75                 // Method org/apache/commons/io/file/CountingPathVisitor.equals:(Ljava/lang/Object;)Z\n         12: ifne          17\n         15: iconst_0\n         16: ireturn\n         17: aload_0\n-        18: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        18: invokevirtual #79                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         21: aload_1\n-        22: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        22: invokevirtual #79                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         25: if_acmpeq     30\n         28: iconst_0\n         29: ireturn\n         30: aload_1\n         31: checkcast     #1                  // class org/apache/commons/io/file/CleaningPathVisitor\n         34: astore_2\n         35: aload_0\n-        36: getfield      #13                 // Field overrideReadOnly:Z\n+        36: getfield      #47                 // Field overrideReadOnly:Z\n         39: aload_2\n-        40: getfield      #13                 // Field overrideReadOnly:Z\n+        40: getfield      #47                 // Field overrideReadOnly:Z\n         43: if_icmpne     64\n         46: aload_0\n-        47: getfield      #11                 // Field skip:[Ljava/lang/String;\n+        47: getfield      #38                 // Field skip:[Ljava/lang/String;\n         50: aload_2\n-        51: getfield      #11                 // Field skip:[Ljava/lang/String;\n-        54: invokestatic  #21                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+        51: getfield      #38                 // Field skip:[Ljava/lang/String;\n+        54: invokestatic  #85                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n         57: ifeq          64\n         60: iconst_1\n         61: goto          65\n         64: iconst_0\n         65: ireturn\n       LineNumberTable:\n         line 98: 0\n@@ -396,36 +395,36 @@\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: bipush        31\n          2: istore_1\n          3: aload_0\n-         4: invokespecial #22                 // Method org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n+         4: invokespecial #88                 // Method org/apache/commons/io/file/CountingPathVisitor.hashCode:()I\n          7: istore_2\n          8: bipush        31\n         10: iload_2\n         11: imul\n         12: aload_0\n-        13: getfield      #11                 // Field skip:[Ljava/lang/String;\n-        16: invokestatic  #23                 // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+        13: getfield      #38                 // Field skip:[Ljava/lang/String;\n+        16: invokestatic  #92                 // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n         19: iadd\n         20: istore_2\n         21: bipush        31\n         23: iload_2\n         24: imul\n         25: iconst_1\n-        26: anewarray     #24                 // class java/lang/Object\n+        26: anewarray     #80                 // class java/lang/Object\n         29: dup\n         30: iconst_0\n         31: aload_0\n-        32: getfield      #13                 // Field overrideReadOnly:Z\n-        35: invokestatic  #25                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+        32: getfield      #47                 // Field overrideReadOnly:Z\n+        35: invokestatic  #95                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n         38: aastore\n-        39: invokestatic  #26                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n+        39: invokestatic  #101                // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n         42: iadd\n         43: istore_2\n         44: iload_2\n         45: ireturn\n       LineNumberTable:\n         line 113: 0\n         line 114: 3\n@@ -442,23 +441,23 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokespecial #27                 // Method org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         3: invokespecial #104                // Method org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          6: pop\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #28                 // Method accept:(Ljava/nio/file/Path;)Z\n+         9: invokespecial #108                // Method accept:(Ljava/nio/file/Path;)Z\n         12: ifeq          21\n-        15: getstatic     #29                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        15: getstatic     #112                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         18: goto          24\n-        21: getstatic     #30                 // Field java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+        21: getstatic     #118                // Field java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n         24: areturn\n       LineNumberTable:\n         line 122: 0\n         line 123: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;\n@@ -474,46 +473,46 @@\n   public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #28                 // Method accept:(Ljava/nio/file/Path;)Z\n+         2: invokespecial #108                // Method accept:(Ljava/nio/file/Path;)Z\n          5: ifeq          53\n          8: aload_1\n          9: iconst_1\n-        10: anewarray     #31                 // class java/nio/file/LinkOption\n+        10: anewarray     #121                // class java/nio/file/LinkOption\n         13: dup\n         14: iconst_0\n-        15: getstatic     #32                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+        15: getstatic     #123                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n         18: aastore\n-        19: invokestatic  #33                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        19: invokestatic  #127                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         22: ifeq          53\n         25: aload_0\n-        26: getfield      #13                 // Field overrideReadOnly:Z\n+        26: getfield      #47                 // Field overrideReadOnly:Z\n         29: ifeq          48\n         32: aload_1\n         33: iconst_0\n         34: iconst_1\n-        35: anewarray     #31                 // class java/nio/file/LinkOption\n+        35: anewarray     #121                // class java/nio/file/LinkOption\n         38: dup\n         39: iconst_0\n-        40: getstatic     #32                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+        40: getstatic     #123                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n         43: aastore\n-        44: invokestatic  #34                 // Method org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+        44: invokestatic  #133                // Method org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n         47: pop\n         48: aload_1\n-        49: invokestatic  #35                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+        49: invokestatic  #137                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n         52: pop\n         53: aload_0\n         54: aload_1\n         55: aload_2\n-        56: invokevirtual #36                 // Method updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-        59: getstatic     #29                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        56: invokevirtual #140                // Method updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+        59: getstatic     #112                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         62: areturn\n       LineNumberTable:\n         line 129: 0\n         line 130: 25\n         line 131: 32\n         line 133: 48\n         line 135: 53\n@@ -532,17 +531,17 @@\n   public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #37                 // class java/nio/file/Path\n+         2: checkcast     #60                 // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #38                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #144                // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n         line 36: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;\n     Exceptions:\n@@ -551,22 +550,22 @@\n   public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #37                 // class java/nio/file/Path\n+         2: checkcast     #60                 // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #39                 // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #147                // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n         line 36: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/file/CleaningPathVisitor;\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"CleaningPathVisitor.java\"\n InnerClasses:\n-  public static #52= #51 of #94;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #183= #161 of #4;         // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
