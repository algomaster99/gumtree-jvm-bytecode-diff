{"diffoscope-json-version": 1, "source1": "first/DaitchMokotoffSoundex.class", "source2": "second/DaitchMokotoffSoundex.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,123 +1,123 @@\n-  SHA-256 checksum c744889069b08849865007a69bf55e886d2a836d5f59d412186f9ec24c342950\n+  SHA-256 checksum 670dd6521c952eb18d41220fecc3caa17d1f8fb24d9fd9024dfd4e3f3e74cdfa\n   Compiled from \"DaitchMokotoffSoundex.java\"\n public class org.apache.commons.codec.language.DaitchMokotoffSoundex implements org.apache.commons.codec.StringEncoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #3                          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n   super_class: #105                       // java/lang/Object\n   interfaces: 1, fields: 9, methods: 10, attributes: 2\n Constant pool:\n-    #1 = Methodref          #89.#162      // java/util/Scanner.hasNextLine:()Z\n-    #2 = Methodref          #89.#163      // java/util/Scanner.nextLine:()Ljava/lang/String;\n-    #3 = Class              #164          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n-    #4 = String             #165          // */\n-    #5 = Methodref          #58.#166      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-    #6 = String             #167          // /*\n-    #7 = Methodref          #58.#168      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-    #8 = String             #169          // //\n-    #9 = Methodref          #58.#170      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #10 = Methodref          #58.#171      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #11 = Methodref          #58.#172      // java/lang/String.trim:()Ljava/lang/String;\n-   #12 = Methodref          #58.#173      // java/lang/String.length:()I\n-   #13 = String             #174          // =\n-   #14 = Methodref          #58.#175      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #15 = Methodref          #58.#176      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n-   #16 = Class              #177          // java/lang/IllegalArgumentException\n-   #17 = Class              #178          // java/lang/StringBuilder\n-   #18 = Methodref          #17.#179      // java/lang/StringBuilder.\"<init>\":()V\n-   #19 = String             #180          // Malformed folding statement split into\n-   #20 = Methodref          #17.#181      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #21 = Methodref          #17.#182      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #22 = String             #183          //  parts:\n-   #23 = String             #184          //  in\n-   #24 = Methodref          #17.#185      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #16.#186      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #26 = String             #187          // Malformed folding statement - patterns are not single characters:\n-   #27 = Methodref          #58.#188      // java/lang/String.charAt:(I)C\n-   #28 = Methodref          #55.#189      // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #29 = InterfaceMethodref #190.#191     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #30 = String             #192          // \\\\s+\n-   #31 = String             #193          // Malformed rule statement split into\n-   #32 = Methodref          #3.#194       // org/apache/commons/codec/language/DaitchMokotoffSoundex.stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n-   #33 = Class              #195          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n-   #34 = Methodref          #33.#196      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #35 = Methodref          #33.#197      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-   #36 = InterfaceMethodref #190.#198     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #37 = Class              #199          // java/util/List\n-   #38 = Class              #200          // java/util/ArrayList\n-   #39 = Methodref          #38.#179      // java/util/ArrayList.\"<init>\":()V\n-   #40 = InterfaceMethodref #37.#201      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #41 = Class              #202          // java/lang/IllegalStateException\n-   #42 = String             #203          // Problem parsing line \\'\n-   #43 = String             #204          // \\' in\n-   #44 = Methodref          #41.#205      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #45 = String             #206          // \\\"\n-   #46 = Methodref          #58.#207      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #47 = Methodref          #3.#208       // org/apache/commons/codec/language/DaitchMokotoffSoundex.\"<init>\":(Z)V\n-   #48 = Methodref          #105.#179     // java/lang/Object.\"<init>\":()V\n-   #49 = Fieldref           #3.#209       // org/apache/commons/codec/language/DaitchMokotoffSoundex.folding:Z\n-   #50 = Methodref          #58.#210      // java/lang/String.toCharArray:()[C\n-   #51 = Methodref          #55.#211      // java/lang/Character.isWhitespace:(C)Z\n-   #52 = Methodref          #55.#212      // java/lang/Character.toLowerCase:(C)C\n-   #53 = Fieldref           #3.#213       // org/apache/commons/codec/language/DaitchMokotoffSoundex.FOLDINGS:Ljava/util/Map;\n-   #54 = InterfaceMethodref #190.#214     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n-   #55 = Class              #215          // java/lang/Character\n-   #56 = Methodref          #55.#216      // java/lang/Character.charValue:()C\n-   #57 = Methodref          #17.#217      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #58 = Class              #218          // java/lang/String\n-   #59 = Class              #219          // org/apache/commons/codec/EncoderException\n-   #60 = String             #220          // Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n-   #61 = Methodref          #59.#186      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #62 = Methodref          #3.#221       // org/apache/commons/codec/language/DaitchMokotoffSoundex.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #63 = Methodref          #3.#222       // org/apache/commons/codec/language/DaitchMokotoffSoundex.soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n-   #64 = Methodref          #3.#223       // org/apache/commons/codec/language/DaitchMokotoffSoundex.cleanup:(Ljava/lang/String;)Ljava/lang/String;\n-   #65 = Class              #224          // java/util/LinkedHashSet\n-   #66 = Methodref          #65.#179      // java/util/LinkedHashSet.\"<init>\":()V\n-   #67 = Class              #225          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n-   #68 = Methodref          #67.#226      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-   #69 = InterfaceMethodref #227.#201     // java/util/Set.add:(Ljava/lang/Object;)Z\n-   #70 = Fieldref           #3.#228       // org/apache/commons/codec/language/DaitchMokotoffSoundex.RULES:Ljava/util/Map;\n-   #71 = Methodref          #229.#230     // java/util/Collections.emptyList:()Ljava/util/List;\n-   #72 = InterfaceMethodref #37.#231      // java/util/List.iterator:()Ljava/util/Iterator;\n-   #73 = InterfaceMethodref #232.#233     // java/util/Iterator.hasNext:()Z\n-   #74 = InterfaceMethodref #232.#234     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #75 = Methodref          #33.#235      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n-   #76 = InterfaceMethodref #37.#236      // java/util/List.clear:()V\n-   #77 = Methodref          #33.#237      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n-   #78 = InterfaceMethodref #227.#231     // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #79 = Methodref          #67.#238      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-   #80 = Methodref          #67.#239      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n-   #81 = InterfaceMethodref #227.#236     // java/util/Set.clear:()V\n-   #82 = InterfaceMethodref #227.#240     // java/util/Set.addAll:(Ljava/util/Collection;)Z\n-   #83 = Methodref          #33.#241      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n-   #84 = InterfaceMethodref #227.#242     // java/util/Set.size:()I\n-   #85 = Methodref          #67.#243      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n-   #86 = Methodref          #67.#185      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n-   #87 = Class              #244          // java/util/HashMap\n-   #88 = Methodref          #87.#179      // java/util/HashMap.\"<init>\":()V\n-   #89 = Class              #245          // java/util/Scanner\n-   #90 = String             #246          // org/apache/commons/codec/language/dmrules.txt\n-   #91 = Methodref          #247.#248     // org/apache/commons/codec/Resources.getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-   #92 = Class              #249          // org/apache/commons/codec/CharEncoding\n-   #93 = String             #250          // UTF-8\n-   #94 = Methodref          #89.#251      // java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #95 = Methodref          #3.#252       // org/apache/commons/codec/language/DaitchMokotoffSoundex.parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-   #96 = Methodref          #89.#253      // java/util/Scanner.close:()V\n-   #97 = Class              #254          // java/lang/Throwable\n-   #98 = Methodref          #97.#255      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #99 = InterfaceMethodref #190.#256     // java/util/Map.entrySet:()Ljava/util/Set;\n-  #100 = Class              #257          // java/util/Map$Entry\n-  #101 = InterfaceMethodref #100.#259     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-  #102 = Class              #260          // org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  #103 = Methodref          #102.#179     // org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n-  #104 = Methodref          #229.#261     // java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n-  #105 = Class              #262          // java/lang/Object\n-  #106 = Class              #263          // org/apache/commons/codec/StringEncoder\n+    #1 = Methodref          #89.#153      // java/util/Scanner.hasNextLine:()Z\n+    #2 = Methodref          #89.#154      // java/util/Scanner.nextLine:()Ljava/lang/String;\n+    #3 = Class              #155          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n+    #4 = String             #156          // */\n+    #5 = Methodref          #58.#157      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+    #6 = String             #158          // /*\n+    #7 = Methodref          #58.#159      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+    #8 = String             #160          // //\n+    #9 = Methodref          #58.#161      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+   #10 = Methodref          #58.#162      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #11 = Methodref          #58.#163      // java/lang/String.trim:()Ljava/lang/String;\n+   #12 = Methodref          #58.#164      // java/lang/String.length:()I\n+   #13 = String             #165          // =\n+   #14 = Methodref          #58.#166      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+   #15 = Methodref          #58.#167      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+   #16 = Class              #168          // java/lang/IllegalArgumentException\n+   #17 = Class              #169          // java/lang/StringBuilder\n+   #18 = Methodref          #17.#170      // java/lang/StringBuilder.\"<init>\":()V\n+   #19 = String             #171          // Malformed folding statement split into\n+   #20 = Methodref          #17.#172      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #21 = Methodref          #17.#173      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #22 = String             #174          //  parts:\n+   #23 = String             #175          //  in\n+   #24 = Methodref          #17.#176      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #25 = Methodref          #16.#177      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #26 = String             #178          // Malformed folding statement - patterns are not single characters:\n+   #27 = Methodref          #58.#179      // java/lang/String.charAt:(I)C\n+   #28 = Methodref          #55.#180      // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+   #29 = InterfaceMethodref #134.#181     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #30 = String             #182          // \\\\s+\n+   #31 = String             #183          // Malformed rule statement split into\n+   #32 = Methodref          #3.#184       // org/apache/commons/codec/language/DaitchMokotoffSoundex.stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+   #33 = Class              #185          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+   #34 = Methodref          #33.#186      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+   #35 = Methodref          #33.#187      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+   #36 = InterfaceMethodref #134.#188     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #37 = Class              #189          // java/util/List\n+   #38 = Class              #190          // java/util/ArrayList\n+   #39 = Methodref          #38.#170      // java/util/ArrayList.\"<init>\":()V\n+   #40 = InterfaceMethodref #37.#191      // java/util/List.add:(Ljava/lang/Object;)Z\n+   #41 = Class              #192          // java/lang/IllegalStateException\n+   #42 = String             #193          // Problem parsing line \\'\n+   #43 = String             #194          // \\' in\n+   #44 = Methodref          #41.#195      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #45 = String             #196          // \\\"\n+   #46 = Methodref          #58.#197      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #47 = Methodref          #3.#198       // org/apache/commons/codec/language/DaitchMokotoffSoundex.\"<init>\":(Z)V\n+   #48 = Methodref          #105.#170     // java/lang/Object.\"<init>\":()V\n+   #49 = Fieldref           #3.#199       // org/apache/commons/codec/language/DaitchMokotoffSoundex.folding:Z\n+   #50 = Methodref          #58.#200      // java/lang/String.toCharArray:()[C\n+   #51 = Methodref          #55.#201      // java/lang/Character.isWhitespace:(C)Z\n+   #52 = Methodref          #55.#202      // java/lang/Character.toLowerCase:(C)C\n+   #53 = Fieldref           #3.#203       // org/apache/commons/codec/language/DaitchMokotoffSoundex.FOLDINGS:Ljava/util/Map;\n+   #54 = InterfaceMethodref #134.#204     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+   #55 = Class              #205          // java/lang/Character\n+   #56 = Methodref          #55.#206      // java/lang/Character.charValue:()C\n+   #57 = Methodref          #17.#207      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #58 = Class              #208          // java/lang/String\n+   #59 = Class              #209          // org/apache/commons/codec/EncoderException\n+   #60 = String             #210          // Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n+   #61 = Methodref          #59.#177      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #62 = Methodref          #3.#211       // org/apache/commons/codec/language/DaitchMokotoffSoundex.encode:(Ljava/lang/String;)Ljava/lang/String;\n+   #63 = Methodref          #3.#212       // org/apache/commons/codec/language/DaitchMokotoffSoundex.soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+   #64 = Methodref          #3.#213       // org/apache/commons/codec/language/DaitchMokotoffSoundex.cleanup:(Ljava/lang/String;)Ljava/lang/String;\n+   #65 = Class              #214          // java/util/LinkedHashSet\n+   #66 = Methodref          #65.#170      // java/util/LinkedHashSet.\"<init>\":()V\n+   #67 = Class              #215          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+   #68 = Methodref          #67.#216      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+   #69 = InterfaceMethodref #148.#191     // java/util/Set.add:(Ljava/lang/Object;)Z\n+   #70 = Fieldref           #3.#217       // org/apache/commons/codec/language/DaitchMokotoffSoundex.RULES:Ljava/util/Map;\n+   #71 = Methodref          #218.#219     // java/util/Collections.emptyList:()Ljava/util/List;\n+   #72 = InterfaceMethodref #37.#220      // java/util/List.iterator:()Ljava/util/Iterator;\n+   #73 = InterfaceMethodref #149.#221     // java/util/Iterator.hasNext:()Z\n+   #74 = InterfaceMethodref #149.#222     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #75 = Methodref          #33.#223      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n+   #76 = InterfaceMethodref #37.#224      // java/util/List.clear:()V\n+   #77 = Methodref          #33.#225      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n+   #78 = InterfaceMethodref #148.#220     // java/util/Set.iterator:()Ljava/util/Iterator;\n+   #79 = Methodref          #67.#226      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+   #80 = Methodref          #67.#227      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n+   #81 = InterfaceMethodref #148.#224     // java/util/Set.clear:()V\n+   #82 = InterfaceMethodref #148.#228     // java/util/Set.addAll:(Ljava/util/Collection;)Z\n+   #83 = Methodref          #33.#229      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n+   #84 = InterfaceMethodref #148.#230     // java/util/Set.size:()I\n+   #85 = Methodref          #67.#231      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n+   #86 = Methodref          #67.#176      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n+   #87 = Class              #232          // java/util/HashMap\n+   #88 = Methodref          #87.#170      // java/util/HashMap.\"<init>\":()V\n+   #89 = Class              #233          // java/util/Scanner\n+   #90 = String             #234          // org/apache/commons/codec/language/dmrules.txt\n+   #91 = Methodref          #235.#236     // org/apache/commons/codec/Resources.getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+   #92 = Class              #237          // org/apache/commons/codec/CharEncoding\n+   #93 = String             #238          // UTF-8\n+   #94 = Methodref          #89.#239      // java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #95 = Methodref          #3.#240       // org/apache/commons/codec/language/DaitchMokotoffSoundex.parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+   #96 = Methodref          #89.#241      // java/util/Scanner.close:()V\n+   #97 = Class              #242          // java/lang/Throwable\n+   #98 = Methodref          #97.#243      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #99 = InterfaceMethodref #134.#244     // java/util/Map.entrySet:()Ljava/util/Set;\n+  #100 = Class              #245          // java/util/Map$Entry\n+  #101 = InterfaceMethodref #100.#247     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+  #102 = Class              #248          // org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  #103 = Methodref          #102.#170     // org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n+  #104 = Methodref          #218.#249     // java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n+  #105 = Class              #250          // java/lang/Object\n+  #106 = Class              #251          // org/apache/commons/codec/StringEncoder\n   #107 = Utf8               Rule\n   #108 = Utf8               InnerClasses\n   #109 = Utf8               Branch\n   #110 = Utf8               COMMENT\n   #111 = Utf8               Ljava/lang/String;\n   #112 = Utf8               ConstantValue\n   #113 = Utf8               DOUBLE_QUOTE\n@@ -136,230 +136,218 @@\n   #126 = Utf8               folding\n   #127 = Utf8               Z\n   #128 = Utf8               parseRules\n   #129 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n   #130 = Utf8               Code\n   #131 = Utf8               LineNumberTable\n   #132 = Utf8               StackMapTable\n-  #133 = Class              #218          // java/lang/String\n-  #134 = Class              #264          // \"[Ljava/lang/String;\"\n-  #135 = Class              #245          // java/util/Scanner\n-  #136 = Class              #265          // java/util/Map\n-  #137 = Class              #195          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n-  #138 = Class              #199          // java/util/List\n-  #139 = Class              #177          // java/lang/IllegalArgumentException\n-  #140 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n-  #141 = Utf8               stripQuotes\n-  #142 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #143 = Utf8               <init>\n-  #144 = Utf8               ()V\n-  #145 = Utf8               (Z)V\n-  #146 = Utf8               cleanup\n-  #147 = Class              #164          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  #148 = Class              #178          // java/lang/StringBuilder\n-  #149 = Class              #266          // \"[C\"\n-  #150 = Utf8               encode\n-  #151 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #152 = Utf8               Exceptions\n-  #153 = Utf8               soundex\n-  #154 = Utf8               (Ljava/lang/String;Z)[Ljava/lang/String;\n-  #155 = Class              #267          // java/util/Set\n-  #156 = Class              #268          // java/util/Iterator\n-  #157 = Class              #225          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n-  #158 = Utf8               <clinit>\n-  #159 = Class              #254          // java/lang/Throwable\n-  #160 = Utf8               SourceFile\n-  #161 = Utf8               DaitchMokotoffSoundex.java\n-  #162 = NameAndType        #269:#270     // hasNextLine:()Z\n-  #163 = NameAndType        #271:#272     // nextLine:()Ljava/lang/String;\n-  #164 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  #165 = Utf8               */\n-  #166 = NameAndType        #273:#274     // endsWith:(Ljava/lang/String;)Z\n-  #167 = Utf8               /*\n-  #168 = NameAndType        #275:#274     // startsWith:(Ljava/lang/String;)Z\n-  #169 = Utf8               //\n-  #170 = NameAndType        #276:#277     // indexOf:(Ljava/lang/String;)I\n-  #171 = NameAndType        #278:#279     // substring:(II)Ljava/lang/String;\n-  #172 = NameAndType        #280:#272     // trim:()Ljava/lang/String;\n-  #173 = NameAndType        #281:#282     // length:()I\n-  #174 = Utf8               =\n-  #175 = NameAndType        #283:#284     // contains:(Ljava/lang/CharSequence;)Z\n-  #176 = NameAndType        #285:#286     // split:(Ljava/lang/String;)[Ljava/lang/String;\n-  #177 = Utf8               java/lang/IllegalArgumentException\n-  #178 = Utf8               java/lang/StringBuilder\n-  #179 = NameAndType        #143:#144     // \"<init>\":()V\n-  #180 = Utf8               Malformed folding statement split into\n-  #181 = NameAndType        #287:#288     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #182 = NameAndType        #287:#289     // append:(I)Ljava/lang/StringBuilder;\n-  #183 = Utf8                parts:\n-  #184 = Utf8                in\n-  #185 = NameAndType        #290:#272     // toString:()Ljava/lang/String;\n-  #186 = NameAndType        #143:#291     // \"<init>\":(Ljava/lang/String;)V\n-  #187 = Utf8               Malformed folding statement - patterns are not single characters:\n-  #188 = NameAndType        #292:#293     // charAt:(I)C\n-  #189 = NameAndType        #294:#295     // valueOf:(C)Ljava/lang/Character;\n-  #190 = Class              #265          // java/util/Map\n-  #191 = NameAndType        #296:#297     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #192 = Utf8               \\\\s+\n-  #193 = Utf8               Malformed rule statement split into\n-  #194 = NameAndType        #141:#142     // stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n-  #195 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n-  #196 = NameAndType        #143:#298     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #197 = NameAndType        #299:#300     // access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-  #198 = NameAndType        #301:#151     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #199 = Utf8               java/util/List\n-  #200 = Utf8               java/util/ArrayList\n-  #201 = NameAndType        #302:#303     // add:(Ljava/lang/Object;)Z\n-  #202 = Utf8               java/lang/IllegalStateException\n-  #203 = Utf8               Problem parsing line \\'\n-  #204 = Utf8               \\' in\n-  #205 = NameAndType        #143:#304     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #206 = Utf8               \\\"\n-  #207 = NameAndType        #278:#305     // substring:(I)Ljava/lang/String;\n-  #208 = NameAndType        #143:#145     // \"<init>\":(Z)V\n-  #209 = NameAndType        #126:#127     // folding:Z\n-  #210 = NameAndType        #306:#307     // toCharArray:()[C\n-  #211 = NameAndType        #308:#309     // isWhitespace:(C)Z\n-  #212 = NameAndType        #310:#311     // toLowerCase:(C)C\n-  #213 = NameAndType        #124:#121     // FOLDINGS:Ljava/util/Map;\n-  #214 = NameAndType        #312:#303     // containsKey:(Ljava/lang/Object;)Z\n-  #215 = Utf8               java/lang/Character\n-  #216 = NameAndType        #313:#314     // charValue:()C\n-  #217 = NameAndType        #287:#315     // append:(C)Ljava/lang/StringBuilder;\n-  #218 = Utf8               java/lang/String\n-  #219 = Utf8               org/apache/commons/codec/EncoderException\n-  #220 = Utf8               Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n-  #221 = NameAndType        #150:#142     // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #222 = NameAndType        #153:#154     // soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n-  #223 = NameAndType        #146:#142     // cleanup:(Ljava/lang/String;)Ljava/lang/String;\n-  #224 = Utf8               java/util/LinkedHashSet\n-  #225 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n-  #226 = NameAndType        #143:#316     // \"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-  #227 = Class              #267          // java/util/Set\n-  #228 = NameAndType        #120:#121     // RULES:Ljava/util/Map;\n-  #229 = Class              #317          // java/util/Collections\n-  #230 = NameAndType        #318:#319     // emptyList:()Ljava/util/List;\n-  #231 = NameAndType        #320:#321     // iterator:()Ljava/util/Iterator;\n-  #232 = Class              #268          // java/util/Iterator\n-  #233 = NameAndType        #322:#270     // hasNext:()Z\n-  #234 = NameAndType        #323:#324     // next:()Ljava/lang/Object;\n-  #235 = NameAndType        #325:#274     // matches:(Ljava/lang/String;)Z\n-  #236 = NameAndType        #326:#144     // clear:()V\n-  #237 = NameAndType        #327:#154     // getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n-  #238 = NameAndType        #328:#329     // createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-  #239 = NameAndType        #330:#331     // processNextReplacement:(Ljava/lang/String;Z)V\n-  #240 = NameAndType        #332:#333     // addAll:(Ljava/util/Collection;)Z\n-  #241 = NameAndType        #334:#282     // getPatternLength:()I\n-  #242 = NameAndType        #335:#282     // size:()I\n-  #243 = NameAndType        #336:#144     // finish:()V\n-  #244 = Utf8               java/util/HashMap\n-  #245 = Utf8               java/util/Scanner\n-  #246 = Utf8               org/apache/commons/codec/language/dmrules.txt\n-  #247 = Class              #337          // org/apache/commons/codec/Resources\n-  #248 = NameAndType        #338:#339     // getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-  #249 = Utf8               org/apache/commons/codec/CharEncoding\n-  #250 = Utf8               UTF-8\n-  #251 = NameAndType        #143:#340     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #252 = NameAndType        #128:#129     // parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-  #253 = NameAndType        #341:#144     // close:()V\n-  #254 = Utf8               java/lang/Throwable\n-  #255 = NameAndType        #342:#343     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #256 = NameAndType        #344:#345     // entrySet:()Ljava/util/Set;\n-  #257 = Utf8               java/util/Map$Entry\n-  #258 = Utf8               Entry\n-  #259 = NameAndType        #346:#324     // getValue:()Ljava/lang/Object;\n-  #260 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  #261 = NameAndType        #347:#348     // sort:(Ljava/util/List;Ljava/util/Comparator;)V\n-  #262 = Utf8               java/lang/Object\n-  #263 = Utf8               org/apache/commons/codec/StringEncoder\n-  #264 = Utf8               [Ljava/lang/String;\n-  #265 = Utf8               java/util/Map\n-  #266 = Utf8               [C\n-  #267 = Utf8               java/util/Set\n-  #268 = Utf8               java/util/Iterator\n-  #269 = Utf8               hasNextLine\n-  #270 = Utf8               ()Z\n-  #271 = Utf8               nextLine\n-  #272 = Utf8               ()Ljava/lang/String;\n-  #273 = Utf8               endsWith\n-  #274 = Utf8               (Ljava/lang/String;)Z\n-  #275 = Utf8               startsWith\n-  #276 = Utf8               indexOf\n-  #277 = Utf8               (Ljava/lang/String;)I\n-  #278 = Utf8               substring\n-  #279 = Utf8               (II)Ljava/lang/String;\n-  #280 = Utf8               trim\n-  #281 = Utf8               length\n-  #282 = Utf8               ()I\n-  #283 = Utf8               contains\n-  #284 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #285 = Utf8               split\n-  #286 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #287 = Utf8               append\n-  #288 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #289 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #290 = Utf8               toString\n-  #291 = Utf8               (Ljava/lang/String;)V\n-  #292 = Utf8               charAt\n-  #293 = Utf8               (I)C\n-  #294 = Utf8               valueOf\n-  #295 = Utf8               (C)Ljava/lang/Character;\n-  #296 = Utf8               put\n-  #297 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #298 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #299 = Utf8               access$000\n-  #300 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-  #301 = Utf8               get\n-  #302 = Utf8               add\n-  #303 = Utf8               (Ljava/lang/Object;)Z\n-  #304 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #305 = Utf8               (I)Ljava/lang/String;\n-  #306 = Utf8               toCharArray\n-  #307 = Utf8               ()[C\n-  #308 = Utf8               isWhitespace\n-  #309 = Utf8               (C)Z\n-  #310 = Utf8               toLowerCase\n-  #311 = Utf8               (C)C\n-  #312 = Utf8               containsKey\n-  #313 = Utf8               charValue\n-  #314 = Utf8               ()C\n-  #315 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #316 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-  #317 = Utf8               java/util/Collections\n-  #318 = Utf8               emptyList\n-  #319 = Utf8               ()Ljava/util/List;\n-  #320 = Utf8               iterator\n-  #321 = Utf8               ()Ljava/util/Iterator;\n-  #322 = Utf8               hasNext\n-  #323 = Utf8               next\n-  #324 = Utf8               ()Ljava/lang/Object;\n-  #325 = Utf8               matches\n-  #326 = Utf8               clear\n-  #327 = Utf8               getReplacements\n-  #328 = Utf8               createBranch\n-  #329 = Utf8               ()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-  #330 = Utf8               processNextReplacement\n-  #331 = Utf8               (Ljava/lang/String;Z)V\n-  #332 = Utf8               addAll\n-  #333 = Utf8               (Ljava/util/Collection;)Z\n-  #334 = Utf8               getPatternLength\n-  #335 = Utf8               size\n-  #336 = Utf8               finish\n-  #337 = Utf8               org/apache/commons/codec/Resources\n-  #338 = Utf8               getInputStream\n-  #339 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n-  #340 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #341 = Utf8               close\n-  #342 = Utf8               addSuppressed\n-  #343 = Utf8               (Ljava/lang/Throwable;)V\n-  #344 = Utf8               entrySet\n-  #345 = Utf8               ()Ljava/util/Set;\n-  #346 = Utf8               getValue\n-  #347 = Utf8               sort\n-  #348 = Utf8               (Ljava/util/List;Ljava/util/Comparator;)V\n+  #133 = Class              #252          // \"[Ljava/lang/String;\"\n+  #134 = Class              #253          // java/util/Map\n+  #135 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n+  #136 = Utf8               stripQuotes\n+  #137 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #138 = Utf8               <init>\n+  #139 = Utf8               ()V\n+  #140 = Utf8               (Z)V\n+  #141 = Utf8               cleanup\n+  #142 = Class              #254          // \"[C\"\n+  #143 = Utf8               encode\n+  #144 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #145 = Utf8               Exceptions\n+  #146 = Utf8               soundex\n+  #147 = Utf8               (Ljava/lang/String;Z)[Ljava/lang/String;\n+  #148 = Class              #255          // java/util/Set\n+  #149 = Class              #256          // java/util/Iterator\n+  #150 = Utf8               <clinit>\n+  #151 = Utf8               SourceFile\n+  #152 = Utf8               DaitchMokotoffSoundex.java\n+  #153 = NameAndType        #257:#258     // hasNextLine:()Z\n+  #154 = NameAndType        #259:#260     // nextLine:()Ljava/lang/String;\n+  #155 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex\n+  #156 = Utf8               */\n+  #157 = NameAndType        #261:#262     // endsWith:(Ljava/lang/String;)Z\n+  #158 = Utf8               /*\n+  #159 = NameAndType        #263:#262     // startsWith:(Ljava/lang/String;)Z\n+  #160 = Utf8               //\n+  #161 = NameAndType        #264:#265     // indexOf:(Ljava/lang/String;)I\n+  #162 = NameAndType        #266:#267     // substring:(II)Ljava/lang/String;\n+  #163 = NameAndType        #268:#260     // trim:()Ljava/lang/String;\n+  #164 = NameAndType        #269:#270     // length:()I\n+  #165 = Utf8               =\n+  #166 = NameAndType        #271:#272     // contains:(Ljava/lang/CharSequence;)Z\n+  #167 = NameAndType        #273:#274     // split:(Ljava/lang/String;)[Ljava/lang/String;\n+  #168 = Utf8               java/lang/IllegalArgumentException\n+  #169 = Utf8               java/lang/StringBuilder\n+  #170 = NameAndType        #138:#139     // \"<init>\":()V\n+  #171 = Utf8               Malformed folding statement split into\n+  #172 = NameAndType        #275:#276     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #173 = NameAndType        #275:#277     // append:(I)Ljava/lang/StringBuilder;\n+  #174 = Utf8                parts:\n+  #175 = Utf8                in\n+  #176 = NameAndType        #278:#260     // toString:()Ljava/lang/String;\n+  #177 = NameAndType        #138:#279     // \"<init>\":(Ljava/lang/String;)V\n+  #178 = Utf8               Malformed folding statement - patterns are not single characters:\n+  #179 = NameAndType        #280:#281     // charAt:(I)C\n+  #180 = NameAndType        #282:#283     // valueOf:(C)Ljava/lang/Character;\n+  #181 = NameAndType        #284:#285     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #182 = Utf8               \\\\s+\n+  #183 = Utf8               Malformed rule statement split into\n+  #184 = NameAndType        #136:#137     // stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+  #185 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+  #186 = NameAndType        #138:#286     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #187 = NameAndType        #287:#288     // access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+  #188 = NameAndType        #289:#144     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #189 = Utf8               java/util/List\n+  #190 = Utf8               java/util/ArrayList\n+  #191 = NameAndType        #290:#291     // add:(Ljava/lang/Object;)Z\n+  #192 = Utf8               java/lang/IllegalStateException\n+  #193 = Utf8               Problem parsing line \\'\n+  #194 = Utf8               \\' in\n+  #195 = NameAndType        #138:#292     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #196 = Utf8               \\\"\n+  #197 = NameAndType        #266:#293     // substring:(I)Ljava/lang/String;\n+  #198 = NameAndType        #138:#140     // \"<init>\":(Z)V\n+  #199 = NameAndType        #126:#127     // folding:Z\n+  #200 = NameAndType        #294:#295     // toCharArray:()[C\n+  #201 = NameAndType        #296:#297     // isWhitespace:(C)Z\n+  #202 = NameAndType        #298:#299     // toLowerCase:(C)C\n+  #203 = NameAndType        #124:#121     // FOLDINGS:Ljava/util/Map;\n+  #204 = NameAndType        #300:#291     // containsKey:(Ljava/lang/Object;)Z\n+  #205 = Utf8               java/lang/Character\n+  #206 = NameAndType        #301:#302     // charValue:()C\n+  #207 = NameAndType        #275:#303     // append:(C)Ljava/lang/StringBuilder;\n+  #208 = Utf8               java/lang/String\n+  #209 = Utf8               org/apache/commons/codec/EncoderException\n+  #210 = Utf8               Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n+  #211 = NameAndType        #143:#137     // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #212 = NameAndType        #146:#147     // soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #213 = NameAndType        #141:#137     // cleanup:(Ljava/lang/String;)Ljava/lang/String;\n+  #214 = Utf8               java/util/LinkedHashSet\n+  #215 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+  #216 = NameAndType        #138:#304     // \"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+  #217 = NameAndType        #120:#121     // RULES:Ljava/util/Map;\n+  #218 = Class              #305          // java/util/Collections\n+  #219 = NameAndType        #306:#307     // emptyList:()Ljava/util/List;\n+  #220 = NameAndType        #308:#309     // iterator:()Ljava/util/Iterator;\n+  #221 = NameAndType        #310:#258     // hasNext:()Z\n+  #222 = NameAndType        #311:#312     // next:()Ljava/lang/Object;\n+  #223 = NameAndType        #313:#262     // matches:(Ljava/lang/String;)Z\n+  #224 = NameAndType        #314:#139     // clear:()V\n+  #225 = NameAndType        #315:#147     // getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #226 = NameAndType        #316:#317     // createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #227 = NameAndType        #318:#319     // processNextReplacement:(Ljava/lang/String;Z)V\n+  #228 = NameAndType        #320:#321     // addAll:(Ljava/util/Collection;)Z\n+  #229 = NameAndType        #322:#270     // getPatternLength:()I\n+  #230 = NameAndType        #323:#270     // size:()I\n+  #231 = NameAndType        #324:#139     // finish:()V\n+  #232 = Utf8               java/util/HashMap\n+  #233 = Utf8               java/util/Scanner\n+  #234 = Utf8               org/apache/commons/codec/language/dmrules.txt\n+  #235 = Class              #325          // org/apache/commons/codec/Resources\n+  #236 = NameAndType        #326:#327     // getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+  #237 = Utf8               org/apache/commons/codec/CharEncoding\n+  #238 = Utf8               UTF-8\n+  #239 = NameAndType        #138:#328     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #240 = NameAndType        #128:#129     // parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+  #241 = NameAndType        #329:#139     // close:()V\n+  #242 = Utf8               java/lang/Throwable\n+  #243 = NameAndType        #330:#331     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #244 = NameAndType        #332:#333     // entrySet:()Ljava/util/Set;\n+  #245 = Utf8               java/util/Map$Entry\n+  #246 = Utf8               Entry\n+  #247 = NameAndType        #334:#312     // getValue:()Ljava/lang/Object;\n+  #248 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  #249 = NameAndType        #335:#336     // sort:(Ljava/util/List;Ljava/util/Comparator;)V\n+  #250 = Utf8               java/lang/Object\n+  #251 = Utf8               org/apache/commons/codec/StringEncoder\n+  #252 = Utf8               [Ljava/lang/String;\n+  #253 = Utf8               java/util/Map\n+  #254 = Utf8               [C\n+  #255 = Utf8               java/util/Set\n+  #256 = Utf8               java/util/Iterator\n+  #257 = Utf8               hasNextLine\n+  #258 = Utf8               ()Z\n+  #259 = Utf8               nextLine\n+  #260 = Utf8               ()Ljava/lang/String;\n+  #261 = Utf8               endsWith\n+  #262 = Utf8               (Ljava/lang/String;)Z\n+  #263 = Utf8               startsWith\n+  #264 = Utf8               indexOf\n+  #265 = Utf8               (Ljava/lang/String;)I\n+  #266 = Utf8               substring\n+  #267 = Utf8               (II)Ljava/lang/String;\n+  #268 = Utf8               trim\n+  #269 = Utf8               length\n+  #270 = Utf8               ()I\n+  #271 = Utf8               contains\n+  #272 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #273 = Utf8               split\n+  #274 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+  #275 = Utf8               append\n+  #276 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #277 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #278 = Utf8               toString\n+  #279 = Utf8               (Ljava/lang/String;)V\n+  #280 = Utf8               charAt\n+  #281 = Utf8               (I)C\n+  #282 = Utf8               valueOf\n+  #283 = Utf8               (C)Ljava/lang/Character;\n+  #284 = Utf8               put\n+  #285 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #286 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #287 = Utf8               access$000\n+  #288 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+  #289 = Utf8               get\n+  #290 = Utf8               add\n+  #291 = Utf8               (Ljava/lang/Object;)Z\n+  #292 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #293 = Utf8               (I)Ljava/lang/String;\n+  #294 = Utf8               toCharArray\n+  #295 = Utf8               ()[C\n+  #296 = Utf8               isWhitespace\n+  #297 = Utf8               (C)Z\n+  #298 = Utf8               toLowerCase\n+  #299 = Utf8               (C)C\n+  #300 = Utf8               containsKey\n+  #301 = Utf8               charValue\n+  #302 = Utf8               ()C\n+  #303 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #304 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+  #305 = Utf8               java/util/Collections\n+  #306 = Utf8               emptyList\n+  #307 = Utf8               ()Ljava/util/List;\n+  #308 = Utf8               iterator\n+  #309 = Utf8               ()Ljava/util/Iterator;\n+  #310 = Utf8               hasNext\n+  #311 = Utf8               next\n+  #312 = Utf8               ()Ljava/lang/Object;\n+  #313 = Utf8               matches\n+  #314 = Utf8               clear\n+  #315 = Utf8               getReplacements\n+  #316 = Utf8               createBranch\n+  #317 = Utf8               ()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #318 = Utf8               processNextReplacement\n+  #319 = Utf8               (Ljava/lang/String;Z)V\n+  #320 = Utf8               addAll\n+  #321 = Utf8               (Ljava/util/Collection;)Z\n+  #322 = Utf8               getPatternLength\n+  #323 = Utf8               size\n+  #324 = Utf8               finish\n+  #325 = Utf8               org/apache/commons/codec/Resources\n+  #326 = Utf8               getInputStream\n+  #327 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n+  #328 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #329 = Utf8               close\n+  #330 = Utf8               addSuppressed\n+  #331 = Utf8               (Ljava/lang/Throwable;)V\n+  #332 = Utf8               entrySet\n+  #333 = Utf8               ()Ljava/util/Set;\n+  #334 = Utf8               getValue\n+  #335 = Utf8               sort\n+  #336 = Utf8               (Ljava/util/List;Ljava/util/Comparator;)V\n {\n   private static final java.lang.String COMMENT = \"//\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String //\n \n   private static final java.lang.String DOUBLE_QUOTE = \"\\\"\";\n@@ -718,15 +706,15 @@\n           locals = [ class java/util/Scanner, class java/lang/String, class java/util/Map, class java/util/Map, int, int, class java/lang/String, class java/lang/String, int, class \"[Ljava/lang/String;\" ]\n           stack = [ class java/lang/IllegalArgumentException ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 40\n           locals = [ class java/util/Scanner, class java/lang/String, class java/util/Map, class java/util/Map, int, int ]\n           stack = []\n         frame_type = 2 /* same */\n-    Signature: #140                         // (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n+    Signature: #135                         // (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n \n   private static java.lang.String stripQuotes(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n@@ -1315,15 +1303,15 @@\n         frame_type = 250 /* chop */\n           offset_delta = 42\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n-      stack=4, locals=5, args_size=0\n+      stack=4, locals=3, args_size=0\n          0: new           #87                 // class java/util/HashMap\n          3: dup\n          4: invokespecial #88                 // Method java/util/HashMap.\"<init>\":()V\n          7: putstatic     #70                 // Field RULES:Ljava/util/Map;\n         10: new           #87                 // class java/util/HashMap\n         13: dup\n         14: invokespecial #88                 // Method java/util/HashMap.\"<init>\":()V\n@@ -1331,125 +1319,87 @@\n         20: new           #89                 // class java/util/Scanner\n         23: dup\n         24: ldc           #90                 // String org/apache/commons/codec/language/dmrules.txt\n         26: invokestatic  #91                 // Method org/apache/commons/codec/Resources.getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n         29: ldc           #93                 // String UTF-8\n         31: invokespecial #94                 // Method java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n         34: astore_0\n-        35: aconst_null\n-        36: astore_1\n-        37: aload_0\n-        38: ldc           #90                 // String org/apache/commons/codec/language/dmrules.txt\n-        40: getstatic     #70                 // Field RULES:Ljava/util/Map;\n-        43: getstatic     #53                 // Field FOLDINGS:Ljava/util/Map;\n-        46: invokestatic  #95                 // Method parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-        49: aload_0\n-        50: ifnull        118\n-        53: aload_1\n-        54: ifnull        73\n-        57: aload_0\n-        58: invokevirtual #96                 // Method java/util/Scanner.close:()V\n-        61: goto          118\n-        64: astore_2\n-        65: aload_1\n-        66: aload_2\n-        67: invokevirtual #98                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        70: goto          118\n-        73: aload_0\n-        74: invokevirtual #96                 // Method java/util/Scanner.close:()V\n-        77: goto          118\n-        80: astore_2\n-        81: aload_2\n-        82: astore_1\n-        83: aload_2\n-        84: athrow\n-        85: astore_3\n-        86: aload_0\n-        87: ifnull        116\n-        90: aload_1\n-        91: ifnull        112\n-        94: aload_0\n-        95: invokevirtual #96                 // Method java/util/Scanner.close:()V\n-        98: goto          116\n-       101: astore        4\n+        35: aload_0\n+        36: ldc           #90                 // String org/apache/commons/codec/language/dmrules.txt\n+        38: getstatic     #70                 // Field RULES:Ljava/util/Map;\n+        41: getstatic     #53                 // Field FOLDINGS:Ljava/util/Map;\n+        44: invokestatic  #95                 // Method parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+        47: aload_0\n+        48: invokevirtual #96                 // Method java/util/Scanner.close:()V\n+        51: goto          70\n+        54: astore_1\n+        55: aload_0\n+        56: invokevirtual #96                 // Method java/util/Scanner.close:()V\n+        59: goto          68\n+        62: astore_2\n+        63: aload_1\n+        64: aload_2\n+        65: invokevirtual #98                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        68: aload_1\n+        69: athrow\n+        70: getstatic     #70                 // Field RULES:Ljava/util/Map;\n+        73: invokeinterface #99,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n+        78: invokeinterface #78,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+        83: astore_0\n+        84: aload_0\n+        85: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        90: ifeq          127\n+        93: aload_0\n+        94: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        99: checkcast     #100                // class java/util/Map$Entry\n+       102: astore_1\n        103: aload_1\n-       104: aload         4\n-       106: invokevirtual #98                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       109: goto          116\n-       112: aload_0\n-       113: invokevirtual #96                 // Method java/util/Scanner.close:()V\n-       116: aload_3\n-       117: athrow\n-       118: getstatic     #70                 // Field RULES:Ljava/util/Map;\n-       121: invokeinterface #99,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n-       126: invokeinterface #78,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n-       131: astore_0\n-       132: aload_0\n-       133: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-       138: ifeq          175\n-       141: aload_0\n-       142: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       147: checkcast     #100                // class java/util/Map$Entry\n-       150: astore_1\n-       151: aload_1\n-       152: invokeinterface #101,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-       157: checkcast     #37                 // class java/util/List\n-       160: astore_2\n-       161: aload_2\n-       162: new           #102                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-       165: dup\n-       166: invokespecial #103                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n-       169: invokestatic  #104                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n-       172: goto          132\n-       175: return\n+       104: invokeinterface #101,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+       109: checkcast     #37                 // class java/util/List\n+       112: astore_2\n+       113: aload_2\n+       114: new           #102                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+       117: dup\n+       118: invokespecial #103                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n+       121: invokestatic  #104                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n+       124: goto          84\n+       127: return\n       Exception table:\n          from    to  target type\n-            57    61    64   Class java/lang/Throwable\n-            37    49    80   Class java/lang/Throwable\n-            37    49    85   any\n-            94    98   101   Class java/lang/Throwable\n-            80    86    85   any\n+            35    47    54   Class java/lang/Throwable\n+            55    59    62   Class java/lang/Throwable\n       LineNumberTable:\n         line 222: 0\n         line 225: 10\n         line 228: 20\n-        line 229: 37\n-        line 230: 49\n-        line 228: 80\n-        line 230: 85\n-        line 233: 118\n-        line 234: 151\n-        line 235: 161\n-        line 241: 172\n-        line 242: 175\n-      StackMapTable: number_of_entries = 10\n+        line 229: 35\n+        line 230: 47\n+        line 228: 54\n+        line 233: 70\n+        line 234: 103\n+        line 235: 113\n+        line 241: 124\n+        line 242: 127\n+      StackMapTable: number_of_entries = 6\n         frame_type = 255 /* full_frame */\n-          offset_delta = 64\n-          locals = [ class java/util/Scanner, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 8 /* same */\n-        frame_type = 70 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 68 /* same_locals_1_stack_item */\n+          offset_delta = 54\n+          locals = [ class java/util/Scanner ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 15\n-          locals = [ class java/util/Scanner, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 7\n+          locals = [ class java/util/Scanner, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n+        frame_type = 5 /* same */\n+        frame_type = 249 /* chop */\n           offset_delta = 1\n-          locals = []\n-          stack = []\n         frame_type = 252 /* append */\n           offset_delta = 13\n           locals = [ class java/util/Iterator ]\n         frame_type = 250 /* chop */\n           offset_delta = 42\n }\n SourceFile: \"DaitchMokotoffSoundex.java\"\n InnerClasses:\n   private static final #107= #33 of #3;   // Rule=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n   private static final #109= #67 of #3;   // Branch=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  static #102;                            // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  public static #258= #100 of #190;       // Entry=class java/util/Map$Entry of class java/util/Map\n+  #102;                                   // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  public static #246= #100 of #134;       // Entry=class java/util/Map$Entry of class java/util/Map\n"}]}
