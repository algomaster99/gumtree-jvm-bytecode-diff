{"diffoscope-json-version": 1, "source1": "first/TarArchiveSparseEntry.class", "source2": "second/TarArchiveSparseEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,95 +1,95 @@\n-  SHA-256 checksum c85293c2f3c991422264c7205f267485baf3c3b1c4d01cfb8437aeb8f1b154e9\n+  SHA-256 checksum dd17c7e206341ea0a00498a45239ef8443362bfc02dffb7ded720519488b0a1b\n   Compiled from \"TarArchiveSparseEntry.java\"\n public class org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry implements org.apache.commons.compress.archivers.tar.TarConstants\n   minor version: 0\n-  major version: 53\n+  major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #4                          // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n-  super_class: #5                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 1, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #5.#25         // java/lang/Object.\"<init>\":()V\n-   #2 = Methodref          #26.#27        // org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n-   #3 = Fieldref           #4.#28         // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.isExtended:Z\n-   #4 = Class              #29            // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n-   #5 = Class              #30            // java/lang/Object\n-   #6 = Class              #31            // org/apache/commons/compress/archivers/tar/TarConstants\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n+   #2 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Class              #6             // org/apache/commons/compress/archivers/tar/TarConstants\n+   #6 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n    #7 = Utf8               isExtended\n    #8 = Utf8               Z\n    #9 = Utf8               <init>\n   #10 = Utf8               ([B)V\n-  #11 = Utf8               Code\n-  #12 = Utf8               LineNumberTable\n-  #13 = Utf8               LocalVariableTable\n-  #14 = Utf8               this\n-  #15 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarArchiveSparseEntry;\n-  #16 = Utf8               headerBuf\n-  #17 = Utf8               [B\n-  #18 = Utf8               offset\n-  #19 = Utf8               I\n-  #20 = Utf8               Exceptions\n-  #21 = Class              #32            // java/io/IOException\n-  #22 = Utf8               ()Z\n-  #23 = Utf8               SourceFile\n-  #24 = Utf8               TarArchiveSparseEntry.java\n-  #25 = NameAndType        #9:#33         // \"<init>\":()V\n-  #26 = Class              #34            // org/apache/commons/compress/archivers/tar/TarUtils\n-  #27 = NameAndType        #35:#36        // parseBoolean:([BI)Z\n-  #28 = NameAndType        #7:#8          // isExtended:Z\n-  #29 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n-  #30 = Utf8               java/lang/Object\n-  #31 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n-  #32 = Utf8               java/io/IOException\n-  #33 = Utf8               ()V\n-  #34 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n-  #35 = Utf8               parseBoolean\n-  #36 = Utf8               ([BI)Z\n+  #11 = Utf8               Exceptions\n+  #12 = Class              #13            // java/io/IOException\n+  #13 = Utf8               java/io/IOException\n+  #14 = Utf8               Code\n+  #15 = Methodref          #3.#16         // java/lang/Object.\"<init>\":()V\n+  #16 = NameAndType        #9:#17         // \"<init>\":()V\n+  #17 = Utf8               ()V\n+  #18 = Methodref          #19.#21        // org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n+  #19 = Class              #20            // org/apache/commons/compress/archivers/tar/TarUtils\n+  #20 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n+  #21 = NameAndType        #22:#23        // parseBoolean:([BI)Z\n+  #22 = Utf8               parseBoolean\n+  #23 = Utf8               ([BI)Z\n+  #24 = Fieldref           #1.#25         // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.isExtended:Z\n+  #25 = NameAndType        #7:#8          // isExtended:Z\n+  #26 = Utf8               LineNumberTable\n+  #27 = Utf8               LocalVariableTable\n+  #28 = Utf8               this\n+  #29 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarArchiveSparseEntry;\n+  #30 = Utf8               headerBuf\n+  #31 = Utf8               [B\n+  #32 = Utf8               offset\n+  #33 = Utf8               I\n+  #34 = Utf8               ()Z\n+  #35 = Utf8               SourceFile\n+  #36 = Utf8               TarArchiveSparseEntry.java\n {\n   private final boolean isExtended;\n     descriptor: Z\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry(byte[]) throws java.io.IOException;\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/lang/Object.\"<init>\":()V\n          4: iconst_0\n          5: istore_2\n          6: iinc_w        2, 504\n         12: aload_0\n         13: aload_1\n         14: iload_2\n-        15: invokestatic  #2                  // Method org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n-        18: putfield      #3                  // Field isExtended:Z\n+        15: invokestatic  #18                 // Method org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n+        18: putfield      #24                 // Field isExtended:Z\n         21: return\n       LineNumberTable:\n         line 54: 0\n         line 55: 4\n         line 56: 6\n         line 57: 12\n         line 58: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/archivers/tar/TarArchiveSparseEntry;\n             0      22     1 headerBuf   [B\n             6      16     2 offset   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public boolean isExtended();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field isExtended:Z\n+         1: getfield      #24                 // Field isExtended:Z\n          4: ireturn\n       LineNumberTable:\n         line 61: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/tar/TarArchiveSparseEntry;\n }\n"}]}
