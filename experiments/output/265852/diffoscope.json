{"diffoscope-json-version": 1, "source1": "first/ConstantValue.class", "source2": "second/ConstantValue.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -24,17 +24,17 @@\n     }\n     \n     public void accept(final Visitor v) {\n         v.visitConstantValue(this);\n     }\n     \n     public Attribute copy(final ConstantPool constantPool) {\n-        final ConstantValue c = (ConstantValue)this.clone();\n-        c.setConstantPool(constantPool);\n-        return c;\n+        final ConstantValue constantValue = (ConstantValue)this.clone();\n+        constantValue.setConstantPool(constantPool);\n+        return constantValue;\n     }\n     \n     public void dump(final DataOutputStream file) throws IOException {\n         super.dump(file);\n         file.writeShort(this.constantValueIndex);\n     }\n     \n@@ -43,39 +43,37 @@\n     }\n     \n     public void setConstantValueIndex(final int constantValueIndex) {\n         this.constantValueIndex = constantValueIndex;\n     }\n     \n     public String toString() {\n-        Constant c = super.getConstantPool().getConstant(this.constantValueIndex);\n-        String buf = null;\n-        switch (c.getTag()) {\n+        final Constant constant = super.getConstantPool().getConstant(this.constantValueIndex);\n+        String s = null;\n+        switch (constant.getTag()) {\n             case 5: {\n-                buf = String.valueOf(((ConstantLong)c).getBytes());\n+                s = String.valueOf(((ConstantLong)constant).getBytes());\n                 break;\n             }\n             case 4: {\n-                buf = String.valueOf(((ConstantFloat)c).getBytes());\n+                s = String.valueOf(((ConstantFloat)constant).getBytes());\n                 break;\n             }\n             case 6: {\n-                buf = String.valueOf(((ConstantDouble)c).getBytes());\n+                s = String.valueOf(((ConstantDouble)constant).getBytes());\n                 break;\n             }\n             case 3: {\n-                buf = String.valueOf(((ConstantInteger)c).getBytes());\n+                s = String.valueOf(((ConstantInteger)constant).getBytes());\n                 break;\n             }\n             case 8: {\n-                final int i = ((ConstantString)c).getStringIndex();\n-                c = (Constant)super.getConstantPool().getConstantUtf8(i);\n-                buf = \"\\\"\" + Utility.convertString(((ConstantUtf8)c).getBytes()) + \"\\\"\";\n+                s = \"\\\"\" + Utility.convertString(((ConstantUtf8)super.getConstantPool().getConstantUtf8(((ConstantString)constant).getStringIndex())).getBytes()) + \"\\\"\";\n                 break;\n             }\n             default: {\n-                throw new IllegalStateException(\"Type of ConstValue invalid: \" + c);\n+                throw new IllegalStateException(\"Type of ConstValue invalid: \" + constant);\n             }\n         }\n-        return buf;\n+        return s;\n     }\n }\n"}]}
