{"diffoscope-json-version": 1, "source1": "first/IMAP.class", "source2": "second/IMAP.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,336 +1,336 @@\n-  SHA-256 checksum ad5f85cdd9a777bd2d7b9a46a770e16c86e459ad995d4f9592d677cdfde33204\n+  SHA-256 checksum 0620b535a7a687268a878426e492a6b04baa302f7ed28a78e4ccbebcecc994dc\n   Compiled from \"IMAP.java\"\n public class org.apache.commons.net.imap.IMAP extends org.apache.commons.net.SocketClient\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #3                          // org/apache/commons/net/imap/IMAP\n-  super_class: #56                        // org/apache/commons/net/SocketClient\n+  this_class: #8                          // org/apache/commons/net/imap/IMAP\n+  super_class: #2                         // org/apache/commons/net/SocketClient\n   interfaces: 0, fields: 10, methods: 22, attributes: 2\n Constant pool:\n-    #1 = Methodref          #56.#160      // org/apache/commons/net/SocketClient.\"<init>\":()V\n-    #2 = Fieldref           #3.#161       // org/apache/commons/net/imap/IMAP.initialID:[C\n-    #3 = Class              #162          // org/apache/commons/net/imap/IMAP\n-    #4 = Methodref          #3.#163       // org/apache/commons/net/imap/IMAP.setDefaultPort:(I)V\n-    #5 = Fieldref           #95.#164      // org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-    #6 = Fieldref           #3.#165       // org/apache/commons/net/imap/IMAP.state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-    #7 = Fieldref           #3.#166       // org/apache/commons/net/imap/IMAP._reader:Ljava/io/BufferedReader;\n-    #8 = Fieldref           #3.#167       // org/apache/commons/net/imap/IMAP.__writer:Ljava/io/BufferedWriter;\n-    #9 = Class              #168          // java/util/ArrayList\n-   #10 = Methodref          #9.#160       // java/util/ArrayList.\"<init>\":()V\n-   #11 = Fieldref           #3.#169       // org/apache/commons/net/imap/IMAP._replyLines:Ljava/util/List;\n-   #12 = Methodref          #3.#170       // org/apache/commons/net/imap/IMAP.createCommandSupport:()V\n-   #13 = Methodref          #3.#171       // org/apache/commons/net/imap/IMAP.getReply:(Z)V\n-   #14 = InterfaceMethodref #172.#173     // java/util/List.clear:()V\n-   #15 = Methodref          #174.#175     // java/io/BufferedReader.readLine:()Ljava/lang/String;\n-   #16 = Class              #176          // java/io/EOFException\n-   #17 = String             #177          // Connection closed without indication.\n-   #18 = Methodref          #16.#178      // java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = InterfaceMethodref #172.#179     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #20 = Methodref          #25.#180      // org/apache/commons/net/imap/IMAPReply.isUntagged:(Ljava/lang/String;)Z\n-   #21 = Methodref          #25.#181      // org/apache/commons/net/imap/IMAPReply.literalCount:(Ljava/lang/String;)I\n-   #22 = Methodref          #71.#182      // java/lang/String.length:()I\n-   #23 = Fieldref           #3.#183       // org/apache/commons/net/imap/IMAP.chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-   #24 = InterfaceMethodref #92.#184      // org/apache/commons/net/imap/IMAP$IMAPChunkListener.chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n-   #25 = Class              #185          // org/apache/commons/net/imap/IMAPReply\n-   #26 = Methodref          #3.#186       // org/apache/commons/net/imap/IMAP.getReplyString:()Ljava/lang/String;\n-   #27 = Methodref          #3.#187       // org/apache/commons/net/imap/IMAP.fireReplyReceived:(ILjava/lang/String;)V\n-   #28 = Methodref          #25.#188      // org/apache/commons/net/imap/IMAPReply.getReplyCode:(Ljava/lang/String;)I\n-   #29 = Fieldref           #3.#189       // org/apache/commons/net/imap/IMAP.replyCode:I\n-   #30 = Methodref          #25.#190      // org/apache/commons/net/imap/IMAPReply.getUntaggedReplyCode:(Ljava/lang/String;)I\n-   #31 = Methodref          #3.#191       // org/apache/commons/net/imap/IMAP.getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n-   #32 = Methodref          #192.#193     // org/apache/commons/net/ProtocolCommandSupport.getListenerCount:()I\n-   #33 = Methodref          #192.#187     // org/apache/commons/net/ProtocolCommandSupport.fireReplyReceived:(ILjava/lang/String;)V\n-   #34 = Methodref          #56.#194      // org/apache/commons/net/SocketClient._connectAction_:()V\n-   #35 = Class              #195          // org/apache/commons/net/io/CRLFLineReader\n-   #36 = Class              #196          // java/io/InputStreamReader\n-   #37 = Fieldref           #3.#197       // org/apache/commons/net/imap/IMAP._input_:Ljava/io/InputStream;\n-   #38 = String             #198          // ISO-8859-1\n-   #39 = Methodref          #36.#199      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #40 = Methodref          #35.#200      // org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n-   #41 = Class              #201          // java/io/BufferedWriter\n-   #42 = Class              #202          // java/io/OutputStreamWriter\n-   #43 = Fieldref           #3.#203       // org/apache/commons/net/imap/IMAP._output_:Ljava/io/OutputStream;\n-   #44 = Methodref          #42.#204      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #45 = Methodref          #41.#205      // java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n-   #46 = Methodref          #3.#206       // org/apache/commons/net/imap/IMAP.getSoTimeout:()I\n-   #47 = Fieldref           #3.#207       // org/apache/commons/net/imap/IMAP.connectTimeout:I\n-   #48 = Methodref          #3.#208       // org/apache/commons/net/imap/IMAP.setSoTimeout:(I)V\n-   #49 = Fieldref           #95.#209      // org/apache/commons/net/imap/IMAP$IMAPState.NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-   #50 = Methodref          #3.#210       // org/apache/commons/net/imap/IMAP.setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n-   #51 = Methodref          #56.#211      // org/apache/commons/net/SocketClient.disconnect:()V\n-   #52 = Class              #212          // java/lang/StringBuilder\n-   #53 = Methodref          #52.#160      // java/lang/StringBuilder.\"<init>\":()V\n-   #54 = Methodref          #52.#213      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #55 = Methodref          #52.#214      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #56 = Class              #215          // org/apache/commons/net/SocketClient\n-   #57 = String             #216          // \\r\\n\n-   #58 = Methodref          #52.#217      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #59 = Methodref          #41.#218      // java/io/BufferedWriter.write:(Ljava/lang/String;)V\n-   #60 = Methodref          #41.#219      // java/io/BufferedWriter.flush:()V\n-   #61 = Methodref          #3.#220       // org/apache/commons/net/imap/IMAP.fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n-   #62 = Methodref          #3.#221       // org/apache/commons/net/imap/IMAP.getReply:()V\n-   #63 = Methodref          #3.#222       // org/apache/commons/net/imap/IMAP.generateCommandID:()Ljava/lang/String;\n-   #64 = Methodref          #3.#223       // org/apache/commons/net/imap/IMAP.sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n-   #65 = Methodref          #3.#224       // org/apache/commons/net/imap/IMAP.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n-   #66 = Methodref          #225.#226     // org/apache/commons/net/imap/IMAPCommand.getIMAPCommand:()Ljava/lang/String;\n-   #67 = Methodref          #3.#227       // org/apache/commons/net/imap/IMAP.sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n-   #68 = Methodref          #25.#228      // org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n-   #69 = Methodref          #3.#229       // org/apache/commons/net/imap/IMAP.sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n-   #70 = InterfaceMethodref #172.#230     // java/util/List.size:()I\n-   #71 = Class              #231          // java/lang/String\n-   #72 = InterfaceMethodref #172.#232     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #73 = Class              #233          // \"[Ljava/lang/String;\"\n-   #74 = Methodref          #52.#234      // java/lang/StringBuilder.\"<init>\":(I)V\n-   #75 = InterfaceMethodref #172.#235     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #76 = InterfaceMethodref #151.#236     // java/util/Iterator.hasNext:()Z\n-   #77 = InterfaceMethodref #151.#237     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #78 = Methodref          #71.#238      // java/lang/String.\"<init>\":([C)V\n-   #79 = Methodref          #71.#239      // java/lang/String.isEmpty:()Z\n-   #80 = String             #240          // \\\"\\\"\n-   #81 = String             #241          // \\\"\n-   #82 = Methodref          #71.#242      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #83 = Methodref          #71.#243      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #84 = String             #244          //\n-   #85 = Methodref          #71.#245      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #86 = String             #246          // ([\\\\\\\\\\\"])\n-   #87 = String             #247          // \\\\\\\\$1\n-   #88 = Methodref          #71.#248      // java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #89 = Class              #249          // org/apache/commons/net/imap/IMAP$1\n-   #90 = Methodref          #89.#160      // org/apache/commons/net/imap/IMAP$1.\"<init>\":()V\n-   #91 = Fieldref           #3.#250       // org/apache/commons/net/imap/IMAP.TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-   #92 = Class              #251          // org/apache/commons/net/imap/IMAP$IMAPChunkListener\n-   #93 = Utf8               IMAPChunkListener\n-   #94 = Utf8               InnerClasses\n-   #95 = Class              #252          // org/apache/commons/net/imap/IMAP$IMAPState\n-   #96 = Utf8               IMAPState\n-   #97 = Utf8               DEFAULT_PORT\n-   #98 = Utf8               I\n-   #99 = Utf8               ConstantValue\n-  #100 = Integer            143\n-  #101 = Utf8               __DEFAULT_ENCODING\n-  #102 = Utf8               Ljava/lang/String;\n-  #103 = Utf8               state\n-  #104 = Utf8               Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-  #105 = Utf8               __writer\n-  #106 = Utf8               Ljava/io/BufferedWriter;\n-  #107 = Utf8               _reader\n-  #108 = Utf8               Ljava/io/BufferedReader;\n-  #109 = Utf8               replyCode\n-  #110 = Utf8               _replyLines\n-  #111 = Utf8               Ljava/util/List;\n-  #112 = Utf8               Signature\n-  #113 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n-  #114 = Utf8               TRUE_CHUNK_LISTENER\n-  #115 = Utf8               Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-  #116 = Utf8               chunkListener\n-  #117 = Utf8               initialID\n-  #118 = Utf8               [C\n-  #119 = Utf8               <init>\n-  #120 = Utf8               ()V\n-  #121 = Utf8               Code\n-  #122 = Utf8               LineNumberTable\n-  #123 = Utf8               getReply\n-  #124 = Utf8               Exceptions\n-  #125 = Class              #253          // java/io/IOException\n-  #126 = Utf8               (Z)V\n-  #127 = Utf8               StackMapTable\n-  #128 = Utf8               fireReplyReceived\n-  #129 = Utf8               (ILjava/lang/String;)V\n-  #130 = Utf8               _connectAction_\n-  #131 = Utf8               setState\n-  #132 = Utf8               (Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n-  #133 = Utf8               getState\n-  #134 = Utf8               ()Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-  #135 = Utf8               disconnect\n-  #136 = Utf8               sendCommandWithID\n-  #137 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n-  #138 = Utf8               sendCommand\n-  #139 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n-  #140 = Utf8               (Ljava/lang/String;)I\n-  #141 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n-  #142 = Utf8               doCommand\n-  #143 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)Z\n-  #144 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;)I\n-  #145 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;)Z\n-  #146 = Utf8               sendData\n-  #147 = Utf8               getReplyStrings\n-  #148 = Utf8               ()[Ljava/lang/String;\n-  #149 = Utf8               getReplyString\n-  #150 = Utf8               ()Ljava/lang/String;\n-  #151 = Class              #254          // java/util/Iterator\n-  #152 = Utf8               setChunkListener\n-  #153 = Utf8               (Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;)V\n-  #154 = Utf8               generateCommandID\n-  #155 = Utf8               quoteMailboxName\n-  #156 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #157 = Utf8               <clinit>\n-  #158 = Utf8               SourceFile\n-  #159 = Utf8               IMAP.java\n-  #160 = NameAndType        #119:#120     // \"<init>\":()V\n-  #161 = NameAndType        #117:#118     // initialID:[C\n-  #162 = Utf8               org/apache/commons/net/imap/IMAP\n-  #163 = NameAndType        #255:#256     // setDefaultPort:(I)V\n-  #164 = NameAndType        #257:#104     // DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-  #165 = NameAndType        #103:#104     // state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-  #166 = NameAndType        #107:#108     // _reader:Ljava/io/BufferedReader;\n-  #167 = NameAndType        #105:#106     // __writer:Ljava/io/BufferedWriter;\n-  #168 = Utf8               java/util/ArrayList\n-  #169 = NameAndType        #110:#111     // _replyLines:Ljava/util/List;\n-  #170 = NameAndType        #258:#120     // createCommandSupport:()V\n-  #171 = NameAndType        #123:#126     // getReply:(Z)V\n-  #172 = Class              #259          // java/util/List\n-  #173 = NameAndType        #260:#120     // clear:()V\n-  #174 = Class              #261          // java/io/BufferedReader\n-  #175 = NameAndType        #262:#150     // readLine:()Ljava/lang/String;\n-  #176 = Utf8               java/io/EOFException\n-  #177 = Utf8               Connection closed without indication.\n-  #178 = NameAndType        #119:#263     // \"<init>\":(Ljava/lang/String;)V\n-  #179 = NameAndType        #264:#265     // add:(Ljava/lang/Object;)Z\n-  #180 = NameAndType        #266:#267     // isUntagged:(Ljava/lang/String;)Z\n-  #181 = NameAndType        #268:#140     // literalCount:(Ljava/lang/String;)I\n-  #182 = NameAndType        #269:#270     // length:()I\n-  #183 = NameAndType        #116:#115     // chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-  #184 = NameAndType        #271:#272     // chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n-  #185 = Utf8               org/apache/commons/net/imap/IMAPReply\n-  #186 = NameAndType        #149:#150     // getReplyString:()Ljava/lang/String;\n-  #187 = NameAndType        #128:#129     // fireReplyReceived:(ILjava/lang/String;)V\n-  #188 = NameAndType        #273:#140     // getReplyCode:(Ljava/lang/String;)I\n-  #189 = NameAndType        #109:#98      // replyCode:I\n-  #190 = NameAndType        #274:#140     // getUntaggedReplyCode:(Ljava/lang/String;)I\n-  #191 = NameAndType        #275:#276     // getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n-  #192 = Class              #277          // org/apache/commons/net/ProtocolCommandSupport\n-  #193 = NameAndType        #278:#270     // getListenerCount:()I\n-  #194 = NameAndType        #130:#120     // _connectAction_:()V\n-  #195 = Utf8               org/apache/commons/net/io/CRLFLineReader\n-  #196 = Utf8               java/io/InputStreamReader\n-  #197 = NameAndType        #279:#280     // _input_:Ljava/io/InputStream;\n-  #198 = Utf8               ISO-8859-1\n-  #199 = NameAndType        #119:#281     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #200 = NameAndType        #119:#282     // \"<init>\":(Ljava/io/Reader;)V\n-  #201 = Utf8               java/io/BufferedWriter\n-  #202 = Utf8               java/io/OutputStreamWriter\n-  #203 = NameAndType        #283:#284     // _output_:Ljava/io/OutputStream;\n-  #204 = NameAndType        #119:#285     // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #205 = NameAndType        #119:#286     // \"<init>\":(Ljava/io/Writer;)V\n-  #206 = NameAndType        #287:#270     // getSoTimeout:()I\n-  #207 = NameAndType        #288:#98      // connectTimeout:I\n-  #208 = NameAndType        #289:#256     // setSoTimeout:(I)V\n-  #209 = NameAndType        #290:#104     // NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-  #210 = NameAndType        #131:#132     // setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n-  #211 = NameAndType        #135:#120     // disconnect:()V\n-  #212 = Utf8               java/lang/StringBuilder\n-  #213 = NameAndType        #291:#292     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #214 = NameAndType        #291:#293     // append:(C)Ljava/lang/StringBuilder;\n-  #215 = Utf8               org/apache/commons/net/SocketClient\n-  #216 = Utf8               \\r\\n\n-  #217 = NameAndType        #294:#150     // toString:()Ljava/lang/String;\n-  #218 = NameAndType        #295:#263     // write:(Ljava/lang/String;)V\n-  #219 = NameAndType        #296:#120     // flush:()V\n-  #220 = NameAndType        #297:#298     // fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n-  #221 = NameAndType        #123:#120     // getReply:()V\n-  #222 = NameAndType        #154:#150     // generateCommandID:()Ljava/lang/String;\n-  #223 = NameAndType        #136:#137     // sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n-  #224 = NameAndType        #138:#139     // sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n-  #225 = Class              #299          // org/apache/commons/net/imap/IMAPCommand\n-  #226 = NameAndType        #300:#150     // getIMAPCommand:()Ljava/lang/String;\n-  #227 = NameAndType        #138:#141     // sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n-  #228 = NameAndType        #301:#302     // isSuccess:(I)Z\n-  #229 = NameAndType        #138:#144     // sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n-  #230 = NameAndType        #303:#270     // size:()I\n-  #231 = Utf8               java/lang/String\n-  #232 = NameAndType        #304:#305     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #233 = Utf8               [Ljava/lang/String;\n-  #234 = NameAndType        #119:#256     // \"<init>\":(I)V\n-  #235 = NameAndType        #306:#307     // iterator:()Ljava/util/Iterator;\n-  #236 = NameAndType        #308:#309     // hasNext:()Z\n-  #237 = NameAndType        #310:#311     // next:()Ljava/lang/Object;\n-  #238 = NameAndType        #119:#312     // \"<init>\":([C)V\n-  #239 = NameAndType        #313:#309     // isEmpty:()Z\n-  #240 = Utf8               \\\"\\\"\n-  #241 = Utf8               \\\"\n-  #242 = NameAndType        #314:#267     // startsWith:(Ljava/lang/String;)Z\n-  #243 = NameAndType        #315:#267     // endsWith:(Ljava/lang/String;)Z\n-  #244 = Utf8\n-  #245 = NameAndType        #316:#317     // contains:(Ljava/lang/CharSequence;)Z\n-  #246 = Utf8               ([\\\\\\\\\\\"])\n-  #247 = Utf8               \\\\\\\\$1\n-  #248 = NameAndType        #318:#319     // replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #249 = Utf8               org/apache/commons/net/imap/IMAP$1\n-  #250 = NameAndType        #114:#115     // TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n-  #251 = Utf8               org/apache/commons/net/imap/IMAP$IMAPChunkListener\n-  #252 = Utf8               org/apache/commons/net/imap/IMAP$IMAPState\n-  #253 = Utf8               java/io/IOException\n-  #254 = Utf8               java/util/Iterator\n-  #255 = Utf8               setDefaultPort\n-  #256 = Utf8               (I)V\n-  #257 = Utf8               DISCONNECTED_STATE\n-  #258 = Utf8               createCommandSupport\n-  #259 = Utf8               java/util/List\n-  #260 = Utf8               clear\n-  #261 = Utf8               java/io/BufferedReader\n-  #262 = Utf8               readLine\n-  #263 = Utf8               (Ljava/lang/String;)V\n-  #264 = Utf8               add\n-  #265 = Utf8               (Ljava/lang/Object;)Z\n-  #266 = Utf8               isUntagged\n-  #267 = Utf8               (Ljava/lang/String;)Z\n-  #268 = Utf8               literalCount\n-  #269 = Utf8               length\n-  #270 = Utf8               ()I\n-  #271 = Utf8               chunkReceived\n-  #272 = Utf8               (Lorg/apache/commons/net/imap/IMAP;)Z\n-  #273 = Utf8               getReplyCode\n-  #274 = Utf8               getUntaggedReplyCode\n-  #275 = Utf8               getCommandSupport\n-  #276 = Utf8               ()Lorg/apache/commons/net/ProtocolCommandSupport;\n-  #277 = Utf8               org/apache/commons/net/ProtocolCommandSupport\n-  #278 = Utf8               getListenerCount\n-  #279 = Utf8               _input_\n-  #280 = Utf8               Ljava/io/InputStream;\n-  #281 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #282 = Utf8               (Ljava/io/Reader;)V\n-  #283 = Utf8               _output_\n-  #284 = Utf8               Ljava/io/OutputStream;\n-  #285 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #286 = Utf8               (Ljava/io/Writer;)V\n-  #287 = Utf8               getSoTimeout\n-  #288 = Utf8               connectTimeout\n-  #289 = Utf8               setSoTimeout\n-  #290 = Utf8               NOT_AUTH_STATE\n-  #291 = Utf8               append\n-  #292 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #293 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #294 = Utf8               toString\n-  #295 = Utf8               write\n-  #296 = Utf8               flush\n-  #297 = Utf8               fireCommandSent\n-  #298 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #299 = Utf8               org/apache/commons/net/imap/IMAPCommand\n-  #300 = Utf8               getIMAPCommand\n-  #301 = Utf8               isSuccess\n-  #302 = Utf8               (I)Z\n-  #303 = Utf8               size\n-  #304 = Utf8               toArray\n-  #305 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #306 = Utf8               iterator\n-  #307 = Utf8               ()Ljava/util/Iterator;\n-  #308 = Utf8               hasNext\n-  #309 = Utf8               ()Z\n-  #310 = Utf8               next\n-  #311 = Utf8               ()Ljava/lang/Object;\n-  #312 = Utf8               ([C)V\n-  #313 = Utf8               isEmpty\n-  #314 = Utf8               startsWith\n-  #315 = Utf8               endsWith\n-  #316 = Utf8               contains\n-  #317 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #318 = Utf8               replaceAll\n-  #319 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+    #1 = Methodref          #2.#3         // org/apache/commons/net/SocketClient.\"<init>\":()V\n+    #2 = Class              #4            // org/apache/commons/net/SocketClient\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               org/apache/commons/net/SocketClient\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/net/imap/IMAP.initialID:[C\n+    #8 = Class              #10           // org/apache/commons/net/imap/IMAP\n+    #9 = NameAndType        #11:#12       // initialID:[C\n+   #10 = Utf8               org/apache/commons/net/imap/IMAP\n+   #11 = Utf8               initialID\n+   #12 = Utf8               [C\n+   #13 = Methodref          #8.#14        // org/apache/commons/net/imap/IMAP.setDefaultPort:(I)V\n+   #14 = NameAndType        #15:#16       // setDefaultPort:(I)V\n+   #15 = Utf8               setDefaultPort\n+   #16 = Utf8               (I)V\n+   #17 = Fieldref           #18.#19       // org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+   #18 = Class              #20           // org/apache/commons/net/imap/IMAP$IMAPState\n+   #19 = NameAndType        #21:#22       // DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+   #20 = Utf8               org/apache/commons/net/imap/IMAP$IMAPState\n+   #21 = Utf8               DISCONNECTED_STATE\n+   #22 = Utf8               Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+   #23 = Fieldref           #8.#24        // org/apache/commons/net/imap/IMAP.state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+   #24 = NameAndType        #25:#22       // state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+   #25 = Utf8               state\n+   #26 = Fieldref           #8.#27        // org/apache/commons/net/imap/IMAP._reader:Ljava/io/BufferedReader;\n+   #27 = NameAndType        #28:#29       // _reader:Ljava/io/BufferedReader;\n+   #28 = Utf8               _reader\n+   #29 = Utf8               Ljava/io/BufferedReader;\n+   #30 = Fieldref           #8.#31        // org/apache/commons/net/imap/IMAP.__writer:Ljava/io/BufferedWriter;\n+   #31 = NameAndType        #32:#33       // __writer:Ljava/io/BufferedWriter;\n+   #32 = Utf8               __writer\n+   #33 = Utf8               Ljava/io/BufferedWriter;\n+   #34 = Class              #35           // java/util/ArrayList\n+   #35 = Utf8               java/util/ArrayList\n+   #36 = Methodref          #34.#3        // java/util/ArrayList.\"<init>\":()V\n+   #37 = Fieldref           #8.#38        // org/apache/commons/net/imap/IMAP._replyLines:Ljava/util/List;\n+   #38 = NameAndType        #39:#40       // _replyLines:Ljava/util/List;\n+   #39 = Utf8               _replyLines\n+   #40 = Utf8               Ljava/util/List;\n+   #41 = Methodref          #8.#42        // org/apache/commons/net/imap/IMAP.createCommandSupport:()V\n+   #42 = NameAndType        #43:#6        // createCommandSupport:()V\n+   #43 = Utf8               createCommandSupport\n+   #44 = Methodref          #8.#45        // org/apache/commons/net/imap/IMAP.getReply:(Z)V\n+   #45 = NameAndType        #46:#47       // getReply:(Z)V\n+   #46 = Utf8               getReply\n+   #47 = Utf8               (Z)V\n+   #48 = InterfaceMethodref #49.#50       // java/util/List.clear:()V\n+   #49 = Class              #51           // java/util/List\n+   #50 = NameAndType        #52:#6        // clear:()V\n+   #51 = Utf8               java/util/List\n+   #52 = Utf8               clear\n+   #53 = Methodref          #54.#55       // java/io/BufferedReader.readLine:()Ljava/lang/String;\n+   #54 = Class              #56           // java/io/BufferedReader\n+   #55 = NameAndType        #57:#58       // readLine:()Ljava/lang/String;\n+   #56 = Utf8               java/io/BufferedReader\n+   #57 = Utf8               readLine\n+   #58 = Utf8               ()Ljava/lang/String;\n+   #59 = Class              #60           // java/io/EOFException\n+   #60 = Utf8               java/io/EOFException\n+   #61 = String             #62           // Connection closed without indication.\n+   #62 = Utf8               Connection closed without indication.\n+   #63 = Methodref          #59.#64       // java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n+   #64 = NameAndType        #5:#65        // \"<init>\":(Ljava/lang/String;)V\n+   #65 = Utf8               (Ljava/lang/String;)V\n+   #66 = InterfaceMethodref #49.#67       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #67 = NameAndType        #68:#69       // add:(Ljava/lang/Object;)Z\n+   #68 = Utf8               add\n+   #69 = Utf8               (Ljava/lang/Object;)Z\n+   #70 = Methodref          #71.#72       // org/apache/commons/net/imap/IMAPReply.isUntagged:(Ljava/lang/String;)Z\n+   #71 = Class              #73           // org/apache/commons/net/imap/IMAPReply\n+   #72 = NameAndType        #74:#75       // isUntagged:(Ljava/lang/String;)Z\n+   #73 = Utf8               org/apache/commons/net/imap/IMAPReply\n+   #74 = Utf8               isUntagged\n+   #75 = Utf8               (Ljava/lang/String;)Z\n+   #76 = Methodref          #71.#77       // org/apache/commons/net/imap/IMAPReply.literalCount:(Ljava/lang/String;)I\n+   #77 = NameAndType        #78:#79       // literalCount:(Ljava/lang/String;)I\n+   #78 = Utf8               literalCount\n+   #79 = Utf8               (Ljava/lang/String;)I\n+   #80 = Methodref          #81.#82       // java/lang/String.length:()I\n+   #81 = Class              #83           // java/lang/String\n+   #82 = NameAndType        #84:#85       // length:()I\n+   #83 = Utf8               java/lang/String\n+   #84 = Utf8               length\n+   #85 = Utf8               ()I\n+   #86 = Fieldref           #8.#87        // org/apache/commons/net/imap/IMAP.chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+   #87 = NameAndType        #88:#89       // chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+   #88 = Utf8               chunkListener\n+   #89 = Utf8               Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+   #90 = InterfaceMethodref #91.#92       // org/apache/commons/net/imap/IMAP$IMAPChunkListener.chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n+   #91 = Class              #93           // org/apache/commons/net/imap/IMAP$IMAPChunkListener\n+   #92 = NameAndType        #94:#95       // chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n+   #93 = Utf8               org/apache/commons/net/imap/IMAP$IMAPChunkListener\n+   #94 = Utf8               chunkReceived\n+   #95 = Utf8               (Lorg/apache/commons/net/imap/IMAP;)Z\n+   #96 = Methodref          #8.#97        // org/apache/commons/net/imap/IMAP.getReplyString:()Ljava/lang/String;\n+   #97 = NameAndType        #98:#58       // getReplyString:()Ljava/lang/String;\n+   #98 = Utf8               getReplyString\n+   #99 = Methodref          #8.#100       // org/apache/commons/net/imap/IMAP.fireReplyReceived:(ILjava/lang/String;)V\n+  #100 = NameAndType        #101:#102     // fireReplyReceived:(ILjava/lang/String;)V\n+  #101 = Utf8               fireReplyReceived\n+  #102 = Utf8               (ILjava/lang/String;)V\n+  #103 = Methodref          #71.#104      // org/apache/commons/net/imap/IMAPReply.getReplyCode:(Ljava/lang/String;)I\n+  #104 = NameAndType        #105:#79      // getReplyCode:(Ljava/lang/String;)I\n+  #105 = Utf8               getReplyCode\n+  #106 = Fieldref           #8.#107       // org/apache/commons/net/imap/IMAP.replyCode:I\n+  #107 = NameAndType        #108:#109     // replyCode:I\n+  #108 = Utf8               replyCode\n+  #109 = Utf8               I\n+  #110 = Methodref          #71.#111      // org/apache/commons/net/imap/IMAPReply.getUntaggedReplyCode:(Ljava/lang/String;)I\n+  #111 = NameAndType        #112:#79      // getUntaggedReplyCode:(Ljava/lang/String;)I\n+  #112 = Utf8               getUntaggedReplyCode\n+  #113 = Methodref          #8.#114       // org/apache/commons/net/imap/IMAP.getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n+  #114 = NameAndType        #115:#116     // getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n+  #115 = Utf8               getCommandSupport\n+  #116 = Utf8               ()Lorg/apache/commons/net/ProtocolCommandSupport;\n+  #117 = Methodref          #118.#119     // org/apache/commons/net/ProtocolCommandSupport.getListenerCount:()I\n+  #118 = Class              #120          // org/apache/commons/net/ProtocolCommandSupport\n+  #119 = NameAndType        #121:#85      // getListenerCount:()I\n+  #120 = Utf8               org/apache/commons/net/ProtocolCommandSupport\n+  #121 = Utf8               getListenerCount\n+  #122 = Methodref          #118.#100     // org/apache/commons/net/ProtocolCommandSupport.fireReplyReceived:(ILjava/lang/String;)V\n+  #123 = Methodref          #2.#124       // org/apache/commons/net/SocketClient._connectAction_:()V\n+  #124 = NameAndType        #125:#6       // _connectAction_:()V\n+  #125 = Utf8               _connectAction_\n+  #126 = Class              #127          // org/apache/commons/net/io/CRLFLineReader\n+  #127 = Utf8               org/apache/commons/net/io/CRLFLineReader\n+  #128 = Class              #129          // java/io/InputStreamReader\n+  #129 = Utf8               java/io/InputStreamReader\n+  #130 = Fieldref           #8.#131       // org/apache/commons/net/imap/IMAP._input_:Ljava/io/InputStream;\n+  #131 = NameAndType        #132:#133     // _input_:Ljava/io/InputStream;\n+  #132 = Utf8               _input_\n+  #133 = Utf8               Ljava/io/InputStream;\n+  #134 = String             #135          // ISO-8859-1\n+  #135 = Utf8               ISO-8859-1\n+  #136 = Methodref          #128.#137     // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #137 = NameAndType        #5:#138       // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #138 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #139 = Methodref          #126.#140     // org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n+  #140 = NameAndType        #5:#141       // \"<init>\":(Ljava/io/Reader;)V\n+  #141 = Utf8               (Ljava/io/Reader;)V\n+  #142 = Class              #143          // java/io/BufferedWriter\n+  #143 = Utf8               java/io/BufferedWriter\n+  #144 = Class              #145          // java/io/OutputStreamWriter\n+  #145 = Utf8               java/io/OutputStreamWriter\n+  #146 = Fieldref           #8.#147       // org/apache/commons/net/imap/IMAP._output_:Ljava/io/OutputStream;\n+  #147 = NameAndType        #148:#149     // _output_:Ljava/io/OutputStream;\n+  #148 = Utf8               _output_\n+  #149 = Utf8               Ljava/io/OutputStream;\n+  #150 = Methodref          #144.#151     // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #151 = NameAndType        #5:#152       // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #152 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #153 = Methodref          #142.#154     // java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n+  #154 = NameAndType        #5:#155       // \"<init>\":(Ljava/io/Writer;)V\n+  #155 = Utf8               (Ljava/io/Writer;)V\n+  #156 = Methodref          #8.#157       // org/apache/commons/net/imap/IMAP.getSoTimeout:()I\n+  #157 = NameAndType        #158:#85      // getSoTimeout:()I\n+  #158 = Utf8               getSoTimeout\n+  #159 = Fieldref           #8.#160       // org/apache/commons/net/imap/IMAP.connectTimeout:I\n+  #160 = NameAndType        #161:#109     // connectTimeout:I\n+  #161 = Utf8               connectTimeout\n+  #162 = Methodref          #8.#163       // org/apache/commons/net/imap/IMAP.setSoTimeout:(I)V\n+  #163 = NameAndType        #164:#16      // setSoTimeout:(I)V\n+  #164 = Utf8               setSoTimeout\n+  #165 = Fieldref           #18.#166      // org/apache/commons/net/imap/IMAP$IMAPState.NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+  #166 = NameAndType        #167:#22      // NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+  #167 = Utf8               NOT_AUTH_STATE\n+  #168 = Methodref          #8.#169       // org/apache/commons/net/imap/IMAP.setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n+  #169 = NameAndType        #170:#171     // setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n+  #170 = Utf8               setState\n+  #171 = Utf8               (Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n+  #172 = Methodref          #2.#173       // org/apache/commons/net/SocketClient.disconnect:()V\n+  #173 = NameAndType        #174:#6       // disconnect:()V\n+  #174 = Utf8               disconnect\n+  #175 = Class              #176          // java/lang/StringBuilder\n+  #176 = Utf8               java/lang/StringBuilder\n+  #177 = Methodref          #175.#3       // java/lang/StringBuilder.\"<init>\":()V\n+  #178 = Methodref          #175.#179     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #179 = NameAndType        #180:#181     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #180 = Utf8               append\n+  #181 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #182 = Methodref          #175.#183     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #183 = NameAndType        #180:#184     // append:(C)Ljava/lang/StringBuilder;\n+  #184 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #185 = String             #186          // \\r\\n\n+  #186 = Utf8               \\r\\n\n+  #187 = Methodref          #175.#188     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #188 = NameAndType        #189:#58      // toString:()Ljava/lang/String;\n+  #189 = Utf8               toString\n+  #190 = Methodref          #142.#191     // java/io/BufferedWriter.write:(Ljava/lang/String;)V\n+  #191 = NameAndType        #192:#65      // write:(Ljava/lang/String;)V\n+  #192 = Utf8               write\n+  #193 = Methodref          #142.#194     // java/io/BufferedWriter.flush:()V\n+  #194 = NameAndType        #195:#6       // flush:()V\n+  #195 = Utf8               flush\n+  #196 = Methodref          #8.#197       // org/apache/commons/net/imap/IMAP.fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n+  #197 = NameAndType        #198:#199     // fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n+  #198 = Utf8               fireCommandSent\n+  #199 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #200 = Methodref          #8.#201       // org/apache/commons/net/imap/IMAP.getReply:()V\n+  #201 = NameAndType        #46:#6        // getReply:()V\n+  #202 = Methodref          #8.#203       // org/apache/commons/net/imap/IMAP.generateCommandID:()Ljava/lang/String;\n+  #203 = NameAndType        #204:#58      // generateCommandID:()Ljava/lang/String;\n+  #204 = Utf8               generateCommandID\n+  #205 = Methodref          #8.#206       // org/apache/commons/net/imap/IMAP.sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n+  #206 = NameAndType        #207:#208     // sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n+  #207 = Utf8               sendCommandWithID\n+  #208 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n+  #209 = Methodref          #8.#210       // org/apache/commons/net/imap/IMAP.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+  #210 = NameAndType        #211:#212     // sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+  #211 = Utf8               sendCommand\n+  #212 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n+  #213 = Methodref          #214.#215     // org/apache/commons/net/imap/IMAPCommand.getIMAPCommand:()Ljava/lang/String;\n+  #214 = Class              #216          // org/apache/commons/net/imap/IMAPCommand\n+  #215 = NameAndType        #217:#58      // getIMAPCommand:()Ljava/lang/String;\n+  #216 = Utf8               org/apache/commons/net/imap/IMAPCommand\n+  #217 = Utf8               getIMAPCommand\n+  #218 = Methodref          #8.#219       // org/apache/commons/net/imap/IMAP.sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n+  #219 = NameAndType        #211:#220     // sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n+  #220 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n+  #221 = Methodref          #71.#222      // org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n+  #222 = NameAndType        #223:#224     // isSuccess:(I)Z\n+  #223 = Utf8               isSuccess\n+  #224 = Utf8               (I)Z\n+  #225 = Methodref          #8.#226       // org/apache/commons/net/imap/IMAP.sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n+  #226 = NameAndType        #211:#227     // sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n+  #227 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;)I\n+  #228 = InterfaceMethodref #49.#229      // java/util/List.size:()I\n+  #229 = NameAndType        #230:#85      // size:()I\n+  #230 = Utf8               size\n+  #231 = InterfaceMethodref #49.#232      // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #232 = NameAndType        #233:#234     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #233 = Utf8               toArray\n+  #234 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #235 = Class              #236          // \"[Ljava/lang/String;\"\n+  #236 = Utf8               [Ljava/lang/String;\n+  #237 = Methodref          #175.#238     // java/lang/StringBuilder.\"<init>\":(I)V\n+  #238 = NameAndType        #5:#16        // \"<init>\":(I)V\n+  #239 = InterfaceMethodref #49.#240      // java/util/List.iterator:()Ljava/util/Iterator;\n+  #240 = NameAndType        #241:#242     // iterator:()Ljava/util/Iterator;\n+  #241 = Utf8               iterator\n+  #242 = Utf8               ()Ljava/util/Iterator;\n+  #243 = InterfaceMethodref #244.#245     // java/util/Iterator.hasNext:()Z\n+  #244 = Class              #246          // java/util/Iterator\n+  #245 = NameAndType        #247:#248     // hasNext:()Z\n+  #246 = Utf8               java/util/Iterator\n+  #247 = Utf8               hasNext\n+  #248 = Utf8               ()Z\n+  #249 = InterfaceMethodref #244.#250     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #250 = NameAndType        #251:#252     // next:()Ljava/lang/Object;\n+  #251 = Utf8               next\n+  #252 = Utf8               ()Ljava/lang/Object;\n+  #253 = Methodref          #81.#254      // java/lang/String.\"<init>\":([C)V\n+  #254 = NameAndType        #5:#255       // \"<init>\":([C)V\n+  #255 = Utf8               ([C)V\n+  #256 = Methodref          #81.#257      // java/lang/String.isEmpty:()Z\n+  #257 = NameAndType        #258:#248     // isEmpty:()Z\n+  #258 = Utf8               isEmpty\n+  #259 = String             #260          // \\\"\\\"\n+  #260 = Utf8               \\\"\\\"\n+  #261 = String             #262          // \\\"\n+  #262 = Utf8               \\\"\n+  #263 = Methodref          #81.#264      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+  #264 = NameAndType        #265:#75      // startsWith:(Ljava/lang/String;)Z\n+  #265 = Utf8               startsWith\n+  #266 = Methodref          #81.#267      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+  #267 = NameAndType        #268:#75      // endsWith:(Ljava/lang/String;)Z\n+  #268 = Utf8               endsWith\n+  #269 = String             #270          //\n+  #270 = Utf8\n+  #271 = Methodref          #81.#272      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #272 = NameAndType        #273:#274     // contains:(Ljava/lang/CharSequence;)Z\n+  #273 = Utf8               contains\n+  #274 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #275 = String             #276          // ([\\\\\\\\\\\"])\n+  #276 = Utf8               ([\\\\\\\\\\\"])\n+  #277 = String             #278          // \\\\\\\\$1\n+  #278 = Utf8               \\\\\\\\$1\n+  #279 = Methodref          #81.#280      // java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #280 = NameAndType        #281:#282     // replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #281 = Utf8               replaceAll\n+  #282 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #283 = Class              #284          // org/apache/commons/net/imap/IMAP$1\n+  #284 = Utf8               org/apache/commons/net/imap/IMAP$1\n+  #285 = Methodref          #283.#3       // org/apache/commons/net/imap/IMAP$1.\"<init>\":()V\n+  #286 = Fieldref           #8.#287       // org/apache/commons/net/imap/IMAP.TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+  #287 = NameAndType        #288:#89      // TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+  #288 = Utf8               TRUE_CHUNK_LISTENER\n+  #289 = Utf8               DEFAULT_PORT\n+  #290 = Utf8               ConstantValue\n+  #291 = Integer            143\n+  #292 = Utf8               __DEFAULT_ENCODING\n+  #293 = Utf8               Ljava/lang/String;\n+  #294 = Utf8               Signature\n+  #295 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n+  #296 = Utf8               Code\n+  #297 = Utf8               LineNumberTable\n+  #298 = Utf8               Exceptions\n+  #299 = Class              #300          // java/io/IOException\n+  #300 = Utf8               java/io/IOException\n+  #301 = Utf8               StackMapTable\n+  #302 = Utf8               getState\n+  #303 = Utf8               ()Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+  #304 = Utf8               doCommand\n+  #305 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)Z\n+  #306 = Utf8               (Lorg/apache/commons/net/imap/IMAPCommand;)Z\n+  #307 = Utf8               sendData\n+  #308 = Utf8               getReplyStrings\n+  #309 = Utf8               ()[Ljava/lang/String;\n+  #310 = Utf8               setChunkListener\n+  #311 = Utf8               (Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;)V\n+  #312 = Utf8               quoteMailboxName\n+  #313 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #314 = Utf8               <clinit>\n+  #315 = Utf8               SourceFile\n+  #316 = Utf8               IMAP.java\n+  #317 = Utf8               InnerClasses\n+  #318 = Utf8               IMAPState\n+  #319 = Utf8               IMAPChunkListener\n {\n   public static final int DEFAULT_PORT = 143;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 143\n \n   protected static final java.lang.String __DEFAULT_ENCODING = \"ISO-8859-1\";\n@@ -353,15 +353,15 @@\n   private int replyCode;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private final java.util.List<java.lang.String> _replyLines;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #113                         // Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #295                         // Ljava/util/List<Ljava/lang/String;>;\n \n   public static final org.apache.commons.net.imap.IMAP$IMAPChunkListener TRUE_CHUNK_LISTENER;\n     descriptor: Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private volatile org.apache.commons.net.imap.IMAP$IMAPChunkListener chunkListener;\n     descriptor: Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n@@ -393,34 +393,34 @@\n         19: iconst_2\n         20: bipush        65\n         22: castore\n         23: dup\n         24: iconst_3\n         25: bipush        65\n         27: castore\n-        28: putfield      #2                  // Field initialID:[C\n+        28: putfield      #7                  // Field initialID:[C\n         31: aload_0\n         32: sipush        143\n-        35: invokevirtual #4                  // Method setDefaultPort:(I)V\n+        35: invokevirtual #13                 // Method setDefaultPort:(I)V\n         38: aload_0\n-        39: getstatic     #5                  // Field org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-        42: putfield      #6                  // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+        39: getstatic     #17                 // Field org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+        42: putfield      #23                 // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n         45: aload_0\n         46: aconst_null\n-        47: putfield      #7                  // Field _reader:Ljava/io/BufferedReader;\n+        47: putfield      #26                 // Field _reader:Ljava/io/BufferedReader;\n         50: aload_0\n         51: aconst_null\n-        52: putfield      #8                  // Field __writer:Ljava/io/BufferedWriter;\n+        52: putfield      #30                 // Field __writer:Ljava/io/BufferedWriter;\n         55: aload_0\n-        56: new           #9                  // class java/util/ArrayList\n+        56: new           #34                 // class java/util/ArrayList\n         59: dup\n-        60: invokespecial #10                 // Method java/util/ArrayList.\"<init>\":()V\n-        63: putfield      #11                 // Field _replyLines:Ljava/util/List;\n+        60: invokespecial #36                 // Method java/util/ArrayList.\"<init>\":()V\n+        63: putfield      #37                 // Field _replyLines:Ljava/util/List;\n         66: aload_0\n-        67: invokevirtual #12                 // Method createCommandSupport:()V\n+        67: invokevirtual #41                 // Method createCommandSupport:()V\n         70: return\n       LineNumberTable:\n         line 119: 0\n         line 112: 4\n         line 120: 31\n         line 121: 38\n         line 122: 45\n@@ -432,139 +432,139 @@\n   private void getReply() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokespecial #13                 // Method getReply:(Z)V\n+         2: invokespecial #44                 // Method getReply:(Z)V\n          5: return\n       LineNumberTable:\n         line 135: 0\n         line 136: 5\n     Exceptions:\n       throws java.io.IOException\n \n   private void getReply(boolean) throws java.io.IOException;\n     descriptor: (Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=7, args_size=2\n          0: aload_0\n-         1: getfield      #11                 // Field _replyLines:Ljava/util/List;\n-         4: invokeinterface #14,  1           // InterfaceMethod java/util/List.clear:()V\n+         1: getfield      #37                 // Field _replyLines:Ljava/util/List;\n+         4: invokeinterface #48,  1           // InterfaceMethod java/util/List.clear:()V\n          9: aload_0\n-        10: getfield      #7                  // Field _reader:Ljava/io/BufferedReader;\n-        13: invokevirtual #15                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n+        10: getfield      #26                 // Field _reader:Ljava/io/BufferedReader;\n+        13: invokevirtual #53                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n         16: astore_2\n         17: aload_2\n         18: ifnonnull     31\n-        21: new           #16                 // class java/io/EOFException\n+        21: new           #59                 // class java/io/EOFException\n         24: dup\n-        25: ldc           #17                 // String Connection closed without indication.\n-        27: invokespecial #18                 // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n+        25: ldc           #61                 // String Connection closed without indication.\n+        27: invokespecial #63                 // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n         30: athrow\n         31: aload_0\n-        32: getfield      #11                 // Field _replyLines:Ljava/util/List;\n+        32: getfield      #37                 // Field _replyLines:Ljava/util/List;\n         35: aload_2\n-        36: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        36: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         41: pop\n         42: iload_1\n         43: ifeq          214\n         46: aload_2\n-        47: invokestatic  #20                 // Method org/apache/commons/net/imap/IMAPReply.isUntagged:(Ljava/lang/String;)Z\n+        47: invokestatic  #70                 // Method org/apache/commons/net/imap/IMAPReply.isUntagged:(Ljava/lang/String;)Z\n         50: ifeq          203\n         53: aload_2\n-        54: invokestatic  #21                 // Method org/apache/commons/net/imap/IMAPReply.literalCount:(Ljava/lang/String;)I\n+        54: invokestatic  #76                 // Method org/apache/commons/net/imap/IMAPReply.literalCount:(Ljava/lang/String;)I\n         57: istore_3\n         58: iload_3\n         59: iflt          66\n         62: iconst_1\n         63: goto          67\n         66: iconst_0\n         67: istore        4\n         69: iload_3\n         70: iflt          118\n         73: aload_0\n-        74: getfield      #7                  // Field _reader:Ljava/io/BufferedReader;\n-        77: invokevirtual #15                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n+        74: getfield      #26                 // Field _reader:Ljava/io/BufferedReader;\n+        77: invokevirtual #53                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n         80: astore_2\n         81: aload_2\n         82: ifnonnull     95\n-        85: new           #16                 // class java/io/EOFException\n+        85: new           #59                 // class java/io/EOFException\n         88: dup\n-        89: ldc           #17                 // String Connection closed without indication.\n-        91: invokespecial #18                 // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n+        89: ldc           #61                 // String Connection closed without indication.\n+        91: invokespecial #63                 // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n         94: athrow\n         95: aload_0\n-        96: getfield      #11                 // Field _replyLines:Ljava/util/List;\n+        96: getfield      #37                 // Field _replyLines:Ljava/util/List;\n         99: aload_2\n-       100: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       100: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        105: pop\n        106: iload_3\n        107: aload_2\n-       108: invokevirtual #22                 // Method java/lang/String.length:()I\n+       108: invokevirtual #80                 // Method java/lang/String.length:()I\n        111: iconst_2\n        112: iadd\n        113: isub\n        114: istore_3\n        115: goto          69\n        118: iload         4\n        120: ifeq          167\n        123: aload_0\n-       124: getfield      #23                 // Field chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+       124: getfield      #86                 // Field chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n        127: astore        5\n        129: aload         5\n        131: ifnull        167\n        134: aload         5\n        136: aload_0\n-       137: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/net/imap/IMAP$IMAPChunkListener.chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n+       137: invokeinterface #90,  2           // InterfaceMethod org/apache/commons/net/imap/IMAP$IMAPChunkListener.chunkReceived:(Lorg/apache/commons/net/imap/IMAP;)Z\n        142: istore        6\n        144: iload         6\n        146: ifeq          167\n        149: aload_0\n        150: iconst_3\n        151: aload_0\n-       152: invokevirtual #26                 // Method getReplyString:()Ljava/lang/String;\n-       155: invokevirtual #27                 // Method fireReplyReceived:(ILjava/lang/String;)V\n+       152: invokevirtual #96                 // Method getReplyString:()Ljava/lang/String;\n+       155: invokevirtual #99                 // Method fireReplyReceived:(ILjava/lang/String;)V\n        158: aload_0\n-       159: getfield      #11                 // Field _replyLines:Ljava/util/List;\n-       162: invokeinterface #14,  1           // InterfaceMethod java/util/List.clear:()V\n+       159: getfield      #37                 // Field _replyLines:Ljava/util/List;\n+       162: invokeinterface #48,  1           // InterfaceMethod java/util/List.clear:()V\n        167: aload_0\n-       168: getfield      #7                  // Field _reader:Ljava/io/BufferedReader;\n-       171: invokevirtual #15                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n+       168: getfield      #26                 // Field _reader:Ljava/io/BufferedReader;\n+       171: invokevirtual #53                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n        174: astore_2\n        175: aload_2\n        176: ifnonnull     189\n-       179: new           #16                 // class java/io/EOFException\n+       179: new           #59                 // class java/io/EOFException\n        182: dup\n-       183: ldc           #17                 // String Connection closed without indication.\n-       185: invokespecial #18                 // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n+       183: ldc           #61                 // String Connection closed without indication.\n+       185: invokespecial #63                 // Method java/io/EOFException.\"<init>\":(Ljava/lang/String;)V\n        188: athrow\n        189: aload_0\n-       190: getfield      #11                 // Field _replyLines:Ljava/util/List;\n+       190: getfield      #37                 // Field _replyLines:Ljava/util/List;\n        193: aload_2\n-       194: invokeinterface #19,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       194: invokeinterface #66,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        199: pop\n        200: goto          46\n        203: aload_0\n        204: aload_2\n-       205: invokestatic  #28                 // Method org/apache/commons/net/imap/IMAPReply.getReplyCode:(Ljava/lang/String;)I\n-       208: putfield      #29                 // Field replyCode:I\n+       205: invokestatic  #103                // Method org/apache/commons/net/imap/IMAPReply.getReplyCode:(Ljava/lang/String;)I\n+       208: putfield      #106                // Field replyCode:I\n        211: goto          222\n        214: aload_0\n        215: aload_2\n-       216: invokestatic  #30                 // Method org/apache/commons/net/imap/IMAPReply.getUntaggedReplyCode:(Ljava/lang/String;)I\n-       219: putfield      #29                 // Field replyCode:I\n+       216: invokestatic  #110                // Method org/apache/commons/net/imap/IMAPReply.getUntaggedReplyCode:(Ljava/lang/String;)I\n+       219: putfield      #106                // Field replyCode:I\n        222: aload_0\n        223: aload_0\n-       224: getfield      #29                 // Field replyCode:I\n+       224: getfield      #106                // Field replyCode:I\n        227: aload_0\n-       228: invokevirtual #26                 // Method getReplyString:()Ljava/lang/String;\n-       231: invokevirtual #27                 // Method fireReplyReceived:(ILjava/lang/String;)V\n+       228: invokevirtual #96                 // Method getReplyString:()Ljava/lang/String;\n+       231: invokevirtual #99                 // Method fireReplyReceived:(ILjava/lang/String;)V\n        234: return\n       LineNumberTable:\n         line 147: 0\n         line 148: 9\n         line 150: 17\n         line 151: 21\n         line 154: 31\n@@ -620,80 +620,80 @@\n \n   protected void fireReplyReceived(int, java.lang.String);\n     descriptor: (ILjava/lang/String;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokevirtual #31                 // Method getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n-         4: invokevirtual #32                 // Method org/apache/commons/net/ProtocolCommandSupport.getListenerCount:()I\n+         1: invokevirtual #113                // Method getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n+         4: invokevirtual #117                // Method org/apache/commons/net/ProtocolCommandSupport.getListenerCount:()I\n          7: ifle          22\n         10: aload_0\n-        11: invokevirtual #31                 // Method getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n+        11: invokevirtual #113                // Method getCommandSupport:()Lorg/apache/commons/net/ProtocolCommandSupport;\n         14: iload_1\n         15: aload_0\n-        16: invokevirtual #26                 // Method getReplyString:()Ljava/lang/String;\n-        19: invokevirtual #33                 // Method org/apache/commons/net/ProtocolCommandSupport.fireReplyReceived:(ILjava/lang/String;)V\n+        16: invokevirtual #96                 // Method getReplyString:()Ljava/lang/String;\n+        19: invokevirtual #122                // Method org/apache/commons/net/ProtocolCommandSupport.fireReplyReceived:(ILjava/lang/String;)V\n         22: return\n       LineNumberTable:\n         line 204: 0\n         line 205: 10\n         line 207: 22\n       StackMapTable: number_of_entries = 1\n         frame_type = 22 /* same */\n \n   protected void _connectAction_() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=7, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #34                 // Method org/apache/commons/net/SocketClient._connectAction_:()V\n+         1: invokespecial #123                // Method org/apache/commons/net/SocketClient._connectAction_:()V\n          4: aload_0\n-         5: new           #35                 // class org/apache/commons/net/io/CRLFLineReader\n+         5: new           #126                // class org/apache/commons/net/io/CRLFLineReader\n          8: dup\n-         9: new           #36                 // class java/io/InputStreamReader\n+         9: new           #128                // class java/io/InputStreamReader\n         12: dup\n         13: aload_0\n-        14: getfield      #37                 // Field _input_:Ljava/io/InputStream;\n-        17: ldc           #38                 // String ISO-8859-1\n-        19: invokespecial #39                 // Method java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-        22: invokespecial #40                 // Method org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n-        25: putfield      #7                  // Field _reader:Ljava/io/BufferedReader;\n+        14: getfield      #130                // Field _input_:Ljava/io/InputStream;\n+        17: ldc           #134                // String ISO-8859-1\n+        19: invokespecial #136                // Method java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+        22: invokespecial #139                // Method org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n+        25: putfield      #26                 // Field _reader:Ljava/io/BufferedReader;\n         28: aload_0\n-        29: new           #41                 // class java/io/BufferedWriter\n+        29: new           #142                // class java/io/BufferedWriter\n         32: dup\n-        33: new           #42                 // class java/io/OutputStreamWriter\n+        33: new           #144                // class java/io/OutputStreamWriter\n         36: dup\n         37: aload_0\n-        38: getfield      #43                 // Field _output_:Ljava/io/OutputStream;\n-        41: ldc           #38                 // String ISO-8859-1\n-        43: invokespecial #44                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-        46: invokespecial #45                 // Method java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n-        49: putfield      #8                  // Field __writer:Ljava/io/BufferedWriter;\n+        38: getfield      #146                // Field _output_:Ljava/io/OutputStream;\n+        41: ldc           #134                // String ISO-8859-1\n+        43: invokespecial #150                // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+        46: invokespecial #153                // Method java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n+        49: putfield      #30                 // Field __writer:Ljava/io/BufferedWriter;\n         52: aload_0\n-        53: invokevirtual #46                 // Method getSoTimeout:()I\n+        53: invokevirtual #156                // Method getSoTimeout:()I\n         56: istore_1\n         57: iload_1\n         58: ifgt          69\n         61: aload_0\n         62: aload_0\n-        63: getfield      #47                 // Field connectTimeout:I\n-        66: invokevirtual #48                 // Method setSoTimeout:(I)V\n+        63: getfield      #159                // Field connectTimeout:I\n+        66: invokevirtual #162                // Method setSoTimeout:(I)V\n         69: aload_0\n         70: iconst_0\n-        71: invokespecial #13                 // Method getReply:(Z)V\n+        71: invokespecial #44                 // Method getReply:(Z)V\n         74: iload_1\n         75: ifgt          83\n         78: aload_0\n         79: iload_1\n-        80: invokevirtual #48                 // Method setSoTimeout:(I)V\n+        80: invokevirtual #162                // Method setSoTimeout:(I)V\n         83: aload_0\n-        84: getstatic     #49                 // Field org/apache/commons/net/imap/IMAP$IMAPState.NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-        87: invokevirtual #50                 // Method setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n+        84: getstatic     #165                // Field org/apache/commons/net/imap/IMAP$IMAPState.NOT_AUTH_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+        87: invokevirtual #168                // Method setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n         90: return\n       LineNumberTable:\n         line 216: 0\n         line 217: 4\n         line 220: 28\n         line 223: 52\n         line 224: 57\n@@ -714,50 +714,50 @@\n   protected void setState(org.apache.commons.net.imap.IMAP$IMAPState);\n     descriptor: (Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #6                  // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+         2: putfield      #23                 // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n          5: return\n       LineNumberTable:\n         line 242: 0\n         line 243: 5\n \n   public org.apache.commons.net.imap.IMAP$IMAPState getState();\n     descriptor: ()Lorg/apache/commons/net/imap/IMAP$IMAPState;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+         1: getfield      #23                 // Field state:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n          4: areturn\n       LineNumberTable:\n         line 253: 0\n \n   public void disconnect() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #51                 // Method org/apache/commons/net/SocketClient.disconnect:()V\n+         1: invokespecial #172                // Method org/apache/commons/net/SocketClient.disconnect:()V\n          4: aload_0\n          5: aconst_null\n-         6: putfield      #7                  // Field _reader:Ljava/io/BufferedReader;\n+         6: putfield      #26                 // Field _reader:Ljava/io/BufferedReader;\n          9: aload_0\n         10: aconst_null\n-        11: putfield      #8                  // Field __writer:Ljava/io/BufferedWriter;\n+        11: putfield      #30                 // Field __writer:Ljava/io/BufferedWriter;\n         14: aload_0\n-        15: getfield      #11                 // Field _replyLines:Ljava/util/List;\n-        18: invokeinterface #14,  1           // InterfaceMethod java/util/List.clear:()V\n+        15: getfield      #37                 // Field _replyLines:Ljava/util/List;\n+        18: invokeinterface #48,  1           // InterfaceMethod java/util/List.clear:()V\n         23: aload_0\n-        24: getstatic     #5                  // Field org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n-        27: invokevirtual #50                 // Method setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n+        24: getstatic     #17                 // Field org/apache/commons/net/imap/IMAP$IMAPState.DISCONNECTED_STATE:Lorg/apache/commons/net/imap/IMAP$IMAPState;\n+        27: invokevirtual #168                // Method setState:(Lorg/apache/commons/net/imap/IMAP$IMAPState;)V\n         30: return\n       LineNumberTable:\n         line 267: 0\n         line 268: 4\n         line 269: 9\n         line 270: 14\n         line 271: 23\n@@ -766,64 +766,64 @@\n       throws java.io.IOException\n \n   private int sendCommandWithID(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=6, args_size=4\n-         0: new           #52                 // class java/lang/StringBuilder\n+         0: new           #175                // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #53                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #177                // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore        4\n          9: aload_1\n         10: ifnull        28\n         13: aload         4\n         15: aload_1\n-        16: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        16: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         19: pop\n         20: aload         4\n         22: bipush        32\n-        24: invokevirtual #55                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        24: invokevirtual #182                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         27: pop\n         28: aload         4\n         30: aload_2\n-        31: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         34: pop\n         35: aload_3\n         36: ifnull        54\n         39: aload         4\n         41: bipush        32\n-        43: invokevirtual #55                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        43: invokevirtual #182                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         46: pop\n         47: aload         4\n         49: aload_3\n-        50: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        50: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         53: pop\n         54: aload         4\n-        56: ldc           #57                 // String \\r\\n\n-        58: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        56: ldc           #185                // String \\r\\n\n+        58: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         61: pop\n         62: aload         4\n-        64: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        64: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         67: astore        5\n         69: aload_0\n-        70: getfield      #8                  // Field __writer:Ljava/io/BufferedWriter;\n+        70: getfield      #30                 // Field __writer:Ljava/io/BufferedWriter;\n         73: aload         5\n-        75: invokevirtual #59                 // Method java/io/BufferedWriter.write:(Ljava/lang/String;)V\n+        75: invokevirtual #190                // Method java/io/BufferedWriter.write:(Ljava/lang/String;)V\n         78: aload_0\n-        79: getfield      #8                  // Field __writer:Ljava/io/BufferedWriter;\n-        82: invokevirtual #60                 // Method java/io/BufferedWriter.flush:()V\n+        79: getfield      #30                 // Field __writer:Ljava/io/BufferedWriter;\n+        82: invokevirtual #193                // Method java/io/BufferedWriter.flush:()V\n         85: aload_0\n         86: aload_2\n         87: aload         5\n-        89: invokevirtual #61                 // Method fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n+        89: invokevirtual #196                // Method fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n         92: aload_0\n-        93: invokespecial #62                 // Method getReply:()V\n+        93: invokespecial #200                // Method getReply:()V\n         96: aload_0\n-        97: getfield      #29                 // Field replyCode:I\n+        97: getfield      #106                // Field replyCode:I\n        100: ireturn\n       LineNumberTable:\n         line 285: 0\n         line 286: 9\n         line 288: 13\n         line 289: 20\n         line 291: 28\n@@ -848,95 +848,95 @@\n   public int sendCommand(java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_0\n-         2: invokevirtual #63                 // Method generateCommandID:()Ljava/lang/String;\n+         2: invokevirtual #202                // Method generateCommandID:()Ljava/lang/String;\n          5: aload_1\n          6: aload_2\n-         7: invokespecial #64                 // Method sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n+         7: invokespecial #205                // Method sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n         10: ireturn\n       LineNumberTable:\n         line 320: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int sendCommand(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aconst_null\n-         3: invokevirtual #65                 // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+         3: invokevirtual #209                // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n          6: ireturn\n       LineNumberTable:\n         line 333: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int sendCommand(org.apache.commons.net.imap.IMAPCommand, java.lang.String) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #66                 // Method org/apache/commons/net/imap/IMAPCommand.getIMAPCommand:()Ljava/lang/String;\n+         2: invokevirtual #213                // Method org/apache/commons/net/imap/IMAPCommand.getIMAPCommand:()Ljava/lang/String;\n          5: aload_2\n-         6: invokevirtual #65                 // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+         6: invokevirtual #209                // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n          9: ireturn\n       LineNumberTable:\n         line 347: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public boolean doCommand(org.apache.commons.net.imap.IMAPCommand, java.lang.String) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokevirtual #67                 // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n-         6: invokestatic  #68                 // Method org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n+         3: invokevirtual #218                // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n+         6: invokestatic  #221                // Method org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n          9: ireturn\n       LineNumberTable:\n         line 361: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int sendCommand(org.apache.commons.net.imap.IMAPCommand) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/net/imap/IMAPCommand;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aconst_null\n-         3: invokevirtual #67                 // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n+         3: invokevirtual #218                // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;Ljava/lang/String;)I\n          6: ireturn\n       LineNumberTable:\n         line 375: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public boolean doCommand(org.apache.commons.net.imap.IMAPCommand) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/net/imap/IMAPCommand;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #69                 // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n-         5: invokestatic  #68                 // Method org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n+         2: invokevirtual #225                // Method sendCommand:(Lorg/apache/commons/net/imap/IMAPCommand;)I\n+         5: invokestatic  #221                // Method org/apache/commons/net/imap/IMAPReply.isSuccess:(I)Z\n          8: ireturn\n       LineNumberTable:\n         line 388: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int sendData(java.lang.String) throws java.io.IOException;\n@@ -944,70 +944,70 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aconst_null\n          2: aload_1\n          3: aconst_null\n-         4: invokespecial #64                 // Method sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n+         4: invokespecial #205                // Method sendCommandWithID:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I\n          7: ireturn\n       LineNumberTable:\n         line 400: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public java.lang.String[] getReplyStrings();\n     descriptor: ()[Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field _replyLines:Ljava/util/List;\n+         1: getfield      #37                 // Field _replyLines:Ljava/util/List;\n          4: aload_0\n-         5: getfield      #11                 // Field _replyLines:Ljava/util/List;\n-         8: invokeinterface #70,  1           // InterfaceMethod java/util/List.size:()I\n-        13: anewarray     #71                 // class java/lang/String\n-        16: invokeinterface #72,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        21: checkcast     #73                 // class \"[Ljava/lang/String;\"\n+         5: getfield      #37                 // Field _replyLines:Ljava/util/List;\n+         8: invokeinterface #228,  1          // InterfaceMethod java/util/List.size:()I\n+        13: anewarray     #81                 // class java/lang/String\n+        16: invokeinterface #231,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        21: checkcast     #235                // class \"[Ljava/lang/String;\"\n         24: areturn\n       LineNumberTable:\n         line 410: 0\n \n   public java.lang.String getReplyString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=1\n-         0: new           #52                 // class java/lang/StringBuilder\n+         0: new           #175                // class java/lang/StringBuilder\n          3: dup\n          4: sipush        256\n-         7: invokespecial #74                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n+         7: invokespecial #237                // Method java/lang/StringBuilder.\"<init>\":(I)V\n         10: astore_1\n         11: aload_0\n-        12: getfield      #11                 // Field _replyLines:Ljava/util/List;\n-        15: invokeinterface #75,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        12: getfield      #37                 // Field _replyLines:Ljava/util/List;\n+        15: invokeinterface #239,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n         20: astore_2\n         21: aload_2\n-        22: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        22: invokeinterface #243,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         27: ifeq          56\n         30: aload_2\n-        31: invokeinterface #77,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        36: checkcast     #71                 // class java/lang/String\n+        31: invokeinterface #249,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        36: checkcast     #81                 // class java/lang/String\n         39: astore_3\n         40: aload_1\n         41: aload_3\n-        42: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        42: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         45: pop\n         46: aload_1\n-        47: ldc           #57                 // String \\r\\n\n-        49: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: ldc           #185                // String \\r\\n\n+        49: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         52: pop\n         53: goto          21\n         56: aload_1\n-        57: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        57: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         60: areturn\n       LineNumberTable:\n         line 422: 0\n         line 423: 11\n         line 425: 40\n         line 426: 46\n         line 427: 53\n@@ -1022,57 +1022,57 @@\n   public void setChunkListener(org.apache.commons.net.imap.IMAP$IMAPChunkListener);\n     descriptor: (Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #23                 // Field chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+         2: putfield      #86                 // Field chunkListener:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n          5: return\n       LineNumberTable:\n         line 444: 0\n         line 445: 5\n \n   protected java.lang.String generateCommandID();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=4, args_size=1\n-         0: new           #71                 // class java/lang/String\n+         0: new           #81                 // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: getfield      #2                  // Field initialID:[C\n-         8: invokespecial #78                 // Method java/lang/String.\"<init>\":([C)V\n+         5: getfield      #7                  // Field initialID:[C\n+         8: invokespecial #253                // Method java/lang/String.\"<init>\":([C)V\n         11: astore_1\n         12: iconst_1\n         13: istore_2\n         14: aload_0\n-        15: getfield      #2                  // Field initialID:[C\n+        15: getfield      #7                  // Field initialID:[C\n         18: arraylength\n         19: iconst_1\n         20: isub\n         21: istore_3\n         22: iload_2\n         23: ifeq          71\n         26: iload_3\n         27: iflt          71\n         30: aload_0\n-        31: getfield      #2                  // Field initialID:[C\n+        31: getfield      #7                  // Field initialID:[C\n         34: iload_3\n         35: caload\n         36: bipush        90\n         38: if_icmpne     52\n         41: aload_0\n-        42: getfield      #2                  // Field initialID:[C\n+        42: getfield      #7                  // Field initialID:[C\n         45: iload_3\n         46: bipush        65\n         48: castore\n         49: goto          65\n         52: aload_0\n-        53: getfield      #2                  // Field initialID:[C\n+        53: getfield      #7                  // Field initialID:[C\n         56: iload_3\n         57: dup2\n         58: caload\n         59: iconst_1\n         60: iadd\n         61: i2c\n         62: castore\n@@ -1107,79 +1107,79 @@\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokevirtual #79                 // Method java/lang/String.isEmpty:()Z\n-        10: ifeq          16\n-        13: ldc           #80                 // String \\\"\\\"\n-        15: areturn\n-        16: aload_0\n-        17: invokevirtual #22                 // Method java/lang/String.length:()I\n-        20: iconst_1\n-        21: if_icmple     44\n-        24: aload_0\n-        25: ldc           #81                 // String \\\"\n-        27: invokevirtual #82                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-        30: ifeq          44\n-        33: aload_0\n-        34: ldc           #81                 // String \\\"\n-        36: invokevirtual #83                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n-        39: ifeq          44\n-        42: aload_0\n-        43: areturn\n-        44: aload_0\n-        45: ldc           #84                 // String\n-        47: invokevirtual #85                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-        50: ifeq          85\n-        53: new           #52                 // class java/lang/StringBuilder\n-        56: dup\n-        57: invokespecial #53                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        60: ldc           #81                 // String \\\"\n-        62: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        65: aload_0\n-        66: ldc           #86                 // String ([\\\\\\\\\\\"])\n-        68: ldc           #87                 // String \\\\\\\\$1\n-        70: invokevirtual #88                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-        73: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        76: ldc           #81                 // String \\\"\n-        78: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        81: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        84: areturn\n-        85: aload_0\n-        86: areturn\n+         7: invokevirtual #256                // Method java/lang/String.isEmpty:()Z\n+        10: ifeq          17\n+        13: ldc_w         #259                // String \\\"\\\"\n+        16: areturn\n+        17: aload_0\n+        18: invokevirtual #80                 // Method java/lang/String.length:()I\n+        21: iconst_1\n+        22: if_icmple     47\n+        25: aload_0\n+        26: ldc_w         #261                // String \\\"\n+        29: invokevirtual #263                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        32: ifeq          47\n+        35: aload_0\n+        36: ldc_w         #261                // String \\\"\n+        39: invokevirtual #266                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        42: ifeq          47\n+        45: aload_0\n+        46: areturn\n+        47: aload_0\n+        48: ldc_w         #269                // String\n+        51: invokevirtual #271                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+        54: ifeq          93\n+        57: new           #175                // class java/lang/StringBuilder\n+        60: dup\n+        61: invokespecial #177                // Method java/lang/StringBuilder.\"<init>\":()V\n+        64: ldc_w         #261                // String \\\"\n+        67: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        70: aload_0\n+        71: ldc_w         #275                // String ([\\\\\\\\\\\"])\n+        74: ldc_w         #277                // String \\\\\\\\$1\n+        77: invokevirtual #279                // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+        80: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        83: ldc_w         #261                // String \\\"\n+        86: invokevirtual #178                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        89: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        92: areturn\n+        93: aload_0\n+        94: areturn\n       LineNumberTable:\n         line 484: 0\n         line 485: 4\n         line 487: 6\n         line 488: 13\n-        line 491: 16\n-        line 492: 42\n-        line 494: 44\n-        line 496: 53\n-        line 498: 85\n+        line 491: 17\n+        line 492: 45\n+        line 494: 47\n+        line 496: 57\n+        line 498: 93\n       StackMapTable: number_of_entries = 4\n         frame_type = 6 /* same */\n-        frame_type = 9 /* same */\n-        frame_type = 27 /* same */\n-        frame_type = 40 /* same */\n+        frame_type = 10 /* same */\n+        frame_type = 29 /* same */\n+        frame_type = 45 /* same */\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #89                 // class org/apache/commons/net/imap/IMAP$1\n+         0: new           #283                // class org/apache/commons/net/imap/IMAP$1\n          3: dup\n-         4: invokespecial #90                 // Method org/apache/commons/net/imap/IMAP$1.\"<init>\":()V\n-         7: putstatic     #91                 // Field TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n+         4: invokespecial #285                // Method org/apache/commons/net/imap/IMAP$1.\"<init>\":()V\n+         7: putstatic     #286                // Field TRUE_CHUNK_LISTENER:Lorg/apache/commons/net/imap/IMAP$IMAPChunkListener;\n         10: return\n       LineNumberTable:\n         line 103: 0\n }\n SourceFile: \"IMAP.java\"\n InnerClasses:\n-  public static #93= #92 of #3;           // IMAPChunkListener=class org/apache/commons/net/imap/IMAP$IMAPChunkListener of class org/apache/commons/net/imap/IMAP\n-  public static final #96= #95 of #3;     // IMAPState=class org/apache/commons/net/imap/IMAP$IMAPState of class org/apache/commons/net/imap/IMAP\n-  #89;                                    // class org/apache/commons/net/imap/IMAP$1\n+  public static final #318= #18 of #8;    // IMAPState=class org/apache/commons/net/imap/IMAP$IMAPState of class org/apache/commons/net/imap/IMAP\n+  public static #319= #91 of #8;          // IMAPChunkListener=class org/apache/commons/net/imap/IMAP$IMAPChunkListener of class org/apache/commons/net/imap/IMAP\n+  #283;                                   // class org/apache/commons/net/imap/IMAP$1\n"}]}
