{"diffoscope-json-version": 1, "source1": "first/ExceptionsAttribute.class", "source2": "second/ExceptionsAttribute.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,153 +1,153 @@\n-  SHA-256 checksum 8d0ba63f50cf13ae1806497787bdcfbb6557e242d4c0f72f86c3025011a00102\n+  SHA-256 checksum 4e575eff8ae61a09829e30ee76663a9e262dc7e66a823d719aa1eafdd8648a46\n   Compiled from \"ExceptionsAttribute.java\"\n public class org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionsAttribute extends org.apache.commons.compress.harmony.unpack200.bytecode.Attribute\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n-  super_class: #26                        // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+  this_class: #8                          // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n+  super_class: #14                        // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n   interfaces: 0, fields: 3, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Methodref          #47.#85       // java/lang/Object.hashCode:()I\n-    #2 = Fieldref           #7.#86        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-    #3 = Methodref          #26.#87       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-    #4 = Fieldref           #7.#88        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-    #5 = Methodref          #26.#89       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.equals:(Ljava/lang/Object;)Z\n-    #6 = Methodref          #47.#90       // java/lang/Object.getClass:()Ljava/lang/Class;\n-    #7 = Class              #91           // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n-    #8 = Methodref          #92.#93       // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-    #9 = Class              #94           // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-   #10 = Methodref          #95.#96       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #11 = Methodref          #7.#97        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #12 = Methodref          #26.#85       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.hashCode:()I\n-   #13 = Methodref          #7.#98        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.hashCode:([Ljava/lang/Object;)I\n-   #14 = Methodref          #26.#99       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #15 = Fieldref           #7.#100       // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.exceptionIndexes:[I\n-   #16 = Methodref          #101.#99      // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #17 = Methodref          #102.#103     // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-   #18 = Class              #104          // java/lang/StringBuilder\n-   #19 = Methodref          #18.#105      // java/lang/StringBuilder.\"<init>\":()V\n-   #20 = String             #106          // Exceptions:\n-   #21 = Methodref          #18.#107      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #22 = Methodref          #18.#108      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #23 = Methodref          #18.#109      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #24 = Methodref          #18.#110      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #111.#112     // java/io/DataOutputStream.writeShort:(I)V\n-   #26 = Class              #113          // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n-   #27 = Utf8               attributeName\n-   #28 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #29 = Utf8               exceptionIndexes\n-   #30 = Utf8               [I\n-   #31 = Utf8               exceptions\n-   #32 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-   #33 = Utf8               hashCode\n-   #34 = Utf8               ([Ljava/lang/Object;)I\n-   #35 = Utf8               Code\n-   #36 = Utf8               LineNumberTable\n-   #37 = Utf8               LocalVariableTable\n-   #38 = Utf8               element\n-   #39 = Utf8               Ljava/lang/Object;\n-   #40 = Utf8               array\n-   #41 = Utf8               [Ljava/lang/Object;\n-   #42 = Utf8               prime\n-   #43 = Utf8               I\n-   #44 = Utf8               result\n-   #45 = Utf8               StackMapTable\n-   #46 = Class              #41           // \"[Ljava/lang/Object;\"\n-   #47 = Class              #114          // java/lang/Object\n-   #48 = Utf8               setAttributeName\n-   #49 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-   #50 = Utf8               cpUTF8Value\n-   #51 = Utf8               <init>\n-   #52 = Utf8               ([Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;)V\n-   #53 = Utf8               this\n-   #54 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute;\n-   #55 = Utf8               equals\n-   #56 = Utf8               (Ljava/lang/Object;)Z\n-   #57 = Utf8               obj\n-   #58 = Utf8               other\n-   #59 = Utf8               getLength\n-   #60 = Utf8               ()I\n-   #61 = Utf8               getNestedClassFileEntries\n-   #62 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-   #63 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-   #64 = Utf8               resolve\n-   #65 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #66 = Utf8               i\n-   #67 = Utf8               pool\n-   #68 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;\n-   #69 = Utf8               toString\n-   #70 = Utf8               ()Ljava/lang/String;\n-   #71 = Utf8               exception\n-   #72 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-   #73 = Utf8               sb\n-   #74 = Utf8               Ljava/lang/StringBuilder;\n-   #75 = Class              #32           // \"[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\"\n-   #76 = Utf8               writeBody\n-   #77 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #78 = Utf8               dos\n-   #79 = Utf8               Ljava/io/DataOutputStream;\n-   #80 = Class              #30           // \"[I\"\n-   #81 = Utf8               Exceptions\n-   #82 = Class              #115          // java/io/IOException\n-   #83 = Utf8               SourceFile\n-   #84 = Utf8               ExceptionsAttribute.java\n-   #85 = NameAndType        #33:#60       // hashCode:()I\n-   #86 = NameAndType        #27:#28       // attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #87 = NameAndType        #51:#49       // \"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-   #88 = NameAndType        #31:#32       // exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-   #89 = NameAndType        #55:#56       // equals:(Ljava/lang/Object;)Z\n-   #90 = NameAndType        #116:#117     // getClass:()Ljava/lang/Class;\n-   #91 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n-   #92 = Class              #118          // java/util/Arrays\n-   #93 = NameAndType        #55:#119      // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-   #94 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-   #95 = Class              #120          // java/lang/System\n-   #96 = NameAndType        #121:#122     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #97 = NameAndType        #123:#124     // getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #98 = NameAndType        #33:#34       // hashCode:([Ljava/lang/Object;)I\n-   #99 = NameAndType        #64:#65       // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #100 = NameAndType        #29:#30       // exceptionIndexes:[I\n-  #101 = Class              #125          // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n-  #102 = Class              #126          // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-  #103 = NameAndType        #127:#128     // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-  #104 = Utf8               java/lang/StringBuilder\n-  #105 = NameAndType        #51:#129      // \"<init>\":()V\n-  #106 = Utf8               Exceptions:\n-  #107 = NameAndType        #130:#131     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #108 = NameAndType        #130:#132     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #109 = NameAndType        #130:#133     // append:(C)Ljava/lang/StringBuilder;\n-  #110 = NameAndType        #69:#70       // toString:()Ljava/lang/String;\n-  #111 = Class              #134          // java/io/DataOutputStream\n-  #112 = NameAndType        #135:#136     // writeShort:(I)V\n-  #113 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n-  #114 = Utf8               java/lang/Object\n-  #115 = Utf8               java/io/IOException\n-  #116 = Utf8               getClass\n-  #117 = Utf8               ()Ljava/lang/Class;\n-  #118 = Utf8               java/util/Arrays\n-  #119 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #120 = Utf8               java/lang/System\n-  #121 = Utf8               arraycopy\n-  #122 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #123 = Utf8               getAttributeName\n-  #124 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-  #125 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n-  #126 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-  #127 = Utf8               indexOf\n-  #128 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-  #129 = Utf8               ()V\n-  #130 = Utf8               append\n-  #131 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #132 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #133 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #134 = Utf8               java/io/DataOutputStream\n-  #135 = Utf8               writeShort\n-  #136 = Utf8               (I)V\n+    #1 = Methodref          #2.#3         // java/lang/Object.hashCode:()I\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // hashCode:()I\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               hashCode\n+    #6 = Utf8               ()I\n+    #7 = Fieldref           #8.#9         // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+    #8 = Class              #10           // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n+    #9 = NameAndType        #11:#12       // attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #10 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n+   #11 = Utf8               attributeName\n+   #12 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #13 = Methodref          #14.#15       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+   #14 = Class              #16           // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+   #15 = NameAndType        #17:#18       // \"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+   #16 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+   #17 = Utf8               <init>\n+   #18 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+   #19 = Fieldref           #8.#20        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+   #20 = NameAndType        #21:#22       // exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+   #21 = Utf8               exceptions\n+   #22 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+   #23 = Methodref          #14.#24       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.equals:(Ljava/lang/Object;)Z\n+   #24 = NameAndType        #25:#26       // equals:(Ljava/lang/Object;)Z\n+   #25 = Utf8               equals\n+   #26 = Utf8               (Ljava/lang/Object;)Z\n+   #27 = Methodref          #2.#28        // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #28 = NameAndType        #29:#30       // getClass:()Ljava/lang/Class;\n+   #29 = Utf8               getClass\n+   #30 = Utf8               ()Ljava/lang/Class;\n+   #31 = Methodref          #32.#33       // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #32 = Class              #34           // java/util/Arrays\n+   #33 = NameAndType        #25:#35       // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #34 = Utf8               java/util/Arrays\n+   #35 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #36 = Class              #37           // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+   #37 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+   #38 = Methodref          #39.#40       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #39 = Class              #41           // java/lang/System\n+   #40 = NameAndType        #42:#43       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #41 = Utf8               java/lang/System\n+   #42 = Utf8               arraycopy\n+   #43 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #44 = Methodref          #8.#45        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #45 = NameAndType        #46:#47       // getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #46 = Utf8               getAttributeName\n+   #47 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #48 = Methodref          #14.#3        // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.hashCode:()I\n+   #49 = Methodref          #8.#50        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.hashCode:([Ljava/lang/Object;)I\n+   #50 = NameAndType        #5:#51        // hashCode:([Ljava/lang/Object;)I\n+   #51 = Utf8               ([Ljava/lang/Object;)I\n+   #52 = Methodref          #14.#53       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+   #53 = NameAndType        #54:#55       // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+   #54 = Utf8               resolve\n+   #55 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+   #56 = Fieldref           #8.#57        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.exceptionIndexes:[I\n+   #57 = NameAndType        #58:#59       // exceptionIndexes:[I\n+   #58 = Utf8               exceptionIndexes\n+   #59 = Utf8               [I\n+   #60 = Methodref          #61.#53       // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+   #61 = Class              #62           // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n+   #62 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n+   #63 = Methodref          #64.#65       // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+   #64 = Class              #66           // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+   #65 = NameAndType        #67:#68       // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+   #66 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+   #67 = Utf8               indexOf\n+   #68 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+   #69 = Class              #70           // java/lang/StringBuilder\n+   #70 = Utf8               java/lang/StringBuilder\n+   #71 = Methodref          #69.#72       // java/lang/StringBuilder.\"<init>\":()V\n+   #72 = NameAndType        #17:#73       // \"<init>\":()V\n+   #73 = Utf8               ()V\n+   #74 = String             #75           // Exceptions:\n+   #75 = Utf8               Exceptions:\n+   #76 = Methodref          #69.#77       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #77 = NameAndType        #78:#79       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #78 = Utf8               append\n+   #79 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #80 = Methodref          #69.#81       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #81 = NameAndType        #78:#82       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #82 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #83 = Methodref          #69.#84       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #84 = NameAndType        #78:#85       // append:(C)Ljava/lang/StringBuilder;\n+   #85 = Utf8               (C)Ljava/lang/StringBuilder;\n+   #86 = Methodref          #69.#87       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #87 = NameAndType        #88:#89       // toString:()Ljava/lang/String;\n+   #88 = Utf8               toString\n+   #89 = Utf8               ()Ljava/lang/String;\n+   #90 = Methodref          #91.#92       // java/io/DataOutputStream.writeShort:(I)V\n+   #91 = Class              #93           // java/io/DataOutputStream\n+   #92 = NameAndType        #94:#95       // writeShort:(I)V\n+   #93 = Utf8               java/io/DataOutputStream\n+   #94 = Utf8               writeShort\n+   #95 = Utf8               (I)V\n+   #96 = Utf8               Code\n+   #97 = Utf8               LineNumberTable\n+   #98 = Utf8               LocalVariableTable\n+   #99 = Utf8               element\n+  #100 = Utf8               Ljava/lang/Object;\n+  #101 = Utf8               array\n+  #102 = Utf8               [Ljava/lang/Object;\n+  #103 = Utf8               prime\n+  #104 = Utf8               I\n+  #105 = Utf8               result\n+  #106 = Utf8               StackMapTable\n+  #107 = Class              #102          // \"[Ljava/lang/Object;\"\n+  #108 = Utf8               setAttributeName\n+  #109 = Utf8               cpUTF8Value\n+  #110 = Utf8               ([Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;)V\n+  #111 = Utf8               this\n+  #112 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute;\n+  #113 = Utf8               obj\n+  #114 = Utf8               other\n+  #115 = Utf8               getLength\n+  #116 = Utf8               getNestedClassFileEntries\n+  #117 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #118 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #119 = Utf8               i\n+  #120 = Utf8               pool\n+  #121 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;\n+  #122 = Utf8               exception\n+  #123 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+  #124 = Utf8               sb\n+  #125 = Utf8               Ljava/lang/StringBuilder;\n+  #126 = Class              #22           // \"[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\"\n+  #127 = Utf8               writeBody\n+  #128 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #129 = Utf8               dos\n+  #130 = Utf8               Ljava/io/DataOutputStream;\n+  #131 = Class              #59           // \"[I\"\n+  #132 = Utf8               Exceptions\n+  #133 = Class              #134          // java/io/IOException\n+  #134 = Utf8               java/io/IOException\n+  #135 = Utf8               SourceFile\n+  #136 = Utf8               ExceptionsAttribute.java\n {\n   private static org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 attributeName;\n     descriptor: Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n \n   private transient int[] exceptionIndexes;\n     descriptor: [I\n@@ -237,34 +237,34 @@\n \n   public static void setAttributeName(org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: putstatic     #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+         1: putstatic     #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n          4: return\n       LineNumberTable:\n         line 43: 0\n         line 44: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 cpUTF8Value   Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n \n   public org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionsAttribute(org.apache.commons.compress.harmony.unpack200.bytecode.CPClass[]);\n     descriptor: ([Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getstatic     #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-         4: invokespecial #3                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+         1: getstatic     #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+         4: invokespecial #13                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n          7: aload_0\n          8: aload_1\n-         9: putfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         9: putfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         12: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 7\n         line 53: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -279,33 +279,33 @@\n          0: aload_0\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #5                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.equals:(Ljava/lang/Object;)Z\n+         9: invokespecial #23                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.equals:(Ljava/lang/Object;)Z\n         12: ifne          17\n         15: iconst_0\n         16: ireturn\n         17: aload_0\n-        18: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        18: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         21: aload_1\n-        22: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        22: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         25: if_acmpeq     30\n         28: iconst_0\n         29: ireturn\n         30: aload_1\n-        31: checkcast     #7                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n+        31: checkcast     #8                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n         34: astore_2\n         35: aload_0\n-        36: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        36: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         39: aload_2\n-        40: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-        43: invokestatic  #8                  // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+        40: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        43: invokestatic  #31                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n         46: ifne          51\n         49: iconst_0\n         50: ireturn\n         51: iconst_1\n         52: ireturn\n       LineNumberTable:\n         line 57: 0\n@@ -335,15 +335,15 @@\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: iconst_2\n          1: iconst_2\n          2: aload_0\n-         3: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         3: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n          6: arraylength\n          7: imul\n          8: iadd\n          9: ireturn\n       LineNumberTable:\n         line 75: 0\n       LocalVariableTable:\n@@ -352,35 +352,35 @@\n \n   protected org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry[] getNestedClassFileEntries();\n     descriptor: ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         1: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n          4: arraylength\n          5: iconst_1\n          6: iadd\n-         7: anewarray     #9                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+         7: anewarray     #36                 // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n         10: astore_1\n         11: aload_0\n-        12: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        12: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         15: iconst_0\n         16: aload_1\n         17: iconst_0\n         18: aload_0\n-        19: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        19: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         22: arraylength\n-        23: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        23: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         26: aload_1\n         27: aload_0\n-        28: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        28: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         31: arraylength\n         32: aload_0\n-        33: invokevirtual #11                 // Method getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+        33: invokevirtual #44                 // Method getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n         36: aastore\n         37: aload_1\n         38: areturn\n       LineNumberTable:\n         line 80: 0\n         line 81: 11\n         line 82: 26\n@@ -394,22 +394,22 @@\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: bipush        31\n          2: istore_1\n          3: aload_0\n-         4: invokespecial #12                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.hashCode:()I\n+         4: invokespecial #48                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.hashCode:()I\n          7: istore_2\n          8: bipush        31\n         10: iload_2\n         11: imul\n         12: aload_0\n-        13: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-        16: invokestatic  #13                 // Method hashCode:([Ljava/lang/Object;)I\n+        13: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        16: invokestatic  #49                 // Method hashCode:([Ljava/lang/Object;)I\n         19: iadd\n         20: istore_2\n         21: iload_2\n         22: ireturn\n       LineNumberTable:\n         line 88: 0\n         line 89: 3\n@@ -424,43 +424,43 @@\n   protected void resolve(org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #14                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+         2: invokespecial #52                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n          5: aload_0\n          6: aload_0\n-         7: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         7: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         10: arraylength\n         11: newarray       int\n-        13: putfield      #15                 // Field exceptionIndexes:[I\n+        13: putfield      #56                 // Field exceptionIndexes:[I\n         16: iconst_0\n         17: istore_2\n         18: iload_2\n         19: aload_0\n-        20: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        20: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         23: arraylength\n         24: if_icmpge     59\n         27: aload_0\n-        28: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        28: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         31: iload_2\n         32: aaload\n         33: aload_1\n-        34: invokevirtual #16                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+        34: invokevirtual #60                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n         37: aload_0\n-        38: getfield      #15                 // Field exceptionIndexes:[I\n+        38: getfield      #56                 // Field exceptionIndexes:[I\n         41: iload_2\n         42: aload_1\n         43: aload_0\n-        44: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        44: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         47: iload_2\n         48: aaload\n-        49: invokevirtual #17                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+        49: invokevirtual #63                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n         52: iastore\n         53: iinc          2, 1\n         56: goto          18\n         59: return\n       LineNumberTable:\n         line 96: 0\n         line 97: 5\n@@ -482,24 +482,24 @@\n           offset_delta = 40\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=6, args_size=1\n-         0: new           #18                 // class java/lang/StringBuilder\n+         0: new           #69                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #19                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #71                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc           #20                 // String Exceptions:\n-        11: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         9: ldc           #74                 // String Exceptions:\n+        11: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         14: pop\n         15: aload_0\n-        16: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        16: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         19: astore_2\n         20: aload_2\n         21: arraylength\n         22: istore_3\n         23: iconst_0\n         24: istore        4\n         26: iload         4\n@@ -507,24 +507,24 @@\n         29: if_icmpge     58\n         32: aload_2\n         33: iload         4\n         35: aaload\n         36: astore        5\n         38: aload_1\n         39: aload         5\n-        41: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        41: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n         44: pop\n         45: aload_1\n         46: bipush        32\n-        48: invokevirtual #23                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        48: invokevirtual #83                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         51: pop\n         52: iinc          4, 1\n         55: goto          26\n         58: aload_1\n-        59: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        59: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         62: areturn\n       LineNumberTable:\n         line 106: 0\n         line 107: 8\n         line 108: 15\n         line 109: 38\n         line 110: 45\n@@ -546,19 +546,19 @@\n   protected void writeBody(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #15                 // Field exceptionIndexes:[I\n+         2: getfield      #56                 // Field exceptionIndexes:[I\n          5: arraylength\n-         6: invokevirtual #25                 // Method java/io/DataOutputStream.writeShort:(I)V\n+         6: invokevirtual #90                 // Method java/io/DataOutputStream.writeShort:(I)V\n          9: aload_0\n-        10: getfield      #15                 // Field exceptionIndexes:[I\n+        10: getfield      #56                 // Field exceptionIndexes:[I\n         13: astore_2\n         14: aload_2\n         15: arraylength\n         16: istore_3\n         17: iconst_0\n         18: istore        4\n         20: iload         4\n@@ -566,15 +566,15 @@\n         23: if_icmpge     44\n         26: aload_2\n         27: iload         4\n         29: iaload\n         30: istore        5\n         32: aload_1\n         33: iload         5\n-        35: invokevirtual #25                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        35: invokevirtual #90                 // Method java/io/DataOutputStream.writeShort:(I)V\n         38: iinc          4, 1\n         41: goto          20\n         44: return\n       LineNumberTable:\n         line 117: 0\n         line 118: 9\n         line 119: 32\n"}]}
