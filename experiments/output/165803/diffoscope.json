{"diffoscope-json-version": 1, "source1": "first/PropertyConverter.class", "source2": "second/PropertyConverter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,189 +1,189 @@\n-  SHA-256 checksum 0a9d3f12a58f94590705a542f1e67ceed25212722ca3194af1759de80930d2a5\n+  SHA-256 checksum 8634598e5a0243ded187d1cc5950bb13dcd818514ab253e413738e3ff0c97e41\n   Compiled from \"PropertyConverter.java\"\n final class org.apache.commons.configuration2.convert.PropertyConverter\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n   this_class: #59                         // org/apache/commons/configuration2/convert/PropertyConverter\n   super_class: #84                        // java/lang/Object\n   interfaces: 0, fields: 6, methods: 28, attributes: 1\n Constant pool:\n-    #1 = Methodref          #84.#322      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #153.#323     // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-    #3 = Class              #324          // java/lang/String\n-    #4 = Methodref          #84.#325      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-    #5 = Methodref          #3.#326       // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n-    #6 = Class              #327          // java/lang/Boolean\n-    #7 = Fieldref           #6.#328       // java/lang/Boolean.TYPE:Ljava/lang/Class;\n-    #8 = Methodref          #59.#329      // org/apache/commons/configuration2/convert/PropertyConverter.toBoolean:(Ljava/lang/Object;)Ljava/lang/Boolean;\n-    #9 = Class              #330          // java/lang/Character\n-   #10 = Fieldref           #9.#328       // java/lang/Character.TYPE:Ljava/lang/Class;\n-   #11 = Methodref          #59.#331      // org/apache/commons/configuration2/convert/PropertyConverter.toCharacter:(Ljava/lang/Object;)Ljava/lang/Character;\n-   #12 = Class              #332          // java/lang/Number\n-   #13 = Methodref          #153.#333     // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n-   #14 = Methodref          #153.#334     // java/lang/Class.isPrimitive:()Z\n-   #15 = Class              #335          // java/lang/Integer\n-   #16 = Fieldref           #15.#328      // java/lang/Integer.TYPE:Ljava/lang/Class;\n-   #17 = Methodref          #59.#336      // org/apache/commons/configuration2/convert/PropertyConverter.toInteger:(Ljava/lang/Object;)Ljava/lang/Integer;\n-   #18 = Class              #337          // java/lang/Long\n-   #19 = Fieldref           #18.#328      // java/lang/Long.TYPE:Ljava/lang/Class;\n-   #20 = Methodref          #59.#338      // org/apache/commons/configuration2/convert/PropertyConverter.toLong:(Ljava/lang/Object;)Ljava/lang/Long;\n-   #21 = Class              #339          // java/lang/Byte\n-   #22 = Fieldref           #21.#328      // java/lang/Byte.TYPE:Ljava/lang/Class;\n-   #23 = Methodref          #59.#340      // org/apache/commons/configuration2/convert/PropertyConverter.toByte:(Ljava/lang/Object;)Ljava/lang/Byte;\n-   #24 = Class              #341          // java/lang/Short\n-   #25 = Fieldref           #24.#328      // java/lang/Short.TYPE:Ljava/lang/Class;\n-   #26 = Methodref          #59.#342      // org/apache/commons/configuration2/convert/PropertyConverter.toShort:(Ljava/lang/Object;)Ljava/lang/Short;\n-   #27 = Class              #343          // java/lang/Float\n-   #28 = Fieldref           #27.#328      // java/lang/Float.TYPE:Ljava/lang/Class;\n-   #29 = Methodref          #59.#344      // org/apache/commons/configuration2/convert/PropertyConverter.toFloat:(Ljava/lang/Object;)Ljava/lang/Float;\n-   #30 = Class              #345          // java/lang/Double\n-   #31 = Fieldref           #30.#328      // java/lang/Double.TYPE:Ljava/lang/Class;\n-   #32 = Methodref          #59.#346      // org/apache/commons/configuration2/convert/PropertyConverter.toDouble:(Ljava/lang/Object;)Ljava/lang/Double;\n-   #33 = Class              #347          // java/math/BigInteger\n-   #34 = Methodref          #59.#348      // org/apache/commons/configuration2/convert/PropertyConverter.toBigInteger:(Ljava/lang/Object;)Ljava/math/BigInteger;\n-   #35 = Class              #349          // java/math/BigDecimal\n-   #36 = Methodref          #59.#350      // org/apache/commons/configuration2/convert/PropertyConverter.toBigDecimal:(Ljava/lang/Object;)Ljava/math/BigDecimal;\n-   #37 = Class              #351          // java/util/Date\n-   #38 = Methodref          #352.#353     // org/apache/commons/configuration2/convert/DefaultConversionHandler.getDateFormat:()Ljava/lang/String;\n-   #39 = Methodref          #59.#354      // org/apache/commons/configuration2/convert/PropertyConverter.toDate:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date;\n-   #40 = Class              #355          // java/util/Calendar\n-   #41 = Methodref          #59.#356      // org/apache/commons/configuration2/convert/PropertyConverter.toCalendar:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Calendar;\n-   #42 = Class              #357          // java/io/File\n-   #43 = Methodref          #59.#358      // org/apache/commons/configuration2/convert/PropertyConverter.toFile:(Ljava/lang/Object;)Ljava/io/File;\n-   #44 = Class              #359          // java/nio/file/Path\n-   #45 = Methodref          #59.#360      // org/apache/commons/configuration2/convert/PropertyConverter.toPath:(Ljava/lang/Object;)Ljava/nio/file/Path;\n-   #46 = Class              #361          // java/net/URI\n-   #47 = Methodref          #59.#362      // org/apache/commons/configuration2/convert/PropertyConverter.toURI:(Ljava/lang/Object;)Ljava/net/URI;\n-   #48 = Class              #363          // java/net/URL\n-   #49 = Methodref          #59.#364      // org/apache/commons/configuration2/convert/PropertyConverter.toURL:(Ljava/lang/Object;)Ljava/net/URL;\n-   #50 = Class              #365          // java/util/regex/Pattern\n-   #51 = Methodref          #59.#366      // org/apache/commons/configuration2/convert/PropertyConverter.toPattern:(Ljava/lang/Object;)Ljava/util/regex/Pattern;\n-   #52 = Class              #367          // java/util/Locale\n-   #53 = Methodref          #59.#368      // org/apache/commons/configuration2/convert/PropertyConverter.toLocale:(Ljava/lang/Object;)Ljava/util/Locale;\n-   #54 = Methodref          #59.#369      // org/apache/commons/configuration2/convert/PropertyConverter.isEnum:(Ljava/lang/Class;)Z\n-   #55 = Methodref          #59.#370      // org/apache/commons/configuration2/convert/PropertyConverter.convertToEnum:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;\n-   #56 = Class              #371          // java/awt/Color\n-   #57 = Methodref          #59.#372      // org/apache/commons/configuration2/convert/PropertyConverter.toColor:(Ljava/lang/Object;)Ljava/awt/Color;\n-   #58 = Methodref          #153.#373     // java/lang/Class.getName:()Ljava/lang/String;\n-   #59 = Class              #374          // org/apache/commons/configuration2/convert/PropertyConverter\n-   #60 = String             #375          // javax.mail.internet.InternetAddress\n-   #61 = Methodref          #3.#325       // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #62 = Methodref          #59.#376      // org/apache/commons/configuration2/convert/PropertyConverter.toInternetAddress:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #63 = Class              #377          // java/net/InetAddress\n-   #64 = Methodref          #59.#378      // org/apache/commons/configuration2/convert/PropertyConverter.toInetAddress:(Ljava/lang/Object;)Ljava/net/InetAddress;\n-   #65 = Class              #379          // org/apache/commons/configuration2/ex/ConversionException\n-   #66 = Class              #380          // java/lang/StringBuilder\n-   #67 = Methodref          #66.#322      // java/lang/StringBuilder.\"<init>\":()V\n-   #68 = String             #381          // The value \\'\n-   #69 = Methodref          #66.#382      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #70 = Methodref          #66.#383      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #71 = String             #384          // \\' (\n-   #72 = Methodref          #84.#385      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #73 = String             #386          // ) can\\'t be converted to a\n-   #74 = String             #387          //  object\n-   #75 = Methodref          #66.#388      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #76 = Methodref          #65.#389      // org/apache/commons/configuration2/ex/ConversionException.\"<init>\":(Ljava/lang/String;)V\n-   #77 = Methodref          #390.#391     // org/apache/commons/lang3/BooleanUtils.toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n-   #78 = String             #392          // The value\n-   #79 = String             #393          //  can\\'t be converted to a Boolean object\n-   #80 = Methodref          #3.#394       // java/lang/String.length:()I\n-   #81 = Methodref          #3.#395       // java/lang/String.charAt:(I)C\n-   #82 = Methodref          #9.#396       // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #83 = String             #397          // The value \\'%s\\' cannot be converted to a Character object!\n-   #84 = Class              #398          // java/lang/Object\n-   #85 = Methodref          #3.#399       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #86 = Methodref          #59.#400      // org/apache/commons/configuration2/convert/PropertyConverter.toNumber:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Number;\n-   #87 = Methodref          #12.#401      // java/lang/Number.byteValue:()B\n-   #88 = Methodref          #21.#402      // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-   #89 = Methodref          #12.#403      // java/lang/Number.shortValue:()S\n-   #90 = Methodref          #24.#404      // java/lang/Short.valueOf:(S)Ljava/lang/Short;\n-   #91 = Methodref          #12.#405      // java/lang/Number.intValue:()I\n-   #92 = Methodref          #15.#406      // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #93 = Methodref          #12.#407      // java/lang/Number.longValue:()J\n-   #94 = Methodref          #18.#408      // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-   #95 = Methodref          #12.#409      // java/lang/Number.floatValue:()F\n-   #96 = Methodref          #27.#410      // java/lang/Float.\"<init>\":(F)V\n-   #97 = Methodref          #12.#411      // java/lang/Number.doubleValue:()D\n-   #98 = Methodref          #30.#412      // java/lang/Double.\"<init>\":(D)V\n-   #99 = Methodref          #33.#413      // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-  #100 = Methodref          #35.#412      // java/math/BigDecimal.\"<init>\":(D)V\n-  #101 = Methodref          #84.#388      // java/lang/Object.toString:()Ljava/lang/String;\n-  #102 = String             #414          // 0x\n-  #103 = Methodref          #3.#415       // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-  #104 = Methodref          #3.#416       // java/lang/String.substring:(I)Ljava/lang/String;\n-  #105 = Methodref          #33.#417      // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n-  #106 = Class              #418          // java/lang/NumberFormatException\n-  #107 = String             #419          // Could not convert\n-  #108 = String             #420          //  to\n-  #109 = String             #421          // ! Invalid hex number.\n-  #110 = Methodref          #65.#422      // org/apache/commons/configuration2/ex/ConversionException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #111 = String             #423          // 0b\n-  #112 = String             #424          // ! Invalid binary number.\n-  #113 = Fieldref           #59.#425      // org/apache/commons/configuration2/convert/PropertyConverter.CONSTR_ARGS:[Ljava/lang/Class;\n-  #114 = Methodref          #153.#426     // java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;\n-  #115 = Methodref          #427.#428     // java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;\n-  #116 = Class              #429          // java/lang/reflect/InvocationTargetException\n-  #117 = Methodref          #116.#430     // java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;\n-  #118 = Class              #431          // java/lang/Exception\n-  #119 = String             #432          // Conversion error when trying to convert\n-  #120 = InterfaceMethodref #44.#433      // java/nio/file/Path.toFile:()Ljava/io/File;\n-  #121 = Methodref          #42.#389      // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-  #122 = String             #434          //  can\\'t be converted to a File\n-  #123 = Methodref          #42.#435      // java/io/File.toPath:()Ljava/nio/file/Path;\n-  #124 = Methodref          #436.#437     // java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-  #125 = String             #438          //  can\\'t be converted to a Path\n-  #126 = Methodref          #46.#389      // java/net/URI.\"<init>\":(Ljava/lang/String;)V\n-  #127 = Class              #439          // java/net/URISyntaxException\n-  #128 = String             #440          //  can\\'t be converted to an URI\n-  #129 = Methodref          #48.#389      // java/net/URL.\"<init>\":(Ljava/lang/String;)V\n-  #130 = Class              #441          // java/net/MalformedURLException\n-  #131 = String             #442          //  can\\'t be converted to an URL\n-  #132 = Methodref          #50.#443      // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #133 = Class              #444          // java/util/regex/PatternSyntaxException\n-  #134 = String             #445          //  can\\'t be converted to a Pattern\n-  #135 = String             #446          // _\n-  #136 = Methodref          #3.#447       // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n-  #137 = String             #448          //\n-  #138 = Methodref          #52.#449      // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #139 = String             #450          //  can\\'t be converted to a Locale\n-  #140 = Methodref          #451.#452     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n-  #141 = Methodref          #3.#453       // java/lang/String.trim:()Ljava/lang/String;\n-  #142 = String             #454          //  can\\'t be converted to a Color\n-  #143 = String             #455          // #\n-  #144 = Methodref          #3.#456       // java/lang/String.substring:(II)Ljava/lang/String;\n-  #145 = Methodref          #15.#457      // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-  #146 = Fieldref           #56.#458      // java/awt/Color.black:Ljava/awt/Color;\n-  #147 = Methodref          #56.#459      // java/awt/Color.getAlpha:()I\n-  #148 = Methodref          #56.#460      // java/awt/Color.\"<init>\":(IIII)V\n-  #149 = Methodref          #63.#461      // java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;\n-  #150 = Class              #462          // java/net/UnknownHostException\n-  #151 = String             #463          //  can\\'t be converted to a InetAddress\n-  #152 = Methodref          #153.#464     // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n-  #153 = Class              #465          // java/lang/Class\n-  #154 = String             #466          //  can\\'t be converted to a InternetAddress\n-  #155 = Methodref          #153.#467     // java/lang/Class.isEnum:()Z\n-  #156 = Methodref          #153.#468     // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #157 = Class              #469          // java/lang/Enum\n-  #158 = Methodref          #157.#470     // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #159 = String             #471          //  can\\'t be converted to a\n-  #160 = Methodref          #153.#472     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-  #161 = Class              #302          // \"[Ljava/lang/Enum;\"\n-  #162 = Methodref          #40.#473      // java/util/Calendar.getTime:()Ljava/util/Date;\n-  #163 = Class              #474          // java/text/SimpleDateFormat\n-  #164 = Methodref          #163.#389     // java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;)V\n-  #165 = Methodref          #163.#475     // java/text/SimpleDateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;\n-  #166 = Class              #476          // java/text/ParseException\n-  #167 = String             #477          //  can\\'t be converted to a Date\n-  #168 = Methodref          #40.#478      // java/util/Calendar.getInstance:()Ljava/util/Calendar;\n-  #169 = Methodref          #40.#479      // java/util/Calendar.setTime:(Ljava/util/Date;)V\n-  #170 = String             #480          //  can\\'t be converted to a Calendar\n-  #171 = Methodref          #153.#481     // java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;\n-  #172 = Methodref          #59.#482      // org/apache/commons/configuration2/convert/PropertyConverter.toEnum:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Enum;\n+    #1 = Methodref          #84.#309      // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #153.#310     // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+    #3 = Class              #311          // java/lang/String\n+    #4 = Methodref          #84.#312      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+    #5 = Methodref          #3.#313       // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+    #6 = Class              #314          // java/lang/Boolean\n+    #7 = Fieldref           #6.#315       // java/lang/Boolean.TYPE:Ljava/lang/Class;\n+    #8 = Methodref          #59.#316      // org/apache/commons/configuration2/convert/PropertyConverter.toBoolean:(Ljava/lang/Object;)Ljava/lang/Boolean;\n+    #9 = Class              #317          // java/lang/Character\n+   #10 = Fieldref           #9.#315       // java/lang/Character.TYPE:Ljava/lang/Class;\n+   #11 = Methodref          #59.#318      // org/apache/commons/configuration2/convert/PropertyConverter.toCharacter:(Ljava/lang/Object;)Ljava/lang/Character;\n+   #12 = Class              #319          // java/lang/Number\n+   #13 = Methodref          #153.#320     // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+   #14 = Methodref          #153.#321     // java/lang/Class.isPrimitive:()Z\n+   #15 = Class              #322          // java/lang/Integer\n+   #16 = Fieldref           #15.#315      // java/lang/Integer.TYPE:Ljava/lang/Class;\n+   #17 = Methodref          #59.#323      // org/apache/commons/configuration2/convert/PropertyConverter.toInteger:(Ljava/lang/Object;)Ljava/lang/Integer;\n+   #18 = Class              #324          // java/lang/Long\n+   #19 = Fieldref           #18.#315      // java/lang/Long.TYPE:Ljava/lang/Class;\n+   #20 = Methodref          #59.#325      // org/apache/commons/configuration2/convert/PropertyConverter.toLong:(Ljava/lang/Object;)Ljava/lang/Long;\n+   #21 = Class              #326          // java/lang/Byte\n+   #22 = Fieldref           #21.#315      // java/lang/Byte.TYPE:Ljava/lang/Class;\n+   #23 = Methodref          #59.#327      // org/apache/commons/configuration2/convert/PropertyConverter.toByte:(Ljava/lang/Object;)Ljava/lang/Byte;\n+   #24 = Class              #328          // java/lang/Short\n+   #25 = Fieldref           #24.#315      // java/lang/Short.TYPE:Ljava/lang/Class;\n+   #26 = Methodref          #59.#329      // org/apache/commons/configuration2/convert/PropertyConverter.toShort:(Ljava/lang/Object;)Ljava/lang/Short;\n+   #27 = Class              #330          // java/lang/Float\n+   #28 = Fieldref           #27.#315      // java/lang/Float.TYPE:Ljava/lang/Class;\n+   #29 = Methodref          #59.#331      // org/apache/commons/configuration2/convert/PropertyConverter.toFloat:(Ljava/lang/Object;)Ljava/lang/Float;\n+   #30 = Class              #332          // java/lang/Double\n+   #31 = Fieldref           #30.#315      // java/lang/Double.TYPE:Ljava/lang/Class;\n+   #32 = Methodref          #59.#333      // org/apache/commons/configuration2/convert/PropertyConverter.toDouble:(Ljava/lang/Object;)Ljava/lang/Double;\n+   #33 = Class              #334          // java/math/BigInteger\n+   #34 = Methodref          #59.#335      // org/apache/commons/configuration2/convert/PropertyConverter.toBigInteger:(Ljava/lang/Object;)Ljava/math/BigInteger;\n+   #35 = Class              #336          // java/math/BigDecimal\n+   #36 = Methodref          #59.#337      // org/apache/commons/configuration2/convert/PropertyConverter.toBigDecimal:(Ljava/lang/Object;)Ljava/math/BigDecimal;\n+   #37 = Class              #338          // java/util/Date\n+   #38 = Methodref          #339.#340     // org/apache/commons/configuration2/convert/DefaultConversionHandler.getDateFormat:()Ljava/lang/String;\n+   #39 = Methodref          #59.#341      // org/apache/commons/configuration2/convert/PropertyConverter.toDate:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date;\n+   #40 = Class              #342          // java/util/Calendar\n+   #41 = Methodref          #59.#343      // org/apache/commons/configuration2/convert/PropertyConverter.toCalendar:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Calendar;\n+   #42 = Class              #344          // java/io/File\n+   #43 = Methodref          #59.#345      // org/apache/commons/configuration2/convert/PropertyConverter.toFile:(Ljava/lang/Object;)Ljava/io/File;\n+   #44 = Class              #346          // java/nio/file/Path\n+   #45 = Methodref          #59.#347      // org/apache/commons/configuration2/convert/PropertyConverter.toPath:(Ljava/lang/Object;)Ljava/nio/file/Path;\n+   #46 = Class              #348          // java/net/URI\n+   #47 = Methodref          #59.#349      // org/apache/commons/configuration2/convert/PropertyConverter.toURI:(Ljava/lang/Object;)Ljava/net/URI;\n+   #48 = Class              #350          // java/net/URL\n+   #49 = Methodref          #59.#351      // org/apache/commons/configuration2/convert/PropertyConverter.toURL:(Ljava/lang/Object;)Ljava/net/URL;\n+   #50 = Class              #352          // java/util/regex/Pattern\n+   #51 = Methodref          #59.#353      // org/apache/commons/configuration2/convert/PropertyConverter.toPattern:(Ljava/lang/Object;)Ljava/util/regex/Pattern;\n+   #52 = Class              #354          // java/util/Locale\n+   #53 = Methodref          #59.#355      // org/apache/commons/configuration2/convert/PropertyConverter.toLocale:(Ljava/lang/Object;)Ljava/util/Locale;\n+   #54 = Methodref          #59.#356      // org/apache/commons/configuration2/convert/PropertyConverter.isEnum:(Ljava/lang/Class;)Z\n+   #55 = Methodref          #59.#357      // org/apache/commons/configuration2/convert/PropertyConverter.convertToEnum:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;\n+   #56 = Class              #358          // java/awt/Color\n+   #57 = Methodref          #59.#359      // org/apache/commons/configuration2/convert/PropertyConverter.toColor:(Ljava/lang/Object;)Ljava/awt/Color;\n+   #58 = Methodref          #153.#360     // java/lang/Class.getName:()Ljava/lang/String;\n+   #59 = Class              #361          // org/apache/commons/configuration2/convert/PropertyConverter\n+   #60 = String             #362          // javax.mail.internet.InternetAddress\n+   #61 = Methodref          #3.#312       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #62 = Methodref          #59.#363      // org/apache/commons/configuration2/convert/PropertyConverter.toInternetAddress:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #63 = Class              #364          // java/net/InetAddress\n+   #64 = Methodref          #59.#365      // org/apache/commons/configuration2/convert/PropertyConverter.toInetAddress:(Ljava/lang/Object;)Ljava/net/InetAddress;\n+   #65 = Class              #366          // org/apache/commons/configuration2/ex/ConversionException\n+   #66 = Class              #367          // java/lang/StringBuilder\n+   #67 = Methodref          #66.#309      // java/lang/StringBuilder.\"<init>\":()V\n+   #68 = String             #368          // The value \\'\n+   #69 = Methodref          #66.#369      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #70 = Methodref          #66.#370      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #71 = String             #371          // \\' (\n+   #72 = Methodref          #84.#372      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #73 = String             #373          // ) can\\'t be converted to a\n+   #74 = String             #374          //  object\n+   #75 = Methodref          #66.#375      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #76 = Methodref          #65.#376      // org/apache/commons/configuration2/ex/ConversionException.\"<init>\":(Ljava/lang/String;)V\n+   #77 = Methodref          #377.#378     // org/apache/commons/lang3/BooleanUtils.toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n+   #78 = String             #379          // The value\n+   #79 = String             #380          //  can\\'t be converted to a Boolean object\n+   #80 = Methodref          #3.#381       // java/lang/String.length:()I\n+   #81 = Methodref          #3.#382       // java/lang/String.charAt:(I)C\n+   #82 = Methodref          #9.#383       // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+   #83 = String             #384          // The value \\'%s\\' cannot be converted to a Character object!\n+   #84 = Class              #385          // java/lang/Object\n+   #85 = Methodref          #3.#386       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #86 = Methodref          #59.#387      // org/apache/commons/configuration2/convert/PropertyConverter.toNumber:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Number;\n+   #87 = Methodref          #12.#388      // java/lang/Number.byteValue:()B\n+   #88 = Methodref          #21.#389      // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+   #89 = Methodref          #12.#390      // java/lang/Number.shortValue:()S\n+   #90 = Methodref          #24.#391      // java/lang/Short.valueOf:(S)Ljava/lang/Short;\n+   #91 = Methodref          #12.#392      // java/lang/Number.intValue:()I\n+   #92 = Methodref          #15.#393      // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #93 = Methodref          #12.#394      // java/lang/Number.longValue:()J\n+   #94 = Methodref          #18.#395      // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+   #95 = Methodref          #12.#396      // java/lang/Number.floatValue:()F\n+   #96 = Methodref          #27.#397      // java/lang/Float.\"<init>\":(F)V\n+   #97 = Methodref          #12.#398      // java/lang/Number.doubleValue:()D\n+   #98 = Methodref          #30.#399      // java/lang/Double.\"<init>\":(D)V\n+   #99 = Methodref          #33.#400      // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+  #100 = Methodref          #35.#399      // java/math/BigDecimal.\"<init>\":(D)V\n+  #101 = Methodref          #84.#375      // java/lang/Object.toString:()Ljava/lang/String;\n+  #102 = String             #401          // 0x\n+  #103 = Methodref          #3.#402       // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+  #104 = Methodref          #3.#403       // java/lang/String.substring:(I)Ljava/lang/String;\n+  #105 = Methodref          #33.#404      // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n+  #106 = Class              #405          // java/lang/NumberFormatException\n+  #107 = String             #406          // Could not convert\n+  #108 = String             #407          //  to\n+  #109 = String             #408          // ! Invalid hex number.\n+  #110 = Methodref          #65.#409      // org/apache/commons/configuration2/ex/ConversionException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #111 = String             #410          // 0b\n+  #112 = String             #411          // ! Invalid binary number.\n+  #113 = Fieldref           #59.#412      // org/apache/commons/configuration2/convert/PropertyConverter.CONSTR_ARGS:[Ljava/lang/Class;\n+  #114 = Methodref          #153.#413     // java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;\n+  #115 = Methodref          #414.#415     // java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;\n+  #116 = Class              #416          // java/lang/reflect/InvocationTargetException\n+  #117 = Methodref          #116.#417     // java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;\n+  #118 = Class              #418          // java/lang/Exception\n+  #119 = String             #419          // Conversion error when trying to convert\n+  #120 = InterfaceMethodref #44.#420      // java/nio/file/Path.toFile:()Ljava/io/File;\n+  #121 = Methodref          #42.#376      // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+  #122 = String             #421          //  can\\'t be converted to a File\n+  #123 = Methodref          #42.#422      // java/io/File.toPath:()Ljava/nio/file/Path;\n+  #124 = Methodref          #423.#424     // java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+  #125 = String             #425          //  can\\'t be converted to a Path\n+  #126 = Methodref          #46.#376      // java/net/URI.\"<init>\":(Ljava/lang/String;)V\n+  #127 = Class              #426          // java/net/URISyntaxException\n+  #128 = String             #427          //  can\\'t be converted to an URI\n+  #129 = Methodref          #48.#376      // java/net/URL.\"<init>\":(Ljava/lang/String;)V\n+  #130 = Class              #428          // java/net/MalformedURLException\n+  #131 = String             #429          //  can\\'t be converted to an URL\n+  #132 = Methodref          #50.#430      // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #133 = Class              #431          // java/util/regex/PatternSyntaxException\n+  #134 = String             #432          //  can\\'t be converted to a Pattern\n+  #135 = String             #433          // _\n+  #136 = Methodref          #3.#434       // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+  #137 = String             #435          //\n+  #138 = Methodref          #52.#436      // java/util/Locale.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #139 = String             #437          //  can\\'t be converted to a Locale\n+  #140 = Methodref          #438.#439     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+  #141 = Methodref          #3.#440       // java/lang/String.trim:()Ljava/lang/String;\n+  #142 = String             #441          //  can\\'t be converted to a Color\n+  #143 = String             #442          // #\n+  #144 = Methodref          #3.#443       // java/lang/String.substring:(II)Ljava/lang/String;\n+  #145 = Methodref          #15.#444      // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+  #146 = Fieldref           #56.#445      // java/awt/Color.black:Ljava/awt/Color;\n+  #147 = Methodref          #56.#446      // java/awt/Color.getAlpha:()I\n+  #148 = Methodref          #56.#447      // java/awt/Color.\"<init>\":(IIII)V\n+  #149 = Methodref          #63.#448      // java/net/InetAddress.getByName:(Ljava/lang/String;)Ljava/net/InetAddress;\n+  #150 = Class              #449          // java/net/UnknownHostException\n+  #151 = String             #450          //  can\\'t be converted to a InetAddress\n+  #152 = Methodref          #153.#451     // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n+  #153 = Class              #452          // java/lang/Class\n+  #154 = String             #453          //  can\\'t be converted to a InternetAddress\n+  #155 = Methodref          #153.#454     // java/lang/Class.isEnum:()Z\n+  #156 = Methodref          #153.#455     // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #157 = Class              #456          // java/lang/Enum\n+  #158 = Methodref          #157.#457     // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #159 = String             #458          //  can\\'t be converted to a\n+  #160 = Methodref          #153.#459     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+  #161 = Class              #290          // \"[Ljava/lang/Enum;\"\n+  #162 = Methodref          #40.#460      // java/util/Calendar.getTime:()Ljava/util/Date;\n+  #163 = Class              #461          // java/text/SimpleDateFormat\n+  #164 = Methodref          #163.#376     // java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;)V\n+  #165 = Methodref          #163.#462     // java/text/SimpleDateFormat.parse:(Ljava/lang/String;)Ljava/util/Date;\n+  #166 = Class              #463          // java/text/ParseException\n+  #167 = String             #464          //  can\\'t be converted to a Date\n+  #168 = Methodref          #40.#465      // java/util/Calendar.getInstance:()Ljava/util/Calendar;\n+  #169 = Methodref          #40.#466      // java/util/Calendar.setTime:(Ljava/util/Date;)V\n+  #170 = String             #467          //  can\\'t be converted to a Calendar\n+  #171 = Methodref          #153.#468     // java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;\n+  #172 = Methodref          #59.#469      // org/apache/commons/configuration2/convert/PropertyConverter.toEnum:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Enum;\n   #173 = Utf8               HEX_PREFIX\n   #174 = Utf8               Ljava/lang/String;\n   #175 = Utf8               ConstantValue\n   #176 = Utf8               HEX_RADIX\n   #177 = Utf8               I\n   #178 = Integer            16\n   #179 = Utf8               BIN_PREFIX\n@@ -214,385 +214,372 @@\n   #204 = Utf8               StackMapTable\n   #205 = Utf8               Exceptions\n   #206 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;Lorg/apache/commons/configuration2/convert/DefaultConversionHandler;)Ljava/lang/Object;\n   #207 = Utf8               toBoolean\n   #208 = Utf8               (Ljava/lang/Object;)Ljava/lang/Boolean;\n   #209 = Utf8               b\n   #210 = Utf8               Ljava/lang/Boolean;\n-  #211 = Class              #327          // java/lang/Boolean\n-  #212 = Utf8               toCharacter\n-  #213 = Utf8               (Ljava/lang/Object;)Ljava/lang/Character;\n-  #214 = Utf8               strValue\n-  #215 = Class              #324          // java/lang/String\n-  #216 = Utf8               toByte\n-  #217 = Utf8               (Ljava/lang/Object;)Ljava/lang/Byte;\n-  #218 = Utf8               n\n-  #219 = Utf8               Ljava/lang/Number;\n-  #220 = Class              #332          // java/lang/Number\n-  #221 = Utf8               toShort\n-  #222 = Utf8               (Ljava/lang/Object;)Ljava/lang/Short;\n-  #223 = Utf8               toInteger\n-  #224 = Utf8               (Ljava/lang/Object;)Ljava/lang/Integer;\n-  #225 = Utf8               toLong\n-  #226 = Utf8               (Ljava/lang/Object;)Ljava/lang/Long;\n-  #227 = Utf8               toFloat\n-  #228 = Utf8               (Ljava/lang/Object;)Ljava/lang/Float;\n-  #229 = Utf8               toDouble\n-  #230 = Utf8               (Ljava/lang/Object;)Ljava/lang/Double;\n-  #231 = Utf8               toBigInteger\n-  #232 = Utf8               (Ljava/lang/Object;)Ljava/math/BigInteger;\n-  #233 = Utf8               toBigDecimal\n-  #234 = Utf8               (Ljava/lang/Object;)Ljava/math/BigDecimal;\n-  #235 = Utf8               toNumber\n-  #236 = Utf8               (Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Number;\n-  #237 = Utf8               nex\n-  #238 = Utf8               Ljava/lang/NumberFormatException;\n-  #239 = Utf8               constr\n-  #240 = Utf8               Ljava/lang/reflect/Constructor;\n-  #241 = Utf8               itex\n-  #242 = Utf8               Ljava/lang/reflect/InvocationTargetException;\n-  #243 = Utf8               ex\n-  #244 = Utf8               Ljava/lang/Exception;\n-  #245 = Utf8               targetClass\n-  #246 = Utf8               str\n-  #247 = Utf8               Ljava/lang/reflect/Constructor<*>;\n-  #248 = Class              #398          // java/lang/Object\n-  #249 = Class              #465          // java/lang/Class\n-  #250 = Class              #418          // java/lang/NumberFormatException\n-  #251 = Class              #429          // java/lang/reflect/InvocationTargetException\n-  #252 = Class              #431          // java/lang/Exception\n-  #253 = Utf8               (Ljava/lang/Object;Ljava/lang/Class<*>;)Ljava/lang/Number;\n-  #254 = Utf8               toFile\n-  #255 = Utf8               (Ljava/lang/Object;)Ljava/io/File;\n-  #256 = Utf8               toPath\n-  #257 = Utf8               (Ljava/lang/Object;)Ljava/nio/file/Path;\n-  #258 = Utf8               toURI\n-  #259 = Utf8               (Ljava/lang/Object;)Ljava/net/URI;\n-  #260 = Utf8               e\n-  #261 = Utf8               Ljava/net/URISyntaxException;\n-  #262 = Class              #439          // java/net/URISyntaxException\n-  #263 = Utf8               toURL\n-  #264 = Utf8               (Ljava/lang/Object;)Ljava/net/URL;\n-  #265 = Utf8               Ljava/net/MalformedURLException;\n-  #266 = Class              #441          // java/net/MalformedURLException\n-  #267 = Utf8               toPattern\n-  #268 = Utf8               (Ljava/lang/Object;)Ljava/util/regex/Pattern;\n-  #269 = Utf8               Ljava/util/regex/PatternSyntaxException;\n-  #270 = Class              #444          // java/util/regex/PatternSyntaxException\n-  #271 = Utf8               toLocale\n-  #272 = Utf8               (Ljava/lang/Object;)Ljava/util/Locale;\n-  #273 = Utf8               language\n-  #274 = Utf8               country\n-  #275 = Utf8               variant\n-  #276 = Utf8               elements\n-  #277 = Utf8               [Ljava/lang/String;\n-  #278 = Utf8               size\n-  #279 = Class              #277          // \"[Ljava/lang/String;\"\n-  #280 = Utf8               toColor\n-  #281 = Utf8               (Ljava/lang/Object;)Ljava/awt/Color;\n-  #282 = Utf8               i\n-  #283 = Utf8               alpha\n-  #284 = Utf8               color\n-  #285 = Utf8               components\n-  #286 = Utf8               [I\n-  #287 = Utf8               minlength\n-  #288 = Class              #286          // \"[I\"\n-  #289 = Utf8               toInetAddress\n-  #290 = Utf8               (Ljava/lang/Object;)Ljava/net/InetAddress;\n-  #291 = Utf8               Ljava/net/UnknownHostException;\n-  #292 = Class              #462          // java/net/UnknownHostException\n-  #293 = Utf8               toInternetAddress\n-  #294 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #295 = Utf8               ctor\n-  #296 = Utf8               isEnum\n-  #297 = Utf8               (Ljava/lang/Class;)Z\n-  #298 = Utf8               (Ljava/lang/Class<*>;)Z\n-  #299 = Utf8               toEnum\n-  #300 = Utf8               (Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Enum;\n-  #301 = Utf8               enumConstants\n-  #302 = Utf8               [Ljava/lang/Enum;\n-  #303 = Utf8               [TE;\n-  #304 = Utf8               Ljava/lang/Class<TE;>;\n-  #305 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Object;Ljava/lang/Class<TE;>;)TE;\n-  #306 = Utf8               toDate\n-  #307 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date;\n-  #308 = Utf8               Ljava/text/ParseException;\n-  #309 = Utf8               format\n-  #310 = Class              #476          // java/text/ParseException\n-  #311 = Utf8               toCalendar\n-  #312 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Calendar;\n-  #313 = Utf8               calendar\n-  #314 = Utf8               Ljava/util/Calendar;\n-  #315 = Utf8               convertToEnum\n-  #316 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;\n-  #317 = Utf8               enumClass\n-  #318 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;)Ljava/lang/Object;\n-  #319 = Utf8               <clinit>\n-  #320 = Utf8               SourceFile\n-  #321 = Utf8               PropertyConverter.java\n-  #322 = NameAndType        #187:#188     // \"<init>\":()V\n-  #323 = NameAndType        #483:#484     // isInstance:(Ljava/lang/Object;)Z\n-  #324 = Utf8               java/lang/String\n-  #325 = NameAndType        #485:#484     // equals:(Ljava/lang/Object;)Z\n-  #326 = NameAndType        #486:#487     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n-  #327 = Utf8               java/lang/Boolean\n-  #328 = NameAndType        #488:#197     // TYPE:Ljava/lang/Class;\n-  #329 = NameAndType        #207:#208     // toBoolean:(Ljava/lang/Object;)Ljava/lang/Boolean;\n-  #330 = Utf8               java/lang/Character\n-  #331 = NameAndType        #212:#213     // toCharacter:(Ljava/lang/Object;)Ljava/lang/Character;\n-  #332 = Utf8               java/lang/Number\n-  #333 = NameAndType        #489:#297     // isAssignableFrom:(Ljava/lang/Class;)Z\n-  #334 = NameAndType        #490:#491     // isPrimitive:()Z\n-  #335 = Utf8               java/lang/Integer\n-  #336 = NameAndType        #223:#224     // toInteger:(Ljava/lang/Object;)Ljava/lang/Integer;\n-  #337 = Utf8               java/lang/Long\n-  #338 = NameAndType        #225:#226     // toLong:(Ljava/lang/Object;)Ljava/lang/Long;\n-  #339 = Utf8               java/lang/Byte\n-  #340 = NameAndType        #216:#217     // toByte:(Ljava/lang/Object;)Ljava/lang/Byte;\n-  #341 = Utf8               java/lang/Short\n-  #342 = NameAndType        #221:#222     // toShort:(Ljava/lang/Object;)Ljava/lang/Short;\n-  #343 = Utf8               java/lang/Float\n-  #344 = NameAndType        #227:#228     // toFloat:(Ljava/lang/Object;)Ljava/lang/Float;\n-  #345 = Utf8               java/lang/Double\n-  #346 = NameAndType        #229:#230     // toDouble:(Ljava/lang/Object;)Ljava/lang/Double;\n-  #347 = Utf8               java/math/BigInteger\n-  #348 = NameAndType        #231:#232     // toBigInteger:(Ljava/lang/Object;)Ljava/math/BigInteger;\n-  #349 = Utf8               java/math/BigDecimal\n-  #350 = NameAndType        #233:#234     // toBigDecimal:(Ljava/lang/Object;)Ljava/math/BigDecimal;\n-  #351 = Utf8               java/util/Date\n-  #352 = Class              #492          // org/apache/commons/configuration2/convert/DefaultConversionHandler\n-  #353 = NameAndType        #493:#494     // getDateFormat:()Ljava/lang/String;\n-  #354 = NameAndType        #306:#307     // toDate:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date;\n-  #355 = Utf8               java/util/Calendar\n-  #356 = NameAndType        #311:#312     // toCalendar:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Calendar;\n-  #357 = Utf8               java/io/File\n-  #358 = NameAndType        #254:#255     // toFile:(Ljava/lang/Object;)Ljava/io/File;\n-  #359 = Utf8               java/nio/file/Path\n-  #360 = NameAndType        #256:#257     // toPath:(Ljava/lang/Object;)Ljava/nio/file/Path;\n-  #361 = Utf8               java/net/URI\n-  #362 = NameAndType        #258:#259     // toURI:(Ljava/lang/Object;)Ljava/net/URI;\n-  #363 = Utf8               java/net/URL\n-  #364 = NameAndType        #263:#264     // toURL:(Ljava/lang/Object;)Ljava/net/URL;\n-  #365 = Utf8               java/util/regex/Pattern\n-  #366 = NameAndType        #267:#268     // toPattern:(Ljava/lang/Object;)Ljava/util/regex/Pattern;\n-  #367 = Utf8               java/util/Locale\n-  #368 = NameAndType        #271:#272     // toLocale:(Ljava/lang/Object;)Ljava/util/Locale;\n-  #369 = NameAndType        #296:#297     // isEnum:(Ljava/lang/Class;)Z\n-  #370 = NameAndType        #315:#316     // convertToEnum:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;\n-  #371 = Utf8               java/awt/Color\n-  #372 = NameAndType        #280:#281     // toColor:(Ljava/lang/Object;)Ljava/awt/Color;\n-  #373 = NameAndType        #495:#494     // getName:()Ljava/lang/String;\n-  #374 = Utf8               org/apache/commons/configuration2/convert/PropertyConverter\n-  #375 = Utf8               javax.mail.internet.InternetAddress\n-  #376 = NameAndType        #293:#294     // toInternetAddress:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #377 = Utf8               java/net/InetAddress\n-  #378 = NameAndType        #289:#290     // toInetAddress:(Ljava/lang/Object;)Ljava/net/InetAddress;\n-  #379 = Utf8               org/apache/commons/configuration2/ex/ConversionException\n-  #380 = Utf8               java/lang/StringBuilder\n-  #381 = Utf8               The value \\'\n-  #382 = NameAndType        #496:#497     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #383 = NameAndType        #496:#498     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #384 = Utf8               \\' (\n-  #385 = NameAndType        #499:#500     // getClass:()Ljava/lang/Class;\n-  #386 = Utf8               ) can\\'t be converted to a\n-  #387 = Utf8                object\n-  #388 = NameAndType        #501:#494     // toString:()Ljava/lang/String;\n-  #389 = NameAndType        #187:#502     // \"<init>\":(Ljava/lang/String;)V\n-  #390 = Class              #503          // org/apache/commons/lang3/BooleanUtils\n-  #391 = NameAndType        #504:#505     // toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n-  #392 = Utf8               The value\n-  #393 = Utf8                can\\'t be converted to a Boolean object\n-  #394 = NameAndType        #506:#507     // length:()I\n-  #395 = NameAndType        #508:#509     // charAt:(I)C\n-  #396 = NameAndType        #486:#510     // valueOf:(C)Ljava/lang/Character;\n-  #397 = Utf8               The value \\'%s\\' cannot be converted to a Character object!\n-  #398 = Utf8               java/lang/Object\n-  #399 = NameAndType        #309:#511     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #400 = NameAndType        #235:#236     // toNumber:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Number;\n-  #401 = NameAndType        #512:#513     // byteValue:()B\n-  #402 = NameAndType        #486:#514     // valueOf:(B)Ljava/lang/Byte;\n-  #403 = NameAndType        #515:#516     // shortValue:()S\n-  #404 = NameAndType        #486:#517     // valueOf:(S)Ljava/lang/Short;\n-  #405 = NameAndType        #518:#507     // intValue:()I\n-  #406 = NameAndType        #486:#519     // valueOf:(I)Ljava/lang/Integer;\n-  #407 = NameAndType        #520:#521     // longValue:()J\n-  #408 = NameAndType        #486:#522     // valueOf:(J)Ljava/lang/Long;\n-  #409 = NameAndType        #523:#524     // floatValue:()F\n-  #410 = NameAndType        #187:#525     // \"<init>\":(F)V\n-  #411 = NameAndType        #526:#527     // doubleValue:()D\n-  #412 = NameAndType        #187:#528     // \"<init>\":(D)V\n-  #413 = NameAndType        #486:#529     // valueOf:(J)Ljava/math/BigInteger;\n-  #414 = Utf8               0x\n-  #415 = NameAndType        #530:#531     // startsWith:(Ljava/lang/String;)Z\n-  #416 = NameAndType        #532:#533     // substring:(I)Ljava/lang/String;\n-  #417 = NameAndType        #187:#534     // \"<init>\":(Ljava/lang/String;I)V\n-  #418 = Utf8               java/lang/NumberFormatException\n-  #419 = Utf8               Could not convert\n-  #420 = Utf8                to\n-  #421 = Utf8               ! Invalid hex number.\n-  #422 = NameAndType        #187:#535     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #423 = Utf8               0b\n-  #424 = Utf8               ! Invalid binary number.\n-  #425 = NameAndType        #182:#183     // CONSTR_ARGS:[Ljava/lang/Class;\n-  #426 = NameAndType        #536:#537     // getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;\n-  #427 = Class              #538          // java/lang/reflect/Constructor\n-  #428 = NameAndType        #539:#540     // newInstance:([Ljava/lang/Object;)Ljava/lang/Object;\n-  #429 = Utf8               java/lang/reflect/InvocationTargetException\n-  #430 = NameAndType        #541:#542     // getTargetException:()Ljava/lang/Throwable;\n-  #431 = Utf8               java/lang/Exception\n-  #432 = Utf8               Conversion error when trying to convert\n-  #433 = NameAndType        #254:#543     // toFile:()Ljava/io/File;\n-  #434 = Utf8                can\\'t be converted to a File\n-  #435 = NameAndType        #256:#544     // toPath:()Ljava/nio/file/Path;\n-  #436 = Class              #545          // java/nio/file/Paths\n-  #437 = NameAndType        #546:#547     // get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-  #438 = Utf8                can\\'t be converted to a Path\n-  #439 = Utf8               java/net/URISyntaxException\n-  #440 = Utf8                can\\'t be converted to an URI\n-  #441 = Utf8               java/net/MalformedURLException\n-  #442 = Utf8                can\\'t be converted to an URL\n-  #443 = NameAndType        #548:#549     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #444 = Utf8               java/util/regex/PatternSyntaxException\n-  #445 = Utf8                can\\'t be converted to a Pattern\n-  #446 = Utf8               _\n-  #447 = NameAndType        #550:#551     // split:(Ljava/lang/String;)[Ljava/lang/String;\n-  #448 = Utf8\n-  #449 = NameAndType        #187:#552     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #450 = Utf8                can\\'t be converted to a Locale\n-  #451 = Class              #553          // org/apache/commons/lang3/StringUtils\n-  #452 = NameAndType        #554:#555     // isBlank:(Ljava/lang/CharSequence;)Z\n-  #453 = NameAndType        #556:#494     // trim:()Ljava/lang/String;\n-  #454 = Utf8                can\\'t be converted to a Color\n-  #455 = Utf8               #\n-  #456 = NameAndType        #532:#557     // substring:(II)Ljava/lang/String;\n-  #457 = NameAndType        #558:#559     // parseInt:(Ljava/lang/String;I)I\n-  #458 = NameAndType        #560:#561     // black:Ljava/awt/Color;\n-  #459 = NameAndType        #562:#507     // getAlpha:()I\n-  #460 = NameAndType        #187:#563     // \"<init>\":(IIII)V\n-  #461 = NameAndType        #564:#565     // getByName:(Ljava/lang/String;)Ljava/net/InetAddress;\n-  #462 = Utf8               java/net/UnknownHostException\n-  #463 = Utf8                can\\'t be converted to a InetAddress\n-  #464 = NameAndType        #566:#567     // forName:(Ljava/lang/String;)Ljava/lang/Class;\n-  #465 = Utf8               java/lang/Class\n-  #466 = Utf8                can\\'t be converted to a InternetAddress\n-  #467 = NameAndType        #296:#491     // isEnum:()Z\n-  #468 = NameAndType        #568:#294     // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #469 = Utf8               java/lang/Enum\n-  #470 = NameAndType        #486:#569     // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #471 = Utf8                can\\'t be converted to a\n-  #472 = NameAndType        #570:#571     // getEnumConstants:()[Ljava/lang/Object;\n-  #473 = NameAndType        #572:#573     // getTime:()Ljava/util/Date;\n-  #474 = Utf8               java/text/SimpleDateFormat\n-  #475 = NameAndType        #574:#575     // parse:(Ljava/lang/String;)Ljava/util/Date;\n-  #476 = Utf8               java/text/ParseException\n-  #477 = Utf8                can\\'t be converted to a Date\n-  #478 = NameAndType        #576:#577     // getInstance:()Ljava/util/Calendar;\n-  #479 = NameAndType        #578:#579     // setTime:(Ljava/util/Date;)V\n-  #480 = Utf8                can\\'t be converted to a Calendar\n-  #481 = NameAndType        #580:#581     // asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;\n-  #482 = NameAndType        #299:#300     // toEnum:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Enum;\n-  #483 = Utf8               isInstance\n-  #484 = Utf8               (Ljava/lang/Object;)Z\n-  #485 = Utf8               equals\n-  #486 = Utf8               valueOf\n-  #487 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n-  #488 = Utf8               TYPE\n-  #489 = Utf8               isAssignableFrom\n-  #490 = Utf8               isPrimitive\n-  #491 = Utf8               ()Z\n-  #492 = Utf8               org/apache/commons/configuration2/convert/DefaultConversionHandler\n-  #493 = Utf8               getDateFormat\n-  #494 = Utf8               ()Ljava/lang/String;\n-  #495 = Utf8               getName\n-  #496 = Utf8               append\n-  #497 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #498 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #499 = Utf8               getClass\n-  #500 = Utf8               ()Ljava/lang/Class;\n-  #501 = Utf8               toString\n-  #502 = Utf8               (Ljava/lang/String;)V\n-  #503 = Utf8               org/apache/commons/lang3/BooleanUtils\n-  #504 = Utf8               toBooleanObject\n-  #505 = Utf8               (Ljava/lang/String;)Ljava/lang/Boolean;\n-  #506 = Utf8               length\n-  #507 = Utf8               ()I\n-  #508 = Utf8               charAt\n-  #509 = Utf8               (I)C\n-  #510 = Utf8               (C)Ljava/lang/Character;\n-  #511 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #512 = Utf8               byteValue\n-  #513 = Utf8               ()B\n-  #514 = Utf8               (B)Ljava/lang/Byte;\n-  #515 = Utf8               shortValue\n-  #516 = Utf8               ()S\n-  #517 = Utf8               (S)Ljava/lang/Short;\n-  #518 = Utf8               intValue\n-  #519 = Utf8               (I)Ljava/lang/Integer;\n-  #520 = Utf8               longValue\n-  #521 = Utf8               ()J\n-  #522 = Utf8               (J)Ljava/lang/Long;\n-  #523 = Utf8               floatValue\n-  #524 = Utf8               ()F\n-  #525 = Utf8               (F)V\n-  #526 = Utf8               doubleValue\n-  #527 = Utf8               ()D\n-  #528 = Utf8               (D)V\n-  #529 = Utf8               (J)Ljava/math/BigInteger;\n-  #530 = Utf8               startsWith\n-  #531 = Utf8               (Ljava/lang/String;)Z\n-  #532 = Utf8               substring\n-  #533 = Utf8               (I)Ljava/lang/String;\n-  #534 = Utf8               (Ljava/lang/String;I)V\n-  #535 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #536 = Utf8               getConstructor\n-  #537 = Utf8               ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;\n-  #538 = Utf8               java/lang/reflect/Constructor\n-  #539 = Utf8               newInstance\n-  #540 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;\n-  #541 = Utf8               getTargetException\n-  #542 = Utf8               ()Ljava/lang/Throwable;\n-  #543 = Utf8               ()Ljava/io/File;\n-  #544 = Utf8               ()Ljava/nio/file/Path;\n-  #545 = Utf8               java/nio/file/Paths\n-  #546 = Utf8               get\n-  #547 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-  #548 = Utf8               compile\n-  #549 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #550 = Utf8               split\n-  #551 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #552 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #553 = Utf8               org/apache/commons/lang3/StringUtils\n-  #554 = Utf8               isBlank\n-  #555 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #556 = Utf8               trim\n-  #557 = Utf8               (II)Ljava/lang/String;\n-  #558 = Utf8               parseInt\n-  #559 = Utf8               (Ljava/lang/String;I)I\n-  #560 = Utf8               black\n-  #561 = Utf8               Ljava/awt/Color;\n-  #562 = Utf8               getAlpha\n-  #563 = Utf8               (IIII)V\n-  #564 = Utf8               getByName\n-  #565 = Utf8               (Ljava/lang/String;)Ljava/net/InetAddress;\n-  #566 = Utf8               forName\n-  #567 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n-  #568 = Utf8               cast\n-  #569 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #570 = Utf8               getEnumConstants\n-  #571 = Utf8               ()[Ljava/lang/Object;\n-  #572 = Utf8               getTime\n-  #573 = Utf8               ()Ljava/util/Date;\n-  #574 = Utf8               parse\n-  #575 = Utf8               (Ljava/lang/String;)Ljava/util/Date;\n-  #576 = Utf8               getInstance\n-  #577 = Utf8               ()Ljava/util/Calendar;\n-  #578 = Utf8               setTime\n-  #579 = Utf8               (Ljava/util/Date;)V\n-  #580 = Utf8               asSubclass\n-  #581 = Utf8               (Ljava/lang/Class;)Ljava/lang/Class;\n+  #211 = Utf8               toCharacter\n+  #212 = Utf8               (Ljava/lang/Object;)Ljava/lang/Character;\n+  #213 = Utf8               strValue\n+  #214 = Utf8               toByte\n+  #215 = Utf8               (Ljava/lang/Object;)Ljava/lang/Byte;\n+  #216 = Utf8               n\n+  #217 = Utf8               Ljava/lang/Number;\n+  #218 = Utf8               toShort\n+  #219 = Utf8               (Ljava/lang/Object;)Ljava/lang/Short;\n+  #220 = Utf8               toInteger\n+  #221 = Utf8               (Ljava/lang/Object;)Ljava/lang/Integer;\n+  #222 = Utf8               toLong\n+  #223 = Utf8               (Ljava/lang/Object;)Ljava/lang/Long;\n+  #224 = Utf8               toFloat\n+  #225 = Utf8               (Ljava/lang/Object;)Ljava/lang/Float;\n+  #226 = Utf8               toDouble\n+  #227 = Utf8               (Ljava/lang/Object;)Ljava/lang/Double;\n+  #228 = Utf8               toBigInteger\n+  #229 = Utf8               (Ljava/lang/Object;)Ljava/math/BigInteger;\n+  #230 = Utf8               toBigDecimal\n+  #231 = Utf8               (Ljava/lang/Object;)Ljava/math/BigDecimal;\n+  #232 = Utf8               toNumber\n+  #233 = Utf8               (Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Number;\n+  #234 = Utf8               nex\n+  #235 = Utf8               Ljava/lang/NumberFormatException;\n+  #236 = Utf8               constr\n+  #237 = Utf8               Ljava/lang/reflect/Constructor;\n+  #238 = Utf8               itex\n+  #239 = Utf8               Ljava/lang/reflect/InvocationTargetException;\n+  #240 = Utf8               ex\n+  #241 = Utf8               Ljava/lang/Exception;\n+  #242 = Utf8               targetClass\n+  #243 = Utf8               str\n+  #244 = Utf8               Ljava/lang/reflect/Constructor<*>;\n+  #245 = Utf8               (Ljava/lang/Object;Ljava/lang/Class<*>;)Ljava/lang/Number;\n+  #246 = Utf8               toFile\n+  #247 = Utf8               (Ljava/lang/Object;)Ljava/io/File;\n+  #248 = Utf8               toPath\n+  #249 = Utf8               (Ljava/lang/Object;)Ljava/nio/file/Path;\n+  #250 = Utf8               toURI\n+  #251 = Utf8               (Ljava/lang/Object;)Ljava/net/URI;\n+  #252 = Utf8               e\n+  #253 = Utf8               Ljava/net/URISyntaxException;\n+  #254 = Utf8               toURL\n+  #255 = Utf8               (Ljava/lang/Object;)Ljava/net/URL;\n+  #256 = Utf8               Ljava/net/MalformedURLException;\n+  #257 = Utf8               toPattern\n+  #258 = Utf8               (Ljava/lang/Object;)Ljava/util/regex/Pattern;\n+  #259 = Utf8               Ljava/util/regex/PatternSyntaxException;\n+  #260 = Utf8               toLocale\n+  #261 = Utf8               (Ljava/lang/Object;)Ljava/util/Locale;\n+  #262 = Utf8               language\n+  #263 = Utf8               country\n+  #264 = Utf8               variant\n+  #265 = Utf8               elements\n+  #266 = Utf8               [Ljava/lang/String;\n+  #267 = Utf8               size\n+  #268 = Class              #266          // \"[Ljava/lang/String;\"\n+  #269 = Utf8               toColor\n+  #270 = Utf8               (Ljava/lang/Object;)Ljava/awt/Color;\n+  #271 = Utf8               i\n+  #272 = Utf8               alpha\n+  #273 = Utf8               color\n+  #274 = Utf8               components\n+  #275 = Utf8               [I\n+  #276 = Utf8               minlength\n+  #277 = Class              #275          // \"[I\"\n+  #278 = Utf8               toInetAddress\n+  #279 = Utf8               (Ljava/lang/Object;)Ljava/net/InetAddress;\n+  #280 = Utf8               Ljava/net/UnknownHostException;\n+  #281 = Utf8               toInternetAddress\n+  #282 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #283 = Utf8               ctor\n+  #284 = Utf8               isEnum\n+  #285 = Utf8               (Ljava/lang/Class;)Z\n+  #286 = Utf8               (Ljava/lang/Class<*>;)Z\n+  #287 = Utf8               toEnum\n+  #288 = Utf8               (Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Enum;\n+  #289 = Utf8               enumConstants\n+  #290 = Utf8               [Ljava/lang/Enum;\n+  #291 = Utf8               [TE;\n+  #292 = Utf8               Ljava/lang/Class<TE;>;\n+  #293 = Utf8               <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Object;Ljava/lang/Class<TE;>;)TE;\n+  #294 = Utf8               toDate\n+  #295 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date;\n+  #296 = Utf8               Ljava/text/ParseException;\n+  #297 = Utf8               format\n+  #298 = Utf8               toCalendar\n+  #299 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Calendar;\n+  #300 = Utf8               calendar\n+  #301 = Utf8               Ljava/util/Calendar;\n+  #302 = Utf8               convertToEnum\n+  #303 = Utf8               (Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;\n+  #304 = Utf8               enumClass\n+  #305 = Utf8               (Ljava/lang/Class<*>;Ljava/lang/Object;)Ljava/lang/Object;\n+  #306 = Utf8               <clinit>\n+  #307 = Utf8               SourceFile\n+  #308 = Utf8               PropertyConverter.java\n+  #309 = NameAndType        #187:#188     // \"<init>\":()V\n+  #310 = NameAndType        #470:#471     // isInstance:(Ljava/lang/Object;)Z\n+  #311 = Utf8               java/lang/String\n+  #312 = NameAndType        #472:#471     // equals:(Ljava/lang/Object;)Z\n+  #313 = NameAndType        #473:#474     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+  #314 = Utf8               java/lang/Boolean\n+  #315 = NameAndType        #475:#197     // TYPE:Ljava/lang/Class;\n+  #316 = NameAndType        #207:#208     // toBoolean:(Ljava/lang/Object;)Ljava/lang/Boolean;\n+  #317 = Utf8               java/lang/Character\n+  #318 = NameAndType        #211:#212     // toCharacter:(Ljava/lang/Object;)Ljava/lang/Character;\n+  #319 = Utf8               java/lang/Number\n+  #320 = NameAndType        #476:#285     // isAssignableFrom:(Ljava/lang/Class;)Z\n+  #321 = NameAndType        #477:#478     // isPrimitive:()Z\n+  #322 = Utf8               java/lang/Integer\n+  #323 = NameAndType        #220:#221     // toInteger:(Ljava/lang/Object;)Ljava/lang/Integer;\n+  #324 = Utf8               java/lang/Long\n+  #325 = NameAndType        #222:#223     // toLong:(Ljava/lang/Object;)Ljava/lang/Long;\n+  #326 = Utf8               java/lang/Byte\n+  #327 = NameAndType        #214:#215     // toByte:(Ljava/lang/Object;)Ljava/lang/Byte;\n+  #328 = Utf8               java/lang/Short\n+  #329 = NameAndType        #218:#219     // toShort:(Ljava/lang/Object;)Ljava/lang/Short;\n+  #330 = Utf8               java/lang/Float\n+  #331 = NameAndType        #224:#225     // toFloat:(Ljava/lang/Object;)Ljava/lang/Float;\n+  #332 = Utf8               java/lang/Double\n+  #333 = NameAndType        #226:#227     // toDouble:(Ljava/lang/Object;)Ljava/lang/Double;\n+  #334 = Utf8               java/math/BigInteger\n+  #335 = NameAndType        #228:#229     // toBigInteger:(Ljava/lang/Object;)Ljava/math/BigInteger;\n+  #336 = Utf8               java/math/BigDecimal\n+  #337 = NameAndType        #230:#231     // toBigDecimal:(Ljava/lang/Object;)Ljava/math/BigDecimal;\n+  #338 = Utf8               java/util/Date\n+  #339 = Class              #479          // org/apache/commons/configuration2/convert/DefaultConversionHandler\n+  #340 = NameAndType        #480:#481     // getDateFormat:()Ljava/lang/String;\n+  #341 = NameAndType        #294:#295     // toDate:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date;\n+  #342 = Utf8               java/util/Calendar\n+  #343 = NameAndType        #298:#299     // toCalendar:(Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Calendar;\n+  #344 = Utf8               java/io/File\n+  #345 = NameAndType        #246:#247     // toFile:(Ljava/lang/Object;)Ljava/io/File;\n+  #346 = Utf8               java/nio/file/Path\n+  #347 = NameAndType        #248:#249     // toPath:(Ljava/lang/Object;)Ljava/nio/file/Path;\n+  #348 = Utf8               java/net/URI\n+  #349 = NameAndType        #250:#251     // toURI:(Ljava/lang/Object;)Ljava/net/URI;\n+  #350 = Utf8               java/net/URL\n+  #351 = NameAndType        #254:#255     // toURL:(Ljava/lang/Object;)Ljava/net/URL;\n+  #352 = Utf8               java/util/regex/Pattern\n+  #353 = NameAndType        #257:#258     // toPattern:(Ljava/lang/Object;)Ljava/util/regex/Pattern;\n+  #354 = Utf8               java/util/Locale\n+  #355 = NameAndType        #260:#261     // toLocale:(Ljava/lang/Object;)Ljava/util/Locale;\n+  #356 = NameAndType        #284:#285     // isEnum:(Ljava/lang/Class;)Z\n+  #357 = NameAndType        #302:#303     // convertToEnum:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;\n+  #358 = Utf8               java/awt/Color\n+  #359 = NameAndType        #269:#270     // toColor:(Ljava/lang/Object;)Ljava/awt/Color;\n+  #360 = NameAndType        #482:#481     // getName:()Ljava/lang/String;\n+  #361 = Utf8               org/apache/commons/configuration2/convert/PropertyConverter\n+  #362 = Utf8               javax.mail.internet.InternetAddress\n+  #363 = NameAndType        #281:#282     // toInternetAddress:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #364 = Utf8               java/net/InetAddress\n+  #365 = NameAndType        #278:#279     // toInetAddress:(Ljava/lang/Object;)Ljava/net/InetAddress;\n+  #366 = Utf8               org/apache/commons/configuration2/ex/ConversionException\n+  #367 = Utf8               java/lang/StringBuilder\n+  #368 = Utf8               The value \\'\n+  #369 = NameAndType        #483:#484     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #370 = NameAndType        #483:#485     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #371 = Utf8               \\' (\n+  #372 = NameAndType        #486:#487     // getClass:()Ljava/lang/Class;\n+  #373 = Utf8               ) can\\'t be converted to a\n+  #374 = Utf8                object\n+  #375 = NameAndType        #488:#481     // toString:()Ljava/lang/String;\n+  #376 = NameAndType        #187:#489     // \"<init>\":(Ljava/lang/String;)V\n+  #377 = Class              #490          // org/apache/commons/lang3/BooleanUtils\n+  #378 = NameAndType        #491:#492     // toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n+  #379 = Utf8               The value\n+  #380 = Utf8                can\\'t be converted to a Boolean object\n+  #381 = NameAndType        #493:#494     // length:()I\n+  #382 = NameAndType        #495:#496     // charAt:(I)C\n+  #383 = NameAndType        #473:#497     // valueOf:(C)Ljava/lang/Character;\n+  #384 = Utf8               The value \\'%s\\' cannot be converted to a Character object!\n+  #385 = Utf8               java/lang/Object\n+  #386 = NameAndType        #297:#498     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #387 = NameAndType        #232:#233     // toNumber:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Number;\n+  #388 = NameAndType        #499:#500     // byteValue:()B\n+  #389 = NameAndType        #473:#501     // valueOf:(B)Ljava/lang/Byte;\n+  #390 = NameAndType        #502:#503     // shortValue:()S\n+  #391 = NameAndType        #473:#504     // valueOf:(S)Ljava/lang/Short;\n+  #392 = NameAndType        #505:#494     // intValue:()I\n+  #393 = NameAndType        #473:#506     // valueOf:(I)Ljava/lang/Integer;\n+  #394 = NameAndType        #507:#508     // longValue:()J\n+  #395 = NameAndType        #473:#509     // valueOf:(J)Ljava/lang/Long;\n+  #396 = NameAndType        #510:#511     // floatValue:()F\n+  #397 = NameAndType        #187:#512     // \"<init>\":(F)V\n+  #398 = NameAndType        #513:#514     // doubleValue:()D\n+  #399 = NameAndType        #187:#515     // \"<init>\":(D)V\n+  #400 = NameAndType        #473:#516     // valueOf:(J)Ljava/math/BigInteger;\n+  #401 = Utf8               0x\n+  #402 = NameAndType        #517:#518     // startsWith:(Ljava/lang/String;)Z\n+  #403 = NameAndType        #519:#520     // substring:(I)Ljava/lang/String;\n+  #404 = NameAndType        #187:#521     // \"<init>\":(Ljava/lang/String;I)V\n+  #405 = Utf8               java/lang/NumberFormatException\n+  #406 = Utf8               Could not convert\n+  #407 = Utf8                to\n+  #408 = Utf8               ! Invalid hex number.\n+  #409 = NameAndType        #187:#522     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #410 = Utf8               0b\n+  #411 = Utf8               ! Invalid binary number.\n+  #412 = NameAndType        #182:#183     // CONSTR_ARGS:[Ljava/lang/Class;\n+  #413 = NameAndType        #523:#524     // getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;\n+  #414 = Class              #525          // java/lang/reflect/Constructor\n+  #415 = NameAndType        #526:#527     // newInstance:([Ljava/lang/Object;)Ljava/lang/Object;\n+  #416 = Utf8               java/lang/reflect/InvocationTargetException\n+  #417 = NameAndType        #528:#529     // getTargetException:()Ljava/lang/Throwable;\n+  #418 = Utf8               java/lang/Exception\n+  #419 = Utf8               Conversion error when trying to convert\n+  #420 = NameAndType        #246:#530     // toFile:()Ljava/io/File;\n+  #421 = Utf8                can\\'t be converted to a File\n+  #422 = NameAndType        #248:#531     // toPath:()Ljava/nio/file/Path;\n+  #423 = Class              #532          // java/nio/file/Paths\n+  #424 = NameAndType        #533:#534     // get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+  #425 = Utf8                can\\'t be converted to a Path\n+  #426 = Utf8               java/net/URISyntaxException\n+  #427 = Utf8                can\\'t be converted to an URI\n+  #428 = Utf8               java/net/MalformedURLException\n+  #429 = Utf8                can\\'t be converted to an URL\n+  #430 = NameAndType        #535:#536     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #431 = Utf8               java/util/regex/PatternSyntaxException\n+  #432 = Utf8                can\\'t be converted to a Pattern\n+  #433 = Utf8               _\n+  #434 = NameAndType        #537:#538     // split:(Ljava/lang/String;)[Ljava/lang/String;\n+  #435 = Utf8\n+  #436 = NameAndType        #187:#539     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #437 = Utf8                can\\'t be converted to a Locale\n+  #438 = Class              #540          // org/apache/commons/lang3/StringUtils\n+  #439 = NameAndType        #541:#542     // isBlank:(Ljava/lang/CharSequence;)Z\n+  #440 = NameAndType        #543:#481     // trim:()Ljava/lang/String;\n+  #441 = Utf8                can\\'t be converted to a Color\n+  #442 = Utf8               #\n+  #443 = NameAndType        #519:#544     // substring:(II)Ljava/lang/String;\n+  #444 = NameAndType        #545:#546     // parseInt:(Ljava/lang/String;I)I\n+  #445 = NameAndType        #547:#548     // black:Ljava/awt/Color;\n+  #446 = NameAndType        #549:#494     // getAlpha:()I\n+  #447 = NameAndType        #187:#550     // \"<init>\":(IIII)V\n+  #448 = NameAndType        #551:#552     // getByName:(Ljava/lang/String;)Ljava/net/InetAddress;\n+  #449 = Utf8               java/net/UnknownHostException\n+  #450 = Utf8                can\\'t be converted to a InetAddress\n+  #451 = NameAndType        #553:#554     // forName:(Ljava/lang/String;)Ljava/lang/Class;\n+  #452 = Utf8               java/lang/Class\n+  #453 = Utf8                can\\'t be converted to a InternetAddress\n+  #454 = NameAndType        #284:#478     // isEnum:()Z\n+  #455 = NameAndType        #555:#282     // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #456 = Utf8               java/lang/Enum\n+  #457 = NameAndType        #473:#556     // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #458 = Utf8                can\\'t be converted to a\n+  #459 = NameAndType        #557:#558     // getEnumConstants:()[Ljava/lang/Object;\n+  #460 = NameAndType        #559:#560     // getTime:()Ljava/util/Date;\n+  #461 = Utf8               java/text/SimpleDateFormat\n+  #462 = NameAndType        #561:#562     // parse:(Ljava/lang/String;)Ljava/util/Date;\n+  #463 = Utf8               java/text/ParseException\n+  #464 = Utf8                can\\'t be converted to a Date\n+  #465 = NameAndType        #563:#564     // getInstance:()Ljava/util/Calendar;\n+  #466 = NameAndType        #565:#566     // setTime:(Ljava/util/Date;)V\n+  #467 = Utf8                can\\'t be converted to a Calendar\n+  #468 = NameAndType        #567:#568     // asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;\n+  #469 = NameAndType        #287:#288     // toEnum:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Enum;\n+  #470 = Utf8               isInstance\n+  #471 = Utf8               (Ljava/lang/Object;)Z\n+  #472 = Utf8               equals\n+  #473 = Utf8               valueOf\n+  #474 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n+  #475 = Utf8               TYPE\n+  #476 = Utf8               isAssignableFrom\n+  #477 = Utf8               isPrimitive\n+  #478 = Utf8               ()Z\n+  #479 = Utf8               org/apache/commons/configuration2/convert/DefaultConversionHandler\n+  #480 = Utf8               getDateFormat\n+  #481 = Utf8               ()Ljava/lang/String;\n+  #482 = Utf8               getName\n+  #483 = Utf8               append\n+  #484 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #485 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #486 = Utf8               getClass\n+  #487 = Utf8               ()Ljava/lang/Class;\n+  #488 = Utf8               toString\n+  #489 = Utf8               (Ljava/lang/String;)V\n+  #490 = Utf8               org/apache/commons/lang3/BooleanUtils\n+  #491 = Utf8               toBooleanObject\n+  #492 = Utf8               (Ljava/lang/String;)Ljava/lang/Boolean;\n+  #493 = Utf8               length\n+  #494 = Utf8               ()I\n+  #495 = Utf8               charAt\n+  #496 = Utf8               (I)C\n+  #497 = Utf8               (C)Ljava/lang/Character;\n+  #498 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #499 = Utf8               byteValue\n+  #500 = Utf8               ()B\n+  #501 = Utf8               (B)Ljava/lang/Byte;\n+  #502 = Utf8               shortValue\n+  #503 = Utf8               ()S\n+  #504 = Utf8               (S)Ljava/lang/Short;\n+  #505 = Utf8               intValue\n+  #506 = Utf8               (I)Ljava/lang/Integer;\n+  #507 = Utf8               longValue\n+  #508 = Utf8               ()J\n+  #509 = Utf8               (J)Ljava/lang/Long;\n+  #510 = Utf8               floatValue\n+  #511 = Utf8               ()F\n+  #512 = Utf8               (F)V\n+  #513 = Utf8               doubleValue\n+  #514 = Utf8               ()D\n+  #515 = Utf8               (D)V\n+  #516 = Utf8               (J)Ljava/math/BigInteger;\n+  #517 = Utf8               startsWith\n+  #518 = Utf8               (Ljava/lang/String;)Z\n+  #519 = Utf8               substring\n+  #520 = Utf8               (I)Ljava/lang/String;\n+  #521 = Utf8               (Ljava/lang/String;I)V\n+  #522 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #523 = Utf8               getConstructor\n+  #524 = Utf8               ([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;\n+  #525 = Utf8               java/lang/reflect/Constructor\n+  #526 = Utf8               newInstance\n+  #527 = Utf8               ([Ljava/lang/Object;)Ljava/lang/Object;\n+  #528 = Utf8               getTargetException\n+  #529 = Utf8               ()Ljava/lang/Throwable;\n+  #530 = Utf8               ()Ljava/io/File;\n+  #531 = Utf8               ()Ljava/nio/file/Path;\n+  #532 = Utf8               java/nio/file/Paths\n+  #533 = Utf8               get\n+  #534 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+  #535 = Utf8               compile\n+  #536 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #537 = Utf8               split\n+  #538 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+  #539 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #540 = Utf8               org/apache/commons/lang3/StringUtils\n+  #541 = Utf8               isBlank\n+  #542 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #543 = Utf8               trim\n+  #544 = Utf8               (II)Ljava/lang/String;\n+  #545 = Utf8               parseInt\n+  #546 = Utf8               (Ljava/lang/String;I)I\n+  #547 = Utf8               black\n+  #548 = Utf8               Ljava/awt/Color;\n+  #549 = Utf8               getAlpha\n+  #550 = Utf8               (IIII)V\n+  #551 = Utf8               getByName\n+  #552 = Utf8               (Ljava/lang/String;)Ljava/net/InetAddress;\n+  #553 = Utf8               forName\n+  #554 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n+  #555 = Utf8               cast\n+  #556 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #557 = Utf8               getEnumConstants\n+  #558 = Utf8               ()[Ljava/lang/Object;\n+  #559 = Utf8               getTime\n+  #560 = Utf8               ()Ljava/util/Date;\n+  #561 = Utf8               parse\n+  #562 = Utf8               (Ljava/lang/String;)Ljava/util/Date;\n+  #563 = Utf8               getInstance\n+  #564 = Utf8               ()Ljava/util/Calendar;\n+  #565 = Utf8               setTime\n+  #566 = Utf8               (Ljava/util/Date;)V\n+  #567 = Utf8               asSubclass\n+  #568 = Utf8               (Ljava/lang/Class;)Ljava/lang/Class;\n {\n   private static final java.lang.String HEX_PREFIX = \"0x\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String 0x\n \n   private static final int HEX_RADIX = 16;\n@@ -1568,15 +1555,15 @@\n         frame_type = 45 /* same */\n         frame_type = 87 /* same_locals_1_stack_item */\n           stack = [ class java/lang/reflect/InvocationTargetException ]\n         frame_type = 107 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Exception ]\n     Exceptions:\n       throws org.apache.commons.configuration2.ex.ConversionException\n-    Signature: #253                         // (Ljava/lang/Object;Ljava/lang/Class<*>;)Ljava/lang/Number;\n+    Signature: #245                         // (Ljava/lang/Object;Ljava/lang/Class<*>;)Ljava/lang/Number;\n \n   public static java.io.File toFile(java.lang.Object) throws org.apache.commons.configuration2.ex.ConversionException;\n     descriptor: (Ljava/lang/Object;)Ljava/io/File;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n@@ -2422,15 +2409,15 @@\n         line 785: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0   cls   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0   cls   Ljava/lang/Class<*>;\n-    Signature: #298                         // (Ljava/lang/Class<*>;)Z\n+    Signature: #286                         // (Ljava/lang/Class<*>;)Z\n \n   static <E extends java.lang.Enum<E>> E toEnum(java.lang.Object, java.lang.Class<E>) throws org.apache.commons.configuration2.ex.ConversionException;\n     descriptor: (Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Enum;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n@@ -2551,15 +2538,15 @@\n           stack = [ class java/lang/Exception ]\n         frame_type = 39 /* same */\n         frame_type = 88 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Exception ]\n         frame_type = 39 /* same */\n     Exceptions:\n       throws org.apache.commons.configuration2.ex.ConversionException\n-    Signature: #305                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Object;Ljava/lang/Class<TE;>;)TE;\n+    Signature: #293                         // <E:Ljava/lang/Enum<TE;>;>(Ljava/lang/Object;Ljava/lang/Class<TE;>;)TE;\n \n   public static java.util.Date toDate(java.lang.Object, java.lang.String) throws org.apache.commons.configuration2.ex.ConversionException;\n     descriptor: (Ljava/lang/Object;Ljava/lang/String;)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n@@ -2760,15 +2747,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 enumClass   Ljava/lang/Class;\n             0      11     1 value   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0 enumClass   Ljava/lang/Class<*>;\n-    Signature: #318                         // (Ljava/lang/Class<*>;Ljava/lang/Object;)Ljava/lang/Object;\n+    Signature: #305                         // (Ljava/lang/Class<*>;Ljava/lang/Object;)Ljava/lang/Object;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: iconst_1\n"}]}
