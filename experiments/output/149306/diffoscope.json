{"diffoscope-json-version": 1, "source1": "first/Archive.class", "source2": "second/Archive.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -42,15 +42,15 @@\n         this.outputStream = new BufferedOutputStream(outputStream);\n         this.jarFile = jarFile;\n         this.jarInputStream = null;\n         PackingUtils.config(options);\n     }\n     \n     public void pack() throws Pack200Exception, IOException {\n-        if (0 == this.options.getEffort()) {\n+        if (this.options.getEffort() == 0) {\n             this.doZeroEffortPack();\n         }\n         else {\n             this.doNormalPack();\n         }\n     }\n     \n@@ -121,28 +121,28 @@\n             if (packedSize + this.currentSegmentSize > segmentLimit && this.currentSegmentSize > 0L) {\n                 return false;\n             }\n             this.currentSegmentSize += packedSize;\n         }\n         final String name = packingFile.getName();\n         if (name.endsWith(\".class\") && !this.options.isPassFile(name)) {\n-            final Pack200ClassReader classParser = new Pack200ClassReader(Archive.PackingFile.access$000(packingFile));\n+            final Pack200ClassReader classParser = new Pack200ClassReader(Archive.PackingFile.access$0(packingFile));\n             classParser.setFileName(name);\n             javaClasses.add(classParser);\n-            Archive.PackingFile.access$002(packingFile, new byte[0]);\n+            Archive.PackingFile.access$1(packingFile, new byte[0]);\n         }\n         files.add(packingFile);\n         return true;\n     }\n     \n     private long estimateSize(final Archive.PackingFile packingFile) {\n         final String name = packingFile.getName();\n         if (name.startsWith(\"META-INF\") || name.startsWith(\"/META-INF\")) {\n             return 0L;\n         }\n-        long fileSize = (long)Archive.PackingFile.access$000(packingFile).length;\n+        long fileSize = (long)Archive.PackingFile.access$0(packingFile).length;\n         if (fileSize < 0L) {\n             fileSize = 0L;\n         }\n         return name.length() + fileSize + 5L;\n     }\n }\n"}]}
