{"diffoscope-json-version": 1, "source1": "first/RExecClient.class", "source2": "second/RExecClient.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,203 +1,204 @@\n-  SHA-256 checksum f1761294da86a693cb10a6a4efcb1c0d93ea5df933b25374c1e7c125eec9f50b\n+  SHA-256 checksum a2b74fb00250f0fc13cc8990f06f1dc77bc399311ae29fd6e683e6ffe2aaeb01\n   Compiled from \"RExecClient.java\"\n public class org.apache.commons.net.bsd.RExecClient extends org.apache.commons.net.SocketClient\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/net/bsd/RExecClient\n-  super_class: #113                       // org/apache/commons/net/SocketClient\n+  this_class: #1                          // org/apache/commons/net/bsd/RExecClient\n+  super_class: #3                         // org/apache/commons/net/SocketClient\n   interfaces: 0, fields: 4, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #2.#3         // org/apache/commons/net/bsd/RExecClient._serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n-    #2 = Class              #4            // org/apache/commons/net/bsd/RExecClient\n-    #3 = NameAndType        #5:#6         // _serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n-    #4 = Utf8               org/apache/commons/net/bsd/RExecClient\n-    #5 = Utf8               _serverSocketFactory_\n-    #6 = Utf8               Ljavax/net/ServerSocketFactory;\n-    #7 = Methodref          #2.#8         // org/apache/commons/net/bsd/RExecClient.getLocalAddress:()Ljava/net/InetAddress;\n-    #8 = NameAndType        #9:#10        // getLocalAddress:()Ljava/net/InetAddress;\n-    #9 = Utf8               getLocalAddress\n-   #10 = Utf8               ()Ljava/net/InetAddress;\n-   #11 = Methodref          #12.#13       // javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n-   #12 = Class              #14           // javax/net/ServerSocketFactory\n-   #13 = NameAndType        #15:#16       // createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n-   #14 = Utf8               javax/net/ServerSocketFactory\n-   #15 = Utf8               createServerSocket\n-   #16 = Utf8               (IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n-   #17 = Fieldref           #2.#18        // org/apache/commons/net/bsd/RExecClient._output_:Ljava/io/OutputStream;\n-   #18 = NameAndType        #19:#20       // _output_:Ljava/io/OutputStream;\n-   #19 = Utf8               _output_\n-   #20 = Utf8               Ljava/io/OutputStream;\n-   #21 = Methodref          #22.#23       // java/net/ServerSocket.getLocalPort:()I\n-   #22 = Class              #24           // java/net/ServerSocket\n-   #23 = NameAndType        #25:#26       // getLocalPort:()I\n-   #24 = Utf8               java/net/ServerSocket\n-   #25 = Utf8               getLocalPort\n-   #26 = Utf8               ()I\n-   #27 = Methodref          #28.#29       // java/lang/Integer.toString:(I)Ljava/lang/String;\n-   #28 = Class              #30           // java/lang/Integer\n-   #29 = NameAndType        #31:#32       // toString:(I)Ljava/lang/String;\n-   #30 = Utf8               java/lang/Integer\n-   #31 = Utf8               toString\n-   #32 = Utf8               (I)Ljava/lang/String;\n-   #33 = Fieldref           #34.#35       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #34 = Class              #36           // java/nio/charset/StandardCharsets\n-   #35 = NameAndType        #37:#38       // UTF_8:Ljava/nio/charset/Charset;\n-   #36 = Utf8               java/nio/charset/StandardCharsets\n-   #37 = Utf8               UTF_8\n-   #38 = Utf8               Ljava/nio/charset/Charset;\n-   #39 = Methodref          #40.#41       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #40 = Class              #42           // java/lang/String\n-   #41 = NameAndType        #43:#44       // getBytes:(Ljava/nio/charset/Charset;)[B\n-   #42 = Utf8               java/lang/String\n-   #43 = Utf8               getBytes\n-   #44 = Utf8               (Ljava/nio/charset/Charset;)[B\n-   #45 = Methodref          #46.#47       // java/io/OutputStream.write:([B)V\n-   #46 = Class              #48           // java/io/OutputStream\n-   #47 = NameAndType        #49:#50       // write:([B)V\n-   #48 = Utf8               java/io/OutputStream\n-   #49 = Utf8               write\n-   #50 = Utf8               ([B)V\n-   #51 = Methodref          #46.#52       // java/io/OutputStream.write:(I)V\n-   #52 = NameAndType        #49:#53       // write:(I)V\n-   #53 = Utf8               (I)V\n-   #54 = Methodref          #46.#55       // java/io/OutputStream.flush:()V\n-   #55 = NameAndType        #56:#57       // flush:()V\n-   #56 = Utf8               flush\n-   #57 = Utf8               ()V\n-   #58 = Methodref          #22.#59       // java/net/ServerSocket.accept:()Ljava/net/Socket;\n-   #59 = NameAndType        #60:#61       // accept:()Ljava/net/Socket;\n-   #60 = Utf8               accept\n-   #61 = Utf8               ()Ljava/net/Socket;\n-   #62 = Methodref          #22.#63       // java/net/ServerSocket.close:()V\n-   #63 = NameAndType        #64:#57       // close:()V\n-   #64 = Utf8               close\n-   #65 = Fieldref           #2.#66        // org/apache/commons/net/bsd/RExecClient.remoteVerificationEnabled:Z\n-   #66 = NameAndType        #67:#68       // remoteVerificationEnabled:Z\n-   #67 = Utf8               remoteVerificationEnabled\n-   #68 = Utf8               Z\n-   #69 = Methodref          #2.#70        // org/apache/commons/net/bsd/RExecClient.verifyRemote:(Ljava/net/Socket;)Z\n-   #70 = NameAndType        #71:#72       // verifyRemote:(Ljava/net/Socket;)Z\n-   #71 = Utf8               verifyRemote\n-   #72 = Utf8               (Ljava/net/Socket;)Z\n-   #73 = Methodref          #74.#63       // java/net/Socket.close:()V\n-   #74 = Class              #75           // java/net/Socket\n-   #75 = Utf8               java/net/Socket\n-   #76 = Class              #77           // java/io/IOException\n-   #77 = Utf8               java/io/IOException\n-   #78 = Class              #79           // java/lang/StringBuilder\n-   #79 = Utf8               java/lang/StringBuilder\n-   #80 = Methodref          #78.#81       // java/lang/StringBuilder.\"<init>\":()V\n-   #81 = NameAndType        #82:#57       // \"<init>\":()V\n-   #82 = Utf8               <init>\n-   #83 = String             #84           // Security violation: unexpected connection attempt by\n-   #84 = Utf8               Security violation: unexpected connection attempt by\n-   #85 = Methodref          #78.#86       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #86 = NameAndType        #87:#88       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #87 = Utf8               append\n-   #88 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #89 = Methodref          #74.#90       // java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n-   #90 = NameAndType        #91:#10       // getInetAddress:()Ljava/net/InetAddress;\n-   #91 = Utf8               getInetAddress\n-   #92 = Methodref          #93.#94       // java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n-   #93 = Class              #95           // java/net/InetAddress\n-   #94 = NameAndType        #96:#97       // getHostAddress:()Ljava/lang/String;\n-   #95 = Utf8               java/net/InetAddress\n-   #96 = Utf8               getHostAddress\n-   #97 = Utf8               ()Ljava/lang/String;\n-   #98 = Methodref          #78.#99       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #99 = NameAndType        #31:#97       // toString:()Ljava/lang/String;\n-  #100 = Methodref          #76.#101      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-  #101 = NameAndType        #82:#102      // \"<init>\":(Ljava/lang/String;)V\n-  #102 = Utf8               (Ljava/lang/String;)V\n-  #103 = Class              #104          // org/apache/commons/net/io/SocketInputStream\n-  #104 = Utf8               org/apache/commons/net/io/SocketInputStream\n-  #105 = Methodref          #74.#106      // java/net/Socket.getInputStream:()Ljava/io/InputStream;\n-  #106 = NameAndType        #107:#108     // getInputStream:()Ljava/io/InputStream;\n-  #107 = Utf8               getInputStream\n-  #108 = Utf8               ()Ljava/io/InputStream;\n-  #109 = Methodref          #103.#110     // org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n-  #110 = NameAndType        #82:#111      // \"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n-  #111 = Utf8               (Ljava/net/Socket;Ljava/io/InputStream;)V\n-  #112 = Methodref          #113.#81      // org/apache/commons/net/SocketClient.\"<init>\":()V\n-  #113 = Class              #114          // org/apache/commons/net/SocketClient\n-  #114 = Utf8               org/apache/commons/net/SocketClient\n-  #115 = Fieldref           #2.#116       // org/apache/commons/net/bsd/RExecClient._errorStream_:Ljava/io/InputStream;\n-  #116 = NameAndType        #117:#118     // _errorStream_:Ljava/io/InputStream;\n-  #117 = Utf8               _errorStream_\n-  #118 = Utf8               Ljava/io/InputStream;\n-  #119 = Methodref          #2.#120       // org/apache/commons/net/bsd/RExecClient.setDefaultPort:(I)V\n-  #120 = NameAndType        #121:#53      // setDefaultPort:(I)V\n-  #121 = Utf8               setDefaultPort\n-  #122 = Fieldref           #2.#123       // org/apache/commons/net/bsd/RExecClient._input_:Ljava/io/InputStream;\n-  #123 = NameAndType        #124:#118     // _input_:Ljava/io/InputStream;\n-  #124 = Utf8               _input_\n-  #125 = Methodref          #2.#126       // org/apache/commons/net/bsd/RExecClient.createErrorStream:()Ljava/io/InputStream;\n-  #126 = NameAndType        #127:#108     // createErrorStream:()Ljava/io/InputStream;\n-  #127 = Utf8               createErrorStream\n-  #128 = Methodref          #2.#129       // org/apache/commons/net/bsd/RExecClient.getCharset:()Ljava/nio/charset/Charset;\n-  #129 = NameAndType        #130:#131     // getCharset:()Ljava/nio/charset/Charset;\n-  #130 = Utf8               getCharset\n-  #131 = Utf8               ()Ljava/nio/charset/Charset;\n-  #132 = Methodref          #133.#134     // java/io/InputStream.read:()I\n-  #133 = Class              #135          // java/io/InputStream\n-  #134 = NameAndType        #136:#26      // read:()I\n-  #135 = Utf8               java/io/InputStream\n-  #136 = Utf8               read\n-  #137 = Methodref          #78.#138      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #138 = NameAndType        #87:#139      // append:(C)Ljava/lang/StringBuilder;\n-  #139 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #140 = String             #141          // Server closed connection.\n-  #141 = Utf8               Server closed connection.\n-  #142 = Methodref          #2.#143       // org/apache/commons/net/bsd/RExecClient.rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n-  #143 = NameAndType        #144:#145     // rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n-  #144 = Utf8               rexec\n-  #145 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n-  #146 = Methodref          #133.#63      // java/io/InputStream.close:()V\n-  #147 = Methodref          #113.#148     // org/apache/commons/net/SocketClient.disconnect:()V\n-  #148 = NameAndType        #149:#57      // disconnect:()V\n-  #149 = Utf8               disconnect\n-  #150 = Utf8               NULL_CHAR\n-  #151 = Utf8               C\n-  #152 = Utf8               ConstantValue\n-  #153 = Integer            0\n-  #154 = Utf8               DEFAULT_PORT\n-  #155 = Utf8               I\n-  #156 = Integer            512\n-  #157 = Utf8               Code\n-  #158 = Utf8               LineNumberTable\n-  #159 = Utf8               LocalVariableTable\n-  #160 = Utf8               this\n-  #161 = Utf8               Lorg/apache/commons/net/bsd/RExecClient;\n-  #162 = Utf8               server\n-  #163 = Utf8               Ljava/net/ServerSocket;\n-  #164 = Utf8               socket\n-  #165 = Utf8               Ljava/net/Socket;\n-  #166 = Utf8               StackMapTable\n-  #167 = Utf8               Exceptions\n-  #168 = Utf8               getOutputStream\n-  #169 = Utf8               ()Ljava/io/OutputStream;\n-  #170 = Utf8               getErrorStream\n-  #171 = Utf8               buffer\n-  #172 = Utf8               Ljava/lang/StringBuilder;\n-  #173 = Utf8               username\n-  #174 = Utf8               Ljava/lang/String;\n-  #175 = Utf8               password\n-  #176 = Utf8               command\n-  #177 = Utf8               separateErrorStream\n-  #178 = Utf8               ch\n-  #179 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #180 = Utf8               setRemoteVerificationEnabled\n-  #181 = Utf8               (Z)V\n-  #182 = Utf8               enable\n-  #183 = Utf8               isRemoteVerificationEnabled\n-  #184 = Utf8               ()Z\n-  #185 = Utf8               SourceFile\n-  #186 = Utf8               RExecClient.java\n+    #1 = Class              #2            // org/apache/commons/net/bsd/RExecClient\n+    #2 = Utf8               org/apache/commons/net/bsd/RExecClient\n+    #3 = Class              #4            // org/apache/commons/net/SocketClient\n+    #4 = Utf8               org/apache/commons/net/SocketClient\n+    #5 = Utf8               NULL_CHAR\n+    #6 = Utf8               C\n+    #7 = Utf8               ConstantValue\n+    #8 = Integer            0\n+    #9 = Utf8               DEFAULT_PORT\n+   #10 = Utf8               I\n+   #11 = Integer            512\n+   #12 = Utf8               remoteVerificationEnabled\n+   #13 = Utf8               Z\n+   #14 = Utf8               _errorStream_\n+   #15 = Utf8               Ljava/io/InputStream;\n+   #16 = Utf8               createErrorStream\n+   #17 = Utf8               ()Ljava/io/InputStream;\n+   #18 = Utf8               Exceptions\n+   #19 = Class              #20           // java/io/IOException\n+   #20 = Utf8               java/io/IOException\n+   #21 = Utf8               Code\n+   #22 = Fieldref           #1.#23        // org/apache/commons/net/bsd/RExecClient._serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n+   #23 = NameAndType        #24:#25       // _serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n+   #24 = Utf8               _serverSocketFactory_\n+   #25 = Utf8               Ljavax/net/ServerSocketFactory;\n+   #26 = Methodref          #1.#27        // org/apache/commons/net/bsd/RExecClient.getLocalAddress:()Ljava/net/InetAddress;\n+   #27 = NameAndType        #28:#29       // getLocalAddress:()Ljava/net/InetAddress;\n+   #28 = Utf8               getLocalAddress\n+   #29 = Utf8               ()Ljava/net/InetAddress;\n+   #30 = Methodref          #31.#33       // javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n+   #31 = Class              #32           // javax/net/ServerSocketFactory\n+   #32 = Utf8               javax/net/ServerSocketFactory\n+   #33 = NameAndType        #34:#35       // createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n+   #34 = Utf8               createServerSocket\n+   #35 = Utf8               (IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n+   #36 = Fieldref           #1.#37        // org/apache/commons/net/bsd/RExecClient._output_:Ljava/io/OutputStream;\n+   #37 = NameAndType        #38:#39       // _output_:Ljava/io/OutputStream;\n+   #38 = Utf8               _output_\n+   #39 = Utf8               Ljava/io/OutputStream;\n+   #40 = Methodref          #41.#43       // java/net/ServerSocket.getLocalPort:()I\n+   #41 = Class              #42           // java/net/ServerSocket\n+   #42 = Utf8               java/net/ServerSocket\n+   #43 = NameAndType        #44:#45       // getLocalPort:()I\n+   #44 = Utf8               getLocalPort\n+   #45 = Utf8               ()I\n+   #46 = Methodref          #47.#49       // java/lang/Integer.toString:(I)Ljava/lang/String;\n+   #47 = Class              #48           // java/lang/Integer\n+   #48 = Utf8               java/lang/Integer\n+   #49 = NameAndType        #50:#51       // toString:(I)Ljava/lang/String;\n+   #50 = Utf8               toString\n+   #51 = Utf8               (I)Ljava/lang/String;\n+   #52 = Fieldref           #53.#55       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #53 = Class              #54           // java/nio/charset/StandardCharsets\n+   #54 = Utf8               java/nio/charset/StandardCharsets\n+   #55 = NameAndType        #56:#57       // UTF_8:Ljava/nio/charset/Charset;\n+   #56 = Utf8               UTF_8\n+   #57 = Utf8               Ljava/nio/charset/Charset;\n+   #58 = Methodref          #59.#61       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #59 = Class              #60           // java/lang/String\n+   #60 = Utf8               java/lang/String\n+   #61 = NameAndType        #62:#63       // getBytes:(Ljava/nio/charset/Charset;)[B\n+   #62 = Utf8               getBytes\n+   #63 = Utf8               (Ljava/nio/charset/Charset;)[B\n+   #64 = Methodref          #65.#67       // java/io/OutputStream.write:([B)V\n+   #65 = Class              #66           // java/io/OutputStream\n+   #66 = Utf8               java/io/OutputStream\n+   #67 = NameAndType        #68:#69       // write:([B)V\n+   #68 = Utf8               write\n+   #69 = Utf8               ([B)V\n+   #70 = Methodref          #65.#71       // java/io/OutputStream.write:(I)V\n+   #71 = NameAndType        #68:#72       // write:(I)V\n+   #72 = Utf8               (I)V\n+   #73 = Methodref          #65.#74       // java/io/OutputStream.flush:()V\n+   #74 = NameAndType        #75:#76       // flush:()V\n+   #75 = Utf8               flush\n+   #76 = Utf8               ()V\n+   #77 = Methodref          #41.#78       // java/net/ServerSocket.accept:()Ljava/net/Socket;\n+   #78 = NameAndType        #79:#80       // accept:()Ljava/net/Socket;\n+   #79 = Utf8               accept\n+   #80 = Utf8               ()Ljava/net/Socket;\n+   #81 = Methodref          #41.#82       // java/net/ServerSocket.close:()V\n+   #82 = NameAndType        #83:#76       // close:()V\n+   #83 = Utf8               close\n+   #84 = Fieldref           #1.#85        // org/apache/commons/net/bsd/RExecClient.remoteVerificationEnabled:Z\n+   #85 = NameAndType        #12:#13       // remoteVerificationEnabled:Z\n+   #86 = Methodref          #1.#87        // org/apache/commons/net/bsd/RExecClient.verifyRemote:(Ljava/net/Socket;)Z\n+   #87 = NameAndType        #88:#89       // verifyRemote:(Ljava/net/Socket;)Z\n+   #88 = Utf8               verifyRemote\n+   #89 = Utf8               (Ljava/net/Socket;)Z\n+   #90 = Methodref          #91.#82       // java/net/Socket.close:()V\n+   #91 = Class              #92           // java/net/Socket\n+   #92 = Utf8               java/net/Socket\n+   #93 = Class              #94           // java/lang/StringBuilder\n+   #94 = Utf8               java/lang/StringBuilder\n+   #95 = String             #96           // Security violation: unexpected connection attempt by\n+   #96 = Utf8               Security violation: unexpected connection attempt by\n+   #97 = Methodref          #93.#98       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #98 = NameAndType        #99:#100      // \"<init>\":(Ljava/lang/String;)V\n+   #99 = Utf8               <init>\n+  #100 = Utf8               (Ljava/lang/String;)V\n+  #101 = Methodref          #91.#102      // java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n+  #102 = NameAndType        #103:#29      // getInetAddress:()Ljava/net/InetAddress;\n+  #103 = Utf8               getInetAddress\n+  #104 = Methodref          #105.#107     // java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n+  #105 = Class              #106          // java/net/InetAddress\n+  #106 = Utf8               java/net/InetAddress\n+  #107 = NameAndType        #108:#109     // getHostAddress:()Ljava/lang/String;\n+  #108 = Utf8               getHostAddress\n+  #109 = Utf8               ()Ljava/lang/String;\n+  #110 = Methodref          #93.#111      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #111 = NameAndType        #112:#113     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #112 = Utf8               append\n+  #113 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #114 = Methodref          #93.#115      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #115 = NameAndType        #50:#109      // toString:()Ljava/lang/String;\n+  #116 = Methodref          #19.#98       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #117 = Class              #118          // org/apache/commons/net/io/SocketInputStream\n+  #118 = Utf8               org/apache/commons/net/io/SocketInputStream\n+  #119 = Methodref          #91.#120      // java/net/Socket.getInputStream:()Ljava/io/InputStream;\n+  #120 = NameAndType        #121:#17      // getInputStream:()Ljava/io/InputStream;\n+  #121 = Utf8               getInputStream\n+  #122 = Methodref          #117.#123     // org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n+  #123 = NameAndType        #99:#124      // \"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n+  #124 = Utf8               (Ljava/net/Socket;Ljava/io/InputStream;)V\n+  #125 = Utf8               LineNumberTable\n+  #126 = Utf8               LocalVariableTable\n+  #127 = Utf8               this\n+  #128 = Utf8               Lorg/apache/commons/net/bsd/RExecClient;\n+  #129 = Utf8               server\n+  #130 = Utf8               Ljava/net/ServerSocket;\n+  #131 = Utf8               socket\n+  #132 = Utf8               Ljava/net/Socket;\n+  #133 = Utf8               StackMapTable\n+  #134 = Methodref          #3.#135       // org/apache/commons/net/SocketClient.\"<init>\":()V\n+  #135 = NameAndType        #99:#76       // \"<init>\":()V\n+  #136 = Fieldref           #1.#137       // org/apache/commons/net/bsd/RExecClient._errorStream_:Ljava/io/InputStream;\n+  #137 = NameAndType        #14:#15       // _errorStream_:Ljava/io/InputStream;\n+  #138 = Methodref          #1.#139       // org/apache/commons/net/bsd/RExecClient.setDefaultPort:(I)V\n+  #139 = NameAndType        #140:#72      // setDefaultPort:(I)V\n+  #140 = Utf8               setDefaultPort\n+  #141 = Fieldref           #1.#142       // org/apache/commons/net/bsd/RExecClient._input_:Ljava/io/InputStream;\n+  #142 = NameAndType        #143:#15      // _input_:Ljava/io/InputStream;\n+  #143 = Utf8               _input_\n+  #144 = Utf8               getOutputStream\n+  #145 = Utf8               ()Ljava/io/OutputStream;\n+  #146 = Utf8               getErrorStream\n+  #147 = Utf8               rexec\n+  #148 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n+  #149 = Methodref          #1.#150       // org/apache/commons/net/bsd/RExecClient.createErrorStream:()Ljava/io/InputStream;\n+  #150 = NameAndType        #16:#17       // createErrorStream:()Ljava/io/InputStream;\n+  #151 = Methodref          #1.#152       // org/apache/commons/net/bsd/RExecClient.getCharset:()Ljava/nio/charset/Charset;\n+  #152 = NameAndType        #153:#154     // getCharset:()Ljava/nio/charset/Charset;\n+  #153 = Utf8               getCharset\n+  #154 = Utf8               ()Ljava/nio/charset/Charset;\n+  #155 = Methodref          #156.#158     // java/io/InputStream.read:()I\n+  #156 = Class              #157          // java/io/InputStream\n+  #157 = Utf8               java/io/InputStream\n+  #158 = NameAndType        #159:#45      // read:()I\n+  #159 = Utf8               read\n+  #160 = Methodref          #93.#135      // java/lang/StringBuilder.\"<init>\":()V\n+  #161 = Methodref          #93.#162      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #162 = NameAndType        #112:#163     // append:(C)Ljava/lang/StringBuilder;\n+  #163 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #164 = String             #165          // Server closed connection.\n+  #165 = Utf8               Server closed connection.\n+  #166 = Utf8               username\n+  #167 = Utf8               Ljava/lang/String;\n+  #168 = Utf8               password\n+  #169 = Utf8               command\n+  #170 = Utf8               separateErrorStream\n+  #171 = Utf8               ch\n+  #172 = Utf8               buffer\n+  #173 = Utf8               Ljava/lang/StringBuilder;\n+  #174 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #175 = Methodref          #1.#176       // org/apache/commons/net/bsd/RExecClient.rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n+  #176 = NameAndType        #147:#148     // rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n+  #177 = Utf8               disconnect\n+  #178 = Methodref          #156.#82      // java/io/InputStream.close:()V\n+  #179 = Methodref          #3.#180       // org/apache/commons/net/SocketClient.disconnect:()V\n+  #180 = NameAndType        #177:#76      // disconnect:()V\n+  #181 = Utf8               setRemoteVerificationEnabled\n+  #182 = Utf8               (Z)V\n+  #183 = Utf8               enable\n+  #184 = Utf8               isRemoteVerificationEnabled\n+  #185 = Utf8               ()Z\n+  #186 = Utf8               SourceFile\n+  #187 = Utf8               RExecClient.java\n {\n   protected static final char NULL_CHAR = '\\u0000';\n     descriptor: C\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 0\n \n   public static final int DEFAULT_PORT = 512;\n@@ -212,360 +213,365 @@\n   protected java.io.InputStream _errorStream_;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0004) ACC_PROTECTED\n \n   java.io.InputStream createErrorStream() throws java.io.IOException;\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n-      stack=4, locals=3, args_size=1\n+      stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #1                  // Field _serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n+         1: getfield      #22                 // Field _serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n          4: iconst_0\n          5: iconst_1\n          6: aload_0\n-         7: invokevirtual #7                  // Method getLocalAddress:()Ljava/net/InetAddress;\n-        10: invokevirtual #11                 // Method javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n+         7: invokevirtual #26                 // Method getLocalAddress:()Ljava/net/InetAddress;\n+        10: invokevirtual #30                 // Method javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n         13: astore_1\n         14: aload_0\n-        15: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+        15: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n         18: aload_1\n-        19: invokevirtual #21                 // Method java/net/ServerSocket.getLocalPort:()I\n-        22: invokestatic  #27                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n-        25: getstatic     #33                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-        28: invokevirtual #39                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        31: invokevirtual #45                 // Method java/io/OutputStream.write:([B)V\n+        19: invokevirtual #40                 // Method java/net/ServerSocket.getLocalPort:()I\n+        22: invokestatic  #46                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+        25: getstatic     #52                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+        28: invokevirtual #58                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        31: invokevirtual #64                 // Method java/io/OutputStream.write:([B)V\n         34: aload_0\n-        35: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+        35: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n         38: iconst_0\n-        39: invokevirtual #51                 // Method java/io/OutputStream.write:(I)V\n+        39: invokevirtual #70                 // Method java/io/OutputStream.write:(I)V\n         42: aload_0\n-        43: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n-        46: invokevirtual #54                 // Method java/io/OutputStream.flush:()V\n+        43: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n+        46: invokevirtual #73                 // Method java/io/OutputStream.flush:()V\n         49: aload_1\n-        50: invokevirtual #58                 // Method java/net/ServerSocket.accept:()Ljava/net/Socket;\n+        50: invokevirtual #77                 // Method java/net/ServerSocket.accept:()Ljava/net/Socket;\n         53: astore_2\n         54: aload_1\n-        55: invokevirtual #62                 // Method java/net/ServerSocket.close:()V\n+        55: invokevirtual #81                 // Method java/net/ServerSocket.close:()V\n         58: aload_0\n-        59: getfield      #65                 // Field remoteVerificationEnabled:Z\n-        62: ifeq          110\n+        59: getfield      #84                 // Field remoteVerificationEnabled:Z\n+        62: ifeq          107\n         65: aload_0\n         66: aload_2\n-        67: invokevirtual #69                 // Method verifyRemote:(Ljava/net/Socket;)Z\n-        70: ifne          110\n+        67: invokevirtual #86                 // Method verifyRemote:(Ljava/net/Socket;)Z\n+        70: ifne          107\n         73: aload_2\n-        74: invokevirtual #73                 // Method java/net/Socket.close:()V\n-        77: new           #76                 // class java/io/IOException\n+        74: invokevirtual #90                 // Method java/net/Socket.close:()V\n+        77: new           #19                 // class java/io/IOException\n         80: dup\n-        81: new           #78                 // class java/lang/StringBuilder\n+        81: new           #93                 // class java/lang/StringBuilder\n         84: dup\n-        85: invokespecial #80                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        88: ldc           #83                 // String Security violation: unexpected connection attempt by\n-        90: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        93: aload_2\n-        94: invokevirtual #89                 // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n-        97: invokevirtual #92                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n-       100: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       103: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       106: invokespecial #100                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       109: athrow\n-       110: new           #103                // class org/apache/commons/net/io/SocketInputStream\n-       113: dup\n-       114: aload_2\n-       115: aload_2\n-       116: invokevirtual #105                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;\n-       119: invokespecial #109                // Method org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n-       122: areturn\n+        85: ldc           #95                 // String Security violation: unexpected connection attempt by\n+        87: invokespecial #97                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        90: aload_2\n+        91: invokevirtual #101                // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n+        94: invokevirtual #104                // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n+        97: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       100: invokevirtual #114                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       103: invokespecial #116                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       106: athrow\n+       107: new           #117                // class org/apache/commons/net/io/SocketInputStream\n+       110: dup\n+       111: aload_2\n+       112: aload_2\n+       113: invokevirtual #119                // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;\n+       116: invokespecial #122                // Method org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n+       119: areturn\n       LineNumberTable:\n         line 95: 0\n         line 97: 14\n         line 98: 34\n         line 99: 42\n         line 101: 49\n         line 102: 54\n         line 104: 58\n         line 106: 73\n         line 107: 77\n-        line 109: 94\n-        line 112: 110\n+        line 108: 81\n+        line 109: 90\n+        line 108: 100\n+        line 107: 103\n+        line 112: 107\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     123     0  this   Lorg/apache/commons/net/bsd/RExecClient;\n-           14     109     1 server   Ljava/net/ServerSocket;\n-           54      69     2 socket   Ljava/net/Socket;\n+            0     120     0  this   Lorg/apache/commons/net/bsd/RExecClient;\n+           14     106     1 server   Ljava/net/ServerSocket;\n+           54      66     2 socket   Ljava/net/Socket;\n       StackMapTable: number_of_entries = 1\n         frame_type = 253 /* append */\n-          offset_delta = 110\n+          offset_delta = 107\n           locals = [ class java/net/ServerSocket, class java/net/Socket ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.net.bsd.RExecClient();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #112                // Method org/apache/commons/net/SocketClient.\"<init>\":()V\n+         1: invokespecial #134                // Method org/apache/commons/net/SocketClient.\"<init>\":()V\n          4: aload_0\n          5: aconst_null\n-         6: putfield      #115                // Field _errorStream_:Ljava/io/InputStream;\n+         6: putfield      #136                // Field _errorStream_:Ljava/io/InputStream;\n          9: aload_0\n         10: sipush        512\n-        13: invokevirtual #119                // Method setDefaultPort:(I)V\n+        13: invokevirtual #138                // Method setDefaultPort:(I)V\n         16: return\n       LineNumberTable:\n-        line 121: 0\n+        line 120: 0\n         line 122: 4\n         line 123: 9\n         line 124: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/net/bsd/RExecClient;\n \n   public java.io.InputStream getInputStream();\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #122                // Field _input_:Ljava/io/InputStream;\n+         1: getfield      #141                // Field _input_:Ljava/io/InputStream;\n          4: areturn\n       LineNumberTable:\n         line 137: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/bsd/RExecClient;\n \n   public java.io.OutputStream getOutputStream();\n     descriptor: ()Ljava/io/OutputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+         1: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n          4: areturn\n       LineNumberTable:\n         line 151: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/bsd/RExecClient;\n \n   public java.io.InputStream getErrorStream();\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #115                // Field _errorStream_:Ljava/io/InputStream;\n+         1: getfield      #136                // Field _errorStream_:Ljava/io/InputStream;\n          4: areturn\n       LineNumberTable:\n         line 167: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/bsd/RExecClient;\n \n   public void rexec(java.lang.String, java.lang.String, java.lang.String, boolean) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=7, args_size=5\n          0: iload         4\n          2: ifeq          16\n          5: aload_0\n          6: aload_0\n-         7: invokevirtual #125                // Method createErrorStream:()Ljava/io/InputStream;\n-        10: putfield      #115                // Field _errorStream_:Ljava/io/InputStream;\n+         7: invokevirtual #149                // Method createErrorStream:()Ljava/io/InputStream;\n+        10: putfield      #136                // Field _errorStream_:Ljava/io/InputStream;\n         13: goto          24\n         16: aload_0\n-        17: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+        17: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n         20: iconst_0\n-        21: invokevirtual #51                 // Method java/io/OutputStream.write:(I)V\n+        21: invokevirtual #70                 // Method java/io/OutputStream.write:(I)V\n         24: aload_0\n-        25: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+        25: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n         28: aload_1\n         29: aload_0\n-        30: invokevirtual #128                // Method getCharset:()Ljava/nio/charset/Charset;\n-        33: invokevirtual #39                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        36: invokevirtual #45                 // Method java/io/OutputStream.write:([B)V\n+        30: invokevirtual #151                // Method getCharset:()Ljava/nio/charset/Charset;\n+        33: invokevirtual #58                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        36: invokevirtual #64                 // Method java/io/OutputStream.write:([B)V\n         39: aload_0\n-        40: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+        40: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n         43: iconst_0\n-        44: invokevirtual #51                 // Method java/io/OutputStream.write:(I)V\n+        44: invokevirtual #70                 // Method java/io/OutputStream.write:(I)V\n         47: aload_0\n-        48: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+        48: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n         51: aload_2\n         52: aload_0\n-        53: invokevirtual #128                // Method getCharset:()Ljava/nio/charset/Charset;\n-        56: invokevirtual #39                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        59: invokevirtual #45                 // Method java/io/OutputStream.write:([B)V\n+        53: invokevirtual #151                // Method getCharset:()Ljava/nio/charset/Charset;\n+        56: invokevirtual #58                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        59: invokevirtual #64                 // Method java/io/OutputStream.write:([B)V\n         62: aload_0\n-        63: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+        63: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n         66: iconst_0\n-        67: invokevirtual #51                 // Method java/io/OutputStream.write:(I)V\n+        67: invokevirtual #70                 // Method java/io/OutputStream.write:(I)V\n         70: aload_0\n-        71: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+        71: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n         74: aload_3\n         75: aload_0\n-        76: invokevirtual #128                // Method getCharset:()Ljava/nio/charset/Charset;\n-        79: invokevirtual #39                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        82: invokevirtual #45                 // Method java/io/OutputStream.write:([B)V\n+        76: invokevirtual #151                // Method getCharset:()Ljava/nio/charset/Charset;\n+        79: invokevirtual #58                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        82: invokevirtual #64                 // Method java/io/OutputStream.write:([B)V\n         85: aload_0\n-        86: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n+        86: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n         89: iconst_0\n-        90: invokevirtual #51                 // Method java/io/OutputStream.write:(I)V\n+        90: invokevirtual #70                 // Method java/io/OutputStream.write:(I)V\n         93: aload_0\n-        94: getfield      #17                 // Field _output_:Ljava/io/OutputStream;\n-        97: invokevirtual #54                 // Method java/io/OutputStream.flush:()V\n+        94: getfield      #36                 // Field _output_:Ljava/io/OutputStream;\n+        97: invokevirtual #73                 // Method java/io/OutputStream.flush:()V\n        100: aload_0\n-       101: getfield      #122                // Field _input_:Ljava/io/InputStream;\n-       104: invokevirtual #132                // Method java/io/InputStream.read:()I\n+       101: getfield      #141                // Field _input_:Ljava/io/InputStream;\n+       104: invokevirtual #155                // Method java/io/InputStream.read:()I\n        107: istore        5\n        109: iload         5\n        111: ifle          169\n-       114: new           #78                 // class java/lang/StringBuilder\n+       114: new           #93                 // class java/lang/StringBuilder\n        117: dup\n-       118: invokespecial #80                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       118: invokespecial #160                // Method java/lang/StringBuilder.\"<init>\":()V\n        121: astore        6\n-       123: aload_0\n-       124: getfield      #122                // Field _input_:Ljava/io/InputStream;\n-       127: invokevirtual #132                // Method java/io/InputStream.read:()I\n-       130: dup\n-       131: istore        5\n-       133: iconst_m1\n-       134: if_icmpeq     156\n-       137: iload         5\n-       139: bipush        10\n-       141: if_icmpeq     156\n-       144: aload         6\n-       146: iload         5\n-       148: i2c\n-       149: invokevirtual #137                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       152: pop\n-       153: goto          123\n-       156: new           #76                 // class java/io/IOException\n+       123: goto          135\n+       126: aload         6\n+       128: iload         5\n+       130: i2c\n+       131: invokevirtual #161                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       134: pop\n+       135: aload_0\n+       136: getfield      #141                // Field _input_:Ljava/io/InputStream;\n+       139: invokevirtual #155                // Method java/io/InputStream.read:()I\n+       142: dup\n+       143: istore        5\n+       145: iconst_m1\n+       146: if_icmpeq     156\n+       149: iload         5\n+       151: bipush        10\n+       153: if_icmpne     126\n+       156: new           #19                 // class java/io/IOException\n        159: dup\n        160: aload         6\n-       162: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       165: invokespecial #100                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       162: invokevirtual #114                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       165: invokespecial #116                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        168: athrow\n        169: iload         5\n        171: ifge          184\n-       174: new           #76                 // class java/io/IOException\n+       174: new           #19                 // class java/io/IOException\n        177: dup\n-       178: ldc           #140                // String Server closed connection.\n-       180: invokespecial #100                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       178: ldc           #164                // String Server closed connection.\n+       180: invokespecial #116                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        183: athrow\n        184: return\n       LineNumberTable:\n         line 209: 0\n         line 211: 5\n+        line 212: 13\n         line 215: 16\n         line 218: 24\n         line 219: 39\n         line 220: 47\n         line 221: 62\n         line 222: 70\n         line 223: 85\n         line 224: 93\n         line 226: 100\n         line 227: 109\n         line 228: 114\n         line 230: 123\n-        line 231: 144\n+        line 231: 126\n+        line 230: 135\n         line 234: 156\n         line 235: 169\n         line 236: 174\n         line 238: 184\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          123      46     6 buffer   Ljava/lang/StringBuilder;\n             0     185     0  this   Lorg/apache/commons/net/bsd/RExecClient;\n             0     185     1 username   Ljava/lang/String;\n             0     185     2 password   Ljava/lang/String;\n             0     185     3 command   Ljava/lang/String;\n             0     185     4 separateErrorStream   Z\n           109      76     5    ch   I\n-      StackMapTable: number_of_entries = 6\n+          123      46     6 buffer   Ljava/lang/StringBuilder;\n+      StackMapTable: number_of_entries = 7\n         frame_type = 16 /* same */\n         frame_type = 7 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 98\n+          offset_delta = 101\n           locals = [ int, class java/lang/StringBuilder ]\n-        frame_type = 32 /* same */\n+        frame_type = 8 /* same */\n+        frame_type = 20 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 12\n         frame_type = 14 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void rexec(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_3\n          4: iconst_0\n-         5: invokevirtual #142                // Method rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n+         5: invokevirtual #175                // Method rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n          8: return\n       LineNumberTable:\n         line 252: 0\n         line 253: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/net/bsd/RExecClient;\n             0       9     1 username   Ljava/lang/String;\n             0       9     2 password   Ljava/lang/String;\n             0       9     3 command   Ljava/lang/String;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void disconnect() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #115                // Field _errorStream_:Ljava/io/InputStream;\n+         1: getfield      #136                // Field _errorStream_:Ljava/io/InputStream;\n          4: ifnull        14\n          7: aload_0\n-         8: getfield      #115                // Field _errorStream_:Ljava/io/InputStream;\n-        11: invokevirtual #146                // Method java/io/InputStream.close:()V\n+         8: getfield      #136                // Field _errorStream_:Ljava/io/InputStream;\n+        11: invokevirtual #178                // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #115                // Field _errorStream_:Ljava/io/InputStream;\n+        16: putfield      #136                // Field _errorStream_:Ljava/io/InputStream;\n         19: aload_0\n-        20: invokespecial #147                // Method org/apache/commons/net/SocketClient.disconnect:()V\n+        20: invokespecial #179                // Method org/apache/commons/net/SocketClient.disconnect:()V\n         23: return\n       LineNumberTable:\n         line 264: 0\n         line 265: 7\n         line 267: 14\n         line 268: 19\n         line 269: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0  this   Lorg/apache/commons/net/bsd/RExecClient;\n       StackMapTable: number_of_entries = 1\n         frame_type = 14 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public final void setRemoteVerificationEnabled(boolean);\n     descriptor: (Z)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #65                 // Field remoteVerificationEnabled:Z\n+         2: putfield      #84                 // Field remoteVerificationEnabled:Z\n          5: return\n       LineNumberTable:\n         line 283: 0\n         line 284: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/net/bsd/RExecClient;\n@@ -573,15 +579,15 @@\n \n   public final boolean isRemoteVerificationEnabled();\n     descriptor: ()Z\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #65                 // Field remoteVerificationEnabled:Z\n+         1: getfield      #84                 // Field remoteVerificationEnabled:Z\n          4: ireturn\n       LineNumberTable:\n         line 295: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/bsd/RExecClient;\n }\n"}]}
