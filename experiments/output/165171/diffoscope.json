{"diffoscope-json-version": 1, "source1": "first/AttributeLayout.class", "source2": "second/AttributeLayout.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,71 +1,71 @@\n-  SHA-256 checksum b1df855bf41e463f8af16c73c924fc94fcce2c424960f64dc5a65f4e6f643404\n+  SHA-256 checksum d1191986c424d4e23aabf5a2982ee492b8a8af3afd229ead72d17da96f3b2cfe\n   Compiled from \"AttributeLayout.java\"\n public class org.apache.commons.compress.harmony.unpack200.AttributeLayout implements org.apache.commons.compress.harmony.unpack200.IMatcher\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #22                         // org/apache/commons/compress/harmony/unpack200/AttributeLayout\n   super_class: #53                        // java/lang/Object\n   interfaces: 1, fields: 44, methods: 17, attributes: 1\n Constant pool:\n-    #1 = String             #184          // R\n-    #2 = Methodref          #48.#185      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-    #3 = Methodref          #48.#186      // java/lang/String.indexOf:(I)I\n-    #4 = String             #187          // RU\n-    #5 = Class              #188          // org/apache/commons/compress/harmony/unpack200/SegmentConstantPool\n-    #6 = Methodref          #5.#189       // org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-    #7 = String             #190          // RS\n-    #8 = String             #191          // K\n-    #9 = Methodref          #48.#192      // java/lang/String.charAt:(I)C\n-   #10 = Class              #193          // org/apache/commons/compress/harmony/pack200/Pack200Exception\n-   #11 = Class              #194          // java/lang/StringBuilder\n-   #12 = Methodref          #11.#195      // java/lang/StringBuilder.\"<init>\":()V\n-   #13 = String             #196          // Unknown layout encoding:\n-   #14 = Methodref          #11.#197      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #11.#198      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #16 = Methodref          #10.#199      // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Methodref          #22.#200      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.\"<init>\":(Ljava/lang/String;ILjava/lang/String;IZ)V\n-   #18 = Methodref          #53.#195      // java/lang/Object.\"<init>\":()V\n-   #19 = Fieldref           #22.#201      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.index:I\n-   #20 = Fieldref           #22.#202      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.context:I\n-   #21 = Fieldref           #22.#203      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.mask:J\n-   #22 = Class              #204          // org/apache/commons/compress/harmony/unpack200/AttributeLayout\n-   #23 = String             #205          // Attribute context out of range:\n-   #24 = Methodref          #11.#206      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #25 = String             #207          // Cannot have a null layout\n-   #26 = Methodref          #48.#208      // java/lang/String.length:()I\n-   #27 = String             #209          // Cannot have an unnamed layout\n-   #28 = Fieldref           #22.#210      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.name:Ljava/lang/String;\n-   #29 = Fieldref           #22.#211      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.layout:Ljava/lang/String;\n-   #30 = Fieldref           #22.#212      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.isDefault:Z\n-   #31 = Fieldref           #213.#214     // org/apache/commons/compress/harmony/pack200/Codec.BRANCH5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #32 = Fieldref           #213.#215     // org/apache/commons/compress/harmony/pack200/Codec.BCI5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #33 = String             #216          // KS\n-   #34 = Methodref          #48.#217      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #35 = Fieldref           #213.#218     // org/apache/commons/compress/harmony/pack200/Codec.SIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #36 = Fieldref           #213.#219     // org/apache/commons/compress/harmony/pack200/Codec.BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #37 = Fieldref           #213.#220     // org/apache/commons/compress/harmony/pack200/Codec.UNSIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #38 = Methodref          #22.#221      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-   #39 = String             #222          // KQ\n+    #1 = String             #182          // R\n+    #2 = Methodref          #48.#183      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+    #3 = Methodref          #48.#184      // java/lang/String.indexOf:(I)I\n+    #4 = String             #185          // RU\n+    #5 = Class              #186          // org/apache/commons/compress/harmony/unpack200/SegmentConstantPool\n+    #6 = Methodref          #5.#187       // org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+    #7 = String             #188          // RS\n+    #8 = String             #189          // K\n+    #9 = Methodref          #48.#190      // java/lang/String.charAt:(I)C\n+   #10 = Class              #191          // org/apache/commons/compress/harmony/pack200/Pack200Exception\n+   #11 = Class              #192          // java/lang/StringBuilder\n+   #12 = Methodref          #11.#193      // java/lang/StringBuilder.\"<init>\":()V\n+   #13 = String             #194          // Unknown layout encoding:\n+   #14 = Methodref          #11.#195      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #15 = Methodref          #11.#196      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #16 = Methodref          #10.#197      // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+   #17 = Methodref          #22.#198      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.\"<init>\":(Ljava/lang/String;ILjava/lang/String;IZ)V\n+   #18 = Methodref          #53.#193      // java/lang/Object.\"<init>\":()V\n+   #19 = Fieldref           #22.#199      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.index:I\n+   #20 = Fieldref           #22.#200      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.context:I\n+   #21 = Fieldref           #22.#201      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.mask:J\n+   #22 = Class              #202          // org/apache/commons/compress/harmony/unpack200/AttributeLayout\n+   #23 = String             #203          // Attribute context out of range:\n+   #24 = Methodref          #11.#204      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #25 = String             #205          // Cannot have a null layout\n+   #26 = Methodref          #48.#206      // java/lang/String.length:()I\n+   #27 = String             #207          // Cannot have an unnamed layout\n+   #28 = Fieldref           #22.#208      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.name:Ljava/lang/String;\n+   #29 = Fieldref           #22.#209      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.layout:Ljava/lang/String;\n+   #30 = Fieldref           #22.#210      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.isDefault:Z\n+   #31 = Fieldref           #211.#212     // org/apache/commons/compress/harmony/pack200/Codec.BRANCH5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+   #32 = Fieldref           #211.#213     // org/apache/commons/compress/harmony/pack200/Codec.BCI5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+   #33 = String             #214          // KS\n+   #34 = Methodref          #48.#215      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+   #35 = Fieldref           #211.#216     // org/apache/commons/compress/harmony/pack200/Codec.SIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+   #36 = Fieldref           #211.#217     // org/apache/commons/compress/harmony/pack200/Codec.BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+   #37 = Fieldref           #211.#218     // org/apache/commons/compress/harmony/pack200/Codec.UNSIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+   #38 = Methodref          #22.#219      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+   #39 = String             #220          // KQ\n    #40 = String             #56           // Ljava/lang/String;\n-   #41 = Methodref          #48.#223      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #42 = Methodref          #48.#224      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #43 = Methodref          #48.#225      // java/lang/String.hashCode:()I\n-   #44 = Fieldref           #22.#226      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.contextNames:[Ljava/lang/String;\n-   #45 = String             #227          // :\n-   #46 = String             #228          // *\n-   #47 = Fieldref           #22.#229      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.backwardsCallCount:I\n-   #48 = Class              #230          // java/lang/String\n-   #49 = String             #231          // Class\n-   #50 = String             #232          // Field\n-   #51 = String             #233          // Method\n+   #41 = Methodref          #48.#221      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #42 = Methodref          #48.#222      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #43 = Methodref          #48.#223      // java/lang/String.hashCode:()I\n+   #44 = Fieldref           #22.#224      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.contextNames:[Ljava/lang/String;\n+   #45 = String             #225          // :\n+   #46 = String             #226          // *\n+   #47 = Fieldref           #22.#227      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.backwardsCallCount:I\n+   #48 = Class              #228          // java/lang/String\n+   #49 = String             #229          // Class\n+   #50 = String             #230          // Field\n+   #51 = String             #231          // Method\n    #52 = String             #142          // Code\n-   #53 = Class              #234          // java/lang/Object\n-   #54 = Class              #235          // org/apache/commons/compress/harmony/unpack200/IMatcher\n+   #53 = Class              #232          // java/lang/Object\n+   #54 = Class              #233          // org/apache/commons/compress/harmony/unpack200/IMatcher\n    #55 = Utf8               ACC_ABSTRACT\n    #56 = Utf8               Ljava/lang/String;\n    #57 = Utf8               ConstantValue\n    #58 = String             #55           // ACC_ABSTRACT\n    #59 = Utf8               ACC_ANNOTATION\n    #60 = String             #59           // ACC_ANNOTATION\n    #61 = Utf8               ACC_ENUM\n@@ -91,46 +91,46 @@\n    #81 = Utf8               ACC_SYNTHETIC\n    #82 = String             #81           // ACC_SYNTHETIC\n    #83 = Utf8               ACC_TRANSIENT\n    #84 = String             #83           // ACC_TRANSIENT\n    #85 = Utf8               ACC_VOLATILE\n    #86 = String             #85           // ACC_VOLATILE\n    #87 = Utf8               ATTRIBUTE_ANNOTATION_DEFAULT\n-   #88 = String             #236          // AnnotationDefault\n+   #88 = String             #234          // AnnotationDefault\n    #89 = Utf8               ATTRIBUTE_CLASS_FILE_VERSION\n-   #90 = String             #237          // class-file version\n+   #90 = String             #235          // class-file version\n    #91 = Utf8               ATTRIBUTE_CODE\n    #92 = Utf8               ATTRIBUTE_CONSTANT_VALUE\n    #93 = String             #57           // ConstantValue\n    #94 = Utf8               ATTRIBUTE_DEPRECATED\n-   #95 = String             #238          // Deprecated\n+   #95 = String             #236          // Deprecated\n    #96 = Utf8               ATTRIBUTE_ENCLOSING_METHOD\n-   #97 = String             #239          // EnclosingMethod\n+   #97 = String             #237          // EnclosingMethod\n    #98 = Utf8               ATTRIBUTE_EXCEPTIONS\n    #99 = String             #151          // Exceptions\n   #100 = Utf8               ATTRIBUTE_INNER_CLASSES\n-  #101 = String             #240          // InnerClasses\n+  #101 = String             #238          // InnerClasses\n   #102 = Utf8               ATTRIBUTE_LINE_NUMBER_TABLE\n   #103 = String             #143          // LineNumberTable\n   #104 = Utf8               ATTRIBUTE_LOCAL_VARIABLE_TABLE\n   #105 = String             #144          // LocalVariableTable\n   #106 = Utf8               ATTRIBUTE_LOCAL_VARIABLE_TYPE_TABLE\n-  #107 = String             #241          // LocalVariableTypeTable\n+  #107 = String             #239          // LocalVariableTypeTable\n   #108 = Utf8               ATTRIBUTE_RUNTIME_INVISIBLE_ANNOTATIONS\n-  #109 = String             #242          // RuntimeInvisibleAnnotations\n+  #109 = String             #240          // RuntimeInvisibleAnnotations\n   #110 = Utf8               ATTRIBUTE_RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS\n-  #111 = String             #243          // RuntimeInvisibleParameterAnnotations\n+  #111 = String             #241          // RuntimeInvisibleParameterAnnotations\n   #112 = Utf8               ATTRIBUTE_RUNTIME_VISIBLE_ANNOTATIONS\n-  #113 = String             #244          // RuntimeVisibleAnnotations\n+  #113 = String             #242          // RuntimeVisibleAnnotations\n   #114 = Utf8               ATTRIBUTE_RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS\n-  #115 = String             #245          // RuntimeVisibleParameterAnnotations\n+  #115 = String             #243          // RuntimeVisibleParameterAnnotations\n   #116 = Utf8               ATTRIBUTE_SIGNATURE\n-  #117 = String             #246          // Signature\n+  #117 = String             #244          // Signature\n   #118 = Utf8               ATTRIBUTE_SOURCE_FILE\n-  #119 = String             #182          // SourceFile\n+  #119 = String             #180          // SourceFile\n   #120 = Utf8               CONTEXT_CLASS\n   #121 = Utf8               I\n   #122 = Integer            0\n   #123 = Utf8               CONTEXT_CODE\n   #124 = Integer            3\n   #125 = Utf8               CONTEXT_FIELD\n   #126 = Integer            1\n@@ -160,128 +160,126 @@\n   #150 = Utf8               StackMapTable\n   #151 = Utf8               Exceptions\n   #152 = Utf8               <init>\n   #153 = Utf8               (Ljava/lang/String;ILjava/lang/String;I)V\n   #154 = Utf8               this\n   #155 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/AttributeLayout;\n   #156 = Utf8               (Ljava/lang/String;ILjava/lang/String;IZ)V\n-  #157 = Class              #204          // org/apache/commons/compress/harmony/unpack200/AttributeLayout\n-  #158 = Class              #230          // java/lang/String\n-  #159 = Utf8               getCodec\n-  #160 = Utf8               ()Lorg/apache/commons/compress/harmony/pack200/Codec;\n-  #161 = Utf8               getLayout\n-  #162 = Utf8               ()Ljava/lang/String;\n-  #163 = Utf8               (JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #164 = Utf8               (JLjava/lang/String;Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #165 = Utf8               hashCode\n-  #166 = Utf8               ()I\n-  #167 = Utf8               PRIME\n-  #168 = Utf8               r\n-  #169 = Utf8               matches\n-  #170 = Utf8               (J)Z\n-  #171 = Utf8               toString\n-  #172 = Utf8               getContext\n-  #173 = Utf8               getIndex\n-  #174 = Utf8               getName\n-  #175 = Utf8               numBackwardsCallables\n-  #176 = Utf8               isDefaultLayout\n-  #177 = Utf8               ()Z\n-  #178 = Utf8               setBackwardsCallCount\n-  #179 = Utf8               (I)V\n-  #180 = Utf8               <clinit>\n-  #181 = Utf8               ()V\n-  #182 = Utf8               SourceFile\n-  #183 = Utf8               AttributeLayout.java\n-  #184 = Utf8               R\n-  #185 = NameAndType        #247:#248     // startsWith:(Ljava/lang/String;)Z\n-  #186 = NameAndType        #249:#250     // indexOf:(I)I\n-  #187 = Utf8               RU\n-  #188 = Utf8               org/apache/commons/compress/harmony/unpack200/SegmentConstantPool\n-  #189 = NameAndType        #140:#251     // getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #190 = Utf8               RS\n-  #191 = Utf8               K\n-  #192 = NameAndType        #252:#253     // charAt:(I)C\n-  #193 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n-  #194 = Utf8               java/lang/StringBuilder\n-  #195 = NameAndType        #152:#181     // \"<init>\":()V\n-  #196 = Utf8               Unknown layout encoding:\n-  #197 = NameAndType        #254:#255     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #198 = NameAndType        #171:#162     // toString:()Ljava/lang/String;\n-  #199 = NameAndType        #152:#256     // \"<init>\":(Ljava/lang/String;)V\n-  #200 = NameAndType        #152:#156     // \"<init>\":(Ljava/lang/String;ILjava/lang/String;IZ)V\n-  #201 = NameAndType        #132:#121     // index:I\n-  #202 = NameAndType        #131:#121     // context:I\n-  #203 = NameAndType        #134:#135     // mask:J\n-  #204 = Utf8               org/apache/commons/compress/harmony/unpack200/AttributeLayout\n-  #205 = Utf8               Attribute context out of range:\n-  #206 = NameAndType        #254:#257     // append:(I)Ljava/lang/StringBuilder;\n-  #207 = Utf8               Cannot have a null layout\n-  #208 = NameAndType        #258:#166     // length:()I\n-  #209 = Utf8               Cannot have an unnamed layout\n-  #210 = NameAndType        #136:#56      // name:Ljava/lang/String;\n-  #211 = NameAndType        #133:#56      // layout:Ljava/lang/String;\n-  #212 = NameAndType        #137:#138     // isDefault:Z\n-  #213 = Class              #259          // org/apache/commons/compress/harmony/pack200/Codec\n-  #214 = NameAndType        #260:#261     // BRANCH5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #215 = NameAndType        #262:#261     // BCI5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #216 = Utf8               KS\n-  #217 = NameAndType        #249:#263     // indexOf:(Ljava/lang/String;)I\n-  #218 = NameAndType        #264:#261     // SIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #219 = NameAndType        #265:#261     // BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #220 = NameAndType        #266:#261     // UNSIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #221 = NameAndType        #140:#141     // getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #222 = Utf8               KQ\n-  #223 = NameAndType        #267:#268     // equals:(Ljava/lang/Object;)Z\n-  #224 = NameAndType        #269:#270     // substring:(I)Ljava/lang/String;\n-  #225 = NameAndType        #165:#166     // hashCode:()I\n-  #226 = NameAndType        #129:#130     // contextNames:[Ljava/lang/String;\n-  #227 = Utf8               :\n-  #228 = Utf8               *\n-  #229 = NameAndType        #139:#121     // backwardsCallCount:I\n-  #230 = Utf8               java/lang/String\n-  #231 = Utf8               Class\n-  #232 = Utf8               Field\n-  #233 = Utf8               Method\n-  #234 = Utf8               java/lang/Object\n-  #235 = Utf8               org/apache/commons/compress/harmony/unpack200/IMatcher\n-  #236 = Utf8               AnnotationDefault\n-  #237 = Utf8               class-file version\n-  #238 = Utf8               Deprecated\n-  #239 = Utf8               EnclosingMethod\n-  #240 = Utf8               InnerClasses\n-  #241 = Utf8               LocalVariableTypeTable\n-  #242 = Utf8               RuntimeInvisibleAnnotations\n-  #243 = Utf8               RuntimeInvisibleParameterAnnotations\n-  #244 = Utf8               RuntimeVisibleAnnotations\n-  #245 = Utf8               RuntimeVisibleParameterAnnotations\n-  #246 = Utf8               Signature\n-  #247 = Utf8               startsWith\n-  #248 = Utf8               (Ljava/lang/String;)Z\n-  #249 = Utf8               indexOf\n-  #250 = Utf8               (I)I\n-  #251 = Utf8               (IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #252 = Utf8               charAt\n-  #253 = Utf8               (I)C\n-  #254 = Utf8               append\n-  #255 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #256 = Utf8               (Ljava/lang/String;)V\n-  #257 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #258 = Utf8               length\n-  #259 = Utf8               org/apache/commons/compress/harmony/pack200/Codec\n-  #260 = Utf8               BRANCH5\n-  #261 = Utf8               Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #262 = Utf8               BCI5\n-  #263 = Utf8               (Ljava/lang/String;)I\n-  #264 = Utf8               SIGNED5\n-  #265 = Utf8               BYTE1\n-  #266 = Utf8               UNSIGNED5\n-  #267 = Utf8               equals\n-  #268 = Utf8               (Ljava/lang/Object;)Z\n-  #269 = Utf8               substring\n-  #270 = Utf8               (I)Ljava/lang/String;\n+  #157 = Utf8               getCodec\n+  #158 = Utf8               ()Lorg/apache/commons/compress/harmony/pack200/Codec;\n+  #159 = Utf8               getLayout\n+  #160 = Utf8               ()Ljava/lang/String;\n+  #161 = Utf8               (JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #162 = Utf8               (JLjava/lang/String;Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #163 = Utf8               hashCode\n+  #164 = Utf8               ()I\n+  #165 = Utf8               PRIME\n+  #166 = Utf8               r\n+  #167 = Utf8               matches\n+  #168 = Utf8               (J)Z\n+  #169 = Utf8               toString\n+  #170 = Utf8               getContext\n+  #171 = Utf8               getIndex\n+  #172 = Utf8               getName\n+  #173 = Utf8               numBackwardsCallables\n+  #174 = Utf8               isDefaultLayout\n+  #175 = Utf8               ()Z\n+  #176 = Utf8               setBackwardsCallCount\n+  #177 = Utf8               (I)V\n+  #178 = Utf8               <clinit>\n+  #179 = Utf8               ()V\n+  #180 = Utf8               SourceFile\n+  #181 = Utf8               AttributeLayout.java\n+  #182 = Utf8               R\n+  #183 = NameAndType        #245:#246     // startsWith:(Ljava/lang/String;)Z\n+  #184 = NameAndType        #247:#248     // indexOf:(I)I\n+  #185 = Utf8               RU\n+  #186 = Utf8               org/apache/commons/compress/harmony/unpack200/SegmentConstantPool\n+  #187 = NameAndType        #140:#249     // getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #188 = Utf8               RS\n+  #189 = Utf8               K\n+  #190 = NameAndType        #250:#251     // charAt:(I)C\n+  #191 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n+  #192 = Utf8               java/lang/StringBuilder\n+  #193 = NameAndType        #152:#179     // \"<init>\":()V\n+  #194 = Utf8               Unknown layout encoding:\n+  #195 = NameAndType        #252:#253     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #196 = NameAndType        #169:#160     // toString:()Ljava/lang/String;\n+  #197 = NameAndType        #152:#254     // \"<init>\":(Ljava/lang/String;)V\n+  #198 = NameAndType        #152:#156     // \"<init>\":(Ljava/lang/String;ILjava/lang/String;IZ)V\n+  #199 = NameAndType        #132:#121     // index:I\n+  #200 = NameAndType        #131:#121     // context:I\n+  #201 = NameAndType        #134:#135     // mask:J\n+  #202 = Utf8               org/apache/commons/compress/harmony/unpack200/AttributeLayout\n+  #203 = Utf8               Attribute context out of range:\n+  #204 = NameAndType        #252:#255     // append:(I)Ljava/lang/StringBuilder;\n+  #205 = Utf8               Cannot have a null layout\n+  #206 = NameAndType        #256:#164     // length:()I\n+  #207 = Utf8               Cannot have an unnamed layout\n+  #208 = NameAndType        #136:#56      // name:Ljava/lang/String;\n+  #209 = NameAndType        #133:#56      // layout:Ljava/lang/String;\n+  #210 = NameAndType        #137:#138     // isDefault:Z\n+  #211 = Class              #257          // org/apache/commons/compress/harmony/pack200/Codec\n+  #212 = NameAndType        #258:#259     // BRANCH5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #213 = NameAndType        #260:#259     // BCI5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #214 = Utf8               KS\n+  #215 = NameAndType        #247:#261     // indexOf:(Ljava/lang/String;)I\n+  #216 = NameAndType        #262:#259     // SIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #217 = NameAndType        #263:#259     // BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #218 = NameAndType        #264:#259     // UNSIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #219 = NameAndType        #140:#141     // getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #220 = Utf8               KQ\n+  #221 = NameAndType        #265:#266     // equals:(Ljava/lang/Object;)Z\n+  #222 = NameAndType        #267:#268     // substring:(I)Ljava/lang/String;\n+  #223 = NameAndType        #163:#164     // hashCode:()I\n+  #224 = NameAndType        #129:#130     // contextNames:[Ljava/lang/String;\n+  #225 = Utf8               :\n+  #226 = Utf8               *\n+  #227 = NameAndType        #139:#121     // backwardsCallCount:I\n+  #228 = Utf8               java/lang/String\n+  #229 = Utf8               Class\n+  #230 = Utf8               Field\n+  #231 = Utf8               Method\n+  #232 = Utf8               java/lang/Object\n+  #233 = Utf8               org/apache/commons/compress/harmony/unpack200/IMatcher\n+  #234 = Utf8               AnnotationDefault\n+  #235 = Utf8               class-file version\n+  #236 = Utf8               Deprecated\n+  #237 = Utf8               EnclosingMethod\n+  #238 = Utf8               InnerClasses\n+  #239 = Utf8               LocalVariableTypeTable\n+  #240 = Utf8               RuntimeInvisibleAnnotations\n+  #241 = Utf8               RuntimeInvisibleParameterAnnotations\n+  #242 = Utf8               RuntimeVisibleAnnotations\n+  #243 = Utf8               RuntimeVisibleParameterAnnotations\n+  #244 = Utf8               Signature\n+  #245 = Utf8               startsWith\n+  #246 = Utf8               (Ljava/lang/String;)Z\n+  #247 = Utf8               indexOf\n+  #248 = Utf8               (I)I\n+  #249 = Utf8               (IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #250 = Utf8               charAt\n+  #251 = Utf8               (I)C\n+  #252 = Utf8               append\n+  #253 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #254 = Utf8               (Ljava/lang/String;)V\n+  #255 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #256 = Utf8               length\n+  #257 = Utf8               org/apache/commons/compress/harmony/pack200/Codec\n+  #258 = Utf8               BRANCH5\n+  #259 = Utf8               Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #260 = Utf8               BCI5\n+  #261 = Utf8               (Ljava/lang/String;)I\n+  #262 = Utf8               SIGNED5\n+  #263 = Utf8               BYTE1\n+  #264 = Utf8               UNSIGNED5\n+  #265 = Utf8               equals\n+  #266 = Utf8               (Ljava/lang/Object;)Z\n+  #267 = Utf8               substring\n+  #268 = Utf8               (I)Ljava/lang/String;\n {\n   public static final java.lang.String ACC_ABSTRACT = \"ACC_ABSTRACT\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String ACC_ABSTRACT\n \n   public static final java.lang.String ACC_ANNOTATION = \"ACC_ANNOTATION\";\n"}]}
