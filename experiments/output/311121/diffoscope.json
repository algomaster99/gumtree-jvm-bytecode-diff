{"diffoscope-json-version": 1, "source1": "first/CoderBase.class", "source2": "second/CoderBase.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,108 +1,108 @@\n-  SHA-256 checksum f0066f535c29837f6f8657fd8be7287e892ba9babd5b070671a004163b872725\n+  SHA-256 checksum fa786f5b72c2ff8db8101e4e668a3619ae3227fc76e0adf57983df499731f01c\n   Compiled from \"CoderBase.java\"\n abstract class org.apache.commons.compress.archivers.sevenz.CoderBase\n   minor version: 0\n   major version: 52\n   flags: (0x0420) ACC_SUPER, ACC_ABSTRACT\n-  this_class: #10                         // org/apache/commons/compress/archivers/sevenz/CoderBase\n-  super_class: #11                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/compress/archivers/sevenz/CoderBase\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 1, methods: 7, attributes: 1\n Constant pool:\n-   #1 = Methodref          #11.#39        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #10.#40        // org/apache/commons/compress/archivers/sevenz/CoderBase.acceptableOptions:[Ljava/lang/Class;\n-   #3 = Methodref          #41.#42        // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-   #4 = Fieldref           #43.#44        // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n-   #5 = Class              #45            // java/lang/UnsupportedOperationException\n-   #6 = String             #46            // Method doesn\\'t support writing\n-   #7 = Methodref          #5.#47         // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-   #8 = Class              #48            // java/lang/Number\n-   #9 = Methodref          #8.#49         // java/lang/Number.intValue:()I\n-  #10 = Class              #50            // org/apache/commons/compress/archivers/sevenz/CoderBase\n-  #11 = Class              #51            // java/lang/Object\n-  #12 = Utf8               acceptableOptions\n-  #13 = Utf8               [Ljava/lang/Class;\n-  #14 = Utf8               Signature\n-  #15 = Utf8               [Ljava/lang/Class<*>;\n-  #16 = Utf8               <init>\n-  #17 = Utf8               ([Ljava/lang/Class;)V\n-  #18 = Utf8               Code\n-  #19 = Utf8               LineNumberTable\n-  #20 = Utf8               ([Ljava/lang/Class<*>;)V\n-  #21 = Utf8               canAcceptOptions\n-  #22 = Utf8               (Ljava/lang/Object;)Z\n-  #23 = Utf8               StackMapTable\n-  #24 = Class              #13            // \"[Ljava/lang/Class;\"\n-  #25 = Utf8               getOptionsAsProperties\n-  #26 = Utf8               (Ljava/lang/Object;)[B\n-  #27 = Utf8               Exceptions\n-  #28 = Class              #52            // java/io/IOException\n-  #29 = Utf8               getOptionsFromCoder\n-  #30 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n-  #31 = Utf8               decode\n-  #32 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n-  #33 = Utf8               encode\n-  #34 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n-  #35 = Utf8               numberOptionOrDefault\n-  #36 = Utf8               (Ljava/lang/Object;I)I\n-  #37 = Utf8               SourceFile\n-  #38 = Utf8               CoderBase.java\n-  #39 = NameAndType        #16:#53        // \"<init>\":()V\n-  #40 = NameAndType        #12:#13        // acceptableOptions:[Ljava/lang/Class;\n-  #41 = Class              #54            // java/lang/Class\n-  #42 = NameAndType        #55:#22        // isInstance:(Ljava/lang/Object;)Z\n-  #43 = Class              #56            // org/apache/commons/compress/utils/ByteUtils\n-  #44 = NameAndType        #57:#58        // EMPTY_BYTE_ARRAY:[B\n-  #45 = Utf8               java/lang/UnsupportedOperationException\n-  #46 = Utf8               Method doesn\\'t support writing\n-  #47 = NameAndType        #16:#59        // \"<init>\":(Ljava/lang/String;)V\n-  #48 = Utf8               java/lang/Number\n-  #49 = NameAndType        #60:#61        // intValue:()I\n-  #50 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n-  #51 = Utf8               java/lang/Object\n-  #52 = Utf8               java/io/IOException\n-  #53 = Utf8               ()V\n-  #54 = Utf8               java/lang/Class\n-  #55 = Utf8               isInstance\n-  #56 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #57 = Utf8               EMPTY_BYTE_ARRAY\n-  #58 = Utf8               [B\n-  #59 = Utf8               (Ljava/lang/String;)V\n-  #60 = Utf8               intValue\n-  #61 = Utf8               ()I\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/compress/archivers/sevenz/CoderBase.acceptableOptions:[Ljava/lang/Class;\n+   #8 = Class              #10            // org/apache/commons/compress/archivers/sevenz/CoderBase\n+   #9 = NameAndType        #11:#12        // acceptableOptions:[Ljava/lang/Class;\n+  #10 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n+  #11 = Utf8               acceptableOptions\n+  #12 = Utf8               [Ljava/lang/Class;\n+  #13 = Methodref          #14.#15        // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+  #14 = Class              #16            // java/lang/Class\n+  #15 = NameAndType        #17:#18        // isInstance:(Ljava/lang/Object;)Z\n+  #16 = Utf8               java/lang/Class\n+  #17 = Utf8               isInstance\n+  #18 = Utf8               (Ljava/lang/Object;)Z\n+  #19 = Fieldref           #20.#21        // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+  #20 = Class              #22            // org/apache/commons/compress/utils/ByteUtils\n+  #21 = NameAndType        #23:#24        // EMPTY_BYTE_ARRAY:[B\n+  #22 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #23 = Utf8               EMPTY_BYTE_ARRAY\n+  #24 = Utf8               [B\n+  #25 = Class              #26            // java/lang/UnsupportedOperationException\n+  #26 = Utf8               java/lang/UnsupportedOperationException\n+  #27 = String             #28            // Method doesn\\'t support writing\n+  #28 = Utf8               Method doesn\\'t support writing\n+  #29 = Methodref          #25.#30        // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+  #30 = NameAndType        #5:#31         // \"<init>\":(Ljava/lang/String;)V\n+  #31 = Utf8               (Ljava/lang/String;)V\n+  #32 = Class              #33            // java/lang/Number\n+  #33 = Utf8               java/lang/Number\n+  #34 = Methodref          #32.#35        // java/lang/Number.intValue:()I\n+  #35 = NameAndType        #36:#37        // intValue:()I\n+  #36 = Utf8               intValue\n+  #37 = Utf8               ()I\n+  #38 = Utf8               Signature\n+  #39 = Utf8               [Ljava/lang/Class<*>;\n+  #40 = Utf8               ([Ljava/lang/Class;)V\n+  #41 = Utf8               Code\n+  #42 = Utf8               LineNumberTable\n+  #43 = Utf8               ([Ljava/lang/Class<*>;)V\n+  #44 = Utf8               canAcceptOptions\n+  #45 = Utf8               StackMapTable\n+  #46 = Class              #12            // \"[Ljava/lang/Class;\"\n+  #47 = Utf8               getOptionsAsProperties\n+  #48 = Utf8               (Ljava/lang/Object;)[B\n+  #49 = Utf8               Exceptions\n+  #50 = Class              #51            // java/io/IOException\n+  #51 = Utf8               java/io/IOException\n+  #52 = Utf8               getOptionsFromCoder\n+  #53 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n+  #54 = Utf8               decode\n+  #55 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n+  #56 = Utf8               encode\n+  #57 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n+  #58 = Utf8               numberOptionOrDefault\n+  #59 = Utf8               (Ljava/lang/Object;I)I\n+  #60 = Utf8               SourceFile\n+  #61 = Utf8               CoderBase.java\n {\n   private final java.lang.Class<?>[] acceptableOptions;\n     descriptor: [Ljava/lang/Class;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #15                          // [Ljava/lang/Class<*>;\n+    Signature: #39                          // [Ljava/lang/Class<*>;\n \n   protected org.apache.commons.compress.archivers.sevenz.CoderBase(java.lang.Class<?>...);\n     descriptor: ([Ljava/lang/Class;)V\n     flags: (0x0084) ACC_PROTECTED, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field acceptableOptions:[Ljava/lang/Class;\n+         6: putfield      #7                  // Field acceptableOptions:[Ljava/lang/Class;\n          9: return\n       LineNumberTable:\n         line 34: 0\n         line 35: 4\n         line 36: 9\n-    Signature: #20                          // ([Ljava/lang/Class<*>;)V\n+    Signature: #43                          // ([Ljava/lang/Class<*>;)V\n \n   boolean canAcceptOptions(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0000)\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field acceptableOptions:[Ljava/lang/Class;\n+         1: getfield      #7                  // Field acceptableOptions:[Ljava/lang/Class;\n          4: astore_2\n          5: aload_2\n          6: arraylength\n          7: istore_3\n          8: iconst_0\n          9: istore        4\n         11: iload         4\n@@ -110,15 +110,15 @@\n         14: if_icmpge     40\n         17: aload_2\n         18: iload         4\n         20: aaload\n         21: astore        5\n         23: aload         5\n         25: aload_1\n-        26: invokevirtual #3                  // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+        26: invokevirtual #13                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n         29: ifeq          34\n         32: iconst_1\n         33: ireturn\n         34: iinc          4, 1\n         37: goto          11\n         40: iconst_0\n         41: ireturn\n@@ -137,15 +137,15 @@\n           offset_delta = 5\n \n   byte[] getOptionsAsProperties(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)[B\n     flags: (0x0000)\n     Code:\n       stack=1, locals=2, args_size=2\n-         0: getstatic     #4                  // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+         0: getstatic     #19                 // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n          3: areturn\n       LineNumberTable:\n         line 54: 0\n     Exceptions:\n       throws java.io.IOException\n \n   java.lang.Object getOptionsFromCoder(org.apache.commons.compress.archivers.sevenz.Coder, java.io.InputStream) throws java.io.IOException;\n@@ -167,35 +167,35 @@\n       throws java.io.IOException\n \n   java.io.OutputStream encode(java.io.OutputStream, java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n     flags: (0x0000)\n     Code:\n       stack=3, locals=3, args_size=3\n-         0: new           #5                  // class java/lang/UnsupportedOperationException\n+         0: new           #25                 // class java/lang/UnsupportedOperationException\n          3: dup\n-         4: ldc           #6                  // String Method doesn\\'t support writing\n-         6: invokespecial #7                  // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+         4: ldc           #27                 // String Method doesn\\'t support writing\n+         6: invokespecial #29                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n          9: athrow\n       LineNumberTable:\n         line 75: 0\n     Exceptions:\n       throws java.io.IOException\n \n   protected static int numberOptionOrDefault(java.lang.Object, int);\n     descriptor: (Ljava/lang/Object;I)I\n     flags: (0x000c) ACC_PROTECTED, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: instanceof    #8                  // class java/lang/Number\n+         1: instanceof    #32                 // class java/lang/Number\n          4: ifeq          17\n          7: aload_0\n-         8: checkcast     #8                  // class java/lang/Number\n-        11: invokevirtual #9                  // Method java/lang/Number.intValue:()I\n+         8: checkcast     #32                 // class java/lang/Number\n+        11: invokevirtual #34                 // Method java/lang/Number.intValue:()I\n         14: goto          18\n         17: iload_1\n         18: ireturn\n       LineNumberTable:\n         line 83: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n"}]}
