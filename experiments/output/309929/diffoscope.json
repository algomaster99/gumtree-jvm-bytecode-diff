{"diffoscope-json-version": 1, "source1": "first/ResourceAlignmentExtraField.class", "source2": "second/ResourceAlignmentExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,129 +1,129 @@\n-  SHA-256 checksum 6b6f7f2a712aace559411e424416fedf338029e9968091c91e964fc8f702b985\n+  SHA-256 checksum 41f3ea587d07033dbff57da059c31b1d6c5d660d236d84e1cf7223a8bbad33d0\n   Compiled from \"ResourceAlignmentExtraField.java\"\n public class org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #13                         // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n-  super_class: #24                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 6, methods: 14, attributes: 3\n Constant pool:\n-    #1 = Methodref          #24.#64       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #13.#65       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.padding:I\n-    #3 = Methodref          #13.#66       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.\"<init>\":(IZ)V\n-    #4 = Methodref          #13.#67       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.\"<init>\":(IZI)V\n-    #5 = Class              #68           // java/lang/IllegalArgumentException\n-    #6 = InvokeDynamic      #0:#72        // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-    #7 = Methodref          #5.#73        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #8 = InvokeDynamic      #1:#72        // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n-    #9 = Fieldref           #13.#75       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.alignment:S\n-   #10 = Fieldref           #13.#76       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.allowMethodChange:Z\n-   #11 = Fieldref           #13.#77       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #12 = Class              #78           // org/apache/commons/compress/archivers/zip/ZipShort\n-   #13 = Class              #79           // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n-   #14 = Methodref          #12.#80       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #15 = Integer            32768\n-   #16 = Methodref          #12.#81       // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n-   #17 = Methodref          #12.#82       // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n-   #18 = Methodref          #13.#83       // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.parseFromCentralDirectoryData:([BII)V\n-   #19 = Class              #84           // java/util/zip/ZipException\n-   #20 = InvokeDynamic      #2:#72        // #2:makeConcatWithConstants:(I)Ljava/lang/String;\n-   #21 = Methodref          #19.#73       // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #22 = Methodref          #12.#86       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-   #23 = Integer            41246\n-   #24 = Class              #87           // java/lang/Object\n-   #25 = Class              #88           // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #26 = Utf8               ID\n-   #27 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #28 = Utf8               BASE_SIZE\n-   #29 = Utf8               I\n-   #30 = Utf8               ConstantValue\n-   #31 = Integer            2\n-   #32 = Utf8               ALLOW_METHOD_MESSAGE_CHANGE_FLAG\n-   #33 = Utf8               alignment\n-   #34 = Utf8               S\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.padding:I\n+    #8 = Class              #10           // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n+    #9 = NameAndType        #11:#12       // padding:I\n+   #10 = Utf8               org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n+   #11 = Utf8               padding\n+   #12 = Utf8               I\n+   #13 = Methodref          #8.#14        // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.\"<init>\":(IZ)V\n+   #14 = NameAndType        #5:#15        // \"<init>\":(IZ)V\n+   #15 = Utf8               (IZ)V\n+   #16 = Methodref          #8.#17        // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.\"<init>\":(IZI)V\n+   #17 = NameAndType        #5:#18        // \"<init>\":(IZI)V\n+   #18 = Utf8               (IZI)V\n+   #19 = Class              #20           // java/lang/IllegalArgumentException\n+   #20 = Utf8               java/lang/IllegalArgumentException\n+   #21 = InvokeDynamic      #0:#22        // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #22 = NameAndType        #23:#24       // makeConcatWithConstants:(I)Ljava/lang/String;\n+   #23 = Utf8               makeConcatWithConstants\n+   #24 = Utf8               (I)Ljava/lang/String;\n+   #25 = Methodref          #19.#26       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #26 = NameAndType        #5:#27        // \"<init>\":(Ljava/lang/String;)V\n+   #27 = Utf8               (Ljava/lang/String;)V\n+   #28 = InvokeDynamic      #1:#22        // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #29 = Fieldref           #8.#30        // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.alignment:S\n+   #30 = NameAndType        #31:#32       // alignment:S\n+   #31 = Utf8               alignment\n+   #32 = Utf8               S\n+   #33 = Fieldref           #8.#34        // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.allowMethodChange:Z\n+   #34 = NameAndType        #35:#36       // allowMethodChange:Z\n    #35 = Utf8               allowMethodChange\n    #36 = Utf8               Z\n-   #37 = Utf8               padding\n-   #38 = Utf8               <init>\n-   #39 = Utf8               ()V\n-   #40 = Utf8               Code\n-   #41 = Utf8               LineNumberTable\n-   #42 = Utf8               (I)V\n-   #43 = Utf8               (IZ)V\n-   #44 = Utf8               (IZI)V\n-   #45 = Utf8               StackMapTable\n-   #46 = Utf8               getAlignment\n-   #47 = Utf8               ()S\n-   #48 = Utf8               ()Z\n-   #49 = Utf8               getHeaderId\n-   #50 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #51 = Utf8               getLocalFileDataLength\n-   #52 = Utf8               getCentralDirectoryLength\n-   #53 = Utf8               getLocalFileDataData\n-   #54 = Utf8               ()[B\n-   #55 = Class              #89           // \"[B\"\n-   #56 = Utf8               getCentralDirectoryData\n-   #57 = Utf8               parseFromLocalFileData\n+   #37 = Fieldref           #8.#38        // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #38 = NameAndType        #39:#40       // ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #39 = Utf8               ID\n+   #40 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #41 = Class              #42           // org/apache/commons/compress/archivers/zip/ZipShort\n+   #42 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #43 = Methodref          #41.#44       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #44 = NameAndType        #5:#45        // \"<init>\":(I)V\n+   #45 = Utf8               (I)V\n+   #46 = Integer            32768\n+   #47 = Methodref          #41.#48       // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+   #48 = NameAndType        #49:#50       // putShort:(I[BI)V\n+   #49 = Utf8               putShort\n+   #50 = Utf8               (I[BI)V\n+   #51 = Methodref          #41.#52       // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n+   #52 = NameAndType        #53:#54       // getBytes:(I)[B\n+   #53 = Utf8               getBytes\n+   #54 = Utf8               (I)[B\n+   #55 = Methodref          #8.#56        // org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField.parseFromCentralDirectoryData:([BII)V\n+   #56 = NameAndType        #57:#58       // parseFromCentralDirectoryData:([BII)V\n+   #57 = Utf8               parseFromCentralDirectoryData\n    #58 = Utf8               ([BII)V\n-   #59 = Utf8               Exceptions\n-   #60 = Utf8               parseFromCentralDirectoryData\n-   #61 = Utf8               <clinit>\n-   #62 = Utf8               SourceFile\n-   #63 = Utf8               ResourceAlignmentExtraField.java\n-   #64 = NameAndType        #38:#39       // \"<init>\":()V\n-   #65 = NameAndType        #37:#29       // padding:I\n-   #66 = NameAndType        #38:#43       // \"<init>\":(IZ)V\n-   #67 = NameAndType        #38:#44       // \"<init>\":(IZI)V\n-   #68 = Utf8               java/lang/IllegalArgumentException\n-   #69 = Utf8               BootstrapMethods\n-   #70 = MethodHandle       6:#90         // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-   #71 = String             #91           // Alignment must be between 0 and 0x7fff, was: \\u0001\n-   #72 = NameAndType        #92:#93       // makeConcatWithConstants:(I)Ljava/lang/String;\n-   #73 = NameAndType        #38:#94       // \"<init>\":(Ljava/lang/String;)V\n-   #74 = String             #95           // Padding must not be negative, was: \\u0001\n-   #75 = NameAndType        #33:#34       // alignment:S\n-   #76 = NameAndType        #35:#36       // allowMethodChange:Z\n-   #77 = NameAndType        #26:#27       // ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #78 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-   #79 = Utf8               org/apache/commons/compress/archivers/zip/ResourceAlignmentExtraField\n-   #80 = NameAndType        #38:#42       // \"<init>\":(I)V\n-   #81 = NameAndType        #96:#97       // putShort:(I[BI)V\n-   #82 = NameAndType        #98:#99       // getBytes:(I)[B\n-   #83 = NameAndType        #60:#58       // parseFromCentralDirectoryData:([BII)V\n-   #84 = Utf8               java/util/zip/ZipException\n-   #85 = String             #100          // Too short content for ResourceAlignmentExtraField (0xa11e): \\u0001\n-   #86 = NameAndType        #101:#102     // getValue:([BI)I\n-   #87 = Utf8               java/lang/Object\n-   #88 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #89 = Utf8               [B\n-   #90 = Methodref          #103.#104     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-   #91 = Utf8               Alignment must be between 0 and 0x7fff, was: \\u0001\n-   #92 = Utf8               makeConcatWithConstants\n-   #93 = Utf8               (I)Ljava/lang/String;\n-   #94 = Utf8               (Ljava/lang/String;)V\n-   #95 = Utf8               Padding must not be negative, was: \\u0001\n-   #96 = Utf8               putShort\n-   #97 = Utf8               (I[BI)V\n-   #98 = Utf8               getBytes\n-   #99 = Utf8               (I)[B\n-  #100 = Utf8               Too short content for ResourceAlignmentExtraField (0xa11e): \\u0001\n-  #101 = Utf8               getValue\n-  #102 = Utf8               ([BI)I\n-  #103 = Class              #105          // java/lang/invoke/StringConcatFactory\n-  #104 = NameAndType        #92:#109      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #105 = Utf8               java/lang/invoke/StringConcatFactory\n-  #106 = Class              #111          // java/lang/invoke/MethodHandles$Lookup\n-  #107 = Utf8               Lookup\n-  #108 = Utf8               InnerClasses\n-  #109 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #110 = Class              #112          // java/lang/invoke/MethodHandles\n-  #111 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #112 = Utf8               java/lang/invoke/MethodHandles\n+   #59 = Class              #60           // java/util/zip/ZipException\n+   #60 = Utf8               java/util/zip/ZipException\n+   #61 = InvokeDynamic      #2:#22        // #2:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #62 = Methodref          #59.#26       // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #63 = Methodref          #41.#64       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+   #64 = NameAndType        #65:#66       // getValue:([BI)I\n+   #65 = Utf8               getValue\n+   #66 = Utf8               ([BI)I\n+   #67 = Integer            41246\n+   #68 = Class              #69           // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #69 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #70 = Utf8               BASE_SIZE\n+   #71 = Utf8               ConstantValue\n+   #72 = Integer            2\n+   #73 = Utf8               ALLOW_METHOD_MESSAGE_CHANGE_FLAG\n+   #74 = Utf8               Code\n+   #75 = Utf8               LineNumberTable\n+   #76 = Utf8               StackMapTable\n+   #77 = Utf8               getAlignment\n+   #78 = Utf8               ()S\n+   #79 = Utf8               ()Z\n+   #80 = Utf8               getHeaderId\n+   #81 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #82 = Utf8               getLocalFileDataLength\n+   #83 = Utf8               getCentralDirectoryLength\n+   #84 = Utf8               getLocalFileDataData\n+   #85 = Utf8               ()[B\n+   #86 = Class              #87           // \"[B\"\n+   #87 = Utf8               [B\n+   #88 = Utf8               getCentralDirectoryData\n+   #89 = Utf8               parseFromLocalFileData\n+   #90 = Utf8               Exceptions\n+   #91 = Utf8               <clinit>\n+   #92 = Utf8               SourceFile\n+   #93 = Utf8               ResourceAlignmentExtraField.java\n+   #94 = Utf8               BootstrapMethods\n+   #95 = MethodHandle       6:#96         // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+   #96 = Methodref          #97.#98       // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+   #97 = Class              #99           // java/lang/invoke/StringConcatFactory\n+   #98 = NameAndType        #23:#100      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+   #99 = Utf8               java/lang/invoke/StringConcatFactory\n+  #100 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #101 = String             #102          // Alignment must be between 0 and 0x7fff, was: \\u0001\n+  #102 = Utf8               Alignment must be between 0 and 0x7fff, was: \\u0001\n+  #103 = String             #104          // Padding must not be negative, was: \\u0001\n+  #104 = Utf8               Padding must not be negative, was: \\u0001\n+  #105 = String             #106          // Too short content for ResourceAlignmentExtraField (0xa11e): \\u0001\n+  #106 = Utf8               Too short content for ResourceAlignmentExtraField (0xa11e): \\u0001\n+  #107 = Utf8               InnerClasses\n+  #108 = Class              #109          // java/lang/invoke/MethodHandles$Lookup\n+  #109 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #110 = Class              #111          // java/lang/invoke/MethodHandles\n+  #111 = Utf8               java/lang/invoke/MethodHandles\n+  #112 = Utf8               Lookup\n {\n   public static final org.apache.commons.compress.archivers.zip.ZipShort ID;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final int BASE_SIZE = 2;\n     descriptor: I\n@@ -152,89 +152,89 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #2                  // Field padding:I\n+         6: putfield      #7                  // Field padding:I\n          9: return\n       LineNumberTable:\n         line 55: 0\n         line 53: 4\n         line 56: 9\n \n   public org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: iconst_0\n-         3: invokespecial #3                  // Method \"<init>\":(IZ)V\n+         3: invokespecial #13                 // Method \"<init>\":(IZ)V\n          6: return\n       LineNumberTable:\n         line 59: 0\n         line 60: 6\n \n   public org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField(int, boolean);\n     descriptor: (IZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: iconst_0\n-         4: invokespecial #4                  // Method \"<init>\":(IZI)V\n+         4: invokespecial #16                 // Method \"<init>\":(IZI)V\n          7: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 7\n \n   public org.apache.commons.compress.archivers.zip.ResourceAlignmentExtraField(int, boolean, int);\n     descriptor: (IZI)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #2                  // Field padding:I\n+         6: putfield      #7                  // Field padding:I\n          9: iload_1\n         10: iflt          20\n         13: iload_1\n         14: sipush        32767\n         17: if_icmple     34\n-        20: new           #5                  // class java/lang/IllegalArgumentException\n+        20: new           #19                 // class java/lang/IllegalArgumentException\n         23: dup\n         24: iload_1\n-        25: invokedynamic #6,  0              // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-        30: invokespecial #7                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        25: invokedynamic #21,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+        30: invokespecial #25                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         33: athrow\n         34: iload_3\n         35: ifge          52\n-        38: new           #5                  // class java/lang/IllegalArgumentException\n+        38: new           #19                 // class java/lang/IllegalArgumentException\n         41: dup\n         42: iload_3\n-        43: invokedynamic #8,  0              // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n-        48: invokespecial #7                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        43: invokedynamic #28,  0             // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+        48: invokespecial #25                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         51: athrow\n         52: aload_0\n         53: iload_1\n         54: i2s\n-        55: putfield      #9                  // Field alignment:S\n+        55: putfield      #29                 // Field alignment:S\n         58: aload_0\n         59: iload_2\n-        60: putfield      #10                 // Field allowMethodChange:Z\n+        60: putfield      #33                 // Field allowMethodChange:Z\n         63: aload_0\n         64: iload_3\n-        65: putfield      #2                  // Field padding:I\n+        65: putfield      #7                  // Field padding:I\n         68: return\n       LineNumberTable:\n         line 66: 0\n         line 53: 4\n         line 67: 9\n         line 68: 20\n         line 70: 34\n@@ -253,92 +253,92 @@\n \n   public short getAlignment();\n     descriptor: ()S\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field alignment:S\n+         1: getfield      #29                 // Field alignment:S\n          4: ireturn\n       LineNumberTable:\n         line 85: 0\n \n   public boolean allowMethodChange();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field allowMethodChange:Z\n+         1: getfield      #33                 // Field allowMethodChange:Z\n          4: ireturn\n       LineNumberTable:\n         line 95: 0\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getHeaderId();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: getstatic     #11                 // Field ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         0: getstatic     #37                 // Field ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          3: areturn\n       LineNumberTable:\n         line 100: 0\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #12                 // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #41                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: iconst_2\n          5: aload_0\n-         6: getfield      #2                  // Field padding:I\n+         6: getfield      #7                  // Field padding:I\n          9: iadd\n-        10: invokespecial #14                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        10: invokespecial #43                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         13: areturn\n       LineNumberTable:\n         line 105: 0\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #12                 // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #41                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: iconst_2\n-         5: invokespecial #14                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+         5: invokespecial #43                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n          8: areturn\n       LineNumberTable:\n         line 110: 0\n \n   public byte[] getLocalFileDataData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: iconst_2\n          1: aload_0\n-         2: getfield      #2                  // Field padding:I\n+         2: getfield      #7                  // Field padding:I\n          5: iadd\n          6: newarray       byte\n          8: astore_1\n          9: aload_0\n-        10: getfield      #9                  // Field alignment:S\n+        10: getfield      #29                 // Field alignment:S\n         13: aload_0\n-        14: getfield      #10                 // Field allowMethodChange:Z\n+        14: getfield      #33                 // Field allowMethodChange:Z\n         17: ifeq          25\n-        20: ldc           #15                 // int 32768\n+        20: ldc           #46                 // int 32768\n         22: goto          26\n         25: iconst_0\n         26: ior\n         27: aload_1\n         28: iconst_0\n-        29: invokestatic  #16                 // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+        29: invokestatic  #47                 // Method org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n         32: aload_1\n         33: areturn\n       LineNumberTable:\n         line 115: 0\n         line 116: 9\n         line 118: 32\n       StackMapTable: number_of_entries = 2\n@@ -353,23 +353,23 @@\n \n   public byte[] getCentralDirectoryData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field alignment:S\n+         1: getfield      #29                 // Field alignment:S\n          4: aload_0\n-         5: getfield      #10                 // Field allowMethodChange:Z\n+         5: getfield      #33                 // Field allowMethodChange:Z\n          8: ifeq          16\n-        11: ldc           #15                 // int 32768\n+        11: ldc           #46                 // int 32768\n         13: goto          17\n         16: iconst_0\n         17: ior\n-        18: invokestatic  #17                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n+        18: invokestatic  #51                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n         21: areturn\n       LineNumberTable:\n         line 123: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 80 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 255 /* full_frame */\n@@ -382,20 +382,20 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #18                 // Method parseFromCentralDirectoryData:([BII)V\n+         4: invokevirtual #55                 // Method parseFromCentralDirectoryData:([BII)V\n          7: aload_0\n          8: iload_3\n          9: iconst_2\n         10: isub\n-        11: putfield      #2                  // Field padding:I\n+        11: putfield      #7                  // Field padding:I\n         14: return\n       LineNumberTable:\n         line 128: 0\n         line 129: 7\n         line 130: 14\n     Exceptions:\n       throws java.util.zip.ZipException\n@@ -404,39 +404,39 @@\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=4\n          0: iload_3\n          1: iconst_2\n          2: if_icmpge     19\n-         5: new           #19                 // class java/util/zip/ZipException\n+         5: new           #59                 // class java/util/zip/ZipException\n          8: dup\n          9: iload_3\n-        10: invokedynamic #20,  0             // InvokeDynamic #2:makeConcatWithConstants:(I)Ljava/lang/String;\n-        15: invokespecial #21                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        10: invokedynamic #61,  0             // InvokeDynamic #2:makeConcatWithConstants:(I)Ljava/lang/String;\n+        15: invokespecial #62                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n         18: athrow\n         19: aload_1\n         20: iload_2\n-        21: invokestatic  #22                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+        21: invokestatic  #63                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n         24: istore        4\n         26: aload_0\n         27: iload         4\n         29: sipush        32767\n         32: iand\n         33: i2s\n-        34: putfield      #9                  // Field alignment:S\n+        34: putfield      #29                 // Field alignment:S\n         37: aload_0\n         38: iload         4\n-        40: ldc           #15                 // int 32768\n+        40: ldc           #46                 // int 32768\n         42: iand\n         43: ifeq          50\n         46: iconst_1\n         47: goto          51\n         50: iconst_0\n-        51: putfield      #10                 // Field allowMethodChange:Z\n+        51: putfield      #33                 // Field allowMethodChange:Z\n         54: return\n       LineNumberTable:\n         line 134: 0\n         line 135: 5\n         line 137: 19\n         line 138: 26\n         line 139: 37\n@@ -455,29 +455,29 @@\n       throws java.util.zip.ZipException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n-         0: new           #12                 // class org/apache/commons/compress/archivers/zip/ZipShort\n+         0: new           #41                 // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n-         4: ldc           #23                 // int 41246\n-         6: invokespecial #14                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-         9: putstatic     #11                 // Field ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         4: ldc           #67                 // int 41246\n+         6: invokespecial #43                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+         9: putstatic     #37                 // Field ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n         12: return\n       LineNumberTable:\n         line 43: 0\n }\n SourceFile: \"ResourceAlignmentExtraField.java\"\n-InnerClasses:\n-  public static final #107= #106 of #110; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #70 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #95 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #71 Alignment must be between 0 and 0x7fff, was: \\u0001\n-  1: #70 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #101 Alignment must be between 0 and 0x7fff, was: \\u0001\n+  1: #95 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #74 Padding must not be negative, was: \\u0001\n-  2: #70 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #103 Padding must not be negative, was: \\u0001\n+  2: #95 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #85 Too short content for ResourceAlignmentExtraField (0xa11e): \\u0001\n+      #105 Too short content for ResourceAlignmentExtraField (0xa11e): \\u0001\n+InnerClasses:\n+  public static final #112= #108 of #110; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
