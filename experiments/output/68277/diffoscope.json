{"diffoscope-json-version": 1, "source1": "first/ProxyReader.class", "source2": "second/ProxyReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,154 +1,156 @@\n-  SHA-256 checksum 66651d2718316b1eeb4eef328618e675947a547f456f67b80c3e5b28301c7eaf\n+  SHA-256 checksum c6a221a60714cf3a47e0b90834b66b80b021ecb788aca9c39e0185638c4e63c3\n   Compiled from \"ProxyReader.java\"\n public abstract class org.apache.commons.io.input.ProxyReader extends java.io.FilterReader\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #20                         // org/apache/commons/io/input/ProxyReader\n-  super_class: #21                        // java/io/FilterReader\n+  this_class: #1                          // org/apache/commons/io/input/ProxyReader\n+  super_class: #3                         // java/io/FilterReader\n   interfaces: 0, fields: 0, methods: 14, attributes: 1\n Constant pool:\n-   #1 = Class              #68            // org/apache/commons/io/IOUtils\n-   #2 = Methodref          #21.#69        // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n-   #3 = Methodref          #20.#70        // org/apache/commons/io/input/ProxyReader.beforeRead:(I)V\n-   #4 = Fieldref           #20.#71        // org/apache/commons/io/input/ProxyReader.in:Ljava/io/Reader;\n-   #5 = Methodref          #72.#73        // java/io/Reader.read:()I\n-   #6 = Methodref          #20.#74        // org/apache/commons/io/input/ProxyReader.afterRead:(I)V\n-   #7 = Class              #75            // java/io/IOException\n-   #8 = Methodref          #20.#76        // org/apache/commons/io/input/ProxyReader.handleIOException:(Ljava/io/IOException;)V\n-   #9 = Methodref          #1.#77         // org/apache/commons/io/IOUtils.length:([C)I\n-  #10 = Methodref          #72.#78        // java/io/Reader.read:([C)I\n-  #11 = Methodref          #72.#79        // java/io/Reader.read:([CII)I\n-  #12 = Methodref          #1.#80         // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-  #13 = Methodref          #72.#81        // java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n-  #14 = Methodref          #72.#82        // java/io/Reader.skip:(J)J\n-  #15 = Methodref          #72.#83        // java/io/Reader.ready:()Z\n-  #16 = Methodref          #72.#84        // java/io/Reader.close:()V\n-  #17 = Methodref          #72.#85        // java/io/Reader.mark:(I)V\n-  #18 = Methodref          #72.#86        // java/io/Reader.reset:()V\n-  #19 = Methodref          #72.#87        // java/io/Reader.markSupported:()Z\n-  #20 = Class              #88            // org/apache/commons/io/input/ProxyReader\n-  #21 = Class              #89            // java/io/FilterReader\n-  #22 = Utf8               <init>\n-  #23 = Utf8               (Ljava/io/Reader;)V\n-  #24 = Utf8               Code\n-  #25 = Utf8               LineNumberTable\n-  #26 = Utf8               LocalVariableTable\n-  #27 = Utf8               this\n-  #28 = Utf8               Lorg/apache/commons/io/input/ProxyReader;\n-  #29 = Utf8               proxy\n-  #30 = Utf8               Ljava/io/Reader;\n-  #31 = Utf8               read\n-  #32 = Utf8               ()I\n-  #33 = Utf8               c\n-  #34 = Utf8               I\n-  #35 = Utf8               e\n-  #36 = Utf8               Ljava/io/IOException;\n-  #37 = Utf8               StackMapTable\n-  #38 = Utf8               Exceptions\n-  #39 = Utf8               ([C)I\n-  #40 = Utf8               n\n-  #41 = Utf8               chr\n-  #42 = Utf8               [C\n-  #43 = Utf8               ([CII)I\n-  #44 = Utf8               st\n-  #45 = Utf8               len\n-  #46 = Utf8               (Ljava/nio/CharBuffer;)I\n-  #47 = Utf8               target\n-  #48 = Utf8               Ljava/nio/CharBuffer;\n-  #49 = Utf8               skip\n-  #50 = Utf8               (J)J\n-  #51 = Utf8               ln\n-  #52 = Utf8               J\n-  #53 = Utf8               ready\n-  #54 = Utf8               ()Z\n-  #55 = Utf8               close\n-  #56 = Utf8               ()V\n-  #57 = Utf8               mark\n-  #58 = Utf8               (I)V\n-  #59 = Utf8               idx\n-  #60 = Utf8               reset\n-  #61 = Utf8               markSupported\n-  #62 = Utf8               beforeRead\n-  #63 = Utf8               afterRead\n-  #64 = Utf8               handleIOException\n-  #65 = Utf8               (Ljava/io/IOException;)V\n-  #66 = Utf8               SourceFile\n-  #67 = Utf8               ProxyReader.java\n-  #68 = Utf8               org/apache/commons/io/IOUtils\n-  #69 = NameAndType        #22:#23        // \"<init>\":(Ljava/io/Reader;)V\n-  #70 = NameAndType        #62:#58        // beforeRead:(I)V\n-  #71 = NameAndType        #90:#30        // in:Ljava/io/Reader;\n-  #72 = Class              #91            // java/io/Reader\n-  #73 = NameAndType        #31:#32        // read:()I\n-  #74 = NameAndType        #63:#58        // afterRead:(I)V\n-  #75 = Utf8               java/io/IOException\n-  #76 = NameAndType        #64:#65        // handleIOException:(Ljava/io/IOException;)V\n-  #77 = NameAndType        #92:#39        // length:([C)I\n-  #78 = NameAndType        #31:#39        // read:([C)I\n-  #79 = NameAndType        #31:#43        // read:([CII)I\n-  #80 = NameAndType        #92:#93        // length:(Ljava/lang/CharSequence;)I\n-  #81 = NameAndType        #31:#46        // read:(Ljava/nio/CharBuffer;)I\n-  #82 = NameAndType        #49:#50        // skip:(J)J\n-  #83 = NameAndType        #53:#54        // ready:()Z\n-  #84 = NameAndType        #55:#56        // close:()V\n-  #85 = NameAndType        #57:#58        // mark:(I)V\n-  #86 = NameAndType        #60:#56        // reset:()V\n-  #87 = NameAndType        #61:#54        // markSupported:()Z\n-  #88 = Utf8               org/apache/commons/io/input/ProxyReader\n-  #89 = Utf8               java/io/FilterReader\n-  #90 = Utf8               in\n-  #91 = Utf8               java/io/Reader\n-  #92 = Utf8               length\n-  #93 = Utf8               (Ljava/lang/CharSequence;)I\n+   #1 = Class              #2             // org/apache/commons/io/input/ProxyReader\n+   #2 = Utf8               org/apache/commons/io/input/ProxyReader\n+   #3 = Class              #4             // java/io/FilterReader\n+   #4 = Utf8               java/io/FilterReader\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/Reader;)V\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n+   #9 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/Reader;)V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/io/input/ProxyReader;\n+  #14 = Utf8               proxy\n+  #15 = Utf8               Ljava/io/Reader;\n+  #16 = Utf8               read\n+  #17 = Utf8               ()I\n+  #18 = Utf8               Exceptions\n+  #19 = Class              #20            // java/io/IOException\n+  #20 = Utf8               java/io/IOException\n+  #21 = Methodref          #1.#22         // org/apache/commons/io/input/ProxyReader.beforeRead:(I)V\n+  #22 = NameAndType        #23:#24        // beforeRead:(I)V\n+  #23 = Utf8               beforeRead\n+  #24 = Utf8               (I)V\n+  #25 = Fieldref           #1.#26         // org/apache/commons/io/input/ProxyReader.in:Ljava/io/Reader;\n+  #26 = NameAndType        #27:#15        // in:Ljava/io/Reader;\n+  #27 = Utf8               in\n+  #28 = Methodref          #29.#31        // java/io/Reader.read:()I\n+  #29 = Class              #30            // java/io/Reader\n+  #30 = Utf8               java/io/Reader\n+  #31 = NameAndType        #16:#17        // read:()I\n+  #32 = Methodref          #1.#33         // org/apache/commons/io/input/ProxyReader.afterRead:(I)V\n+  #33 = NameAndType        #34:#24        // afterRead:(I)V\n+  #34 = Utf8               afterRead\n+  #35 = Methodref          #1.#36         // org/apache/commons/io/input/ProxyReader.handleIOException:(Ljava/io/IOException;)V\n+  #36 = NameAndType        #37:#38        // handleIOException:(Ljava/io/IOException;)V\n+  #37 = Utf8               handleIOException\n+  #38 = Utf8               (Ljava/io/IOException;)V\n+  #39 = Utf8               c\n+  #40 = Utf8               I\n+  #41 = Utf8               e\n+  #42 = Utf8               Ljava/io/IOException;\n+  #43 = Utf8               StackMapTable\n+  #44 = Utf8               ([C)I\n+  #45 = Methodref          #46.#48        // org/apache/commons/io/IOUtils.length:([C)I\n+  #46 = Class              #47            // org/apache/commons/io/IOUtils\n+  #47 = Utf8               org/apache/commons/io/IOUtils\n+  #48 = NameAndType        #49:#44        // length:([C)I\n+  #49 = Utf8               length\n+  #50 = Methodref          #29.#51        // java/io/Reader.read:([C)I\n+  #51 = NameAndType        #16:#44        // read:([C)I\n+  #52 = Utf8               chr\n+  #53 = Utf8               [C\n+  #54 = Utf8               n\n+  #55 = Utf8               ([CII)I\n+  #56 = Methodref          #29.#57        // java/io/Reader.read:([CII)I\n+  #57 = NameAndType        #16:#55        // read:([CII)I\n+  #58 = Utf8               st\n+  #59 = Utf8               len\n+  #60 = Utf8               (Ljava/nio/CharBuffer;)I\n+  #61 = Methodref          #46.#62        // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+  #62 = NameAndType        #49:#63        // length:(Ljava/lang/CharSequence;)I\n+  #63 = Utf8               (Ljava/lang/CharSequence;)I\n+  #64 = Methodref          #29.#65        // java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n+  #65 = NameAndType        #16:#60        // read:(Ljava/nio/CharBuffer;)I\n+  #66 = Utf8               target\n+  #67 = Utf8               Ljava/nio/CharBuffer;\n+  #68 = Utf8               skip\n+  #69 = Utf8               (J)J\n+  #70 = Methodref          #29.#71        // java/io/Reader.skip:(J)J\n+  #71 = NameAndType        #68:#69        // skip:(J)J\n+  #72 = Utf8               ln\n+  #73 = Utf8               J\n+  #74 = Utf8               ready\n+  #75 = Utf8               ()Z\n+  #76 = Methodref          #29.#77        // java/io/Reader.ready:()Z\n+  #77 = NameAndType        #74:#75        // ready:()Z\n+  #78 = Utf8               close\n+  #79 = Utf8               ()V\n+  #80 = Methodref          #29.#81        // java/io/Reader.close:()V\n+  #81 = NameAndType        #78:#79        // close:()V\n+  #82 = Utf8               mark\n+  #83 = Methodref          #29.#84        // java/io/Reader.mark:(I)V\n+  #84 = NameAndType        #82:#24        // mark:(I)V\n+  #85 = Utf8               idx\n+  #86 = Utf8               reset\n+  #87 = Methodref          #29.#88        // java/io/Reader.reset:()V\n+  #88 = NameAndType        #86:#79        // reset:()V\n+  #89 = Utf8               markSupported\n+  #90 = Methodref          #29.#91        // java/io/Reader.markSupported:()Z\n+  #91 = NameAndType        #89:#75        // markSupported:()Z\n+  #92 = Utf8               SourceFile\n+  #93 = Utf8               ProxyReader.java\n {\n   public org.apache.commons.io.input.ProxyReader(java.io.Reader);\n     descriptor: (Ljava/io/Reader;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n+         2: invokespecial #8                  // Method java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n          5: return\n       LineNumberTable:\n         line 46: 0\n         line 48: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0       6     1 proxy   Ljava/io/Reader;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #3                  // Method beforeRead:(I)V\n+         2: invokevirtual #21                 // Method beforeRead:(I)V\n          5: aload_0\n-         6: getfield      #4                  // Field in:Ljava/io/Reader;\n-         9: invokevirtual #5                  // Method java/io/Reader.read:()I\n+         6: getfield      #25                 // Field in:Ljava/io/Reader;\n+         9: invokevirtual #28                 // Method java/io/Reader.read:()I\n         12: istore_1\n         13: aload_0\n         14: iload_1\n         15: iconst_m1\n         16: if_icmpeq     23\n         19: iconst_1\n         20: goto          24\n         23: iconst_m1\n-        24: invokevirtual #6                  // Method afterRead:(I)V\n+        24: invokevirtual #32                 // Method afterRead:(I)V\n         27: iload_1\n         28: ireturn\n         29: astore_1\n         30: aload_0\n         31: aload_1\n-        32: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        32: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         35: iconst_m1\n         36: ireturn\n       Exception table:\n          from    to  target type\n              0    28    29   Class java/io/IOException\n       LineNumberTable:\n         line 58: 0\n@@ -156,56 +158,56 @@\n         line 60: 13\n         line 61: 27\n         line 62: 29\n         line 63: 30\n         line 64: 35\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n+            0      37     0  this   Lorg/apache/commons/io/input/ProxyReader;\n            13      16     1     c   I\n            30       7     1     e   Ljava/io/IOException;\n-            0      37     0  this   Lorg/apache/commons/io/input/ProxyReader;\n       StackMapTable: number_of_entries = 3\n         frame_type = 255 /* full_frame */\n           offset_delta = 23\n           locals = [ class org/apache/commons/io/input/ProxyReader, int ]\n           stack = [ class org/apache/commons/io/input/ProxyReader ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/input/ProxyReader, int ]\n           stack = [ class org/apache/commons/io/input/ProxyReader, int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 4\n           locals = [ class org/apache/commons/io/input/ProxyReader ]\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(char[]) throws java.io.IOException;\n     descriptor: ([C)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #9                  // Method org/apache/commons/io/IOUtils.length:([C)I\n-         5: invokevirtual #3                  // Method beforeRead:(I)V\n+         2: invokestatic  #45                 // Method org/apache/commons/io/IOUtils.length:([C)I\n+         5: invokevirtual #21                 // Method beforeRead:(I)V\n          8: aload_0\n-         9: getfield      #4                  // Field in:Ljava/io/Reader;\n+         9: getfield      #25                 // Field in:Ljava/io/Reader;\n         12: aload_1\n-        13: invokevirtual #10                 // Method java/io/Reader.read:([C)I\n+        13: invokevirtual #50                 // Method java/io/Reader.read:([C)I\n         16: istore_2\n         17: aload_0\n         18: iload_2\n-        19: invokevirtual #6                  // Method afterRead:(I)V\n+        19: invokevirtual #32                 // Method afterRead:(I)V\n         22: iload_2\n         23: ireturn\n         24: astore_2\n         25: aload_0\n         26: aload_2\n-        27: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        27: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         30: iconst_m1\n         31: ireturn\n       Exception table:\n          from    to  target type\n              0    23    24   Class java/io/IOException\n       LineNumberTable:\n         line 77: 0\n@@ -213,48 +215,48 @@\n         line 79: 17\n         line 80: 22\n         line 81: 24\n         line 82: 25\n         line 83: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           17       7     2     n   I\n-           25       7     2     e   Ljava/io/IOException;\n             0      32     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0      32     1   chr   [C\n+           17       7     2     n   I\n+           25       7     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 88 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #3                  // Method beforeRead:(I)V\n+         2: invokevirtual #21                 // Method beforeRead:(I)V\n          5: aload_0\n-         6: getfield      #4                  // Field in:Ljava/io/Reader;\n+         6: getfield      #25                 // Field in:Ljava/io/Reader;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #11                 // Method java/io/Reader.read:([CII)I\n+        12: invokevirtual #56                 // Method java/io/Reader.read:([CII)I\n         15: istore        4\n         17: aload_0\n         18: iload         4\n-        20: invokevirtual #6                  // Method afterRead:(I)V\n+        20: invokevirtual #32                 // Method afterRead:(I)V\n         23: iload         4\n         25: ireturn\n         26: astore        4\n         28: aload_0\n         29: aload         4\n-        31: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        31: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         34: iconst_m1\n         35: ireturn\n       Exception table:\n          from    to  target type\n              0    25    26   Class java/io/IOException\n       LineNumberTable:\n         line 98: 0\n@@ -262,49 +264,49 @@\n         line 100: 17\n         line 101: 23\n         line 102: 26\n         line 103: 28\n         line 104: 34\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           17       9     4     n   I\n-           28       8     4     e   Ljava/io/IOException;\n             0      36     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0      36     1   chr   [C\n             0      36     2    st   I\n             0      36     3   len   I\n+           17       9     4     n   I\n+           28       8     4     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 90 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(java.nio.CharBuffer) throws java.io.IOException;\n     descriptor: (Ljava/nio/CharBuffer;)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #12                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-         5: invokevirtual #3                  // Method beforeRead:(I)V\n+         2: invokestatic  #61                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+         5: invokevirtual #21                 // Method beforeRead:(I)V\n          8: aload_0\n-         9: getfield      #4                  // Field in:Ljava/io/Reader;\n+         9: getfield      #25                 // Field in:Ljava/io/Reader;\n         12: aload_1\n-        13: invokevirtual #13                 // Method java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n+        13: invokevirtual #64                 // Method java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n         16: istore_2\n         17: aload_0\n         18: iload_2\n-        19: invokevirtual #6                  // Method afterRead:(I)V\n+        19: invokevirtual #32                 // Method afterRead:(I)V\n         22: iload_2\n         23: ireturn\n         24: astore_2\n         25: aload_0\n         26: aload_2\n-        27: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        27: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         30: iconst_m1\n         31: ireturn\n       Exception table:\n          from    to  target type\n              0    23    24   Class java/io/IOException\n       LineNumberTable:\n         line 118: 0\n@@ -312,251 +314,246 @@\n         line 120: 17\n         line 121: 22\n         line 122: 24\n         line 123: 25\n         line 124: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           17       7     2     n   I\n-           25       7     2     e   Ljava/io/IOException;\n             0      32     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0      32     1 target   Ljava/nio/CharBuffer;\n+           17       7     2     n   I\n+           25       7     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 88 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/Reader;\n+         1: getfield      #25                 // Field in:Ljava/io/Reader;\n          4: lload_1\n-         5: invokevirtual #14                 // Method java/io/Reader.skip:(J)J\n+         5: invokevirtual #70                 // Method java/io/Reader.skip:(J)J\n          8: lreturn\n          9: astore_3\n         10: aload_0\n         11: aload_3\n-        12: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        12: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         15: lconst_0\n         16: lreturn\n       Exception table:\n          from    to  target type\n              0     8     9   Class java/io/IOException\n       LineNumberTable:\n         line 137: 0\n         line 138: 9\n         line 139: 10\n         line 140: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           10       7     3     e   Ljava/io/IOException;\n             0      17     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0      17     1    ln   J\n+           10       7     3     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public boolean ready() throws java.io.IOException;\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #15                 // Method java/io/Reader.ready:()Z\n+         1: getfield      #25                 // Field in:Ljava/io/Reader;\n+         4: invokevirtual #76                 // Method java/io/Reader.ready:()Z\n          7: ireturn\n          8: astore_1\n          9: aload_0\n         10: aload_1\n-        11: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        11: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         14: iconst_0\n         15: ireturn\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/io/IOException\n       LineNumberTable:\n         line 152: 0\n         line 153: 8\n         line 154: 9\n         line 155: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            9       7     1     e   Ljava/io/IOException;\n             0      16     0  this   Lorg/apache/commons/io/input/ProxyReader;\n+            9       7     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 72 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #16                 // Method java/io/Reader.close:()V\n+         1: getfield      #25                 // Field in:Ljava/io/Reader;\n+         4: invokevirtual #80                 // Method java/io/Reader.close:()V\n          7: goto          16\n         10: astore_1\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        13: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         16: return\n       Exception table:\n          from    to  target type\n              0     7    10   Class java/io/IOException\n       LineNumberTable:\n         line 166: 0\n-        line 169: 7\n-        line 167: 10\n+        line 167: 7\n         line 168: 11\n         line 170: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           11       5     1     e   Ljava/io/IOException;\n             0      17     0  this   Lorg/apache/commons/io/input/ProxyReader;\n+           11       5     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void mark(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/Reader;\n+         1: getfield      #25                 // Field in:Ljava/io/Reader;\n          4: iload_1\n-         5: invokevirtual #17                 // Method java/io/Reader.mark:(I)V\n+         5: invokevirtual #83                 // Method java/io/Reader.mark:(I)V\n          8: goto          17\n         11: astore_2\n         12: aload_0\n         13: aload_2\n-        14: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        14: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         17: return\n       Exception table:\n          from    to  target type\n              0     8    11   Class java/io/IOException\n       LineNumberTable:\n         line 180: 0\n-        line 183: 8\n-        line 181: 11\n+        line 181: 8\n         line 182: 12\n         line 184: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           12       5     2     e   Ljava/io/IOException;\n             0      18     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0      18     1   idx   I\n+           12       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 75 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #18                 // Method java/io/Reader.reset:()V\n+         1: getfield      #25                 // Field in:Ljava/io/Reader;\n+         4: invokevirtual #87                 // Method java/io/Reader.reset:()V\n          7: goto          16\n         10: astore_1\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        13: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         16: return\n       Exception table:\n          from    to  target type\n              0     7    10   Class java/io/IOException\n       LineNumberTable:\n         line 193: 0\n-        line 196: 7\n-        line 194: 10\n+        line 194: 7\n         line 195: 11\n         line 197: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           11       5     1     e   Ljava/io/IOException;\n             0      17     0  this   Lorg/apache/commons/io/input/ProxyReader;\n+           11       5     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #19                 // Method java/io/Reader.markSupported:()Z\n+         1: getfield      #25                 // Field in:Ljava/io/Reader;\n+         4: invokevirtual #90                 // Method java/io/Reader.markSupported:()Z\n          7: ireturn\n       LineNumberTable:\n         line 205: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/ProxyReader;\n \n   protected void beforeRead(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 228: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void afterRead(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 249: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void handleIOException(java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/io/IOException;)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n          1: athrow\n       LineNumberTable:\n         line 261: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0       2     1     e   Ljava/io/IOException;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ProxyReader.java\"\n"}]}
