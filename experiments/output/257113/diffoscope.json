{"diffoscope-json-version": 1, "source1": "first/ZipFile$BoundedFileChannelInputStream.class", "source2": "second/ZipFile$BoundedFileChannelInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,19 +6,19 @@\n import java.nio.channels.FileChannel;\n import org.apache.commons.compress.utils.BoundedArchiveInputStream;\n \n private class BoundedFileChannelInputStream extends BoundedArchiveInputStream\n {\n     private final FileChannel archive;\n     \n-    BoundedFileChannelInputStream(final ZipFile this$0, final long start, final long remaining) {\n+    BoundedFileChannelInputStream(final ZipFile this$0, final long n, final long n2) {\n         this.this$0 = this$0;\n-        super(start, remaining);\n+        super(n, n2);\n         this.archive = (FileChannel)ZipFile.access$000(this$0);\n     }\n     \n-    protected int read(final long pos, final ByteBuffer buf) throws IOException {\n-        final int read = this.archive.read(buf, pos);\n-        buf.flip();\n+    protected int read(final long n, final ByteBuffer byteBuffer) throws IOException {\n+        final int read = this.archive.read(byteBuffer, n);\n+        byteBuffer.flip();\n         return read;\n     }\n }\n"}]}
