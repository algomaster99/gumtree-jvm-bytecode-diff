{"diffoscope-json-version": 1, "source1": "first/FileWriterWithEncoding.class", "source2": "second/FileWriterWithEncoding.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,190 +1,190 @@\n-  SHA-256 checksum d8afe2bb6339737dff56d3dfc90f73480fa00f1e1293fc10bf08ea84f3f25084\n+  SHA-256 checksum 5dec792ebfc017a308c0d66cfa00bf530e862443fd50635fa02144f3d6e3067a\n   Compiled from \"FileWriterWithEncoding.java\"\n public class org.apache.commons.io.output.FileWriterWithEncoding extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #34                         // org/apache/commons/io/output/FileWriterWithEncoding\n-  super_class: #35                        // java/io/Writer\n+  this_class: #8                          // org/apache/commons/io/output/FileWriterWithEncoding\n+  super_class: #19                        // java/io/Writer\n   interfaces: 0, fields: 1, methods: 20, attributes: 1\n Constant pool:\n-    #1 = Class              #101          // java/io/File\n-    #2 = Methodref          #1.#102       // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-    #3 = Methodref          #34.#103      // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n-    #4 = Methodref          #34.#104      // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n-    #5 = Methodref          #34.#105      // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n-    #6 = Methodref          #35.#106      // java/io/Writer.\"<init>\":()V\n-    #7 = Methodref          #34.#107      // org/apache/commons/io/output/FileWriterWithEncoding.initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-    #8 = Fieldref           #34.#108      // org/apache/commons/io/output/FileWriterWithEncoding.out:Ljava/io/Writer;\n-    #9 = String             #62           // file\n-   #10 = Methodref          #109.#110     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #11 = String             #57           // encoding\n-   #12 = Methodref          #1.#111       // java/io/File.exists:()Z\n-   #13 = Class              #112          // java/io/FileOutputStream\n-   #14 = Methodref          #13.#113      // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;Z)V\n-   #15 = Class              #114          // java/nio/charset/Charset\n-   #16 = Class              #115          // java/io/OutputStreamWriter\n-   #17 = Methodref          #16.#116      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #18 = Class              #117          // java/nio/charset/CharsetEncoder\n-   #19 = Methodref          #16.#118      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n-   #20 = Class              #119          // java/lang/String\n-   #21 = Methodref          #16.#120      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #22 = Class              #121          // java/io/IOException\n-   #23 = Class              #122          // java/lang/RuntimeException\n-   #24 = Methodref          #123.#124     // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n-   #25 = Methodref          #81.#125      // java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n-   #26 = Methodref          #126.#127     // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n-   #27 = Methodref          #35.#128      // java/io/Writer.write:(I)V\n-   #28 = Methodref          #35.#129      // java/io/Writer.write:([C)V\n-   #29 = Methodref          #35.#130      // java/io/Writer.write:([CII)V\n-   #30 = Methodref          #35.#131      // java/io/Writer.write:(Ljava/lang/String;)V\n-   #31 = Methodref          #35.#132      // java/io/Writer.write:(Ljava/lang/String;II)V\n-   #32 = Methodref          #35.#133      // java/io/Writer.flush:()V\n-   #33 = Methodref          #35.#134      // java/io/Writer.close:()V\n-   #34 = Class              #135          // org/apache/commons/io/output/FileWriterWithEncoding\n-   #35 = Class              #136          // java/io/Writer\n-   #36 = Utf8               out\n-   #37 = Utf8               Ljava/io/Writer;\n-   #38 = Utf8               <init>\n-   #39 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-   #40 = Utf8               Code\n-   #41 = Utf8               LineNumberTable\n-   #42 = Utf8               LocalVariableTable\n-   #43 = Utf8               this\n-   #44 = Utf8               Lorg/apache/commons/io/output/FileWriterWithEncoding;\n-   #45 = Utf8               fileName\n-   #46 = Utf8               Ljava/lang/String;\n-   #47 = Utf8               charsetName\n-   #48 = Utf8               Exceptions\n-   #49 = Utf8               (Ljava/lang/String;Ljava/lang/String;Z)V\n-   #50 = Utf8               append\n-   #51 = Utf8               Z\n-   #52 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)V\n-   #53 = Utf8               charset\n-   #54 = Utf8               Ljava/nio/charset/Charset;\n-   #55 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;Z)V\n-   #56 = Utf8               (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)V\n-   #57 = Utf8               encoding\n-   #58 = Utf8               Ljava/nio/charset/CharsetEncoder;\n-   #59 = Utf8               (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)V\n-   #60 = Utf8               charsetEncoder\n-   #61 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-   #62 = Utf8               file\n-   #63 = Utf8               Ljava/io/File;\n-   #64 = Utf8               (Ljava/io/File;Ljava/lang/String;Z)V\n-   #65 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V\n-   #66 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n-   #67 = Utf8               (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;)V\n-   #68 = Utf8               (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n-   #69 = Utf8               initWriter\n-   #70 = Utf8               (Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-   #71 = Utf8               e\n-   #72 = Utf8               Ljava/io/IOException;\n-   #73 = Utf8               ex\n-   #74 = Utf8               Ljava/lang/Exception;\n-   #75 = Utf8               Ljava/lang/Object;\n-   #76 = Utf8               stream\n-   #77 = Utf8               Ljava/io/OutputStream;\n-   #78 = Utf8               fileExistedAlready\n-   #79 = Utf8               StackMapTable\n-   #80 = Class              #137          // java/io/OutputStream\n-   #81 = Class              #138          // java/lang/Exception\n-   #82 = Class              #139          // java/lang/Object\n-   #83 = Utf8               write\n-   #84 = Utf8               (I)V\n-   #85 = Utf8               idx\n-   #86 = Utf8               I\n-   #87 = Utf8               ([C)V\n-   #88 = Utf8               chr\n-   #89 = Utf8               [C\n-   #90 = Utf8               ([CII)V\n-   #91 = Utf8               st\n-   #92 = Utf8               end\n-   #93 = Utf8               (Ljava/lang/String;)V\n-   #94 = Utf8               str\n-   #95 = Utf8               (Ljava/lang/String;II)V\n-   #96 = Utf8               flush\n-   #97 = Utf8               ()V\n-   #98 = Utf8               close\n-   #99 = Utf8               SourceFile\n-  #100 = Utf8               FileWriterWithEncoding.java\n-  #101 = Utf8               java/io/File\n-  #102 = NameAndType        #38:#93       // \"<init>\":(Ljava/lang/String;)V\n-  #103 = NameAndType        #38:#64       // \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n-  #104 = NameAndType        #38:#66       // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n-  #105 = NameAndType        #38:#68       // \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n-  #106 = NameAndType        #38:#97       // \"<init>\":()V\n-  #107 = NameAndType        #69:#70       // initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-  #108 = NameAndType        #36:#37       // out:Ljava/io/Writer;\n-  #109 = Class              #140          // java/util/Objects\n-  #110 = NameAndType        #141:#142     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #111 = NameAndType        #143:#144     // exists:()Z\n-  #112 = Utf8               java/io/FileOutputStream\n-  #113 = NameAndType        #38:#145      // \"<init>\":(Ljava/io/File;Z)V\n-  #114 = Utf8               java/nio/charset/Charset\n-  #115 = Utf8               java/io/OutputStreamWriter\n-  #116 = NameAndType        #38:#146      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #117 = Utf8               java/nio/charset/CharsetEncoder\n-  #118 = NameAndType        #38:#147      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n-  #119 = Utf8               java/lang/String\n-  #120 = NameAndType        #38:#148      // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #121 = Utf8               java/io/IOException\n-  #122 = Utf8               java/lang/RuntimeException\n-  #123 = Class              #149          // org/apache/commons/io/IOUtils\n-  #124 = NameAndType        #98:#150      // close:(Ljava/io/Closeable;)V\n-  #125 = NameAndType        #151:#152     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #126 = Class              #153          // org/apache/commons/io/FileUtils\n-  #127 = NameAndType        #154:#155     // deleteQuietly:(Ljava/io/File;)Z\n-  #128 = NameAndType        #83:#84       // write:(I)V\n-  #129 = NameAndType        #83:#87       // write:([C)V\n-  #130 = NameAndType        #83:#90       // write:([CII)V\n-  #131 = NameAndType        #83:#93       // write:(Ljava/lang/String;)V\n-  #132 = NameAndType        #83:#95       // write:(Ljava/lang/String;II)V\n-  #133 = NameAndType        #96:#97       // flush:()V\n-  #134 = NameAndType        #98:#97       // close:()V\n-  #135 = Utf8               org/apache/commons/io/output/FileWriterWithEncoding\n-  #136 = Utf8               java/io/Writer\n-  #137 = Utf8               java/io/OutputStream\n-  #138 = Utf8               java/lang/Exception\n-  #139 = Utf8               java/lang/Object\n-  #140 = Utf8               java/util/Objects\n-  #141 = Utf8               requireNonNull\n-  #142 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #143 = Utf8               exists\n-  #144 = Utf8               ()Z\n-  #145 = Utf8               (Ljava/io/File;Z)V\n-  #146 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #147 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n-  #148 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #149 = Utf8               org/apache/commons/io/IOUtils\n-  #150 = Utf8               (Ljava/io/Closeable;)V\n-  #151 = Utf8               addSuppressed\n-  #152 = Utf8               (Ljava/lang/Throwable;)V\n-  #153 = Utf8               org/apache/commons/io/FileUtils\n-  #154 = Utf8               deleteQuietly\n-  #155 = Utf8               (Ljava/io/File;)Z\n+    #1 = Class              #2            // java/io/File\n+    #2 = Utf8               java/io/File\n+    #3 = Methodref          #1.#4         // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+    #4 = NameAndType        #5:#6         // \"<init>\":(Ljava/lang/String;)V\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/lang/String;)V\n+    #7 = Methodref          #8.#9         // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n+    #8 = Class              #10           // org/apache/commons/io/output/FileWriterWithEncoding\n+    #9 = NameAndType        #5:#11        // \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n+   #10 = Utf8               org/apache/commons/io/output/FileWriterWithEncoding\n+   #11 = Utf8               (Ljava/io/File;Ljava/lang/String;Z)V\n+   #12 = Methodref          #8.#13        // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+   #13 = NameAndType        #5:#14        // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+   #14 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+   #15 = Methodref          #8.#16        // org/apache/commons/io/output/FileWriterWithEncoding.\"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+   #16 = NameAndType        #5:#17        // \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+   #17 = Utf8               (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+   #18 = Methodref          #19.#20       // java/io/Writer.\"<init>\":()V\n+   #19 = Class              #21           // java/io/Writer\n+   #20 = NameAndType        #5:#22        // \"<init>\":()V\n+   #21 = Utf8               java/io/Writer\n+   #22 = Utf8               ()V\n+   #23 = Methodref          #8.#24        // org/apache/commons/io/output/FileWriterWithEncoding.initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+   #24 = NameAndType        #25:#26       // initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+   #25 = Utf8               initWriter\n+   #26 = Utf8               (Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+   #27 = Fieldref           #8.#28        // org/apache/commons/io/output/FileWriterWithEncoding.out:Ljava/io/Writer;\n+   #28 = NameAndType        #29:#30       // out:Ljava/io/Writer;\n+   #29 = Utf8               out\n+   #30 = Utf8               Ljava/io/Writer;\n+   #31 = String             #32           // file\n+   #32 = Utf8               file\n+   #33 = Methodref          #34.#35       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #34 = Class              #36           // java/util/Objects\n+   #35 = NameAndType        #37:#38       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #36 = Utf8               java/util/Objects\n+   #37 = Utf8               requireNonNull\n+   #38 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #39 = String             #40           // encoding\n+   #40 = Utf8               encoding\n+   #41 = Methodref          #1.#42        // java/io/File.exists:()Z\n+   #42 = NameAndType        #43:#44       // exists:()Z\n+   #43 = Utf8               exists\n+   #44 = Utf8               ()Z\n+   #45 = Class              #46           // java/io/FileOutputStream\n+   #46 = Utf8               java/io/FileOutputStream\n+   #47 = Methodref          #45.#48       // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;Z)V\n+   #48 = NameAndType        #5:#49        // \"<init>\":(Ljava/io/File;Z)V\n+   #49 = Utf8               (Ljava/io/File;Z)V\n+   #50 = Class              #51           // java/nio/charset/Charset\n+   #51 = Utf8               java/nio/charset/Charset\n+   #52 = Class              #53           // java/io/OutputStreamWriter\n+   #53 = Utf8               java/io/OutputStreamWriter\n+   #54 = Methodref          #52.#55       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #55 = NameAndType        #5:#56        // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #56 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #57 = Class              #58           // java/nio/charset/CharsetEncoder\n+   #58 = Utf8               java/nio/charset/CharsetEncoder\n+   #59 = Methodref          #52.#60       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n+   #60 = NameAndType        #5:#61        // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n+   #61 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n+   #62 = Class              #63           // java/lang/String\n+   #63 = Utf8               java/lang/String\n+   #64 = Methodref          #52.#65       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #65 = NameAndType        #5:#66        // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #66 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #67 = Class              #68           // java/io/IOException\n+   #68 = Utf8               java/io/IOException\n+   #69 = Class              #70           // java/lang/RuntimeException\n+   #70 = Utf8               java/lang/RuntimeException\n+   #71 = Methodref          #72.#73       // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n+   #72 = Class              #74           // org/apache/commons/io/IOUtils\n+   #73 = NameAndType        #75:#76       // close:(Ljava/io/Closeable;)V\n+   #74 = Utf8               org/apache/commons/io/IOUtils\n+   #75 = Utf8               close\n+   #76 = Utf8               (Ljava/io/Closeable;)V\n+   #77 = Methodref          #78.#79       // java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n+   #78 = Class              #80           // java/lang/Exception\n+   #79 = NameAndType        #81:#82       // addSuppressed:(Ljava/lang/Throwable;)V\n+   #80 = Utf8               java/lang/Exception\n+   #81 = Utf8               addSuppressed\n+   #82 = Utf8               (Ljava/lang/Throwable;)V\n+   #83 = Methodref          #84.#85       // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n+   #84 = Class              #86           // org/apache/commons/io/FileUtils\n+   #85 = NameAndType        #87:#88       // deleteQuietly:(Ljava/io/File;)Z\n+   #86 = Utf8               org/apache/commons/io/FileUtils\n+   #87 = Utf8               deleteQuietly\n+   #88 = Utf8               (Ljava/io/File;)Z\n+   #89 = Methodref          #19.#90       // java/io/Writer.write:(I)V\n+   #90 = NameAndType        #91:#92       // write:(I)V\n+   #91 = Utf8               write\n+   #92 = Utf8               (I)V\n+   #93 = Methodref          #19.#94       // java/io/Writer.write:([C)V\n+   #94 = NameAndType        #91:#95       // write:([C)V\n+   #95 = Utf8               ([C)V\n+   #96 = Methodref          #19.#97       // java/io/Writer.write:([CII)V\n+   #97 = NameAndType        #91:#98       // write:([CII)V\n+   #98 = Utf8               ([CII)V\n+   #99 = Methodref          #19.#100      // java/io/Writer.write:(Ljava/lang/String;)V\n+  #100 = NameAndType        #91:#6        // write:(Ljava/lang/String;)V\n+  #101 = Methodref          #19.#102      // java/io/Writer.write:(Ljava/lang/String;II)V\n+  #102 = NameAndType        #91:#103      // write:(Ljava/lang/String;II)V\n+  #103 = Utf8               (Ljava/lang/String;II)V\n+  #104 = Methodref          #19.#105      // java/io/Writer.flush:()V\n+  #105 = NameAndType        #106:#22      // flush:()V\n+  #106 = Utf8               flush\n+  #107 = Methodref          #19.#108      // java/io/Writer.close:()V\n+  #108 = NameAndType        #75:#22       // close:()V\n+  #109 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #110 = Utf8               Code\n+  #111 = Utf8               LineNumberTable\n+  #112 = Utf8               LocalVariableTable\n+  #113 = Utf8               this\n+  #114 = Utf8               Lorg/apache/commons/io/output/FileWriterWithEncoding;\n+  #115 = Utf8               fileName\n+  #116 = Utf8               Ljava/lang/String;\n+  #117 = Utf8               charsetName\n+  #118 = Utf8               Exceptions\n+  #119 = Utf8               (Ljava/lang/String;Ljava/lang/String;Z)V\n+  #120 = Utf8               append\n+  #121 = Utf8               Z\n+  #122 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)V\n+  #123 = Utf8               charset\n+  #124 = Utf8               Ljava/nio/charset/Charset;\n+  #125 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;Z)V\n+  #126 = Utf8               (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)V\n+  #127 = Utf8               Ljava/nio/charset/CharsetEncoder;\n+  #128 = Utf8               (Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)V\n+  #129 = Utf8               charsetEncoder\n+  #130 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #131 = Utf8               Ljava/io/File;\n+  #132 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V\n+  #133 = Utf8               (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;)V\n+  #134 = Utf8               e\n+  #135 = Utf8               Ljava/io/IOException;\n+  #136 = Utf8               ex\n+  #137 = Utf8               Ljava/lang/Exception;\n+  #138 = Utf8               Ljava/lang/Object;\n+  #139 = Utf8               stream\n+  #140 = Utf8               Ljava/io/OutputStream;\n+  #141 = Utf8               fileExistedAlready\n+  #142 = Utf8               StackMapTable\n+  #143 = Class              #144          // java/io/OutputStream\n+  #144 = Utf8               java/io/OutputStream\n+  #145 = Class              #146          // java/lang/Object\n+  #146 = Utf8               java/lang/Object\n+  #147 = Utf8               idx\n+  #148 = Utf8               I\n+  #149 = Utf8               chr\n+  #150 = Utf8               [C\n+  #151 = Utf8               st\n+  #152 = Utf8               end\n+  #153 = Utf8               str\n+  #154 = Utf8               SourceFile\n+  #155 = Utf8               FileWriterWithEncoding.java\n {\n   private final java.io.Writer out;\n     descriptor: Ljava/io/Writer;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: new           #1                  // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #2                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iconst_0\n-        11: invokespecial #3                  // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n+        11: invokespecial #7                  // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n         14: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -198,18 +198,18 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: new           #1                  // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #2                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iload_3\n-        11: invokespecial #3                  // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n+        11: invokespecial #7                  // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n         14: return\n       LineNumberTable:\n         line 81: 0\n         line 82: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -224,18 +224,18 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: new           #1                  // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #2                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iconst_0\n-        11: invokespecial #4                  // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+        11: invokespecial #12                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n         14: return\n       LineNumberTable:\n         line 93: 0\n         line 94: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -249,18 +249,18 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: new           #1                  // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #2                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iload_3\n-        11: invokespecial #4                  // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+        11: invokespecial #12                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n         14: return\n       LineNumberTable:\n         line 107: 0\n         line 108: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -275,18 +275,18 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: new           #1                  // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #2                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iconst_0\n-        11: invokespecial #5                  // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+        11: invokespecial #15                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n         14: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -300,18 +300,18 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: new           #1                  // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #2                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: aload_2\n         10: iload_3\n-        11: invokespecial #5                  // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+        11: invokespecial #15                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n         14: return\n       LineNumberTable:\n         line 133: 0\n         line 134: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -326,15 +326,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokespecial #3                  // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n+         4: invokespecial #7                  // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;Z)V\n          7: return\n       LineNumberTable:\n         line 145: 0\n         line 146: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -345,21 +345,21 @@\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.lang.String, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/lang/String;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #6                  // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #18                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: aload_2\n          7: iload_3\n-         8: invokestatic  #7                  // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-        11: putfield      #8                  // Field out:Ljava/io/Writer;\n+         8: invokestatic  #23                 // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+        11: putfield      #27                 // Field out:Ljava/io/Writer;\n         14: return\n       LineNumberTable:\n         line 158: 0\n         line 159: 4\n         line 160: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -375,15 +375,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokespecial #4                  // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n+         4: invokespecial #12                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n          7: return\n       LineNumberTable:\n         line 171: 0\n         line 172: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -394,21 +394,21 @@\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.nio.charset.Charset, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #6                  // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #18                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: aload_2\n          7: iload_3\n-         8: invokestatic  #7                  // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-        11: putfield      #8                  // Field out:Ljava/io/Writer;\n+         8: invokestatic  #23                 // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+        11: putfield      #27                 // Field out:Ljava/io/Writer;\n         14: return\n       LineNumberTable:\n         line 184: 0\n         line 185: 4\n         line 186: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -424,15 +424,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: invokespecial #5                  // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n+         4: invokespecial #15                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n          7: return\n       LineNumberTable:\n         line 197: 0\n         line 198: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -443,21 +443,21 @@\n \n   public org.apache.commons.io.output.FileWriterWithEncoding(java.io.File, java.nio.charset.CharsetEncoder, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/CharsetEncoder;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #6                  // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #18                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: aload_2\n          7: iload_3\n-         8: invokestatic  #7                  // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n-        11: putfield      #8                  // Field out:Ljava/io/Writer;\n+         8: invokestatic  #23                 // Method initWriter:(Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n+        11: putfield      #27                 // Field out:Ljava/io/Writer;\n         14: return\n       LineNumberTable:\n         line 211: 0\n         line 212: 4\n         line 213: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -470,71 +470,71 @@\n \n   private static java.io.Writer initWriter(java.io.File, java.lang.Object, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/lang/Object;Z)Ljava/io/Writer;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=7, args_size=3\n          0: aload_0\n-         1: ldc           #9                  // String file\n-         3: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #31                 // String file\n+         3: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_1\n-         8: ldc           #11                 // String encoding\n-        10: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         8: ldc           #39                 // String encoding\n+        10: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         13: pop\n         14: aconst_null\n         15: astore_3\n         16: aload_0\n-        17: invokevirtual #12                 // Method java/io/File.exists:()Z\n+        17: invokevirtual #41                 // Method java/io/File.exists:()Z\n         20: istore        4\n-        22: new           #13                 // class java/io/FileOutputStream\n+        22: new           #45                 // class java/io/FileOutputStream\n         25: dup\n         26: aload_0\n         27: iload_2\n-        28: invokespecial #14                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;Z)V\n+        28: invokespecial #47                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;Z)V\n         31: astore_3\n         32: aload_1\n-        33: instanceof    #15                 // class java/nio/charset/Charset\n+        33: instanceof    #50                 // class java/nio/charset/Charset\n         36: ifeq          52\n-        39: new           #16                 // class java/io/OutputStreamWriter\n+        39: new           #52                 // class java/io/OutputStreamWriter\n         42: dup\n         43: aload_3\n         44: aload_1\n-        45: checkcast     #15                 // class java/nio/charset/Charset\n-        48: invokespecial #17                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+        45: checkcast     #50                 // class java/nio/charset/Charset\n+        48: invokespecial #54                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n         51: areturn\n         52: aload_1\n-        53: instanceof    #18                 // class java/nio/charset/CharsetEncoder\n+        53: instanceof    #57                 // class java/nio/charset/CharsetEncoder\n         56: ifeq          72\n-        59: new           #16                 // class java/io/OutputStreamWriter\n+        59: new           #52                 // class java/io/OutputStreamWriter\n         62: dup\n         63: aload_3\n         64: aload_1\n-        65: checkcast     #18                 // class java/nio/charset/CharsetEncoder\n-        68: invokespecial #19                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n+        65: checkcast     #57                 // class java/nio/charset/CharsetEncoder\n+        68: invokespecial #59                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/CharsetEncoder;)V\n         71: areturn\n-        72: new           #16                 // class java/io/OutputStreamWriter\n+        72: new           #52                 // class java/io/OutputStreamWriter\n         75: dup\n         76: aload_3\n         77: aload_1\n-        78: checkcast     #20                 // class java/lang/String\n-        81: invokespecial #21                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+        78: checkcast     #62                 // class java/lang/String\n+        81: invokespecial #64                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n         84: areturn\n         85: astore        5\n         87: aload_3\n-        88: invokestatic  #24                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n+        88: invokestatic  #71                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;)V\n         91: goto          103\n         94: astore        6\n         96: aload         5\n         98: aload         6\n-       100: invokevirtual #25                 // Method java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n+       100: invokevirtual #77                 // Method java/lang/Exception.addSuppressed:(Ljava/lang/Throwable;)V\n        103: iload         4\n        105: ifne          113\n        108: aload_0\n-       109: invokestatic  #26                 // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n+       109: invokestatic  #83                 // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n        112: pop\n        113: aload         5\n        115: athrow\n       Exception table:\n          from    to  target type\n             22    51    85   Class java/io/IOException\n             22    51    85   Class java/lang/RuntimeException\n@@ -589,17 +589,17 @@\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field out:Ljava/io/Writer;\n+         1: getfield      #27                 // Field out:Ljava/io/Writer;\n          4: iload_1\n-         5: invokevirtual #27                 // Method java/io/Writer.write:(I)V\n+         5: invokevirtual #89                 // Method java/io/Writer.write:(I)V\n          8: return\n       LineNumberTable:\n         line 262: 0\n         line 263: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -609,17 +609,17 @@\n \n   public void write(char[]) throws java.io.IOException;\n     descriptor: ([C)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field out:Ljava/io/Writer;\n+         1: getfield      #27                 // Field out:Ljava/io/Writer;\n          4: aload_1\n-         5: invokevirtual #28                 // Method java/io/Writer.write:([C)V\n+         5: invokevirtual #93                 // Method java/io/Writer.write:([C)V\n          8: return\n       LineNumberTable:\n         line 272: 0\n         line 273: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -629,19 +629,19 @@\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #8                  // Field out:Ljava/io/Writer;\n+         1: getfield      #27                 // Field out:Ljava/io/Writer;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #29                 // Method java/io/Writer.write:([CII)V\n+         7: invokevirtual #96                 // Method java/io/Writer.write:([CII)V\n         10: return\n       LineNumberTable:\n         line 284: 0\n         line 285: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -653,17 +653,17 @@\n \n   public void write(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field out:Ljava/io/Writer;\n+         1: getfield      #27                 // Field out:Ljava/io/Writer;\n          4: aload_1\n-         5: invokevirtual #30                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+         5: invokevirtual #99                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n          8: return\n       LineNumberTable:\n         line 294: 0\n         line 295: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -673,19 +673,19 @@\n \n   public void write(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #8                  // Field out:Ljava/io/Writer;\n+         1: getfield      #27                 // Field out:Ljava/io/Writer;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #31                 // Method java/io/Writer.write:(Ljava/lang/String;II)V\n+         7: invokevirtual #101                // Method java/io/Writer.write:(Ljava/lang/String;II)V\n         10: return\n       LineNumberTable:\n         line 306: 0\n         line 307: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -697,16 +697,16 @@\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field out:Ljava/io/Writer;\n-         4: invokevirtual #32                 // Method java/io/Writer.flush:()V\n+         1: getfield      #27                 // Field out:Ljava/io/Writer;\n+         4: invokevirtual #104                // Method java/io/Writer.flush:()V\n          7: return\n       LineNumberTable:\n         line 315: 0\n         line 316: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n@@ -715,16 +715,16 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field out:Ljava/io/Writer;\n-         4: invokevirtual #33                 // Method java/io/Writer.close:()V\n+         1: getfield      #27                 // Field out:Ljava/io/Writer;\n+         4: invokevirtual #107                // Method java/io/Writer.close:()V\n          7: return\n       LineNumberTable:\n         line 324: 0\n         line 325: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FileWriterWithEncoding;\n"}]}
