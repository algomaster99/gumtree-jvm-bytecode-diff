{"diffoscope-json-version": 1, "source1": "first/JiraCsv213Test.class", "source2": "second/JiraCsv213Test.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,51 +1,51 @@\n-  SHA-256 checksum 3e1b8c97f99d47b5c084335be2ee7fdcb86384b373554aa4e385f7d0859593fd\n+  SHA-256 checksum 9048da46b12fc18cb85225d3bfc824f3fec1bc57a2d2ef4dd68d23442325e81c\n   Compiled from \"JiraCsv213Test.java\"\n public class org.apache.commons.csv.issues.JiraCsv213Test\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #33                         // org/apache/commons/csv/issues/JiraCsv213Test\n   super_class: #34                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 3, attributes: 2\n Constant pool:\n-    #1 = Methodref          #34.#68       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #69.#70       // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-    #3 = Methodref          #69.#71       // org/apache/commons/csv/CSVFormat.withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-    #4 = Methodref          #69.#72       // org/apache/commons/csv/CSVFormat.withFirstRecordAsHeader:()Lorg/apache/commons/csv/CSVFormat;\n-    #5 = Methodref          #69.#73       // org/apache/commons/csv/CSVFormat.withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-    #6 = Fieldref           #74.#75       // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n-    #7 = Methodref          #69.#76       // org/apache/commons/csv/CSVFormat.withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-    #8 = Class              #77           // java/io/InputStreamReader\n-    #9 = Class              #78           // java/io/FileInputStream\n-   #10 = Methodref          #9.#79        // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n-   #11 = Fieldref           #80.#81       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #12 = Methodref          #8.#82        // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-   #13 = Methodref          #69.#83       // org/apache/commons/csv/CSVFormat.parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-   #14 = Methodref          #84.#85       // org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n-   #15 = InterfaceMethodref #86.#87       // java/util/Iterator.hasNext:()Z\n-   #16 = Fieldref           #88.#89       // java/lang/System.out:Ljava/io/PrintStream;\n-   #17 = Methodref          #84.#90       // org/apache/commons/csv/CSVParser.getCurrentLineNumber:()J\n-   #18 = Methodref          #91.#92       // java/io/PrintStream.println:(J)V\n-   #19 = Methodref          #84.#93       // org/apache/commons/csv/CSVParser.getRecordNumber:()J\n-   #20 = InterfaceMethodref #86.#94       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #21 = Class              #95           // org/apache/commons/csv/CSVRecord\n-   #22 = Methodref          #84.#96       // org/apache/commons/csv/CSVParser.close:()V\n-   #23 = Class              #97           // java/lang/Throwable\n-   #24 = Methodref          #23.#98       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #25 = Class              #99           // java/io/IOException\n-   #26 = Class              #100          // java/lang/RuntimeException\n-   #27 = String             #101          // Error while adding end channel to csv\n-   #28 = Methodref          #26.#102      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #29 = Class              #103          // java/io/File\n-   #30 = String             #104          // src/test/resources/CSV-213/999751170.patch.csv\n-   #31 = Methodref          #29.#105      // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Methodref          #33.#106      // org/apache/commons/csv/issues/JiraCsv213Test.createEndChannel:(Ljava/io/File;)V\n-   #33 = Class              #107          // org/apache/commons/csv/issues/JiraCsv213Test\n-   #34 = Class              #108          // java/lang/Object\n+    #1 = Methodref          #34.#63       // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #55.#64       // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+    #3 = Methodref          #55.#65       // org/apache/commons/csv/CSVFormat.withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+    #4 = Methodref          #55.#66       // org/apache/commons/csv/CSVFormat.withFirstRecordAsHeader:()Lorg/apache/commons/csv/CSVFormat;\n+    #5 = Methodref          #55.#67       // org/apache/commons/csv/CSVFormat.withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+    #6 = Fieldref           #68.#69       // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n+    #7 = Methodref          #55.#70       // org/apache/commons/csv/CSVFormat.withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+    #8 = Class              #71           // java/io/InputStreamReader\n+    #9 = Class              #72           // java/io/FileInputStream\n+   #10 = Methodref          #9.#73        // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+   #11 = Fieldref           #74.#75       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #12 = Methodref          #8.#76        // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+   #13 = Methodref          #55.#77       // org/apache/commons/csv/CSVFormat.parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+   #14 = Methodref          #56.#78       // org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n+   #15 = InterfaceMethodref #79.#80       // java/util/Iterator.hasNext:()Z\n+   #16 = Fieldref           #81.#82       // java/lang/System.out:Ljava/io/PrintStream;\n+   #17 = Methodref          #56.#83       // org/apache/commons/csv/CSVParser.getCurrentLineNumber:()J\n+   #18 = Methodref          #84.#85       // java/io/PrintStream.println:(J)V\n+   #19 = Methodref          #56.#86       // org/apache/commons/csv/CSVParser.getRecordNumber:()J\n+   #20 = InterfaceMethodref #79.#87       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #21 = Class              #88           // org/apache/commons/csv/CSVRecord\n+   #22 = Methodref          #56.#89       // org/apache/commons/csv/CSVParser.close:()V\n+   #23 = Class              #90           // java/lang/Throwable\n+   #24 = Methodref          #23.#91       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #25 = Class              #92           // java/io/IOException\n+   #26 = Class              #93           // java/lang/RuntimeException\n+   #27 = String             #94           // Error while adding end channel to csv\n+   #28 = Methodref          #26.#95       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #29 = Class              #96           // java/io/File\n+   #30 = String             #97           // src/test/resources/CSV-213/999751170.patch.csv\n+   #31 = Methodref          #29.#98       // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+   #32 = Methodref          #33.#99       // org/apache/commons/csv/issues/JiraCsv213Test.createEndChannel:(Ljava/io/File;)V\n+   #33 = Class              #100          // org/apache/commons/csv/issues/JiraCsv213Test\n+   #34 = Class              #101          // java/lang/Object\n    #35 = Utf8               <init>\n    #36 = Utf8               ()V\n    #37 = Utf8               Code\n    #38 = Utf8               LineNumberTable\n    #39 = Utf8               LocalVariableTable\n    #40 = Utf8               this\n    #41 = Utf8               Lorg/apache/commons/csv/issues/JiraCsv213Test;\n@@ -58,108 +58,101 @@\n    #48 = Utf8               e\n    #49 = Utf8               Ljava/io/IOException;\n    #50 = Utf8               csvFile\n    #51 = Utf8               Ljava/io/File;\n    #52 = Utf8               csvFormat\n    #53 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n    #54 = Utf8               StackMapTable\n-   #55 = Class              #107          // org/apache/commons/csv/issues/JiraCsv213Test\n-   #56 = Class              #103          // java/io/File\n-   #57 = Class              #109          // org/apache/commons/csv/CSVFormat\n-   #58 = Class              #110          // org/apache/commons/csv/CSVParser\n-   #59 = Class              #97           // java/lang/Throwable\n-   #60 = Class              #95           // org/apache/commons/csv/CSVRecord\n-   #61 = Class              #99           // java/io/IOException\n-   #62 = Utf8               test\n-   #63 = Utf8               RuntimeVisibleAnnotations\n-   #64 = Utf8               Lorg/junit/Test;\n-   #65 = Utf8               SourceFile\n-   #66 = Utf8               JiraCsv213Test.java\n-   #67 = Utf8               Lorg/junit/Ignore;\n-   #68 = NameAndType        #35:#36       // \"<init>\":()V\n-   #69 = Class              #109          // org/apache/commons/csv/CSVFormat\n-   #70 = NameAndType        #111:#53      // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-   #71 = NameAndType        #112:#113     // withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-   #72 = NameAndType        #114:#115     // withFirstRecordAsHeader:()Lorg/apache/commons/csv/CSVFormat;\n-   #73 = NameAndType        #116:#113     // withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-   #74 = Class              #117          // org/apache/commons/csv/QuoteMode\n-   #75 = NameAndType        #118:#119     // ALL:Lorg/apache/commons/csv/QuoteMode;\n-   #76 = NameAndType        #120:#121     // withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-   #77 = Utf8               java/io/InputStreamReader\n-   #78 = Utf8               java/io/FileInputStream\n-   #79 = NameAndType        #35:#43       // \"<init>\":(Ljava/io/File;)V\n-   #80 = Class              #122          // java/nio/charset/StandardCharsets\n-   #81 = NameAndType        #123:#124     // UTF_8:Ljava/nio/charset/Charset;\n-   #82 = NameAndType        #35:#125      // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-   #83 = NameAndType        #126:#127     // parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-   #84 = Class              #110          // org/apache/commons/csv/CSVParser\n-   #85 = NameAndType        #128:#129     // iterator:()Ljava/util/Iterator;\n-   #86 = Class              #130          // java/util/Iterator\n-   #87 = NameAndType        #131:#132     // hasNext:()Z\n-   #88 = Class              #133          // java/lang/System\n-   #89 = NameAndType        #134:#135     // out:Ljava/io/PrintStream;\n-   #90 = NameAndType        #136:#137     // getCurrentLineNumber:()J\n-   #91 = Class              #138          // java/io/PrintStream\n-   #92 = NameAndType        #139:#140     // println:(J)V\n-   #93 = NameAndType        #141:#137     // getRecordNumber:()J\n-   #94 = NameAndType        #142:#143     // next:()Ljava/lang/Object;\n-   #95 = Utf8               org/apache/commons/csv/CSVRecord\n-   #96 = NameAndType        #144:#36      // close:()V\n-   #97 = Utf8               java/lang/Throwable\n-   #98 = NameAndType        #145:#146     // addSuppressed:(Ljava/lang/Throwable;)V\n-   #99 = Utf8               java/io/IOException\n-  #100 = Utf8               java/lang/RuntimeException\n-  #101 = Utf8               Error while adding end channel to csv\n-  #102 = NameAndType        #35:#147      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #103 = Utf8               java/io/File\n-  #104 = Utf8               src/test/resources/CSV-213/999751170.patch.csv\n-  #105 = NameAndType        #35:#148      // \"<init>\":(Ljava/lang/String;)V\n-  #106 = NameAndType        #42:#43       // createEndChannel:(Ljava/io/File;)V\n-  #107 = Utf8               org/apache/commons/csv/issues/JiraCsv213Test\n-  #108 = Utf8               java/lang/Object\n-  #109 = Utf8               org/apache/commons/csv/CSVFormat\n-  #110 = Utf8               org/apache/commons/csv/CSVParser\n-  #111 = Utf8               DEFAULT\n-  #112 = Utf8               withDelimiter\n-  #113 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n-  #114 = Utf8               withFirstRecordAsHeader\n-  #115 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n-  #116 = Utf8               withRecordSeparator\n-  #117 = Utf8               org/apache/commons/csv/QuoteMode\n-  #118 = Utf8               ALL\n-  #119 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n-  #120 = Utf8               withQuoteMode\n-  #121 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-  #122 = Utf8               java/nio/charset/StandardCharsets\n-  #123 = Utf8               UTF_8\n-  #124 = Utf8               Ljava/nio/charset/Charset;\n-  #125 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-  #126 = Utf8               parse\n-  #127 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-  #128 = Utf8               iterator\n-  #129 = Utf8               ()Ljava/util/Iterator;\n-  #130 = Utf8               java/util/Iterator\n-  #131 = Utf8               hasNext\n-  #132 = Utf8               ()Z\n-  #133 = Utf8               java/lang/System\n-  #134 = Utf8               out\n-  #135 = Utf8               Ljava/io/PrintStream;\n-  #136 = Utf8               getCurrentLineNumber\n-  #137 = Utf8               ()J\n-  #138 = Utf8               java/io/PrintStream\n-  #139 = Utf8               println\n-  #140 = Utf8               (J)V\n-  #141 = Utf8               getRecordNumber\n-  #142 = Utf8               next\n-  #143 = Utf8               ()Ljava/lang/Object;\n-  #144 = Utf8               close\n-  #145 = Utf8               addSuppressed\n-  #146 = Utf8               (Ljava/lang/Throwable;)V\n-  #147 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #148 = Utf8               (Ljava/lang/String;)V\n+   #55 = Class              #102          // org/apache/commons/csv/CSVFormat\n+   #56 = Class              #103          // org/apache/commons/csv/CSVParser\n+   #57 = Utf8               test\n+   #58 = Utf8               RuntimeVisibleAnnotations\n+   #59 = Utf8               Lorg/junit/Test;\n+   #60 = Utf8               SourceFile\n+   #61 = Utf8               JiraCsv213Test.java\n+   #62 = Utf8               Lorg/junit/Ignore;\n+   #63 = NameAndType        #35:#36       // \"<init>\":()V\n+   #64 = NameAndType        #104:#53      // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+   #65 = NameAndType        #105:#106     // withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+   #66 = NameAndType        #107:#108     // withFirstRecordAsHeader:()Lorg/apache/commons/csv/CSVFormat;\n+   #67 = NameAndType        #109:#106     // withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+   #68 = Class              #110          // org/apache/commons/csv/QuoteMode\n+   #69 = NameAndType        #111:#112     // ALL:Lorg/apache/commons/csv/QuoteMode;\n+   #70 = NameAndType        #113:#114     // withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+   #71 = Utf8               java/io/InputStreamReader\n+   #72 = Utf8               java/io/FileInputStream\n+   #73 = NameAndType        #35:#43       // \"<init>\":(Ljava/io/File;)V\n+   #74 = Class              #115          // java/nio/charset/StandardCharsets\n+   #75 = NameAndType        #116:#117     // UTF_8:Ljava/nio/charset/Charset;\n+   #76 = NameAndType        #35:#118      // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+   #77 = NameAndType        #119:#120     // parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+   #78 = NameAndType        #121:#122     // iterator:()Ljava/util/Iterator;\n+   #79 = Class              #123          // java/util/Iterator\n+   #80 = NameAndType        #124:#125     // hasNext:()Z\n+   #81 = Class              #126          // java/lang/System\n+   #82 = NameAndType        #127:#128     // out:Ljava/io/PrintStream;\n+   #83 = NameAndType        #129:#130     // getCurrentLineNumber:()J\n+   #84 = Class              #131          // java/io/PrintStream\n+   #85 = NameAndType        #132:#133     // println:(J)V\n+   #86 = NameAndType        #134:#130     // getRecordNumber:()J\n+   #87 = NameAndType        #135:#136     // next:()Ljava/lang/Object;\n+   #88 = Utf8               org/apache/commons/csv/CSVRecord\n+   #89 = NameAndType        #137:#36      // close:()V\n+   #90 = Utf8               java/lang/Throwable\n+   #91 = NameAndType        #138:#139     // addSuppressed:(Ljava/lang/Throwable;)V\n+   #92 = Utf8               java/io/IOException\n+   #93 = Utf8               java/lang/RuntimeException\n+   #94 = Utf8               Error while adding end channel to csv\n+   #95 = NameAndType        #35:#140      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #96 = Utf8               java/io/File\n+   #97 = Utf8               src/test/resources/CSV-213/999751170.patch.csv\n+   #98 = NameAndType        #35:#141      // \"<init>\":(Ljava/lang/String;)V\n+   #99 = NameAndType        #42:#43       // createEndChannel:(Ljava/io/File;)V\n+  #100 = Utf8               org/apache/commons/csv/issues/JiraCsv213Test\n+  #101 = Utf8               java/lang/Object\n+  #102 = Utf8               org/apache/commons/csv/CSVFormat\n+  #103 = Utf8               org/apache/commons/csv/CSVParser\n+  #104 = Utf8               DEFAULT\n+  #105 = Utf8               withDelimiter\n+  #106 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n+  #107 = Utf8               withFirstRecordAsHeader\n+  #108 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n+  #109 = Utf8               withRecordSeparator\n+  #110 = Utf8               org/apache/commons/csv/QuoteMode\n+  #111 = Utf8               ALL\n+  #112 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n+  #113 = Utf8               withQuoteMode\n+  #114 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+  #115 = Utf8               java/nio/charset/StandardCharsets\n+  #116 = Utf8               UTF_8\n+  #117 = Utf8               Ljava/nio/charset/Charset;\n+  #118 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+  #119 = Utf8               parse\n+  #120 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+  #121 = Utf8               iterator\n+  #122 = Utf8               ()Ljava/util/Iterator;\n+  #123 = Utf8               java/util/Iterator\n+  #124 = Utf8               hasNext\n+  #125 = Utf8               ()Z\n+  #126 = Utf8               java/lang/System\n+  #127 = Utf8               out\n+  #128 = Utf8               Ljava/io/PrintStream;\n+  #129 = Utf8               getCurrentLineNumber\n+  #130 = Utf8               ()J\n+  #131 = Utf8               java/io/PrintStream\n+  #132 = Utf8               println\n+  #133 = Utf8               (J)V\n+  #134 = Utf8               getRecordNumber\n+  #135 = Utf8               next\n+  #136 = Utf8               ()Ljava/lang/Object;\n+  #137 = Utf8               close\n+  #138 = Utf8               addSuppressed\n+  #139 = Utf8               (Ljava/lang/Throwable;)V\n+  #140 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #141 = Utf8               (Ljava/lang/String;)V\n {\n   public org.apache.commons.csv.issues.JiraCsv213Test();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -361,14 +354,14 @@\n       LineNumberTable:\n         line 72: 0\n         line 73: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/csv/issues/JiraCsv213Test;\n     RuntimeVisibleAnnotations:\n-      0: #64()\n+      0: #59()\n         org.junit.Test\n }\n SourceFile: \"JiraCsv213Test.java\"\n RuntimeVisibleAnnotations:\n-  0: #67()\n+  0: #62()\n     org.junit.Ignore\n"}]}
