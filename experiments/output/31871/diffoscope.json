{"diffoscope-json-version": 1, "source1": "first/NullReader.class", "source2": "second/NullReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,142 +1,142 @@\n-  SHA-256 checksum 22bd401fecd3fb8b4af303945a8e399fa89784176bd386b6f8d62a2c82dd7f2b\n+  SHA-256 checksum d4cee5d6c4d9eea805b72e5b3e202d2cd629aade057786c3ca0ed3e115a92f33\n   Compiled from \"NullReader.java\"\n public class org.apache.commons.io.input.NullReader extends java.io.Reader\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #34                         // org/apache/commons/io/input/NullReader\n-  super_class: #37                        // java/io/Reader\n+  this_class: #4                          // org/apache/commons/io/input/NullReader\n+  super_class: #10                        // java/io/Reader\n   interfaces: 0, fields: 8, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Class              #86           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #34.#87       // org/apache/commons/io/input/NullReader.\"<init>\":(JZZ)V\n-    #3 = Methodref          #37.#88       // java/io/Reader.\"<init>\":()V\n-    #4 = Long               -1l\n-    #6 = Fieldref           #34.#89       // org/apache/commons/io/input/NullReader.mark:J\n-    #7 = Fieldref           #34.#90       // org/apache/commons/io/input/NullReader.size:J\n-    #8 = Fieldref           #34.#91       // org/apache/commons/io/input/NullReader.markSupported:Z\n-    #9 = Fieldref           #34.#92       // org/apache/commons/io/input/NullReader.throwEofException:Z\n-   #10 = Fieldref           #34.#93       // org/apache/commons/io/input/NullReader.eof:Z\n-   #11 = Fieldref           #34.#94       // org/apache/commons/io/input/NullReader.position:J\n-   #12 = Class              #95           // java/io/EOFException\n-   #13 = Methodref          #12.#88       // java/io/EOFException.\"<init>\":()V\n-   #14 = Methodref          #96.#97       // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n-   #15 = Fieldref           #34.#98       // org/apache/commons/io/input/NullReader.readlimit:J\n-   #16 = Class              #99           // java/io/IOException\n-   #17 = String             #100          // Read after end of file\n-   #18 = Methodref          #16.#101      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Methodref          #34.#102      // org/apache/commons/io/input/NullReader.doEndOfFile:()I\n-   #20 = Methodref          #34.#103      // org/apache/commons/io/input/NullReader.processChar:()I\n-   #21 = Methodref          #34.#104      // org/apache/commons/io/input/NullReader.read:([CII)I\n-   #22 = Methodref          #34.#105      // org/apache/commons/io/input/NullReader.processChars:([CII)V\n-   #23 = Methodref          #96.#106      // org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n-   #24 = String             #107          // No position has been marked\n-   #25 = Class              #108          // java/lang/StringBuilder\n-   #26 = Methodref          #25.#88       // java/lang/StringBuilder.\"<init>\":()V\n-   #27 = String             #109          // Marked position [\n-   #28 = Methodref          #25.#110      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #29 = Methodref          #25.#111      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #30 = String             #112          // ] is no longer valid - passed the read limit [\n-   #31 = String             #113          // ]\n-   #32 = Methodref          #25.#114      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #33 = String             #115          // Skip after end of file\n-   #34 = Class              #116          // org/apache/commons/io/input/NullReader\n-   #35 = Methodref          #34.#88       // org/apache/commons/io/input/NullReader.\"<init>\":()V\n-   #36 = Fieldref           #34.#117      // org/apache/commons/io/input/NullReader.INSTANCE:Lorg/apache/commons/io/input/NullReader;\n-   #37 = Class              #118          // java/io/Reader\n-   #38 = Utf8               INSTANCE\n-   #39 = Utf8               Lorg/apache/commons/io/input/NullReader;\n-   #40 = Utf8               size\n-   #41 = Utf8               J\n-   #42 = Utf8               position\n-   #43 = Utf8               mark\n-   #44 = Utf8               readlimit\n-   #45 = Utf8               eof\n-   #46 = Utf8               Z\n-   #47 = Utf8               throwEofException\n-   #48 = Utf8               markSupported\n-   #49 = Utf8               <init>\n-   #50 = Utf8               ()V\n-   #51 = Utf8               Code\n-   #52 = Utf8               LineNumberTable\n-   #53 = Utf8               LocalVariableTable\n-   #54 = Utf8               this\n-   #55 = Utf8               (J)V\n-   #56 = Utf8               (JZZ)V\n-   #57 = Utf8               close\n-   #58 = Utf8               Exceptions\n-   #59 = Utf8               doEndOfFile\n-   #60 = Utf8               ()I\n-   #61 = Utf8               StackMapTable\n-   #62 = Utf8               getPosition\n-   #63 = Utf8               ()J\n-   #64 = Utf8               getSize\n-   #65 = Utf8               (I)V\n-   #66 = Utf8               I\n-   #67 = Utf8               ()Z\n-   #68 = Utf8               processChar\n-   #69 = Utf8               processChars\n-   #70 = Utf8               ([CII)V\n-   #71 = Utf8               chars\n-   #72 = Utf8               [C\n-   #73 = Utf8               offset\n-   #74 = Utf8               length\n-   #75 = Utf8               read\n-   #76 = Utf8               ([C)I\n-   #77 = Utf8               ([CII)I\n-   #78 = Utf8               returnLength\n-   #79 = Utf8               reset\n-   #80 = Utf8               skip\n-   #81 = Utf8               (J)J\n-   #82 = Utf8               numberOfChars\n-   #83 = Utf8               <clinit>\n-   #84 = Utf8               SourceFile\n-   #85 = Utf8               NullReader.java\n-   #86 = Utf8               org/apache/commons/io/IOUtils\n-   #87 = NameAndType        #49:#56       // \"<init>\":(JZZ)V\n-   #88 = NameAndType        #49:#50       // \"<init>\":()V\n-   #89 = NameAndType        #43:#41       // mark:J\n-   #90 = NameAndType        #40:#41       // size:J\n-   #91 = NameAndType        #48:#46       // markSupported:Z\n-   #92 = NameAndType        #47:#46       // throwEofException:Z\n-   #93 = NameAndType        #45:#46       // eof:Z\n-   #94 = NameAndType        #42:#41       // position:J\n-   #95 = Utf8               java/io/EOFException\n-   #96 = Class              #119          // org/apache/commons/io/input/UnsupportedOperationExceptions\n-   #97 = NameAndType        #43:#120      // mark:()Ljava/lang/UnsupportedOperationException;\n-   #98 = NameAndType        #44:#41       // readlimit:J\n-   #99 = Utf8               java/io/IOException\n-  #100 = Utf8               Read after end of file\n-  #101 = NameAndType        #49:#121      // \"<init>\":(Ljava/lang/String;)V\n-  #102 = NameAndType        #59:#60       // doEndOfFile:()I\n-  #103 = NameAndType        #68:#60       // processChar:()I\n-  #104 = NameAndType        #75:#77       // read:([CII)I\n-  #105 = NameAndType        #69:#70       // processChars:([CII)V\n-  #106 = NameAndType        #79:#120      // reset:()Ljava/lang/UnsupportedOperationException;\n-  #107 = Utf8               No position has been marked\n-  #108 = Utf8               java/lang/StringBuilder\n-  #109 = Utf8               Marked position [\n-  #110 = NameAndType        #122:#123     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #111 = NameAndType        #122:#124     // append:(J)Ljava/lang/StringBuilder;\n-  #112 = Utf8               ] is no longer valid - passed the read limit [\n-  #113 = Utf8               ]\n-  #114 = NameAndType        #125:#126     // toString:()Ljava/lang/String;\n-  #115 = Utf8               Skip after end of file\n-  #116 = Utf8               org/apache/commons/io/input/NullReader\n-  #117 = NameAndType        #38:#39       // INSTANCE:Lorg/apache/commons/io/input/NullReader;\n-  #118 = Utf8               java/io/Reader\n-  #119 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n-  #120 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n-  #121 = Utf8               (Ljava/lang/String;)V\n-  #122 = Utf8               append\n-  #123 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #124 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #125 = Utf8               toString\n-  #126 = Utf8               ()Ljava/lang/String;\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/input/NullReader.\"<init>\":(JZZ)V\n+    #4 = Class              #6            // org/apache/commons/io/input/NullReader\n+    #5 = NameAndType        #7:#8         // \"<init>\":(JZZ)V\n+    #6 = Utf8               org/apache/commons/io/input/NullReader\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (JZZ)V\n+    #9 = Methodref          #10.#11       // java/io/Reader.\"<init>\":()V\n+   #10 = Class              #12           // java/io/Reader\n+   #11 = NameAndType        #7:#13        // \"<init>\":()V\n+   #12 = Utf8               java/io/Reader\n+   #13 = Utf8               ()V\n+   #14 = Long               -1l\n+   #16 = Fieldref           #4.#17        // org/apache/commons/io/input/NullReader.mark:J\n+   #17 = NameAndType        #18:#19       // mark:J\n+   #18 = Utf8               mark\n+   #19 = Utf8               J\n+   #20 = Fieldref           #4.#21        // org/apache/commons/io/input/NullReader.size:J\n+   #21 = NameAndType        #22:#19       // size:J\n+   #22 = Utf8               size\n+   #23 = Fieldref           #4.#24        // org/apache/commons/io/input/NullReader.markSupported:Z\n+   #24 = NameAndType        #25:#26       // markSupported:Z\n+   #25 = Utf8               markSupported\n+   #26 = Utf8               Z\n+   #27 = Fieldref           #4.#28        // org/apache/commons/io/input/NullReader.throwEofException:Z\n+   #28 = NameAndType        #29:#26       // throwEofException:Z\n+   #29 = Utf8               throwEofException\n+   #30 = Fieldref           #4.#31        // org/apache/commons/io/input/NullReader.eof:Z\n+   #31 = NameAndType        #32:#26       // eof:Z\n+   #32 = Utf8               eof\n+   #33 = Fieldref           #4.#34        // org/apache/commons/io/input/NullReader.position:J\n+   #34 = NameAndType        #35:#19       // position:J\n+   #35 = Utf8               position\n+   #36 = Class              #37           // java/io/EOFException\n+   #37 = Utf8               java/io/EOFException\n+   #38 = Methodref          #36.#11       // java/io/EOFException.\"<init>\":()V\n+   #39 = Methodref          #40.#41       // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+   #40 = Class              #42           // org/apache/commons/io/input/UnsupportedOperationExceptions\n+   #41 = NameAndType        #18:#43       // mark:()Ljava/lang/UnsupportedOperationException;\n+   #42 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n+   #43 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n+   #44 = Fieldref           #4.#45        // org/apache/commons/io/input/NullReader.readlimit:J\n+   #45 = NameAndType        #46:#19       // readlimit:J\n+   #46 = Utf8               readlimit\n+   #47 = Class              #48           // java/io/IOException\n+   #48 = Utf8               java/io/IOException\n+   #49 = String             #50           // Read after end of file\n+   #50 = Utf8               Read after end of file\n+   #51 = Methodref          #47.#52       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #52 = NameAndType        #7:#53        // \"<init>\":(Ljava/lang/String;)V\n+   #53 = Utf8               (Ljava/lang/String;)V\n+   #54 = Methodref          #4.#55        // org/apache/commons/io/input/NullReader.doEndOfFile:()I\n+   #55 = NameAndType        #56:#57       // doEndOfFile:()I\n+   #56 = Utf8               doEndOfFile\n+   #57 = Utf8               ()I\n+   #58 = Methodref          #4.#59        // org/apache/commons/io/input/NullReader.processChar:()I\n+   #59 = NameAndType        #60:#57       // processChar:()I\n+   #60 = Utf8               processChar\n+   #61 = Methodref          #4.#62        // org/apache/commons/io/input/NullReader.read:([CII)I\n+   #62 = NameAndType        #63:#64       // read:([CII)I\n+   #63 = Utf8               read\n+   #64 = Utf8               ([CII)I\n+   #65 = Methodref          #4.#66        // org/apache/commons/io/input/NullReader.processChars:([CII)V\n+   #66 = NameAndType        #67:#68       // processChars:([CII)V\n+   #67 = Utf8               processChars\n+   #68 = Utf8               ([CII)V\n+   #69 = Methodref          #40.#70       // org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n+   #70 = NameAndType        #71:#43       // reset:()Ljava/lang/UnsupportedOperationException;\n+   #71 = Utf8               reset\n+   #72 = String             #73           // No position has been marked\n+   #73 = Utf8               No position has been marked\n+   #74 = Class              #75           // java/lang/StringBuilder\n+   #75 = Utf8               java/lang/StringBuilder\n+   #76 = Methodref          #74.#11       // java/lang/StringBuilder.\"<init>\":()V\n+   #77 = String             #78           // Marked position [\n+   #78 = Utf8               Marked position [\n+   #79 = Methodref          #74.#80       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #80 = NameAndType        #81:#82       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #81 = Utf8               append\n+   #82 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #83 = Methodref          #74.#84       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #84 = NameAndType        #81:#85       // append:(J)Ljava/lang/StringBuilder;\n+   #85 = Utf8               (J)Ljava/lang/StringBuilder;\n+   #86 = String             #87           // ] is no longer valid - passed the read limit [\n+   #87 = Utf8               ] is no longer valid - passed the read limit [\n+   #88 = String             #89           // ]\n+   #89 = Utf8               ]\n+   #90 = Methodref          #74.#91       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #91 = NameAndType        #92:#93       // toString:()Ljava/lang/String;\n+   #92 = Utf8               toString\n+   #93 = Utf8               ()Ljava/lang/String;\n+   #94 = String             #95           // Skip after end of file\n+   #95 = Utf8               Skip after end of file\n+   #96 = Methodref          #4.#11        // org/apache/commons/io/input/NullReader.\"<init>\":()V\n+   #97 = Fieldref           #4.#98        // org/apache/commons/io/input/NullReader.INSTANCE:Lorg/apache/commons/io/input/NullReader;\n+   #98 = NameAndType        #99:#100      // INSTANCE:Lorg/apache/commons/io/input/NullReader;\n+   #99 = Utf8               INSTANCE\n+  #100 = Utf8               Lorg/apache/commons/io/input/NullReader;\n+  #101 = Utf8               Code\n+  #102 = Utf8               LineNumberTable\n+  #103 = Utf8               LocalVariableTable\n+  #104 = Utf8               this\n+  #105 = Utf8               (J)V\n+  #106 = Utf8               close\n+  #107 = Utf8               Exceptions\n+  #108 = Utf8               StackMapTable\n+  #109 = Utf8               getPosition\n+  #110 = Utf8               ()J\n+  #111 = Utf8               getSize\n+  #112 = Utf8               (I)V\n+  #113 = Utf8               I\n+  #114 = Utf8               ()Z\n+  #115 = Utf8               chars\n+  #116 = Utf8               [C\n+  #117 = Utf8               offset\n+  #118 = Utf8               length\n+  #119 = Utf8               ([C)I\n+  #120 = Utf8               returnLength\n+  #121 = Utf8               skip\n+  #122 = Utf8               (J)J\n+  #123 = Utf8               numberOfChars\n+  #124 = Utf8               <clinit>\n+  #125 = Utf8               SourceFile\n+  #126 = Utf8               NullReader.java\n {\n   public static final org.apache.commons.io.input.NullReader INSTANCE;\n     descriptor: Lorg/apache/commons/io/input/NullReader;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private final long size;\n     descriptor: J\n@@ -171,15 +171,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: lconst_0\n          2: iconst_1\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(JZZ)V\n+         4: invokespecial #3                  // Method \"<init>\":(JZZ)V\n          7: return\n       LineNumberTable:\n         line 91: 0\n         line 92: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/NullReader;\n@@ -189,15 +189,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n          2: iconst_1\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(JZZ)V\n+         4: invokespecial #3                  // Method \"<init>\":(JZZ)V\n          7: return\n       LineNumberTable:\n         line 101: 0\n         line 102: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/NullReader;\n@@ -205,27 +205,27 @@\n \n   public org.apache.commons.io.input.NullReader(long, boolean, boolean);\n     descriptor: (JZZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=4\n          0: aload_0\n-         1: invokespecial #3                  // Method java/io/Reader.\"<init>\":()V\n+         1: invokespecial #9                  // Method java/io/Reader.\"<init>\":()V\n          4: aload_0\n-         5: ldc2_w        #4                  // long -1l\n-         8: putfield      #6                  // Field mark:J\n+         5: ldc2_w        #14                 // long -1l\n+         8: putfield      #16                 // Field mark:J\n         11: aload_0\n         12: lload_1\n-        13: putfield      #7                  // Field size:J\n+        13: putfield      #20                 // Field size:J\n         16: aload_0\n         17: iload_3\n-        18: putfield      #8                  // Field markSupported:Z\n+        18: putfield      #23                 // Field markSupported:Z\n         21: aload_0\n         22: iload         4\n-        24: putfield      #9                  // Field throwEofException:Z\n+        24: putfield      #27                 // Field throwEofException:Z\n         27: return\n       LineNumberTable:\n         line 115: 0\n         line 78: 4\n         line 116: 11\n         line 117: 16\n         line 118: 21\n@@ -240,21 +240,21 @@\n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: putfield      #10                 // Field eof:Z\n+         2: putfield      #30                 // Field eof:Z\n          5: aload_0\n          6: lconst_0\n-         7: putfield      #11                 // Field position:J\n+         7: putfield      #33                 // Field position:J\n         10: aload_0\n-        11: ldc2_w        #4                  // long -1l\n-        14: putfield      #6                  // Field mark:J\n+        11: ldc2_w        #14                 // long -1l\n+        14: putfield      #16                 // Field mark:J\n         17: return\n       LineNumberTable:\n         line 129: 0\n         line 130: 5\n         line 131: 10\n         line 132: 17\n       LocalVariableTable:\n@@ -266,21 +266,21 @@\n   private int doEndOfFile() throws java.io.EOFException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: putfield      #10                 // Field eof:Z\n+         2: putfield      #30                 // Field eof:Z\n          5: aload_0\n-         6: getfield      #9                  // Field throwEofException:Z\n+         6: getfield      #27                 // Field throwEofException:Z\n          9: ifeq          20\n-        12: new           #12                 // class java/io/EOFException\n+        12: new           #36                 // class java/io/EOFException\n         15: dup\n-        16: invokespecial #13                 // Method java/io/EOFException.\"<init>\":()V\n+        16: invokespecial #38                 // Method java/io/EOFException.\"<init>\":()V\n         19: athrow\n         20: iconst_m1\n         21: ireturn\n       LineNumberTable:\n         line 143: 0\n         line 144: 5\n         line 145: 12\n@@ -295,54 +295,54 @@\n \n   public long getPosition();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field position:J\n+         1: getfield      #33                 // Field position:J\n          4: lreturn\n       LineNumberTable:\n         line 156: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/NullReader;\n \n   public long getSize();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field size:J\n+         1: getfield      #20                 // Field size:J\n          4: lreturn\n       LineNumberTable:\n         line 165: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/NullReader;\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #23                 // Field markSupported:Z\n          4: ifne          11\n-         7: invokestatic  #14                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+         7: invokestatic  #39                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n         10: athrow\n         11: aload_0\n         12: aload_0\n-        13: getfield      #11                 // Field position:J\n-        16: putfield      #6                  // Field mark:J\n+        13: getfield      #33                 // Field position:J\n+        16: putfield      #16                 // Field mark:J\n         19: aload_0\n         20: iload_1\n         21: i2l\n-        22: putfield      #15                 // Field readlimit:J\n+        22: putfield      #44                 // Field readlimit:J\n         25: return\n       LineNumberTable:\n         line 177: 0\n         line 178: 7\n         line 180: 11\n         line 181: 19\n         line 182: 25\n@@ -355,15 +355,15 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #23                 // Field markSupported:Z\n          4: ireturn\n       LineNumberTable:\n         line 191: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/NullReader;\n \n@@ -397,38 +397,38 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field eof:Z\n+         1: getfield      #30                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #16                 // class java/io/IOException\n+         7: new           #47                 // class java/io/IOException\n         10: dup\n-        11: ldc           #17                 // String Read after end of file\n-        13: invokespecial #18                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #49                 // String Read after end of file\n+        13: invokespecial #51                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #11                 // Field position:J\n+        18: getfield      #33                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #20                 // Field size:J\n         25: lcmp\n         26: ifne          34\n         29: aload_0\n-        30: invokespecial #19                 // Method doEndOfFile:()I\n+        30: invokespecial #54                 // Method doEndOfFile:()I\n         33: ireturn\n         34: aload_0\n         35: dup\n-        36: getfield      #11                 // Field position:J\n+        36: getfield      #33                 // Field position:J\n         39: lconst_1\n         40: ladd\n-        41: putfield      #11                 // Field position:J\n+        41: putfield      #33                 // Field position:J\n         44: aload_0\n-        45: invokevirtual #20                 // Method processChar:()I\n+        45: invokevirtual #58                 // Method processChar:()I\n         48: ireturn\n       LineNumberTable:\n         line 234: 0\n         line 235: 7\n         line 237: 17\n         line 238: 29\n         line 240: 34\n@@ -448,15 +448,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #21                 // Method read:([CII)I\n+         5: invokevirtual #61                 // Method read:([CII)I\n          8: ireturn\n       LineNumberTable:\n         line 257: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/NullReader;\n             0       9     1 chars   [C\n@@ -465,63 +465,63 @@\n \n   public int read(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_0\n-         1: getfield      #10                 // Field eof:Z\n+         1: getfield      #30                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #16                 // class java/io/IOException\n+         7: new           #47                 // class java/io/IOException\n         10: dup\n-        11: ldc           #17                 // String Read after end of file\n-        13: invokespecial #18                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #49                 // String Read after end of file\n+        13: invokespecial #51                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #11                 // Field position:J\n+        18: getfield      #33                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #20                 // Field size:J\n         25: lcmp\n         26: ifne          34\n         29: aload_0\n-        30: invokespecial #19                 // Method doEndOfFile:()I\n+        30: invokespecial #54                 // Method doEndOfFile:()I\n         33: ireturn\n         34: aload_0\n         35: dup\n-        36: getfield      #11                 // Field position:J\n+        36: getfield      #33                 // Field position:J\n         39: iload_3\n         40: i2l\n         41: ladd\n-        42: putfield      #11                 // Field position:J\n+        42: putfield      #33                 // Field position:J\n         45: iload_3\n         46: istore        4\n         48: aload_0\n-        49: getfield      #11                 // Field position:J\n+        49: getfield      #33                 // Field position:J\n         52: aload_0\n-        53: getfield      #7                  // Field size:J\n+        53: getfield      #20                 // Field size:J\n         56: lcmp\n         57: ifle          82\n         60: iload_3\n         61: aload_0\n-        62: getfield      #11                 // Field position:J\n+        62: getfield      #33                 // Field position:J\n         65: aload_0\n-        66: getfield      #7                  // Field size:J\n+        66: getfield      #20                 // Field size:J\n         69: lsub\n         70: l2i\n         71: isub\n         72: istore        4\n         74: aload_0\n         75: aload_0\n-        76: getfield      #7                  // Field size:J\n-        79: putfield      #11                 // Field position:J\n+        76: getfield      #20                 // Field size:J\n+        79: putfield      #33                 // Field position:J\n         82: aload_0\n         83: aload_1\n         84: iload_2\n         85: iload         4\n-        87: invokevirtual #22                 // Method processChars:([CII)V\n+        87: invokevirtual #65                 // Method processChars:([CII)V\n         90: iload         4\n         92: ireturn\n       LineNumberTable:\n         line 275: 0\n         line 276: 7\n         line 278: 17\n         line 279: 29\n@@ -550,64 +550,64 @@\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=6, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field markSupported:Z\n+         1: getfield      #23                 // Field markSupported:Z\n          4: ifne          11\n-         7: invokestatic  #23                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n+         7: invokestatic  #69                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.reset:()Ljava/lang/UnsupportedOperationException;\n         10: athrow\n         11: aload_0\n-        12: getfield      #6                  // Field mark:J\n+        12: getfield      #16                 // Field mark:J\n         15: lconst_0\n         16: lcmp\n         17: ifge          30\n-        20: new           #16                 // class java/io/IOException\n+        20: new           #47                 // class java/io/IOException\n         23: dup\n-        24: ldc           #24                 // String No position has been marked\n-        26: invokespecial #18                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        24: ldc           #72                 // String No position has been marked\n+        26: invokespecial #51                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         29: athrow\n         30: aload_0\n-        31: getfield      #11                 // Field position:J\n+        31: getfield      #33                 // Field position:J\n         34: aload_0\n-        35: getfield      #6                  // Field mark:J\n+        35: getfield      #16                 // Field mark:J\n         38: aload_0\n-        39: getfield      #15                 // Field readlimit:J\n+        39: getfield      #44                 // Field readlimit:J\n         42: ladd\n         43: lcmp\n         44: ifle          94\n-        47: new           #16                 // class java/io/IOException\n+        47: new           #47                 // class java/io/IOException\n         50: dup\n-        51: new           #25                 // class java/lang/StringBuilder\n+        51: new           #74                 // class java/lang/StringBuilder\n         54: dup\n-        55: invokespecial #26                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        58: ldc           #27                 // String Marked position [\n-        60: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        55: invokespecial #76                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        58: ldc           #77                 // String Marked position [\n+        60: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         63: aload_0\n-        64: getfield      #6                  // Field mark:J\n-        67: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        70: ldc           #30                 // String ] is no longer valid - passed the read limit [\n-        72: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        64: getfield      #16                 // Field mark:J\n+        67: invokevirtual #83                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        70: ldc           #86                 // String ] is no longer valid - passed the read limit [\n+        72: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         75: aload_0\n-        76: getfield      #15                 // Field readlimit:J\n-        79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        82: ldc           #31                 // String ]\n-        84: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        87: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        90: invokespecial #18                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        76: getfield      #44                 // Field readlimit:J\n+        79: invokevirtual #83                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        82: ldc           #88                 // String ]\n+        84: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        87: invokevirtual #90                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        90: invokespecial #51                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         93: athrow\n         94: aload_0\n         95: aload_0\n-        96: getfield      #6                  // Field mark:J\n-        99: putfield      #11                 // Field position:J\n+        96: getfield      #16                 // Field mark:J\n+        99: putfield      #33                 // Field position:J\n        102: aload_0\n        103: iconst_0\n-       104: putfield      #10                 // Field eof:Z\n+       104: putfield      #30                 // Field eof:Z\n        107: return\n       LineNumberTable:\n         line 301: 0\n         line 302: 7\n         line 304: 11\n         line 305: 20\n         line 307: 30\n@@ -627,57 +627,57 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #10                 // Field eof:Z\n+         1: getfield      #30                 // Field eof:Z\n          4: ifeq          17\n-         7: new           #16                 // class java/io/IOException\n+         7: new           #47                 // class java/io/IOException\n         10: dup\n-        11: ldc           #33                 // String Skip after end of file\n-        13: invokespecial #18                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #94                 // String Skip after end of file\n+        13: invokespecial #51                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #11                 // Field position:J\n+        18: getfield      #33                 // Field position:J\n         21: aload_0\n-        22: getfield      #7                  // Field size:J\n+        22: getfield      #20                 // Field size:J\n         25: lcmp\n         26: ifne          35\n         29: aload_0\n-        30: invokespecial #19                 // Method doEndOfFile:()I\n+        30: invokespecial #54                 // Method doEndOfFile:()I\n         33: i2l\n         34: lreturn\n         35: aload_0\n         36: dup\n-        37: getfield      #11                 // Field position:J\n+        37: getfield      #33                 // Field position:J\n         40: lload_1\n         41: ladd\n-        42: putfield      #11                 // Field position:J\n+        42: putfield      #33                 // Field position:J\n         45: lload_1\n         46: lstore_3\n         47: aload_0\n-        48: getfield      #11                 // Field position:J\n+        48: getfield      #33                 // Field position:J\n         51: aload_0\n-        52: getfield      #7                  // Field size:J\n+        52: getfield      #20                 // Field size:J\n         55: lcmp\n         56: ifle          79\n         59: lload_1\n         60: aload_0\n-        61: getfield      #11                 // Field position:J\n+        61: getfield      #33                 // Field position:J\n         64: aload_0\n-        65: getfield      #7                  // Field size:J\n+        65: getfield      #20                 // Field size:J\n         68: lsub\n         69: lsub\n         70: lstore_3\n         71: aload_0\n         72: aload_0\n-        73: getfield      #7                  // Field size:J\n-        76: putfield      #11                 // Field position:J\n+        73: getfield      #20                 // Field size:J\n+        76: putfield      #33                 // Field position:J\n         79: lload_3\n         80: lreturn\n       LineNumberTable:\n         line 329: 0\n         line 330: 7\n         line 332: 17\n         line 333: 29\n@@ -702,16 +702,16 @@\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #34                 // class org/apache/commons/io/input/NullReader\n+         0: new           #4                  // class org/apache/commons/io/input/NullReader\n          3: dup\n-         4: invokespecial #35                 // Method \"<init>\":()V\n-         7: putstatic     #36                 // Field INSTANCE:Lorg/apache/commons/io/input/NullReader;\n+         4: invokespecial #96                 // Method \"<init>\":()V\n+         7: putstatic     #97                 // Field INSTANCE:Lorg/apache/commons/io/input/NullReader;\n         10: return\n       LineNumberTable:\n         line 74: 0\n }\n SourceFile: \"NullReader.java\"\n"}]}
